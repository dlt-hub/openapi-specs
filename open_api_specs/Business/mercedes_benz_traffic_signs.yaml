#
# Copyright Â© 2023 Mercedes-Benz AG. All Rights Reserved.
# 
# Reproduction or transmission in whole or in part, in any form or by any means, is prohibited without the prior written consent of the copyright owner.
# 
openapi: 3.0.3
info:
  title: Traffic Signs
  description: This API provides a list of traffic sign data in a restricted area predefined by a GeoJSON object for the specific user. Data is generated by Mercedes-Benz vehicles. More information see https://developer.mercedes-benz.com/products/traffic_signs
  contact:
    name: Mercedes-Benz /developers support team
    url: 'https://developer.mercedes-benz.com/contact'
    email: developer@mercedes-benz.com
  termsOfService: 'https://developer.mercedes-benz.com/legal/terms'
  version: "2.6"
servers:
  - url: "https://api.mercedes-benz.com/traffic_signs/v2"
    description: Production server
security:
  - bearerAuth: []
tags:
  - name: Traffic Signs
    description: Retrieve traffic signs data restricted to the predefined area of the user
  - name: GeoJSON
    description: Retrieve the uuid of the area and the area that the user is restricted to 
x-monetized: true
paths:
  /trafficsigns:
    get:
      tags:
        - Traffic Signs
      summary: Retrieve traffic signs restricted to the predefined area of the user
      description: >-
        This endpoint returns a set of traffic signs restricted to the predefined area of the user.
        The traffic signs data is returned in a paged response.
        If there are no traffic signs in the defined area, an empty list is returned.
        Note that missing fields in individual traffic sign data are returned as `null` values.
        To additionally limit the returned data, a bounding box can be defined as geolocation filter.
        The bounding box is defined by two points, each represented by a longitude and a latitude coordinate.
        The first point is defined by the longitudePoint1 and latitudePoint1 query parameters.
        The second point is defined by the longitudePoint2 and latitudePoint2 query parameters.
        All four query parameters are optional, but if one of them is provided, all four must be provided to define a bounding box as geolocation filter.
      operationId: getTrafficSigns
      parameters:
        - $ref: '#/components/parameters/trackingIdHeader'
        - $ref: '#/components/parameters/acceptHeader'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/longitudePoint1'
        - $ref: '#/components/parameters/latitudePoint1'
        - $ref: '#/components/parameters/longitudePoint2'
        - $ref: '#/components/parameters/latitudePoint2'
        - $ref: '#/components/parameters/lonelySign'
        - $ref: '#/components/parameters/minConfidence'
        - $ref: '#/components/parameters/permanency'
        - $ref: '#/components/parameters/type'
      responses:
        "200":
          $ref: '#/components/responses/TrafficSignsPagedResponse'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "403":
          $ref: '#/components/responses/ForbiddenError'
        "406":
          $ref: '#/components/responses/NotAcceptableError'
        "500":
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Traffic Signs
      summary: Retrieve traffic signs restricted to the predefined area of the user
      description: >-
        This endpoint returns a set of traffic signs restricted to the predefined area of the user.
        The traffic signs data is returned in a paged response.
        If there are no traffic signs in the defined area, an empty list is returned.
        Note that missing fields in individual traffic sign data are returned as `null` values.
        To additionally limit the returned data, a GeoJSON polygon or multi-polygon can be defined as geolocation filter.
        The GeoJSON filter geometry is defined in the request body.
        The provided geometry is validated, e.g., it must be a valid GeoJSON polygon or multi-polygon with valid coordinate values.
        Also, requests containing too complex geometries are rejected for performance reasons.
      operationId: getTrafficSignsFiltered
      parameters:
        - $ref: '#/components/parameters/trackingIdHeader'
        - $ref: '#/components/parameters/acceptHeader'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      requestBody:
        description: The filter criteria for the traffic signs data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterCriteria'
      responses:
        "200":
          $ref: '#/components/responses/TrafficSignsPagedResponse'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "403":
          $ref: '#/components/responses/ForbiddenError'
        "406":
          $ref: '#/components/responses/NotAcceptableError'
        "500":
          $ref: '#/components/responses/InternalServerError'
  /geojson:
    get:
      tags:
        - GeoJSON
      summary: Retrieve the uuid of the area and the area that the user is restricted to
      description: >-
        This endpoint returns the uuid of the GeoJSON object and the GeoJSON object itself that is predefined for the user. The object is used to restrict the area of data retrieval.
        The response does not incorporate any geolocation filters.
      operationId: getGeoJson
      parameters:
        - $ref: '#/components/parameters/trackingIdHeader'
      responses:
        "200":
          $ref: '#/components/responses/GeoJsonResponse'
        "400":
          $ref: '#/components/responses/BadRequestError'
        "401":
          $ref: '#/components/responses/UnauthorizedError'
        "403":
          $ref: '#/components/responses/ForbiddenError'
        "406":
          $ref: '#/components/responses/NotAcceptableError'
        "500":
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: oauth2
      description: OAuth client credential flow
      flows:
        clientCredentials:
          tokenUrl: 'https://ssoalpha.dvb.corpinter.net/v1/token'
          refreshUrl: 'https://ssoalpha.dvb.corpinter.net/v1/token'
          scopes:
            openid: 'openid'
  parameters:
    trackingIdHeader:
      in: header
      name: x-tracking-id
      description: the request tracking ID
      required: false
      schema:
        type: string
        example: f35faf9e-bcc2-40c1-9e79-1dc2285199f5
    acceptHeader:
      name: accept
      in: header
      required: true
      description: The response content type
      schema:
        type: string
        enum:
          - application/json
      example: application/json
    page:
      name: page
      in: query
      description: The page number used for the pagination
      schema:
        type: integer
        format: int32
        minimum: 1
      example: 2
    size:
      name: size
      in: query
      description: The size of the response page used for the pagination. If the requested page size exceeds the maximum allowed page size, a validation error is returned.
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 500000
      example: 1000        
    longitudePoint1:
      name: longitudePoint1
      in: query
      required: false
      description: >-
        The longitude coordinate (x-axis) of the first point defining a bounding box as geolocation filter.
        Valid values are between -180 and 180.
      schema:
        type: number
        example: 9.11929277633081
    latitudePoint1:
      name: latitudePoint1
      in: query
      required: false
      description: >-
        The latitude coordinate (y-axis) of the first point defining a bounding box as geolocation filter.
        Valid values are between -90 and 90.
      schema:
        type: number
        example: 48.804964873809865
    longitudePoint2:
      name: longitudePoint2
      in: query
      required: false
      description: >-
        The longitude coordinate (x-axis) of the second point defining a bounding box as geolocation filter.
        Valid values are between -180 and 180.
      schema:
        type: number
        example: 9.235208827028032
    latitudePoint2:
      name: latitudePoint2
      in: query
      required: false
      description: >-
        The latitude coordinate (y-axis) of the second point defining a bounding box as geolocation filter.
        Valid values are between -90 and 90.
      schema:
        type: number
        example: 48.75600976849594
    lonelySign:
      name: lonelySign
      in: query
      required: false
      description: >-
        Boolean value to filter lonely signs.
        It is intended to be used to exclude traffic signs from the returned data that are considered lonely:
        The parameter is set to `false` to only return non-lonely traffic signs.
        By default, all signs are returned, regardless of whether they are lonely or not.
      schema:
        type: boolean
        example: false
    minConfidence:
      name: minConfidence
      in: query
      required: false
      description: >-
        Filters the traffic signs data by the confidence value. Can be between 0 and 1. 
        Only traffic signs data with a confidence value greater than or equal to the provided 
        value are returned.
      schema:
        $ref: '#/components/schemas/minConfidenceFilter'
    permanency:
      name: permanency
      in: query
      required: false
      description: >-
        Filters the traffic signs data by the permanency value. The filter is case-insensitive.
        Only traffic signs data with the provided permanency value are returned.
      schema:
        $ref: '#/components/schemas/permanencyFilter'
    type:
      name: type
      in: query
      required: false
      description: >-
        Filters the traffic signs data by the type value. The filter is case-insensitive.
        Only traffic signs data with the provided type value are returned.
      schema:
        $ref: '#/components/schemas/typeFilter'
  headers:
    x-anoveda-sqr:
      description: The metadata of the Stored Query Result contains the name and provides information on whether SQR was used to retrieve the data.
      schema:
        type: string
      example: name=3e480af129c4858664f213058843df1473c456a1beeb703742681169aad663b4; used=true
  responses:
    BadRequestError:
      description: The provided information was syntactically wrong.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'      
          example:
            errorMessage: Bad Request
            statusCode: "400"
            message: The server was unable to process the request sent by the client due to an invalid syntax.
    UnauthorizedError:
      description: The authentication information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorMessage: Unauthorized
            statusCode: "401"
            message: Invalid credentials. Please check that you are using the proper credentials.
    ForbiddenError:
      description: Missing permission to access this resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorMessage: Forbidden
            statusCode: "403"
    NotAcceptableError:
      description: The requested content type is not supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorMessage: Not Acceptable
            statusCode: "406"
    InternalServerError:
      description: The request processing failed due to an unexpected server error, e.g., an underlying backend system is not available.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            errorMessage: Server Error
            statusCode: "500"
    TrafficSignsPagedResponse:
      description: Successfully received traffic signs
      headers:
        x-anoveda-sqr:
          $ref: '#/components/headers/x-anoveda-sqr'
      content:
        application/json:
          schema:
            properties:
              page:
                $ref: '#/components/schemas/pagedResult'
              trafficSigns:
                description: A list of traffic signs. If there was no traffic sign in the area defined by the GeoJSON, an empty list is returned.
                items:
                  $ref: '#/components/schemas/trafficSign'
                type: array
    GeoJsonResponse:
      description: Successfully received GeoJSON object. The object describes the area from where data will be returned. 
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
                format: uuid
                example: f255508c-233b-4d7f-8420-5e86892786af
                description: uuid of the geoJSON
              geoJson:
                $ref: '#/components/schemas/geoJsonObject'
  schemas:
    filterCriteria:
      title: Data Filter Criteria
      description: >-
        Filter criteria to limit the returned data.
        All fields are optional.
        If a field is not provided, the filter is not applied for this field.
        All filter criteria are combined with a logical AND.
      type: object
      properties:
        geoJson:
          $ref: '#/components/schemas/geoJsonObject'
        lonelySign:
          type: boolean
          description: >-
            Boolean value to filter lonely signs.
            It is intended to be used to exclude traffic signs from the returned data that are considered lonely:
            The parameter is set to `false` to only return non-lonely traffic signs.
            By default, all signs are returned, regardless of whether they are lonely or not.
          example: false
        minConfidence:
          $ref: '#/components/schemas/minConfidenceFilter'
        permanency:
          $ref: '#/components/schemas/permanencyFilter'
        type:
          $ref: '#/components/schemas/typeFilter'
    Error:
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          type: string
          minLength: 3
          maxLength: 3
          description: Error status code
        errorMessage:
          type: string
          maxLength: 20
          description: Error code message
        message:
          type: string
          maxLength: 100
          description: Error detailed description
      description: The error object contains detailed information about the error.
    trafficSign:
      title: TrafficSign
      type: object
      required:
        - id
        - latitude
        - longitude
        - heading
        - confidence
        - permanency
        - shape
        - signValue
        - timestamp
        - type
      properties:
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Average of the confidence-values from the single detections. Can be between 0 and 1.
          example: 0.8
        heading:
          type: integer
          format: int32
          description: Direction in degrees (0Â° is north, 180Â° is south, 90Â° is east, ..) in which the detecting vehicle was driving.
          minimum: 0
          maximum: 359            
          example: 41
        id:
          type: string
          format: uuid
          description: The id of this specific traffic sign
          example: ce3be48d-9a42-4f9f-aafe-a5d119f8c488
        latitude:
          type: number
          format: float
          description: The latitude value of the position
          multipleOf: 0.000001          
          example: 52.104575
        longitude:
          type: number
          format: float
          description: The longitude value of the position
          multipleOf: 0.000001          
          example: 12.705091
        permanency:
          type: string
          example: STATIC
          enum:
            - STATIC
            - DYNAMIC
            - VARIABLE
          description: Gives information if this sign is only available temporary (DYNAMIC) (e.g. because of roadworks) or all the time (STATIC). Electronic signs (VARIABLE) are able to change the value.
        shape:
          type: string
          example: RECTANGLE
          description: |-
            The shape of sign that was detected. Could be one of the following:
          enum:
            - ROAD_SIGN_RECOGNITION_SHAPE_UNDEFINED
            - RECTANGLE
            - SQUARE
            - TRIANGLE_UP
            - TRIANGLE_DOWN
            - DIAMOND
            - HEXAGON
            - CIRCLE
        signValue:
          type: string
          example: "60"
          description: |-
            The value on the road sign (e.g., speed limit 60 km/h)
            Values could be following or -1 (if no value is present):
          enum:
           - "10" 
           - "20"
           - "30"
           - "40"
           - "50"
           - "60"
           - "70"
           - "80"
           - "90"
           - "100"
           - "110"
           - "120" 
           - "130" 
           - "-1"
        timestamp:
          type: integer
          format: int64
          example: 1633602289294
          description: A unix timestamp in UTC of the detection.
        type:
          type: string
          example: SPEED_LIMIT_START
          description: |-
            The type of sign that was detected. Could be one of the following:
          enum:
            - ACCIDENT_HAZARD
            - ADVISORY_SPEED
            - ALL_RESTRICTIONS_END
            - ANIMAL_CROSSING
            - CITY_END
            - CITY_START
            - CONGESTION_HAZARD
            - CONSTRUCTION_END
            - CONSTRUCTION_START
            - ENVIRONMENTAL_AREA_END
            - ENVIRONMENTAL_AREA_START
            - FALLING_ROCKS
            - GENERAL_WARNING
            - GIVE_WAY
            - GRAVEL
            - HIGH_OCCUPANCY_VEHICLE_LANE
            - ICY_CONDITIONS
            - LANE_CLOSED
            - LANE_CLOSED_LEFT_MOST_LANE
            - LANE_CLOSED_RIGHT_MOST_LANE
            - LANE_MERGE
            - LANE_MERGE_CENTER
            - LANE_MERGE_LEFT
            - LANE_MERGE_RIGHT
            - LANE_SHIFT
            - LANE_SHIFT_TO_LEFT
            - LANE_SHIFT_TO_RIGHT
            - LATERAL_WIND
            - MANDATORY_TURN_LEFT_ONLY
            - MANDATORY_TURN_RIGHT_ONLY
            - MANDATORY_TURN_STRAIGHT_ONLY
            - MOTORWAY_END
            - MOTORWAY_START
            - NO_ENTRY
            - NO_OVERTAKING_PASSENGER_CARS_END
            - NO_OVERTAKING_PASSENGER_CARS_START
            - NO_OVERTAKING_TRUCKS_END
            - NO_OVERTAKING_TRUCKS_START
            - OVERHEAD_LANE_CONTROL_CLOSED
            - OVERHEAD_LANE_CONTROL_CLOSING_LEFT
            - OVERHEAD_LANE_CONTROL_CLOSING_RIGHT
            - OVERHEAD_LANE_CONTROL_FLASH_ARROW_LEFT
            - OVERHEAD_LANE_CONTROL_FLASH_ARROW_RIGHT
            - PASSING_ON_LEFT
            - PASSING_ON_LEFT_OR_RIGHT
            - PASSING_ON_RIGHT
            - PEDESTRIAN_CROSSING
            - PREFERENCE_ROAD_END
            - PREFERENCE_ROAD_START
            - PRIORITY_OVER_ONCOMING_TRAFFIC
            - PROTECTED_OVERTAKING_EXTRALANE
            - PROTECTED_OVERTAKING_EXTRALANE_LEFTSIDE
            - PROTECTED_OVERTAKING_EXTRALANE_RIGHTSIDE
            - RAILWAY_CROSSING_GENERAL
            - RAILWAY_CROSSING_PROTECTED
            - RAILWAY_CROSSING_UNPROTECTED
            - RISK_OF_GROUNDING
            - ROAD_NARROWS
            - ROUNDABOUT_INTERSECTION
            - SCHOOL_ZONE
            - SHARP_CURVE
            - SHARP_CURVE_LEFT
            - SHARP_CURVE_RIGHT
            - SHOULDER_CLOSE_FOR_TRAFFIC
            - SHOULDER_OPEN_FOR_TRAFFIC
            - SLIPPERY_ROAD
            - SLOW_DOWN
            - SPEED_LIMIT_END
            - SPEED_LIMIT_START
            - STEEP_HILL_DOWNWARDS
            - STEEP_HILL_UPWARDS
            - STOP_SIGN
            - TRAFFIC_CALMING_END
            - TRAFFIC_CALMING_START
            - TRAMWAY_CROSSING
            - TWO_WAY_TRAFFIC
            - WINDING_ROAD_STARTING_LEFT
            - WINDING_ROAD_STARTING_RIGHT
            - YIELD_TO_ONCOMING_TRAFFIC
    # region GeoJSON Schema
    geoJsonObject:
      title: GeoJSON
      description: Latest version of the GeoJSON schema provided by the https://geojson.org/schema/GeoJSON.json.
      oneOf:
        - title: GeoJSON Polygon
          type: object
          required:
            - type
            - coordinates
          properties:
            type:
              type: string
              enum:
                - Polygon
            coordinates:
              type: array
              items:
                type: array
                minItems: 4
                items:
                  type: array
                  minItems: 2
                  items:
                    type: number
            bbox:
              type: array
              minItems: 4
              items:
                type: number
        - title: GeoJSON MultiPolygon
          type: object
          required:
            - type
            - coordinates
          properties:
            type:
              type: string
              enum:
                - MultiPolygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  minItems: 4
                  items:
                    type: array
                    minItems: 2
                    items:
                      type: number
            bbox:
              type: array
              minItems: 4
              items:
                type: number
        - title: GeoJSON GeometryCollection
          type: object
          required:
            - type
            - geometries
          properties:
            type:
              type: string
              enum:
                - GeometryCollection
            geometries:
              type: array
              items:
                oneOf:
                  - title: GeoJSON Polygon
                    type: object
                    required:
                      - type
                      - coordinates
                    properties:
                      type:
                        type: string
                        enum:
                          - Polygon
                      coordinates:
                        type: array
                        items:
                          type: array
                          minItems: 4
                          items:
                            type: array
                            minItems: 2
                            items:
                              type: number
                      bbox:
                        type: array
                        minItems: 4
                        items:
                          type: number
                  - title: GeoJSON MultiPolygon
                    type: object
                    required:
                      - type
                      - coordinates
                    properties:
                      type:
                        type: string
                        enum:
                          - MultiPolygon
                      coordinates:
                        type: array
                        items:
                          type: array
                          items:
                            type: array
                            minItems: 4
                            items:
                              type: array
                              minItems: 2
                              items:
                                type: number
                      bbox:
                        type: array
                        minItems: 4
                        items:
                          type: number
            bbox:
              type: array
              minItems: 4
              items:
                type: number
        - title: GeoJSON Feature
          type: object
          required:
            - type
            - properties
            - geometry
          properties:
            type:
              type: string
              enum:
                - Feature
            id:
              oneOf:
                - type: number
                - type: string
            properties:
              oneOf:
                - nullable: true
                - type: object
            geometry:
              oneOf:
                - nullable: true
                - title: GeoJSON Polygon
                  type: object
                  required:
                    - type
                    - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                        - Polygon
                    coordinates:
                      type: array
                      items:
                        type: array
                        minItems: 4
                        items:
                          type: array
                          minItems: 2
                          items:
                            type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON MultiPolygon
                  type: object
                  required:
                    - type
                    - coordinates
                  properties:
                    type:
                      type: string
                      enum:
                        - MultiPolygon
                    coordinates:
                      type: array
                      items:
                        type: array
                        items:
                          type: array
                          minItems: 4
                          items:
                            type: array
                            minItems: 2
                            items:
                              type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
                - title: GeoJSON GeometryCollection
                  type: object
                  required:
                    - type
                    - geometries
                  properties:
                    type:
                      type: string
                      enum:
                        - GeometryCollection
                    geometries:
                      type: array
                      items:
                        oneOf:
                          - title: GeoJSON Polygon
                            type: object
                            required:
                              - type
                              - coordinates
                            properties:
                              type:
                                type: string
                                enum:
                                  - Polygon
                              coordinates:
                                type: array
                                items:
                                  type: array
                                  minItems: 4
                                  items:
                                    type: array
                                    minItems: 2
                                    items:
                                      type: number
                              bbox:
                                type: array
                                minItems: 4
                                items:
                                  type: number
                          - title: GeoJSON MultiPolygon
                            type: object
                            required:
                              - type
                              - coordinates
                            properties:
                              type:
                                type: string
                                enum:
                                  - MultiPolygon
                              coordinates:
                                type: array
                                items:
                                  type: array
                                  items:
                                    type: array
                                    minItems: 4
                                    items:
                                      type: array
                                      minItems: 2
                                      items:
                                        type: number
                              bbox:
                                type: array
                                minItems: 4
                                items:
                                  type: number
                    bbox:
                      type: array
                      minItems: 4
                      items:
                        type: number
            bbox:
              type: array
              minItems: 4
              items:
                type: number
        - title: GeoJSON FeatureCollection
          type: object
          required:
            - type
            - features
          properties:
            type:
              type: string
              enum:
                - FeatureCollection
            features:
              type: array
              items:
                title: GeoJSON Feature
                type: object
                required:
                  - type
                  - properties
                  - geometry
                properties:
                  type:
                    type: string
                    enum:
                      - Feature
                  id:
                    oneOf:
                      - type: number
                      - type: string
                  properties:
                    oneOf:
                      - nullable: true
                      - type: object
                  geometry:
                    oneOf:
                      - nullable: true
                      - title: GeoJSON Polygon
                        type: object
                        required:
                          - type
                          - coordinates
                        properties:
                          type:
                            type: string
                            enum:
                              - Polygon
                          coordinates:
                            type: array
                            items:
                              type: array
                              minItems: 4
                              items:
                                type: array
                                minItems: 2
                                items:
                                  type: number
                          bbox:
                            type: array
                            minItems: 4
                            items:
                              type: number
                      - title: GeoJSON MultiPolygon
                        type: object
                        required:
                          - type
                          - coordinates
                        properties:
                          type:
                            type: string
                            enum:
                              - MultiPolygon
                          coordinates:
                            type: array
                            items:
                              type: array
                              items:
                                type: array
                                minItems: 4
                                items:
                                  type: array
                                  minItems: 2
                                  items:
                                    type: number
                          bbox:
                            type: array
                            minItems: 4
                            items:
                              type: number
                      - title: GeoJSON GeometryCollection
                        type: object
                        required:
                          - type
                          - geometries
                        properties:
                          type:
                            type: string
                            enum:
                              - GeometryCollection
                          geometries:
                            type: array
                            items:
                              oneOf:
                                - title: GeoJSON Polygon
                                  type: object
                                  required:
                                    - type
                                    - coordinates
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - Polygon
                                    coordinates:
                                      type: array
                                      items:
                                        type: array
                                        minItems: 4
                                        items:
                                          type: array
                                          minItems: 2
                                          items:
                                            type: number
                                    bbox:
                                      type: array
                                      minItems: 4
                                      items:
                                        type: number
                                - title: GeoJSON MultiPolygon
                                  type: object
                                  required:
                                    - type
                                    - coordinates
                                  properties:
                                    type:
                                      type: string
                                      enum:
                                        - MultiPolygon
                                    coordinates:
                                      type: array
                                      items:
                                        type: array
                                        items:
                                          type: array
                                          minItems: 4
                                          items:
                                            type: array
                                            minItems: 2
                                            items:
                                              type: number
                                    bbox:
                                      type: array
                                      minItems: 4
                                      items:
                                        type: number
                          bbox:
                            type: array
                            minItems: 4
                            items:
                              type: number
                  bbox:
                    type: array
                    minItems: 4
                    items:
                      type: number
            bbox:
              type: array
              minItems: 4
              items:
                type: number
    # endregion
    minConfidenceFilter:
      type: number
      format: float
      description: >-
        Filters the traffic signs data by the confidence value. Can be between 0 and 1. 
        Only traffic signs data with a confidence value greater than or equal to the provided 
        value are returned.
      minimum: 0
      maximum: 1
      example: 0.5
    permanencyFilter:
      type: string
      description: >-
        Filters the traffic signs data by the permanency value. The filter is case-insensitive.
        Only traffic signs data with the provided permanency value are returned.
      example: static
    typeFilter:
      type: string
      description: >-
        Filters the traffic signs data by the type of the road sign. The filter is case-insensitive.
        Only traffic signs data with the provided type are returned.
      example: speed_limit_start
    pagedResult:
        title: PagedResult
        type: object
        properties:
          size:
            description: Number of elements in the page.
            type: integer
            format: int32
            minimum: 0
            example: 1000
          number:
            description: The number of the current page (number is 1 for an empty list).
            type: integer
            format: int32
            minimum: 1
            example: 1
          totalPages:
            description: The total number of pages (totalPages is 1 for an empty list).
            type: integer
            format: int32
            minimum: 1
            example: 10            
          totalElements:
            description: The total number of elements.
            type: integer
            format: int64
            minimum: 0
            example: 10000
