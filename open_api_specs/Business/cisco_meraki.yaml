openapi: 3.0.0
servers:
  - url: https://api.meraki.com/api/v1
info:
  contact:
    name: Meraki Developer Community
    url: https://meraki.io/community
    x-twitter: meraki
  description: |
    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.

    > Date: 05 April, 2023
    >
    > [Recent Updates](https://meraki.io/whats-new/)

    ---

    [API Documentation](https://meraki.io/api)

    [Community Support](https://meraki.io/community)

    [Meraki Homepage](https://www.meraki.com)
  title: Meraki Dashboard API
  version: 1.32.0
  x-apisguru-categories:
    - iot
    - enterprise
  x-logo:
    url: https://n140.meraki.com/images/cisco-meraki.png
  x-origin:
    - format: openapi
      url: https://raw.githubusercontent.com/meraki/openapi/master/openapi/spec2.json
      version: "3.0"
  x-preferred: false
  x-providerName: meraki.com
security:
  - meraki_api_key: []
tags:
  - name: organizations
  - name: networks
  - name: devices
  - name: insight
  - name: wireless
  - name: camera
  - name: appliance
  - name: switch
  - name: cellularGateway
  - name: sm
  - name: sensor
  - name: administered
  - name: accessControlLists
  - name: accessPolicies
  - name: acls
  - name: actionBatches
  - name: adaptivePolicy
  - name: addresses
  - name: admins
  - name: airMarshal
  - name: alertTypes
  - name: alerts
  - name: alternateManagementInterface
  - name: analytics
  - name: apiRequests
  - name: apnsCert
  - name: appliances
  - name: applicationCategories
  - name: applicationUsage
  - name: applications
  - name: arpInspection
  - name: artifacts
  - name: authenticationToken
  - name: availabilities
  - name: bandwidthUsageHistory
  - name: bgp
  - name: billing
  - name: bluetooth
  - name: bluetoothClients
  - name: bonjourForwarding
  - name: brandingPolicies
  - name: byClient
  - name: byDevice
  - name: byEnergyUsage
  - name: byInterval
  - name: byMetric
  - name: bySwitch
  - name: byUsage
  - name: byUtilization
  - name: bypassActivationLockAttempts
  - name: categories
  - name: cellular
  - name: cellularFirewallRules
  - name: cellularUsageHistory
  - name: certs
  - name: channelUtilization
  - name: channelUtilizationHistory
  - name: claim
  - name: clientCountHistory
  - name: clients
  - name: cloudMonitoring
  - name: configTemplates
  - name: configurationChanges
  - name: configure
  - name: connectionStats
  - name: connectivity
  - name: connectivityEvents
  - name: connectivityMonitoringDestinations
  - name: contentFiltering
  - name: coterm
  - name: current
  - name: customAnalytics
  - name: customPerformanceClasses
  - name: dataRateHistory
  - name: delegated
  - name: desktopLogs
  - name: deviceCommandLogs
  - name: deviceProfiles
  - name: deviceTypeGroupPolicies
  - name: dhcp
  - name: dhcpServerPolicy
  - name: dscpTaggingOptions
  - name: dscpToCosMappings
  - name: eapOverride
  - name: earlyAccess
  - name: ethernet
  - name: eventTypes
  - name: events
  - name: exportEvents
  - name: failedConnections
  - name: features
  - name: fields
  - name: firewall
  - name: firewalledServices
  - name: firmware
  - name: firmwareUpgrades
  - name: floorPlans
  - name: groupPolicies
  - name: groups
  - name: health
  - name: healthByTime
  - name: history
  - name: hotspot20
  - name: httpServers
  - name: identities
  - name: identityPsks
  - name: idps
  - name: imports
  - name: inboundCellularFirewallRules
  - name: inboundFirewallRules
  - name: interfaces
  - name: intrusion
  - name: inventory
  - name: l3FirewallRules
  - name: l7FirewallRules
  - name: lan
  - name: latencyHistory
  - name: latencyStats
  - name: latest
  - name: licenses
  - name: licensing
  - name: linkAggregations
  - name: linkLayer
  - name: live
  - name: liveTools
  - name: lldpCdp
  - name: loginSecurity
  - name: logs
  - name: lossAndLatencyHistory
  - name: malware
  - name: managementInterface
  - name: manufacturers
  - name: me
  - name: merakiAuthUsers
  - name: meshStatuses
  - name: models
  - name: monitor
  - name: monitoredMediaServers
  - name: mqttBrokers
  - name: mtu
  - name: multicast
  - name: netflow
  - name: networkAdapters
  - name: networkHealth
  - name: objectDetectionModels
  - name: onboarding
  - name: oneToManyNatRules
  - name: oneToOneNatRules
  - name: openapiSpec
  - name: optIns
  - name: order
  - name: ospf
  - name: overview
  - name: packets
  - name: payloadTemplates
  - name: performance
  - name: performanceHistory
  - name: pii
  - name: piiKeys
  - name: ping
  - name: pingDevice
  - name: policies
  - name: policy
  - name: policyObjects
  - name: portForwardingRules
  - name: portSchedules
  - name: ports
  - name: powerModules
  - name: prefixes
  - name: prepare
  - name: priorities
  - name: profiles
  - name: qosRules
  - name: qualityAndRetention
  - name: qualityRetentionProfiles
  - name: radio
  - name: readings
  - name: recent
  - name: relationships
  - name: rendezvousPoints
  - name: requests
  - name: responseCodes
  - name: restrictions
  - name: rfProfiles
  - name: rollbacks
  - name: routing
  - name: rules
  - name: saml
  - name: samlRoles
  - name: schedules
  - name: search
  - name: security
  - name: securityCenters
  - name: seen
  - name: sense
  - name: servers
  - name: settings
  - name: signalQualityHistory
  - name: sims
  - name: singleLan
  - name: siteToSiteVpn
  - name: smDevicesForKey
  - name: smOwnersForKey
  - name: snmp
  - name: softwares
  - name: splash
  - name: splashAuthorizationStatus
  - name: splashLoginAttempts
  - name: ssids
  - name: stacks
  - name: staged
  - name: stages
  - name: staticRoutes
  - name: statics
  - name: stats
  - name: status
  - name: statuses
  - name: stormControl
  - name: stp
  - name: subnetPool
  - name: subnets
  - name: summary
  - name: switches
  - name: syslogServers
  - name: targetGroups
  - name: thirdPartyVPNPeers
  - name: top
  - name: topology
  - name: traffic
  - name: trafficAnalysis
  - name: trafficHistory
  - name: trafficShaping
  - name: trustedAccessConfigs
  - name: trustedServers
  - name: upgrades
  - name: uplink
  - name: uplinkBandwidth
  - name: uplinkSelection
  - name: uplinks
  - name: uplinksLossAndLatency
  - name: usageHistories
  - name: usageHistory
  - name: userAccessDevices
  - name: users
  - name: v4
  - name: video
  - name: videoLink
  - name: vlanAssignments
  - name: vlans
  - name: vmx
  - name: vpn
  - name: vpnFirewallRules
  - name: vppAccounts
  - name: warmSpare
  - name: warnings
  - name: webhookTests
  - name: webhooks
  - name: wirelessProfiles
  - name: wlanLists
  - name: zones
paths:
  /administered/identities/me:
    get:
      description: Returns the identity of the current user.
      operationId: getAdministeredIdentitiesMe
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    authentication:
                      api:
                        key:
                          created: true
                      mode: email
                      saml:
                        enabled: false
                      twoFactor:
                        enabled: false
                    email: miles@meraki.com
                    lastUsedDashboardAt: 2018-02-11T00:00:00.090210Z
                    name: Miles Meraki
              schema:
                properties:
                  authentication:
                    description: Authentication info
                    properties:
                      api:
                        description: API authentication
                        properties:
                          key:
                            description: API key
                            properties:
                              created:
                                description: If API key is created for this user
                                type: boolean
                            type: object
                        type: object
                      mode:
                        description: Authentication mode
                        type: string
                      saml:
                        description: SAML authentication
                        properties:
                          enabled:
                            description: If SAML authentication is enabled for this user
                            type: boolean
                        type: object
                      twoFactor:
                        description: TwoFactor authentication
                        properties:
                          enabled:
                            description: If twoFactor authentication is enabled for this user
                            type: boolean
                        type: object
                    type: object
                  email:
                    description: User email
                    type: string
                  lastUsedDashboardAt:
                    description: Last seen active on Dashboard UI
                    format: date-time
                    type: string
                  name:
                    description: Username
                    type: string
                type: object
          description: Successful operation
      summary: Returns the identity of the current user.
      tags:
        - administered
        - monitor
        - identities
        - me
  "/devices/{serial}":
    get:
      description: Return a single device
      operationId: getDevice
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: 1600 Pennsylvania Ave
                    beaconIdParams:
                      major: 5
                      minor: 3
                      uuid: 00000000-0000-0000-0000-000000000000
                    firmware: wireless-25-14
                    floorPlanId: g_1234567
                    lanIp: 1.2.3.4
                    lat: 37.4180951010362
                    lng: -122.098531723022
                    mac: 00:11:22:33:44:55
                    model: MR34
                    name: My AP
                    networkId: N_24329156
                    notes: My AP's note
                    serial: Q234-ABCD-5678
                    tags:
                      - recently-added
              schema:
                type: object
          description: Successful operation
      summary: Return a single device
      tags:
        - devices
        - configure
    put:
      description: Update the attributes of a device
      operationId: updateDevice
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                lat: 37.4180951010362
                lng: -122.098531723022
                mac: 00:11:22:33:44:55
                name: My AP
                serial: Q234-ABCD-5678
                tags:
                  - recently-added
              properties:
                address:
                  description: The address of a device
                  type: string
                floorPlanId:
                  description: The floor plan to associate to this device. null disassociates the device from the floorplan.
                  type: string
                lat:
                  description: The latitude of a device
                  format: float
                  type: number
                lng:
                  description: The longitude of a device
                  format: float
                  type: number
                moveMapMarker:
                  description: Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.
                  type: boolean
                name:
                  description: The name of a device
                  type: string
                notes:
                  description: The notes for the device. String. Limited to 255 characters.
                  type: string
                switchProfileId:
                  description: The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.
                  type: string
                tags:
                  description: The list of tags of a device
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: 1600 Pennsylvania Ave
                    beaconIdParams:
                      major: 5
                      minor: 3
                      uuid: 00000000-0000-0000-0000-000000000000
                    firmware: wireless-25-14
                    floorPlanId: g_1234567
                    lanIp: 1.2.3.4
                    lat: 37.4180951010362
                    lng: -122.098531723022
                    mac: 00:11:22:33:44:55
                    model: MR34
                    name: My AP
                    networkId: N_24329156
                    notes: My AP's note
                    serial: Q234-ABCD-5678
                    tags:
                      - recently-added
              schema:
                type: object
          description: Successful operation
      summary: Update the attributes of a device
      tags:
        - devices
        - configure
  "/devices/{serial}/appliance/dhcp/subnets":
    get:
      description: Return the DHCP subnet information for an appliance
      operationId: getDeviceApplianceDhcpSubnets
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - freeCount: 251
                      subnet: 192.168.1.0/24
                      usedCount: 2
                      vlanId: 100
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the DHCP subnet information for an appliance
      tags:
        - appliance
        - monitor
        - dhcp
        - subnets
  "/devices/{serial}/appliance/performance":
    get:
      description: Return the performance score for a single MX. Only primary MX devices supported. If no data is available, a 204 error code is returned.
      operationId: getDeviceAppliancePerformance
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    perfScore: 10
              schema:
                type: object
          description: Successful operation
      summary: Return the performance score for a single MX
      tags:
        - appliance
        - monitor
        - performance
  "/devices/{serial}/appliance/prefixes/delegated":
    get:
      description: Return current delegated IPv6 prefixes on an appliance.
      operationId: getDeviceAppliancePrefixesDelegated
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - counts:
                        assigned: 2
                        available: 253
                      description: My ISP provider
                      expiresAt: 2018-05-12T00:00:00Z
                      isPreferred: true
                      method: auto
                      origin:
                        interface: wan1
                      prefix: 2001:db8:3c4d:15::/64
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return current delegated IPv6 prefixes on an appliance.
      tags:
        - appliance
        - monitor
        - prefixes
        - delegated
  "/devices/{serial}/appliance/prefixes/delegated/vlanAssignments":
    get:
      description: Return prefixes assigned to all IPv6 enabled VLANs on an appliance.
      operationId: getDeviceAppliancePrefixesDelegatedVlanAssignments
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - ipv6:
                        address: 2001:db8:3c4d:15::1
                        linkLocal:
                          address: 2001:db8:3c4d:15::1
                        prefix: 2001:db8:3c4d:15::/64
                        solicitedNodeMulticast:
                          address: 2001:db8:3c4d:15::1
                      origin:
                        interface: wan1
                        prefix: 2001:db8:3c4d:15::/64
                      status: Active
                      vlan:
                        id: 100
                        name: My VLAN
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return prefixes assigned to all IPv6 enabled VLANs on an appliance.
      tags:
        - appliance
        - monitor
        - prefixes
        - delegated
        - vlanAssignments
  "/devices/{serial}/appliance/uplinks/settings":
    get:
      description: Return the uplink settings for an MX appliance
      operationId: getDeviceApplianceUplinksSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    interfaces:
                      wan1:
                        enabled: true
                        pppoe:
                          authentication:
                            enabled: true
                            username: username
                          enabled: true
                        svis:
                          ipv4:
                            address: 9.10.11.10/16
                            assignmentMode: static
                            gateway: 13.14.15.16
                            nameservers:
                              addresses:
                                - 1.2.3.4
                          ipv6:
                            address: 1:2:3::4
                            assignmentMode: static
                            gateway: 1:2:3::5
                            nameservers:
                              addresses:
                                - 1001:4860:4860::8888
                                - 1001:4860:4860::8844
                        vlanTagging:
                          enabled: true
                          vlanId: 1
                      wan2:
                        enabled: true
                        pppoe:
                          authentication:
                            enabled: true
                            username: username
                          enabled: true
                        svis:
                          ipv4:
                            address: 9.10.11.10/16
                            assignmentMode: static
                            gateway: 13.14.15.16
                            nameservers:
                              addresses:
                                - 1.2.3.4
                          ipv6:
                            address: 1:2:3::4
                            assignmentMode: static
                            gateway: 1:2:3::5
                            nameservers:
                              addresses:
                                - 1001:4860:4860::8888
                                - 1001:4860:4860::8844
                        vlanTagging:
                          enabled: true
                          vlanId: 1
              schema:
                properties:
                  interfaces:
                    description: Interface settings.
                    properties:
                      wan1:
                        description: WAN 1 settings.
                        properties:
                          enabled:
                            description: Enable or disable the interface.
                            type: boolean
                          pppoe:
                            description: Configuration options for PPPoE.
                            properties:
                              authentication:
                                description: Settings for PPPoE Authentication.
                                properties:
                                  enabled:
                                    description: Whether PPPoE authentication is enabled.
                                    type: boolean
                                  username:
                                    description: Username for PPPoE authentication.
                                    type: string
                                type: object
                              enabled:
                                description: Whether PPPoE is enabled.
                                type: boolean
                            type: object
                          svis:
                            description: SVI settings by protocol.
                            properties:
                              ipv4:
                                description: IPv4 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: IP address and subnet mask when in static mode.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Gateway IP address when in static mode.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              ipv6:
                                description: IPv6 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: Static address that will override the one(s) received by SLAAC.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Static gateway that will override the one received by autoconf.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                            type: object
                          vlanTagging:
                            description: VLAN tagging settings.
                            properties:
                              enabled:
                                description: Whether VLAN tagging is enabled.
                                type: boolean
                              vlanId:
                                description: The ID of the VLAN to use for VLAN tagging.
                                type: integer
                            type: object
                        type: object
                      wan2:
                        description: WAN 2 settings.
                        properties:
                          enabled:
                            description: Enable or disable the interface.
                            type: boolean
                          pppoe:
                            description: Configuration options for PPPoE.
                            properties:
                              authentication:
                                description: Settings for PPPoE Authentication.
                                properties:
                                  enabled:
                                    description: Whether PPPoE authentication is enabled.
                                    type: boolean
                                  username:
                                    description: Username for PPPoE authentication.
                                    type: string
                                type: object
                              enabled:
                                description: Whether PPPoE is enabled.
                                type: boolean
                            type: object
                          svis:
                            description: SVI settings by protocol.
                            properties:
                              ipv4:
                                description: IPv4 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: IP address and subnet mask when in static mode.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Gateway IP address when in static mode.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              ipv6:
                                description: IPv6 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: Static address that will override the one(s) received by SLAAC.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Static gateway that will override the one received by autoconf.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                            type: object
                          vlanTagging:
                            description: VLAN tagging settings.
                            properties:
                              enabled:
                                description: Whether VLAN tagging is enabled.
                                type: boolean
                              vlanId:
                                description: The ID of the VLAN to use for VLAN tagging.
                                type: integer
                            type: object
                        type: object
                    type: object
                type: object
          description: Successful operation
      summary: Return the uplink settings for an MX appliance
      tags:
        - appliance
        - configure
        - uplinks
        - settings
    put:
      description: Update the uplink settings for an MX appliance
      operationId: updateDeviceApplianceUplinksSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                interfaces:
                  wan1:
                    enabled: true
                    pppoe:
                      authentication:
                        enabled: true
                        password: password
                        username: username
                      enabled: true
                    svis:
                      ipv4:
                        address: 9.10.11.10/16
                        assignmentMode: static
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                            - 1.2.3.4
                      ipv6:
                        address: 1:2:3::4
                        assignmentMode: static
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                            - 1001:4860:4860::8888
                            - 1001:4860:4860::8844
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                  wan2:
                    enabled: true
                    pppoe:
                      authentication:
                        enabled: true
                        password: password
                        username: username
                      enabled: true
                    svis:
                      ipv4:
                        address: 9.10.11.10/16
                        assignmentMode: static
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                            - 1.2.3.4
                      ipv6:
                        address: 1:2:3::4
                        assignmentMode: static
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                            - 1001:4860:4860::8888
                            - 1001:4860:4860::8844
                    vlanTagging:
                      enabled: true
                      vlanId: 1
              properties:
                interfaces:
                  description: Interface settings.
                  properties:
                    wan1:
                      description: WAN 1 settings.
                      properties:
                        enabled:
                          description: Enable or disable the interface.
                          type: boolean
                        pppoe:
                          description: Configuration options for PPPoE.
                          properties:
                            authentication:
                              description: Settings for PPPoE Authentication.
                              properties:
                                enabled:
                                  description: Whether PPPoE authentication is enabled.
                                  type: boolean
                                password:
                                  description: Password for PPPoE authentication. This parameter is not returned.
                                  type: string
                                username:
                                  description: Username for PPPoE authentication.
                                  type: string
                              type: object
                            enabled:
                              description: Whether PPPoE is enabled.
                              type: boolean
                          type: object
                        svis:
                          description: SVI settings by protocol.
                          properties:
                            ipv4:
                              description: IPv4 settings for static/dynamic mode.
                              properties:
                                address:
                                  description: IP address and subnet mask when in static mode.
                                  type: string
                                assignmentMode:
                                  description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                  enum:
                                    - dynamic
                                    - static
                                  type: string
                                gateway:
                                  description: Gateway IP address when in static mode.
                                  type: string
                                nameservers:
                                  description: The nameserver settings for this SVI.
                                  properties:
                                    addresses:
                                      description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            ipv6:
                              description: IPv6 settings for static/dynamic mode.
                              properties:
                                address:
                                  description: Static address that will override the one(s) received by SLAAC.
                                  type: string
                                assignmentMode:
                                  description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                  enum:
                                    - dynamic
                                    - static
                                  type: string
                                gateway:
                                  description: Static gateway that will override the one received by autoconf.
                                  type: string
                                nameservers:
                                  description: The nameserver settings for this SVI.
                                  properties:
                                    addresses:
                                      description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                          type: object
                        vlanTagging:
                          description: VLAN tagging settings.
                          properties:
                            enabled:
                              description: Whether VLAN tagging is enabled.
                              type: boolean
                            vlanId:
                              description: The ID of the VLAN to use for VLAN tagging.
                              type: integer
                          type: object
                      type: object
                    wan2:
                      description: WAN 2 settings.
                      properties:
                        enabled:
                          description: Enable or disable the interface.
                          type: boolean
                        pppoe:
                          description: Configuration options for PPPoE.
                          properties:
                            authentication:
                              description: Settings for PPPoE Authentication.
                              properties:
                                enabled:
                                  description: Whether PPPoE authentication is enabled.
                                  type: boolean
                                password:
                                  description: Password for PPPoE authentication. This parameter is not returned.
                                  type: string
                                username:
                                  description: Username for PPPoE authentication.
                                  type: string
                              type: object
                            enabled:
                              description: Whether PPPoE is enabled.
                              type: boolean
                          type: object
                        svis:
                          description: SVI settings by protocol.
                          properties:
                            ipv4:
                              description: IPv4 settings for static/dynamic mode.
                              properties:
                                address:
                                  description: IP address and subnet mask when in static mode.
                                  type: string
                                assignmentMode:
                                  description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                  enum:
                                    - dynamic
                                    - static
                                  type: string
                                gateway:
                                  description: Gateway IP address when in static mode.
                                  type: string
                                nameservers:
                                  description: The nameserver settings for this SVI.
                                  properties:
                                    addresses:
                                      description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                            ipv6:
                              description: IPv6 settings for static/dynamic mode.
                              properties:
                                address:
                                  description: Static address that will override the one(s) received by SLAAC.
                                  type: string
                                assignmentMode:
                                  description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                  enum:
                                    - dynamic
                                    - static
                                  type: string
                                gateway:
                                  description: Static gateway that will override the one received by autoconf.
                                  type: string
                                nameservers:
                                  description: The nameserver settings for this SVI.
                                  properties:
                                    addresses:
                                      description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                              type: object
                          type: object
                        vlanTagging:
                          description: VLAN tagging settings.
                          properties:
                            enabled:
                              description: Whether VLAN tagging is enabled.
                              type: boolean
                            vlanId:
                              description: The ID of the VLAN to use for VLAN tagging.
                              type: integer
                          type: object
                      type: object
                  type: object
              required:
                - interfaces
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    interfaces:
                      wan1:
                        enabled: true
                        pppoe:
                          authentication:
                            enabled: true
                            username: username
                          enabled: true
                        svis:
                          ipv4:
                            address: 9.10.11.10/16
                            assignmentMode: static
                            gateway: 13.14.15.16
                            nameservers:
                              addresses:
                                - 1.2.3.4
                          ipv6:
                            address: 1:2:3::4
                            assignmentMode: static
                            gateway: 1:2:3::5
                            nameservers:
                              addresses:
                                - 1001:4860:4860::8888
                                - 1001:4860:4860::8844
                        vlanTagging:
                          enabled: true
                          vlanId: 1
                      wan2:
                        enabled: true
                        pppoe:
                          authentication:
                            enabled: true
                            username: username
                          enabled: true
                        svis:
                          ipv4:
                            address: 9.10.11.10/16
                            assignmentMode: static
                            gateway: 13.14.15.16
                            nameservers:
                              addresses:
                                - 1.2.3.4
                          ipv6:
                            address: 1:2:3::4
                            assignmentMode: static
                            gateway: 1:2:3::5
                            nameservers:
                              addresses:
                                - 1001:4860:4860::8888
                                - 1001:4860:4860::8844
                        vlanTagging:
                          enabled: true
                          vlanId: 1
              schema:
                properties:
                  interfaces:
                    description: Interface settings.
                    properties:
                      wan1:
                        description: WAN 1 settings.
                        properties:
                          enabled:
                            description: Enable or disable the interface.
                            type: boolean
                          pppoe:
                            description: Configuration options for PPPoE.
                            properties:
                              authentication:
                                description: Settings for PPPoE Authentication.
                                properties:
                                  enabled:
                                    description: Whether PPPoE authentication is enabled.
                                    type: boolean
                                  username:
                                    description: Username for PPPoE authentication.
                                    type: string
                                type: object
                              enabled:
                                description: Whether PPPoE is enabled.
                                type: boolean
                            type: object
                          svis:
                            description: SVI settings by protocol.
                            properties:
                              ipv4:
                                description: IPv4 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: IP address and subnet mask when in static mode.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Gateway IP address when in static mode.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              ipv6:
                                description: IPv6 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: Static address that will override the one(s) received by SLAAC.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Static gateway that will override the one received by autoconf.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                            type: object
                          vlanTagging:
                            description: VLAN tagging settings.
                            properties:
                              enabled:
                                description: Whether VLAN tagging is enabled.
                                type: boolean
                              vlanId:
                                description: The ID of the VLAN to use for VLAN tagging.
                                type: integer
                            type: object
                        type: object
                      wan2:
                        description: WAN 2 settings.
                        properties:
                          enabled:
                            description: Enable or disable the interface.
                            type: boolean
                          pppoe:
                            description: Configuration options for PPPoE.
                            properties:
                              authentication:
                                description: Settings for PPPoE Authentication.
                                properties:
                                  enabled:
                                    description: Whether PPPoE authentication is enabled.
                                    type: boolean
                                  username:
                                    description: Username for PPPoE authentication.
                                    type: string
                                type: object
                              enabled:
                                description: Whether PPPoE is enabled.
                                type: boolean
                            type: object
                          svis:
                            description: SVI settings by protocol.
                            properties:
                              ipv4:
                                description: IPv4 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: IP address and subnet mask when in static mode.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Gateway IP address when in static mode.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                              ipv6:
                                description: IPv6 settings for static/dynamic mode.
                                properties:
                                  address:
                                    description: Static address that will override the one(s) received by SLAAC.
                                    type: string
                                  assignmentMode:
                                    description: The assignment mode for this SVI. Applies only when PPPoE is disabled.
                                    enum:
                                      - dynamic
                                      - static
                                    type: string
                                  gateway:
                                    description: Static gateway that will override the one received by autoconf.
                                    type: string
                                  nameservers:
                                    description: The nameserver settings for this SVI.
                                    properties:
                                      addresses:
                                        description: Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                type: object
                            type: object
                          vlanTagging:
                            description: VLAN tagging settings.
                            properties:
                              enabled:
                                description: Whether VLAN tagging is enabled.
                                type: boolean
                              vlanId:
                                description: The ID of the VLAN to use for VLAN tagging.
                                type: integer
                            type: object
                        type: object
                    type: object
                type: object
          description: Successful operation
      summary: Update the uplink settings for an MX appliance
      tags:
        - appliance
        - configure
        - uplinks
        - settings
  "/devices/{serial}/appliance/vmx/authenticationToken":
    post:
      description: Generate a new vMX authentication token
      operationId: createDeviceApplianceVmxAuthenticationToken
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    expiresAt: 2021-06-18T12:40:10Z
                    token: ffc0b7b578b61be5bd1d172132c78044/9af03bd84d474
              schema:
                properties:
                  expiresAt:
                    description: The expiration time for the token, in ISO 8601 format
                    type: string
                  token:
                    description: The newly generated authentication token for the vMX instance
                    type: string
                type: object
          description: Successful operation
      summary: Generate a new vMX authentication token
      tags:
        - appliance
        - configure
        - vmx
        - authenticationToken
  "/devices/{serial}/blinkLeds":
    post:
      description: Blink the LEDs on a device
      operationId: blinkDeviceLeds
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                duration: 20
                duty: 50
                period: 160
              properties:
                duration:
                  description: The duration in seconds. Must be between 5 and 120. Default is 20 seconds
                  type: integer
                duty:
                  description: The duty cycle as the percent active. Must be between 10 and 90. Default is 50.
                  type: integer
                period:
                  description: The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds
                  type: integer
              type: object
      responses:
        "202":
          content:
            application/json:
              examples:
                response:
                  value:
                    duration: 20
                    duty: 50
                    period: 160
              schema:
                type: object
          description: Successful operation
      summary: Blink the LEDs on a device
      tags:
        - devices
        - liveTools
  "/devices/{serial}/camera/analytics/live":
    get:
      description: Returns live state from camera of analytics zones
      operationId: getDeviceCameraAnalyticsLive
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ts: 2018-08-15T18:32:38.123Z
                    zones:
                      "0":
                        person: 0
              schema:
                type: object
          description: Successful operation
      summary: Returns live state from camera of analytics zones
      tags:
        - camera
        - monitor
        - analytics
        - live
  "/devices/{serial}/camera/analytics/overview":
    get:
      description: Returns an overview of aggregate analytics data for a timespan
      operationId: getDeviceCameraAnalyticsOverview
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
          in: query
          name: objectType
          schema:
            enum:
              - person
              - vehicle
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - averageCount: 5
                      endTs: 2018-08-15T18:33:38.123Z
                      entrances: 254
                      startTs: 2018-08-15T18:32:38.123Z
                      zoneId: 0
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Returns an overview of aggregate analytics data for a timespan
      tags:
        - camera
        - monitor
        - analytics
        - overview
  "/devices/{serial}/camera/analytics/recent":
    get:
      description: Returns most recent record for analytics zones
      operationId: getDeviceCameraAnalyticsRecent
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
          in: query
          name: objectType
          schema:
            enum:
              - person
              - vehicle
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - averageCount: 2.54
                      endTs: 2018-08-15T18:33:38.123Z
                      entrances: 10
                      startTs: 2018-08-15T18:32:38.123Z
                      zoneId: 0
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Returns most recent record for analytics zones
      tags:
        - camera
        - monitor
        - analytics
        - recent
  "/devices/{serial}/camera/analytics/zones":
    get:
      description: Returns all configured analytic zones for this camera
      operationId: getDeviceCameraAnalyticsZones
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "0"
                      label: Full Frame
                      regionOfInterest:
                        x0: "0.00"
                        x1: "1.00"
                        y0: "0.00"
                        y1: "1.00"
                      type: occupancy
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Returns all configured analytic zones for this camera
      tags:
        - camera
        - monitor
        - analytics
        - zones
  "/devices/{serial}/camera/analytics/zones/{zoneId}/history":
    get:
      description: Return historical records for analytic zones
      operationId: getDeviceCameraAnalyticsZoneHistory
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: zoneId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 14 hours after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
          in: query
          name: resolution
          schema:
            type: integer
        - description: "[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."
          in: query
          name: objectType
          schema:
            enum:
              - person
              - vehicle
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - averageCount: 1.5
                      endTs: 2018-08-15T18:33:38.123Z
                      entrances: 5
                      startTs: 2018-08-15T18:32:38.123Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return historical records for analytic zones
      tags:
        - camera
        - monitor
        - analytics
        - zones
        - history
  "/devices/{serial}/camera/customAnalytics":
    get:
      description: Return custom analytics settings for a camera
      operationId: getDeviceCameraCustomAnalytics
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    artifactId: "1"
                    enabled: true
                    parameters:
                      - name: detection_threshold
                        value: 0.5
              schema:
                type: object
          description: Successful operation
      summary: Return custom analytics settings for a camera
      tags:
        - camera
        - configure
        - customAnalytics
    put:
      description: Update custom analytics settings for a camera
      operationId: updateDeviceCameraCustomAnalytics
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                artifactId: "1"
                enabled: true
                parameters:
                  - name: detection_threshold
                    value: "0.5"
              properties:
                artifactId:
                  description: The ID of the custom analytics artifact
                  type: string
                enabled:
                  description: Enable custom analytics
                  type: boolean
                parameters:
                  description: Parameters for the custom analytics workload
                  items:
                    properties:
                      name:
                        description: Name of the parameter
                        type: string
                      value:
                        description: Value of the parameter
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    artifactId: "1"
                    enabled: true
                    parameters:
                      - name: detection_threshold
                        value: 0.5
              schema:
                type: object
          description: Successful operation
      summary: Update custom analytics settings for a camera
      tags:
        - camera
        - configure
        - customAnalytics
  "/devices/{serial}/camera/generateSnapshot":
    post:
      description: Generate a snapshot of what the camera sees at the specified time and return a link to that image.
      operationId: generateDeviceCameraSnapshot
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                fullframe: false
                timestamp: 2021-04-30T15:18:08Z
              properties:
                fullframe:
                  description: '[optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.'
                  type: boolean
                timestamp:
                  description: "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                  format: date-time
                  type: string
              type: object
      responses:
        "202":
          content:
            application/json:
              examples:
                response:
                  value:
                    expiry: Access to the image will expire at 2018-12-11T03:12:39Z.
                    url: https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2
              schema:
                type: object
          description: Successful operation
      summary: Generate a snapshot of what the camera sees at the specified time and return a link to that image.
      tags:
        - camera
        - monitor
  "/devices/{serial}/camera/qualityAndRetention":
    get:
      description: Returns quality and retention settings for the given camera
      operationId: getDeviceCameraQualityAndRetention
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioRecordingEnabled: false
                    motionBasedRetentionEnabled: false
                    motionDetectorVersion: 2
                    profileId: "1234"
                    quality: Standard
                    resolution: 1280x720
                    restrictedBandwidthModeEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Returns quality and retention settings for the given camera
      tags:
        - camera
        - configure
        - qualityAndRetention
    put:
      description: Update quality and retention settings for the given camera
      operationId: updateDeviceCameraQualityAndRetention
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                audioRecordingEnabled: false
                motionBasedRetentionEnabled: false
                motionDetectorVersion: 2
                profileId: "1234"
                quality: Standard
                resolution: 1280x720
                restrictedBandwidthModeEnabled: false
              properties:
                audioRecordingEnabled:
                  description: Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
                  type: boolean
                motionBasedRetentionEnabled:
                  description: Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
                  type: boolean
                motionDetectorVersion:
                  description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
                  enum:
                    - 1
                    - 2
                  type: integer
                profileId:
                  description: The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
                  type: string
                quality:
                  description: Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
                  enum:
                    - Enhanced
                    - High
                    - Standard
                  type: string
                resolution:
                  description: Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2058x2058', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
                  enum:
                    - 1080x1080
                    - 1280x720
                    - 1920x1080
                    - 2058x2058
                    - 2112x2112
                    - 2688x1512
                    - 2880x2880
                    - 3840x2160
                  type: string
                restrictedBandwidthModeEnabled:
                  description: Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioRecordingEnabled: false
                    motionBasedRetentionEnabled: false
                    motionDetectorVersion: 2
                    profileId: "1234"
                    quality: Standard
                    resolution: 1280x720
                    restrictedBandwidthModeEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update quality and retention settings for the given camera
      tags:
        - camera
        - configure
        - qualityAndRetention
  "/devices/{serial}/camera/sense":
    get:
      description: Returns sense settings for a given camera
      operationId: getDeviceCameraSense
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioDetection:
                      enabled: false
                    mqttBrokerId: "1234"
                    mqttTopics:
                      - /merakimv/Q2AA-AAAA-1111/raw_detections
                      - /merakimv/Q2AA-AAAA-1111/light
                    senseEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Returns sense settings for a given camera
      tags:
        - camera
        - configure
        - sense
    put:
      description: Update sense settings for the given camera
      operationId: updateDeviceCameraSense
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                audioDetection:
                  enabled: false
                mqttBrokerId: "1234"
                senseEnabled: true
              properties:
                audioDetection:
                  description: The details of the audio detection config.
                  properties:
                    enabled:
                      description: Boolean indicating if audio detection is enabled(true) or disabled(false) on the camera
                      type: boolean
                  type: object
                detectionModelId:
                  description: The ID of the object detection model
                  type: string
                mqttBrokerId:
                  description: The ID of the MQTT broker to be enabled on the camera. A value of null will disable MQTT on the camera
                  type: string
                senseEnabled:
                  description: Boolean indicating if sense(license) is enabled(true) or disabled(false) on the camera
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioDetection:
                      enabled: false
                    mqttBrokerId: "1234"
                    mqttTopics:
                      - /merakimv/Q2AA-AAAA-1111/raw_detections
                      - /merakimv/Q2AA-AAAA-1111/light
                    senseEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Update sense settings for the given camera
      tags:
        - camera
        - configure
        - sense
  "/devices/{serial}/camera/sense/objectDetectionModels":
    get:
      description: Returns the MV Sense object detection model list for the given camera
      operationId: getDeviceCameraSenseObjectDetectionModels
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - description: Model A
                      id: "0"
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Returns the MV Sense object detection model list for the given camera
      tags:
        - camera
        - configure
        - sense
        - objectDetectionModels
  "/devices/{serial}/camera/video/settings":
    get:
      description: Returns video settings for the given camera
      operationId: getDeviceCameraVideoSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    externalRtspEnabled: true
                    rtspUrl: rtsp://10.0.0.1:9000/live
              schema:
                type: object
          description: Successful operation
      summary: Returns video settings for the given camera
      tags:
        - camera
        - configure
        - video
        - settings
    put:
      description: Update video settings for the given camera
      operationId: updateDeviceCameraVideoSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                externalRtspEnabled: true
              properties:
                externalRtspEnabled:
                  description: Boolean indicating if external rtsp stream is exposed
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    externalRtspEnabled: true
                    rtspUrl: rtsp://10.0.0.1:9000/live
              schema:
                type: object
          description: Successful operation
      summary: Update video settings for the given camera
      tags:
        - camera
        - configure
        - video
        - settings
  "/devices/{serial}/camera/videoLink":
    get:
      description: Returns video link to the specified camera. If a timestamp is supplied, it links to that timestamp.
      operationId: getDeviceCameraVideoLink
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: "[optional] The video link will start at this time. The timestamp should be a string in ISO8601 format. If no timestamp is specified, we will assume current time."
          in: query
          name: timestamp
          schema:
            format: date-time
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    url: https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077
              schema:
                type: object
          description: Successful operation
      summary: Returns video link to the specified camera
      tags:
        - camera
        - configure
        - videoLink
  "/devices/{serial}/camera/wirelessProfiles":
    get:
      description: Returns wireless profile assigned to the given camera
      operationId: getDeviceCameraWirelessProfiles
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ids:
                      backup: "1"
                      primary: "3"
                      secondary: "2"
              schema:
                type: object
          description: Successful operation
      summary: Returns wireless profile assigned to the given camera
      tags:
        - camera
        - configure
        - wirelessProfiles
    put:
      description: Assign wireless profiles to the given camera. Incremental updates are not supported, all profile assignment need to be supplied at once.
      operationId: updateDeviceCameraWirelessProfiles
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ids:
                  backup: "1"
                  primary: "3"
                  secondary: "2"
              properties:
                ids:
                  description: The ids of the wireless profile to assign to the given camera
                  properties:
                    backup:
                      description: The id of the backup wireless profile
                      type: string
                    primary:
                      description: The id of the primary wireless profile
                      type: string
                    secondary:
                      description: The id of the secondary wireless profile
                      type: string
                  type: object
              required:
                - ids
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ids:
                      backup: "1"
                      primary: "3"
                      secondary: "2"
              schema:
                type: object
          description: Successful operation
      summary: Assign wireless profiles to the given camera
      tags:
        - camera
        - configure
        - wirelessProfiles
  "/devices/{serial}/cellular/sims":
    get:
      description: Return the SIM and APN configurations for a cellular device.
      operationId: getDeviceCellularSims
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    sims:
                      - apns:
                          - allowedIpTypes:
                              - ipv4
                              - ipv6
                            authentication:
                              type: pap
                              username: milesmeraki
                            name: internet
                        isPrimary: true
                        slot: sim1
              schema:
                type: object
          description: Successful operation
      summary: Return the SIM and APN configurations for a cellular device.
      tags:
        - devices
        - configure
        - cellular
        - sims
    put:
      description: Updates the SIM and APN configurations for a cellular device.
      operationId: updateDeviceCellularSims
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                apns:
                  - allowedIpTypes:
                      - ipv4
                      - ipv6
                    authentication:
                      password: secret
                      type: pap
                      username: milesmeraki
                    name: internet
                isPrimary: true
                slot: sim1
              properties:
                simFailover:
                  description: SIM Failover settings.
                  properties:
                    enabled:
                      description: Failover to secondary SIM (optional)
                      type: boolean
                  type: object
                sims:
                  description: List of SIMs. If a SIM was previously configured and not specified in this request, it will remain unchanged.
                  items:
                    properties:
                      apns:
                        default: []
                        description: APN configurations. If empty, the default APN will be used.
                        items:
                          properties:
                            allowedIpTypes:
                              description: IP versions to support (permitted values include 'ipv4', 'ipv6').
                              items:
                                type: string
                              type: array
                            authentication:
                              description: APN authentication configurations.
                              properties:
                                password:
                                  description: APN password, if type is set (if APN password is not supplied, the password is left unchanged).
                                  type: string
                                type:
                                  default: none
                                  description: APN auth type.
                                  enum:
                                    - chap
                                    - none
                                    - pap
                                  type: string
                                username:
                                  description: APN username, if type is set.
                                  type: string
                              type: object
                            name:
                              description: APN name.
                              type: string
                          required:
                            - name
                            - allowedIpTypes
                          type: object
                        type: array
                      isPrimary:
                        default: false
                        description: If true, this SIM is used for boot. Must be true on single-sim devices.
                        type: boolean
                      slot:
                        description: SIM slot being configured. Must be 'sim1' on single-sim devices.
                        enum:
                          - sim1
                          - sim2
                        type: string
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    sims:
                      - apns:
                          - allowedIpTypes:
                              - ipv4
                              - ipv6
                            authentication:
                              type: pap
                              username: milesmeraki
                            name: internet
                        isPrimary: true
                        slot: sim1
              schema:
                type: object
          description: Successful operation
      summary: Updates the SIM and APN configurations for a cellular device.
      tags:
        - devices
        - configure
        - cellular
        - sims
  "/devices/{serial}/cellularGateway/lan":
    get:
      description: Show the LAN Settings of a MG
      operationId: getDeviceCellularGatewayLan
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    deviceLanIp: 192.168.0.33
                    deviceName: name of the MG
                    deviceSubnet: 192.168.0.32/27
                    fixedIpAssignments:
                      - ip: 192.168.0.10
                        mac: 0b:00:00:00:00:ac
                        name: server 1
                      - ip: 192.168.0.20
                        mac: 0b:00:00:00:00:ab
                        name: server 2
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.1
                        start: 192.168.1.0
              schema:
                type: object
          description: Successful operation
      summary: Show the LAN Settings of a MG
      tags:
        - cellularGateway
        - configure
        - lan
    put:
      description: Update the LAN Settings for a single MG.
      operationId: updateDeviceCellularGatewayLan
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                deviceLanIp: 192.168.0.33
                deviceName: name of the MG
                deviceSubnet: 192.168.0.32/27
                fixedIpAssignments:
                  - ip: 192.168.0.10
                    mac: 0b:00:00:00:00:ac
                    name: server 1
                  - ip: 192.168.0.20
                    mac: 0b:00:00:00:00:ab
                    name: server 2
                reservedIpRanges:
                  - comment: A reserved IP range
                    end: 192.168.1.1
                    start: 192.168.1.0
              properties:
                fixedIpAssignments:
                  description: list of all fixed IP assignments for a single MG
                  items:
                    properties:
                      ip:
                        description: The IP address you want to assign to a specific server or device
                        type: string
                      mac:
                        description: The MAC address of the server or device that hosts the internal resource that you wish to receive the specified IP address
                        type: string
                      name:
                        description: A descriptive name of the assignment
                        type: string
                    required:
                      - ip
                      - mac
                    type: object
                  type: array
                reservedIpRanges:
                  description: list of all reserved IP ranges for a single MG
                  items:
                    properties:
                      comment:
                        description: Comment explaining the reserved IP range
                        type: string
                      end:
                        description: Ending IP included in the reserved range of IPs
                        type: string
                      start:
                        description: Starting IP included in the reserved range of IPs
                        type: string
                    required:
                      - start
                      - end
                      - comment
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    deviceLanIp: 192.168.0.33
                    deviceName: name of the MG
                    deviceSubnet: 192.168.0.32/27
                    fixedIpAssignments:
                      - ip: 192.168.0.10
                        mac: 0b:00:00:00:00:ac
                        name: server 1
                      - ip: 192.168.0.20
                        mac: 0b:00:00:00:00:ab
                        name: server 2
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.1
                        start: 192.168.1.0
              schema:
                type: object
          description: Successful operation
      summary: Update the LAN Settings for a single MG.
      tags:
        - cellularGateway
        - configure
        - lan
  "/devices/{serial}/cellularGateway/portForwardingRules":
    get:
      description: Returns the port forwarding rules for a single MG.
      operationId: getDeviceCellularGatewayPortForwardingRules
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - access: any
                        lanIp: 172.31.128.5
                        localPort: "4"
                        name: test
                        protocol: tcp
                        publicPort: 11-12
                        uplink: both
                      - access: restricted
                        allowedIps:
                          - 10.10.10.10
                          - 10.10.10.11
                        lanIp: 172.31.128.5
                        localPort: "5"
                        name: test 2
                        protocol: tcp
                        publicPort: "99"
                        uplink: both
              schema:
                type: object
          description: Successful operation
      summary: Returns the port forwarding rules for a single MG.
      tags:
        - cellularGateway
        - configure
        - portForwardingRules
    put:
      description: Updates the port forwarding rules for a single MG.
      operationId: updateDeviceCellularGatewayPortForwardingRules
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - access: any
                    lanIp: 172.31.128.5
                    localPort: "4"
                    name: test
                    protocol: tcp
                    publicPort: 11-12
                    uplink: both
                  - access: restricted
                    allowedIps:
                      - 10.10.10.10
                      - 10.10.10.11
                    lanIp: 172.31.128.5
                    localPort: "5"
                    name: test 2
                    protocol: tcp
                    publicPort: "99"
                    uplink: both
              properties:
                rules:
                  description: An array of port forwarding params
                  items:
                    properties:
                      access:
                        description: "`any` or `restricted`. Specify the right to make inbound connections on the specified ports or port ranges. If `restricted`, a list of allowed IPs is mandatory."
                        type: string
                      allowedIps:
                        description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges.
                        items:
                          type: string
                        type: array
                      lanIp:
                        description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
                        type: string
                      localPort:
                        description: A port or port ranges that will receive the forwarded traffic from the WAN
                        type: string
                      name:
                        description: A descriptive name for the rule
                        type: string
                      protocol:
                        description: TCP or UDP
                        type: string
                      publicPort:
                        description: A port or port ranges that will be forwarded to the host on the LAN
                        type: string
                    required:
                      - lanIp
                      - publicPort
                      - localPort
                      - protocol
                      - access
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - access: any
                        lanIp: 172.31.128.5
                        localPort: "4"
                        name: test
                        protocol: tcp
                        publicPort: 11-12
                        uplink: both
                      - access: restricted
                        allowedIps:
                          - 10.10.10.10
                          - 10.10.10.11
                        lanIp: 172.31.128.5
                        localPort: "5"
                        name: test 2
                        protocol: tcp
                        publicPort: "99"
                        uplink: both
              schema:
                type: object
          description: Successful operation
      summary: Updates the port forwarding rules for a single MG.
      tags:
        - cellularGateway
        - configure
        - portForwardingRules
  "/devices/{serial}/clients":
    get:
      description: List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.
      operationId: getDeviceClients
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - adaptivePolicyGroup: null
                      description: Miles's phone
                      dhcpHostname: MilesPhone
                      id: k74272e
                      ip: 1.2.3.4
                      mac: 22:33:44:55:66:77
                      mdnsName: Miles's phone
                      namedVlan: Named Vlan
                      switchport: null
                      usage:
                        recv: 61
                        sent: 138
                      user: milesmeraki
                      vlan: "255"
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the clients of a device, up to a maximum of a month ago
      tags:
        - devices
        - monitor
        - clients
  "/devices/{serial}/liveTools/ping":
    post:
      description: Enqueue a job to ping a target host from the device
      operationId: createDeviceLiveToolsPing
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                count: 2
                target: 75.75.75.75
              properties:
                count:
                  description: Count parameter to pass to ping. [1..5], default 5
                  type: integer
                target:
                  description: FQDN, IPv4 or IPv6 address
                  type: string
              required:
                - target
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    pingId: "1284392014819"
                    request:
                      count: 2
                      serial: Q234-ABCD-5678
                      target: 75.75.75.75
                    status: complete
                    url: /devices/SERIAL/liveTools/ping/1284392014819
              schema:
                properties:
                  pingId:
                    description: Id to check the status of your ping request.
                    type: string
                  request:
                    description: Ping request parameters
                    properties:
                      count:
                        description: Number of pings to send
                        type: integer
                      serial:
                        description: Device serial number
                        type: string
                      target:
                        description: IP address or FQDN to ping
                        type: string
                    type: object
                  status:
                    description: Status of the ping request.
                    type: string
                  url:
                    description: GET this url to check the status of your ping request.
                    type: string
                type: object
          description: Successful operation
      summary: Enqueue a job to ping a target host from the device
      tags:
        - devices
        - liveTools
        - ping
  "/devices/{serial}/liveTools/ping/{id}":
    get:
      description: Return a ping job. Latency unit in response is in milliseconds. Size is in bytes.
      operationId: getDeviceLiveToolsPing
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    pingId: "1284392014819"
                    request:
                      count: 2
                      serial: Q234-ABCD-5678
                      target: 75.75.75.75
                    results:
                      latencies:
                        average: 15.8
                        maximum: 15.9
                        minimum: 15.8
                      loss:
                        percentage: 0
                      received: 5
                      replies:
                        - latency: 15.7
                          sequenceId: 1
                          size: 84
                      sent: 5
                    status: complete
                    url: /devices/SERIAL/liveTools/ping/1284392014819
              schema:
                properties:
                  pingId:
                    description: Id to check the status of your ping request.
                    type: string
                  request:
                    description: Ping request parameters
                    properties:
                      count:
                        description: Number of pings to send
                        type: integer
                      serial:
                        description: Device serial number
                        type: string
                      target:
                        description: IP address or FQDN to ping
                        type: string
                    type: object
                  results:
                    description: Results of the ping request.
                    properties:
                      latencies:
                        description: Packet latency stats
                        properties:
                          average:
                            description: Average latency
                            format: float
                            type: number
                          maximum:
                            description: Maximum latency
                            format: float
                            type: number
                          minimum:
                            description: Minimum latency
                            format: float
                            type: number
                        type: object
                      loss:
                        description: Lost packets
                        properties:
                          percentage:
                            description: Percentage of packets lost
                            format: float
                            type: number
                        type: object
                      received:
                        description: Number of packets received
                        type: integer
                      replies:
                        description: Received packets
                        items:
                          properties:
                            latency:
                              description: Latency of the packet in milliseconds
                              format: float
                              type: number
                            sequenceId:
                              description: Sequence ID of the packet
                              type: integer
                            size:
                              description: Size of the packet in bytes
                              type: integer
                          type: object
                        type: array
                      sent:
                        description: Number of packets sent
                        type: integer
                    type: object
                  status:
                    description: Status of the ping request.
                    type: string
                  url:
                    description: GET this url to check the status of your ping request.
                    type: string
                type: object
          description: Successful operation
      summary: Return a ping job
      tags:
        - devices
        - liveTools
        - ping
  "/devices/{serial}/liveTools/pingDevice":
    post:
      description: Enqueue a job to check connectivity status to the device
      operationId: createDeviceLiveToolsPingDevice
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                count: 3
              properties:
                count:
                  description: Count parameter to pass to ping. [1..5], default 5
                  type: integer
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    pingId: "1284392014819"
                    request:
                      count: 2
                      serial: Q234-ABCD-5678
                      target: 75.75.75.75
                    status: complete
                    url: /devices/SERIAL/liveTools/ping/1284392014819
              schema:
                properties:
                  pingId:
                    description: Id to check the status of your ping request.
                    type: string
                  request:
                    description: Ping request parameters
                    properties:
                      count:
                        description: Number of pings to send
                        type: integer
                      serial:
                        description: Device serial number
                        type: string
                      target:
                        description: IP address or FQDN to ping
                        type: string
                    type: object
                  status:
                    description: Status of the ping request.
                    type: string
                  url:
                    description: GET this url to check the status of your ping request.
                    type: string
                type: object
          description: Successful operation
      summary: Enqueue a job to check connectivity status to the device
      tags:
        - devices
        - liveTools
        - pingDevice
  "/devices/{serial}/liveTools/pingDevice/{id}":
    get:
      description: Return a ping device job. Latency unit in response is in milliseconds. Size is in bytes.
      operationId: getDeviceLiveToolsPingDevice
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    pingId: "1284392014819"
                    request:
                      count: 2
                      serial: Q234-ABCD-5678
                      target: 75.75.75.75
                    results:
                      latencies:
                        average: 15.8
                        maximum: 15.9
                        minimum: 15.8
                      loss:
                        percentage: 0
                      received: 5
                      replies:
                        - latency: 15.7
                          sequenceId: 1
                          size: 84
                      sent: 5
                    status: complete
                    url: /devices/SERIAL/liveTools/ping/1284392014819
              schema:
                properties:
                  pingId:
                    description: Id to check the status of your ping request.
                    type: string
                  request:
                    description: Ping request parameters
                    properties:
                      count:
                        description: Number of pings to send
                        type: integer
                      serial:
                        description: Device serial number
                        type: string
                      target:
                        description: IP address or FQDN to ping
                        type: string
                    type: object
                  results:
                    description: Results of the ping request.
                    properties:
                      latencies:
                        description: Packet latency stats
                        properties:
                          average:
                            description: Average latency
                            format: float
                            type: number
                          maximum:
                            description: Maximum latency
                            format: float
                            type: number
                          minimum:
                            description: Minimum latency
                            format: float
                            type: number
                        type: object
                      loss:
                        description: Lost packets
                        properties:
                          percentage:
                            description: Percentage of packets lost
                            format: float
                            type: number
                        type: object
                      received:
                        description: Number of packets received
                        type: integer
                      replies:
                        description: Received packets
                        items:
                          properties:
                            latency:
                              description: Latency of the packet in milliseconds
                              format: float
                              type: number
                            sequenceId:
                              description: Sequence ID of the packet
                              type: integer
                            size:
                              description: Size of the packet in bytes
                              type: integer
                          type: object
                        type: array
                      sent:
                        description: Number of packets sent
                        type: integer
                    type: object
                  status:
                    description: Status of the ping request.
                    type: string
                  url:
                    description: GET this url to check the status of your ping request.
                    type: string
                type: object
          description: Successful operation
      summary: Return a ping device job
      tags:
        - devices
        - liveTools
        - pingDevice
  "/devices/{serial}/lldpCdp":
    get:
      description: List LLDP and CDP information for a device
      operationId: getDeviceLldpCdp
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ports:
                      "8":
                        cdp:
                          address: 00:11:22:33:44:55
                          deviceId: e0553d8cdf53
                          portId: Port 10
                          sourcePort: "8"
                      "12":
                        cdp:
                          address: 00:11:22:33:44:55
                          deviceId: e0553d8cdf53
                          portId: Port 11
                          sourcePort: "12"
                        lldp:
                          managementAddress: 00:11:22:33:44:55
                          portId: "11"
                          sourcePort: "12"
                          systemName: Meraki MS350-24X - Phineas
                    sourceMac: 00:11:22:33:44:55
              schema:
                type: object
          description: Successful operation
      summary: List LLDP and CDP information for a device
      tags:
        - devices
        - monitor
        - lldpCdp
  "/devices/{serial}/lossAndLatencyHistory":
    get:
      description: Get the uplink loss percentage and latency in milliseconds, and goodput in kilobits per second for a wired network device.
      operationId: getDeviceLossAndLatencyHistory
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
          in: query
          name: resolution
          schema:
            type: integer
        - description: The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1.
          in: query
          name: uplink
          schema:
            enum:
              - cellular
              - wan1
              - wan2
            type: string
        - description: The destination IP used to obtain the requested stats. This is required.
          in: query
          name: ip
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - endTime: 2018-10-09T22:19:27Z
                      goodput: 1493
                      jitter: 11.2
                      latencyMs: 324.12
                      lossPercent: 5.23
                      startTime: 2018-10-09T22:18:27Z
                    - endTime: 2018-10-09T22:20:27Z
                      goodput: 2567
                      jitter: 3.4
                      latencyMs: 43
                      lossPercent: 1
                      startTime: 2018-10-09T22:19:27Z
                    - endTime: 2018-10-09T22:21:27Z
                      goodput: 7899
                      jitter: 1
                      latencyMs: 44.02
                      lossPercent: 0.01
                      startTime: 2018-10-09T22:20:27Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Get the uplink loss percentage and latency in milliseconds, and goodput in kilobits per second for a wired network device.
      tags:
        - devices
        - monitor
        - uplinks
        - lossAndLatencyHistory
  "/devices/{serial}/managementInterface":
    get:
      description: Return the management interface settings for a device
      operationId: getDeviceManagementInterface
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ddnsHostnames:
                      activeDdnsHostname: mx1-sample.dynamic-m.com
                      ddnsHostnameWan1: mx1-sample-1.dynamic-m.com
                      ddnsHostnameWan2: mx1-sample-2.dynamic-m.com
                    wan1:
                      staticDns:
                        - 1.2.3.2
                        - 1.2.3.3
                      staticGatewayIp: 1.2.3.1
                      staticIp: 1.2.3.4
                      staticSubnetMask: 255.255.255.0
                      usingStaticIp: true
                      vlan: 7
                      wanEnabled: not configured
                    wan2:
                      usingStaticIp: false
                      vlan: 2
                      wanEnabled: enabled
              schema:
                type: object
          description: Successful operation
      summary: Return the management interface settings for a device
      tags:
        - devices
        - configure
        - managementInterface
    put:
      description: Update the management interface settings for a device
      operationId: updateDeviceManagementInterface
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                wan1:
                  staticDns:
                    - 1.2.3.2
                    - 1.2.3.3
                  staticGatewayIp: 1.2.3.1
                  staticIp: 1.2.3.4
                  staticSubnetMask: 255.255.255.0
                  usingStaticIp: true
                  vlan: 7
                  wanEnabled: not configured
                wan2:
                  usingStaticIp: false
                  vlan: 2
                  wanEnabled: enabled
              properties:
                wan1:
                  description: WAN 1 settings
                  properties:
                    staticDns:
                      description: Up to two DNS IPs.
                      items:
                        type: string
                      type: array
                    staticGatewayIp:
                      description: The IP of the gateway on the WAN.
                      type: string
                    staticIp:
                      description: The IP the device should use on the WAN.
                      type: string
                    staticSubnetMask:
                      description: The subnet mask for the WAN.
                      type: string
                    usingStaticIp:
                      description: Configure the interface to have static IP settings or use DHCP.
                      type: boolean
                    vlan:
                      description: The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
                      type: integer
                    wanEnabled:
                      description: Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
                      enum:
                        - disabled
                        - enabled
                        - not configured
                      type: string
                  type: object
                wan2:
                  description: WAN 2 settings (only for MX devices)
                  properties:
                    staticDns:
                      description: Up to two DNS IPs.
                      items:
                        type: string
                      type: array
                    staticGatewayIp:
                      description: The IP of the gateway on the WAN.
                      type: string
                    staticIp:
                      description: The IP the device should use on the WAN.
                      type: string
                    staticSubnetMask:
                      description: The subnet mask for the WAN.
                      type: string
                    usingStaticIp:
                      description: Configure the interface to have static IP settings or use DHCP.
                      type: boolean
                    vlan:
                      description: The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.
                      type: integer
                    wanEnabled:
                      description: Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.
                      enum:
                        - disabled
                        - enabled
                        - not configured
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    wan1:
                      staticDns:
                        - 1.2.3.2
                        - 1.2.3.3
                      staticGatewayIp: 1.2.3.1
                      staticIp: 1.2.3.4
                      staticSubnetMask: 255.255.255.0
                      usingStaticIp: true
                      vlan: 7
                      wanEnabled: not configured
                    wan2:
                      usingStaticIp: false
                      vlan: 2
                      wanEnabled: enabled
              schema:
                type: object
          description: Successful operation
      summary: Update the management interface settings for a device
      tags:
        - devices
        - configure
        - managementInterface
  "/devices/{serial}/reboot":
    post:
      description: Reboot a device
      operationId: rebootDevice
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              examples:
                response:
                  value:
                    success: true
              schema:
                type: object
          description: Successful operation
      summary: Reboot a device
      tags:
        - devices
        - liveTools
  "/devices/{serial}/sensor/relationships":
    get:
      description: List the sensor roles for a given sensor or camera device.
      operationId: getDeviceSensorRelationships
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - livestream:
                        relatedDevices:
                          - productType: camera
                            serial: Q234-ABCD-5678
              schema:
                items:
                  properties:
                    livestream:
                      description: A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
                      properties:
                        relatedDevices:
                          description: An array of the related devices for the role
                          items:
                            properties:
                              productType:
                                description: The product type of the related device
                                enum:
                                  - camera
                                  - sensor
                                type: string
                              serial:
                                description: The serial of the related device
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: List the sensor roles for a given sensor or camera device.
      tags:
        - sensor
        - configure
        - relationships
    put:
      description: Assign one or more sensor roles to a given sensor or camera device.
      operationId: updateDeviceSensorRelationships
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                livestream:
                  description: A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
                  properties:
                    relatedDevices:
                      description: An array of the related devices for the role
                      items:
                        properties:
                          serial:
                            description: The serial of the related device
                            type: string
                        required:
                          - serial
                        type: object
                      type: array
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    livestream:
                      relatedDevices:
                        - productType: camera
                          serial: Q234-ABCD-5678
              schema:
                properties:
                  livestream:
                    description: A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
                    properties:
                      relatedDevices:
                        description: An array of the related devices for the role
                        items:
                          properties:
                            productType:
                              description: The product type of the related device
                              enum:
                                - camera
                                - sensor
                              type: string
                            serial:
                              description: The serial of the related device
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: Successful operation
      summary: Assign one or more sensor roles to a given sensor or camera device.
      tags:
        - sensor
        - configure
        - relationships
  "/devices/{serial}/switch/ports":
    get:
      description: List the switch ports for a switch
      operationId: getDeviceSwitchPorts
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accessPolicyNumber: 2
                      accessPolicyType: Sticky MAC allow list
                      adaptivePolicyGroupId: "123"
                      allowedVlans: 1,3,5-10
                      daiTrusted: false
                      enabled: true
                      flexibleStackingEnabled: true
                      isolationEnabled: false
                      linkNegotiation: Auto negotiate
                      linkNegotiationCapabilities:
                        - Auto negotiate
                        - 1 Gigabit full duplex (auto)
                      macAllowList:
                        - 34:56:fe:ce:8e:b0
                        - 34:56:fe:ce:8e:b1
                      name: My switch port
                      peerSgtCapable: false
                      poeEnabled: true
                      portId: "1"
                      portScheduleId: "1234"
                      profile:
                        enabled: false
                        id: "1284392014819"
                        iname: iname
                      rstpEnabled: true
                      stickyMacAllowList:
                        - 34:56:fe:ce:8e:b0
                        - 34:56:fe:ce:8e:b1
                      stickyMacAllowListLimit: 5
                      stormControlEnabled: true
                      stpGuard: disabled
                      tags:
                        - tag1
                        - tag2
                      type: access
                      udld: Alert only
                      vlan: 10
                      voiceVlan: 20
              schema:
                items:
                  properties:
                    accessPolicyNumber:
                      description: The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                      type: integer
                    accessPolicyType:
                      description: The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                      enum:
                        - Custom access policy
                        - MAC allow list
                        - Open
                        - Sticky MAC allow list
                      type: string
                    adaptivePolicyGroupId:
                      description: The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
                      type: string
                    allowedVlans:
                      description: The VLANs allowed on the switch port. Only applicable to trunk ports.
                      type: string
                    daiTrusted:
                      description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                      type: boolean
                    enabled:
                      description: The status of the switch port.
                      type: boolean
                    flexibleStackingEnabled:
                      description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                      type: boolean
                    isolationEnabled:
                      description: The isolation status of the switch port.
                      type: boolean
                    linkNegotiation:
                      description: The link speed for the switch port.
                      type: string
                    linkNegotiationCapabilities:
                      description: Available link speeds for the switch port.
                      items:
                        type: string
                      type: array
                    macAllowList:
                      description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the switch port.
                      type: string
                    peerSgtCapable:
                      description: If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
                      type: boolean
                    poeEnabled:
                      description: The PoE status of the switch port.
                      type: boolean
                    portId:
                      description: The identifier of the switch port.
                      type: string
                    portScheduleId:
                      description: The ID of the port schedule. A value of null will clear the port schedule.
                      type: string
                    profile:
                      description: Profile attributes
                      properties:
                        enabled:
                          description: When enabled, override this port's configuration with a port profile.
                          type: boolean
                        id:
                          description: When enabled, the ID of the port profile used to override the port's configuration.
                          type: string
                        iname:
                          description: When enabled, the IName of the profile.
                          type: string
                      type: object
                    rstpEnabled:
                      description: The rapid spanning tree protocol status.
                      type: boolean
                    stickyMacAllowList:
                      description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                      items:
                        type: string
                      type: array
                    stickyMacAllowListLimit:
                      description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                      type: integer
                    stormControlEnabled:
                      description: The storm control status of the switch port.
                      type: boolean
                    stpGuard:
                      description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                      enum:
                        - bpdu guard
                        - disabled
                        - loop guard
                        - root guard
                      type: string
                    tags:
                      description: The list of tags of the switch port.
                      items:
                        type: string
                      type: array
                    type:
                      description: The type of the switch port ('trunk' or 'access').
                      enum:
                        - access
                        - trunk
                      type: string
                    udld:
                      description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                      enum:
                        - Alert only
                        - Enforce
                      type: string
                    vlan:
                      description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
                      type: integer
                    voiceVlan:
                      description: The voice VLAN of the switch port. Only applicable to access ports.
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: List the switch ports for a switch
      tags:
        - switch
        - configure
        - ports
  "/devices/{serial}/switch/ports/cycle":
    post:
      description: Cycle a set of switch ports
      operationId: cycleDeviceSwitchPorts
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ports:
                  - "1"
                  - 2-5
                  - 1_MA-MOD-8X10G_1
                  - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
              properties:
                ports:
                  description: "List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1, 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]"
                  items:
                    type: string
                  type: array
              required:
                - ports
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ports:
                      - "1"
                      - 2-5
                      - 1_MA-MOD-8X10G_1
                      - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
              schema:
                type: object
          description: Successful operation
      summary: Cycle a set of switch ports
      tags:
        - switch
        - liveTools
        - ports
  "/devices/{serial}/switch/ports/statuses":
    get:
      description: Return the status for all the ports of a switch
      operationId: getDeviceSwitchPortsStatuses
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - cdp:
                        address: 10.0,0.1
                        capabilities: Switch
                        deviceId: 0c8ddbddee:ff
                        managementAddress: 10.0.0.100
                        nativeVlan: 1
                        platform: MS350-24X
                        portId: Port 20
                        systemName: ""
                        version: "1"
                        vtpManagementDomain: ""
                      clientCount: 10
                      duplex: full
                      enabled: true
                      errors:
                        - PoE overload
                        - Very high proportion of CRC errors
                      isUplink: false
                      lldp:
                        chassisId: 0c:8d:db:dd:ee:ff
                        managementAddress: 10.0.0.100
                        managementVlan: 1
                        portDescription: Port 20
                        portId: "20"
                        portVlan: 1
                        systemCapabilities: switch
                        systemDescription: MS350-24X Cloud Managed PoE Switch
                        systemName: MS350-24X - Test
                      portId: "1"
                      powerUsageInWh: 55.9
                      securePort:
                        active: true
                        authenticationStatus: Authentication in progress
                        configOverrides:
                          allowedVlans: all
                          type: trunk
                          vlan: 12
                          voiceVlan: 34
                        enabled: true
                      speed: 10 Gbps
                      status: Connected
                      trafficInKbps:
                        recv: 1
                        sent: 1.2
                        total: 2.2
                      usageInKb:
                        recv: 17859
                        sent: 23008
                        total: 40867
                      warnings:
                        - SecureConnect authentication in progress
                        - PoE port was denied power
                        - High proportion of CRC errors
              schema:
                items:
                  properties:
                    cdp:
                      description: The Cisco Discovery Protocol (CDP) information of the connected device.
                      properties:
                        address:
                          description: Contains network addresses of both receiving and sending devices.
                          type: string
                        capabilities:
                          description: Identifies the device type, which indicates the functional capabilities of the device.
                          type: string
                        deviceId:
                          description: Identifies the device name.
                          type: string
                        managementAddress:
                          description: The device's management IP.
                          type: string
                        nativeVlan:
                          description: Indicates, per interface, the assumed VLAN for untagged packets on the interface.
                          type: integer
                        platform:
                          description: Identifies the hardware platform of the device.
                          type: string
                        portId:
                          description: Identifies the port from which the CDP packet was sent.
                          type: string
                        systemName:
                          description: The system name.
                          type: string
                        version:
                          description: Contains the device software release information.
                          type: string
                        vtpManagementDomain:
                          description: Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.
                          type: string
                      type: object
                    clientCount:
                      description: The number of clients connected through this port.
                      type: integer
                    duplex:
                      description: The current duplex of a connected port.
                      enum:
                        - ""
                        - full
                        - half
                      type: string
                    enabled:
                      description: Whether the port is configured to be enabled.
                      type: boolean
                    errors:
                      description: All errors present on the port.
                      items:
                        type: string
                      type: array
                    isUplink:
                      description: Whether the port is the switch's uplink.
                      type: boolean
                    lldp:
                      description: The Link Layer Discovery Protocol (LLDP) information of the connected device.
                      properties:
                        chassisId:
                          description: The device's chassis ID.
                          type: string
                        managementAddress:
                          description: The device's management IP.
                          type: string
                        managementVlan:
                          description: The device's management VLAN.
                          type: integer
                        portDescription:
                          description: Description of the port from which the LLDP packet was sent.
                          type: string
                        portId:
                          description: Identifies the port from which the LLDP packet was sent
                          type: string
                        portVlan:
                          description: The port's VLAN.
                          type: integer
                        systemCapabilities:
                          description: Identifies the device type, which indicates the functional capabilities of the device.
                          type: string
                        systemDescription:
                          description: The device's system description.
                          type: string
                        systemName:
                          description: The device's system name.
                          type: string
                      type: object
                    portId:
                      description: The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
                      type: string
                    powerUsageInWh:
                      description: How much power (in watt-hours) has been delivered by this port during the timespan.
                      format: float
                      type: number
                    securePort:
                      description: The Secure Port status of the port.
                      properties:
                        active:
                          description: Whether Secure Port is currently active for this port.
                          type: boolean
                        authenticationStatus:
                          description: The current Secure Port status.
                          enum:
                            - Authentication failure
                            - Authentication in progress
                            - Authentication successful
                            - Authentication timed out
                            - Disabled
                            - Enabled
                          type: string
                        configOverrides:
                          description: The configuration overrides applied to this port when Secure Port is active.
                          properties:
                            allowedVlans:
                              description: The VLANs allowed on the . Only applicable to trunk ports.
                              type: string
                            type:
                              description: The type of the  ('trunk' or 'access').
                              enum:
                                - access
                                - trunk
                              type: string
                            vlan:
                              description: The VLAN of the . A null value will clear the value set for trunk ports.
                              type: integer
                            voiceVlan:
                              description: The voice VLAN of the . Only applicable to access ports.
                              type: integer
                          type: object
                        enabled:
                          description: Whether Secure Port is turned on for this port.
                          type: boolean
                      type: object
                    speed:
                      description: The current data transfer rate which the port is operating at.
                      enum:
                        - ""
                        - 1 Gbps
                        - 10 Gbps
                        - 10 Mbps
                        - 100 Gbps
                        - 100 Mbps
                        - 2.5 Gbps
                        - 20 Gbps
                        - 40 Gbps
                        - 5 Gbps
                      type: string
                    status:
                      description: The current connection status of the port.
                      enum:
                        - Connected
                        - Disabled
                        - Disconnected
                      type: string
                    trafficInKbps:
                      description: A breakdown of the average speed of data that has passed through this port during the timespan.
                      properties:
                        recv:
                          description: The average speed of the data received (in kilobits-per-second).
                          format: float
                          type: number
                        sent:
                          description: The average speed of the data sent (in kilobits-per-second).
                          format: float
                          type: number
                        total:
                          description: The average speed of the data sent and received (in kilobits-per-second).
                          format: float
                          type: number
                      type: object
                    usageInKb:
                      description: A breakdown of how many kilobytes have passed through this port during the timespan.
                      properties:
                        recv:
                          description: The amount of data received (in kilobytes).
                          type: integer
                        sent:
                          description: The amount of data sent (in kilobytes).
                          type: integer
                        total:
                          description: The total amount of data sent and received (in kilobytes).
                          type: integer
                      type: object
                    warnings:
                      description: All warnings present on the port.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
      summary: Return the status for all the ports of a switch
      tags:
        - switch
        - monitor
        - ports
        - statuses
  "/devices/{serial}/switch/ports/statuses/packets":
    get:
      description: Return the packet counters for all the ports of a switch
      operationId: getDeviceSwitchPortsStatusesPackets
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 1 day from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 1 day. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - packets:
                        - desc: Total
                          ratePerSec:
                            recv: 0
                            sent: 1
                            total: 1
                          recv: 7946
                          sent: 104135
                          total: 112081
                        - desc: Broadcast
                          ratePerSec:
                            recv: 0
                            sent: 0
                            total: 0
                          recv: 514
                          sent: 30370
                          total: 30884
                        - desc: Multicast
                          ratePerSec:
                            recv: 0
                            sent: 0
                            total: 0
                          recv: 771
                          sent: 66849
                          total: 67620
                        - desc: CRC align errors
                          ratePerSec:
                            recv: 0
                            sent: 0
                            total: 0
                          recv: 0
                          sent: 0
                          total: 0
                      portId: "1"
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the packet counters for all the ports of a switch
      tags:
        - switch
        - monitor
        - ports
        - statuses
        - packets
  "/devices/{serial}/switch/ports/{portId}":
    get:
      description: Return a switch port
      operationId: getDeviceSwitchPort
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: portId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyNumber: 2
                    accessPolicyType: Sticky MAC allow list
                    adaptivePolicyGroupId: "123"
                    allowedVlans: 1,3,5-10
                    daiTrusted: false
                    enabled: true
                    flexibleStackingEnabled: true
                    isolationEnabled: false
                    linkNegotiation: Auto negotiate
                    linkNegotiationCapabilities:
                      - Auto negotiate
                      - 1 Gigabit full duplex (auto)
                    macAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    name: My switch port
                    peerSgtCapable: false
                    poeEnabled: true
                    portId: "1"
                    portScheduleId: "1234"
                    profile:
                      enabled: false
                      id: "1284392014819"
                      iname: iname
                    rstpEnabled: true
                    stickyMacAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    stickyMacAllowListLimit: 5
                    stormControlEnabled: true
                    stpGuard: disabled
                    tags:
                      - tag1
                      - tag2
                    type: access
                    udld: Alert only
                    vlan: 10
                    voiceVlan: 20
              schema:
                properties:
                  accessPolicyNumber:
                    description: The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                    type: integer
                  accessPolicyType:
                    description: The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                    enum:
                      - Custom access policy
                      - MAC allow list
                      - Open
                      - Sticky MAC allow list
                    type: string
                  adaptivePolicyGroupId:
                    description: The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
                    type: string
                  allowedVlans:
                    description: The VLANs allowed on the switch port. Only applicable to trunk ports.
                    type: string
                  daiTrusted:
                    description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                    type: boolean
                  enabled:
                    description: The status of the switch port.
                    type: boolean
                  flexibleStackingEnabled:
                    description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                    type: boolean
                  isolationEnabled:
                    description: The isolation status of the switch port.
                    type: boolean
                  linkNegotiation:
                    description: The link speed for the switch port.
                    type: string
                  linkNegotiationCapabilities:
                    description: Available link speeds for the switch port.
                    items:
                      type: string
                    type: array
                  macAllowList:
                    description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of the switch port.
                    type: string
                  peerSgtCapable:
                    description: If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
                    type: boolean
                  poeEnabled:
                    description: The PoE status of the switch port.
                    type: boolean
                  portId:
                    description: The identifier of the switch port.
                    type: string
                  portScheduleId:
                    description: The ID of the port schedule. A value of null will clear the port schedule.
                    type: string
                  profile:
                    description: Profile attributes
                    properties:
                      enabled:
                        description: When enabled, override this port's configuration with a port profile.
                        type: boolean
                      id:
                        description: When enabled, the ID of the port profile used to override the port's configuration.
                        type: string
                      iname:
                        description: When enabled, the IName of the profile.
                        type: string
                    type: object
                  rstpEnabled:
                    description: The rapid spanning tree protocol status.
                    type: boolean
                  stickyMacAllowList:
                    description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    items:
                      type: string
                    type: array
                  stickyMacAllowListLimit:
                    description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    type: integer
                  stormControlEnabled:
                    description: The storm control status of the switch port.
                    type: boolean
                  stpGuard:
                    description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                    enum:
                      - bpdu guard
                      - disabled
                      - loop guard
                      - root guard
                    type: string
                  tags:
                    description: The list of tags of the switch port.
                    items:
                      type: string
                    type: array
                  type:
                    description: The type of the switch port ('trunk' or 'access').
                    enum:
                      - access
                      - trunk
                    type: string
                  udld:
                    description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                    enum:
                      - Alert only
                      - Enforce
                    type: string
                  vlan:
                    description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
                    type: integer
                  voiceVlan:
                    description: The voice VLAN of the switch port. Only applicable to access ports.
                    type: integer
                type: object
          description: Successful operation
      summary: Return a switch port
      tags:
        - switch
        - configure
        - ports
    put:
      description: Update a switch port
      operationId: updateDeviceSwitchPort
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: portId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accessPolicyNumber: 2
                accessPolicyType: Sticky MAC allow list
                adaptivePolicyGroupId: "123"
                allowedVlans: 1,3,5-10
                daiTrusted: false
                enabled: true
                flexibleStackingEnabled: true
                isolationEnabled: false
                linkNegotiation: Auto negotiate
                macAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                name: My switch port
                peerSgtCapable: false
                poeEnabled: true
                portScheduleId: "1234"
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
                rstpEnabled: true
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                stpGuard: disabled
                tags:
                  - tag1
                  - tag2
                type: access
                udld: Alert only
                vlan: 10
                voiceVlan: 20
              properties:
                accessPolicyNumber:
                  description: The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                  type: integer
                accessPolicyType:
                  description: The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                  enum:
                    - Custom access policy
                    - MAC allow list
                    - Open
                    - Sticky MAC allow list
                  type: string
                adaptivePolicyGroupId:
                  description: The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
                  type: string
                allowedVlans:
                  description: The VLANs allowed on the switch port. Only applicable to trunk ports.
                  type: string
                daiTrusted:
                  description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                  type: boolean
                enabled:
                  description: The status of the switch port.
                  type: boolean
                flexibleStackingEnabled:
                  description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                  type: boolean
                isolationEnabled:
                  description: The isolation status of the switch port.
                  type: boolean
                linkNegotiation:
                  description: The link speed for the switch port.
                  type: string
                macAllowList:
                  description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                  items:
                    type: string
                  type: array
                name:
                  description: The name of the switch port.
                  type: string
                peerSgtCapable:
                  description: If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
                  type: boolean
                poeEnabled:
                  description: The PoE status of the switch port.
                  type: boolean
                portScheduleId:
                  description: The ID of the port schedule. A value of null will clear the port schedule.
                  type: string
                profile:
                  description: Profile attributes
                  properties:
                    enabled:
                      description: When enabled, override this port's configuration with a port profile.
                      type: boolean
                    id:
                      description: When enabled, the ID of the port profile used to override the port's configuration.
                      type: string
                    iname:
                      description: When enabled, the IName of the profile.
                      type: string
                  type: object
                rstpEnabled:
                  description: The rapid spanning tree protocol status.
                  type: boolean
                stickyMacAllowList:
                  description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                  items:
                    type: string
                  type: array
                stickyMacAllowListLimit:
                  description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                  type: integer
                stormControlEnabled:
                  description: The storm control status of the switch port.
                  type: boolean
                stpGuard:
                  description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                  enum:
                    - bpdu guard
                    - disabled
                    - loop guard
                    - root guard
                  type: string
                tags:
                  description: The list of tags of the switch port.
                  items:
                    type: string
                  type: array
                type:
                  description: The type of the switch port ('trunk' or 'access').
                  enum:
                    - access
                    - trunk
                  type: string
                udld:
                  description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                  enum:
                    - Alert only
                    - Enforce
                  type: string
                vlan:
                  description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
                  type: integer
                voiceVlan:
                  description: The voice VLAN of the switch port. Only applicable to access ports.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyNumber: 2
                    accessPolicyType: Sticky MAC allow list
                    adaptivePolicyGroupId: "123"
                    allowedVlans: 1,3,5-10
                    daiTrusted: false
                    enabled: true
                    flexibleStackingEnabled: true
                    isolationEnabled: false
                    linkNegotiation: Auto negotiate
                    linkNegotiationCapabilities:
                      - Auto negotiate
                      - 1 Gigabit full duplex (auto)
                    macAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    name: My switch port
                    peerSgtCapable: false
                    poeEnabled: true
                    portId: "1"
                    portScheduleId: "1234"
                    profile:
                      enabled: false
                      id: "1284392014819"
                      iname: iname
                    rstpEnabled: true
                    stickyMacAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    stickyMacAllowListLimit: 5
                    stormControlEnabled: true
                    stpGuard: disabled
                    tags:
                      - tag1
                      - tag2
                    type: access
                    udld: Alert only
                    vlan: 10
                    voiceVlan: 20
              schema:
                properties:
                  accessPolicyNumber:
                    description: The number of a custom access policy to configure on the switch port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                    type: integer
                  accessPolicyType:
                    description: The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                    enum:
                      - Custom access policy
                      - MAC allow list
                      - Open
                      - Sticky MAC allow list
                    type: string
                  adaptivePolicyGroupId:
                    description: The adaptive policy group ID that will be used to tag traffic through this switch port. This ID must pre-exist during the configuration, else needs to be created using adaptivePolicy/groups API. Cannot be applied to a port on a switch bound to profile.
                    type: string
                  allowedVlans:
                    description: The VLANs allowed on the switch port. Only applicable to trunk ports.
                    type: string
                  daiTrusted:
                    description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                    type: boolean
                  enabled:
                    description: The status of the switch port.
                    type: boolean
                  flexibleStackingEnabled:
                    description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                    type: boolean
                  isolationEnabled:
                    description: The isolation status of the switch port.
                    type: boolean
                  linkNegotiation:
                    description: The link speed for the switch port.
                    type: string
                  linkNegotiationCapabilities:
                    description: Available link speeds for the switch port.
                    items:
                      type: string
                    type: array
                  macAllowList:
                    description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of the switch port.
                    type: string
                  peerSgtCapable:
                    description: If true, Peer SGT is enabled for traffic through this switch port. Applicable to trunk port only, not access port. Cannot be applied to a port on a switch bound to profile.
                    type: boolean
                  poeEnabled:
                    description: The PoE status of the switch port.
                    type: boolean
                  portId:
                    description: The identifier of the switch port.
                    type: string
                  portScheduleId:
                    description: The ID of the port schedule. A value of null will clear the port schedule.
                    type: string
                  profile:
                    description: Profile attributes
                    properties:
                      enabled:
                        description: When enabled, override this port's configuration with a port profile.
                        type: boolean
                      id:
                        description: When enabled, the ID of the port profile used to override the port's configuration.
                        type: string
                      iname:
                        description: When enabled, the IName of the profile.
                        type: string
                    type: object
                  rstpEnabled:
                    description: The rapid spanning tree protocol status.
                    type: boolean
                  stickyMacAllowList:
                    description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    items:
                      type: string
                    type: array
                  stickyMacAllowListLimit:
                    description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    type: integer
                  stormControlEnabled:
                    description: The storm control status of the switch port.
                    type: boolean
                  stpGuard:
                    description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                    enum:
                      - bpdu guard
                      - disabled
                      - loop guard
                      - root guard
                    type: string
                  tags:
                    description: The list of tags of the switch port.
                    items:
                      type: string
                    type: array
                  type:
                    description: The type of the switch port ('trunk' or 'access').
                    enum:
                      - access
                      - trunk
                    type: string
                  udld:
                    description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                    enum:
                      - Alert only
                      - Enforce
                    type: string
                  vlan:
                    description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
                    type: integer
                  voiceVlan:
                    description: The voice VLAN of the switch port. Only applicable to access ports.
                    type: integer
                type: object
          description: Successful operation
      summary: Update a switch port
      tags:
        - switch
        - configure
        - ports
  "/devices/{serial}/switch/routing/interfaces":
    get:
      description: List layer 3 interfaces for a switch. Those for a stack may be found under switch stack routing.
      operationId: getDeviceSwitchRoutingInterfaces
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - defaultGateway: 192.168.1.1
                      interfaceId: "1234"
                      interfaceIp: 192.168.1.2
                      ipv6:
                        address: 1:2:3:4::1
                        assignmentMode: static
                        gateway: 1:2:3:4::2
                        prefix: 1:2:3:4::/48
                      multicastRouting: disabled
                      name: L3 interface
                      ospfSettings:
                        area: "0"
                        cost: 1
                        isPassiveEnabled: true
                      ospfV3:
                        area: "1"
                        cost: 2
                        isPassiveEnabled: true
                      subnet: 192.168.1.0/24
                      vlanId: 100
              schema:
                items:
                  properties:
                    defaultGateway:
                      description: IPv4 default gateway
                      type: string
                    interfaceId:
                      description: The id
                      type: string
                    interfaceIp:
                      description: IPv4 address
                      type: string
                    ipv6:
                      description: IPv6 addressing
                      properties:
                        address:
                          description: IPv6 address
                          type: string
                        assignmentMode:
                          description: Assignment mode
                          type: string
                        gateway:
                          description: IPv6 gateway
                          type: string
                        prefix:
                          description: IPv6 subnet
                          type: string
                      type: object
                    multicastRouting:
                      description: Multicast routing status
                      type: string
                    name:
                      description: The name
                      type: string
                    ospfSettings:
                      description: IPv4 OSPF Settings
                      properties:
                        area:
                          description: Area id
                          type: string
                        cost:
                          description: OSPF Cost
                          type: integer
                        isPassiveEnabled:
                          description: Disable sending Hello packets on this interface's IPv4 area
                          type: boolean
                      type: object
                    ospfV3:
                      description: IPv6 OSPF Settings
                      properties:
                        area:
                          description: Area id
                          type: string
                        cost:
                          description: OSPF Cost
                          type: integer
                        isPassiveEnabled:
                          description: Disable sending Hello packets on this interface's IPv6 area
                          type: boolean
                      type: object
                    subnet:
                      description: IPv4 subnet
                      type: string
                    vlanId:
                      description: VLAN id
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 interfaces for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
    post:
      description: Create a layer 3 interface for a switch
      operationId: createDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createDeviceSwitchRoutingInterfaceCreatedeviceswitchroutinginterface"
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultGateway: 192.168.1.1
                    interfaceId: "1234"
                    interfaceIp: 192.168.1.2
                    ipv6:
                      address: 1:2:3:4::1
                      assignmentMode: static
                      gateway: 1:2:3:4::2
                      prefix: 1:2:3:4::/48
                    multicastRouting: disabled
                    name: L3 interface
                    ospfSettings:
                      area: "0"
                      cost: 1
                      isPassiveEnabled: true
                    ospfV3:
                      area: "1"
                      cost: 2
                      isPassiveEnabled: true
                    subnet: 192.168.1.0/24
                    vlanId: 100
              schema:
                properties:
                  defaultGateway:
                    description: IPv4 default gateway
                    type: string
                  interfaceId:
                    description: The id
                    type: string
                  interfaceIp:
                    description: IPv4 address
                    type: string
                  ipv6:
                    description: IPv6 addressing
                    properties:
                      address:
                        description: IPv6 address
                        type: string
                      assignmentMode:
                        description: Assignment mode
                        type: string
                      gateway:
                        description: IPv6 gateway
                        type: string
                      prefix:
                        description: IPv6 subnet
                        type: string
                    type: object
                  multicastRouting:
                    description: Multicast routing status
                    type: string
                  name:
                    description: The name
                    type: string
                  ospfSettings:
                    description: IPv4 OSPF Settings
                    properties:
                      area:
                        description: Area id
                        type: string
                      cost:
                        description: OSPF Cost
                        type: integer
                      isPassiveEnabled:
                        description: Disable sending Hello packets on this interface's IPv4 area
                        type: boolean
                    type: object
                  ospfV3:
                    description: IPv6 OSPF Settings
                    properties:
                      area:
                        description: Area id
                        type: string
                      cost:
                        description: OSPF Cost
                        type: integer
                      isPassiveEnabled:
                        description: Disable sending Hello packets on this interface's IPv6 area
                        type: boolean
                    type: object
                  subnet:
                    description: IPv4 subnet
                    type: string
                  vlanId:
                    description: VLAN id
                    type: integer
                type: object
          description: Successful operation
      summary: Create a layer 3 interface for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
  "/devices/{serial}/switch/routing/interfaces/{interfaceId}":
    delete:
      description: Delete a layer 3 interface from the switch
      operationId: deleteDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a layer 3 interface from the switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
    get:
      description: Return a layer 3 interface for a switch
      operationId: getDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultGateway: 192.168.1.1
                    interfaceId: "1234"
                    interfaceIp: 192.168.1.2
                    ipv6:
                      address: 1:2:3:4::1
                      assignmentMode: static
                      gateway: 1:2:3:4::2
                      prefix: 1:2:3:4::/48
                    multicastRouting: disabled
                    name: L3 interface
                    ospfSettings:
                      area: "0"
                      cost: 1
                      isPassiveEnabled: true
                    ospfV3:
                      area: "1"
                      cost: 2
                      isPassiveEnabled: true
                    subnet: 192.168.1.0/24
                    vlanId: 100
              schema:
                properties:
                  defaultGateway:
                    description: IPv4 default gateway
                    type: string
                  interfaceId:
                    description: The id
                    type: string
                  interfaceIp:
                    description: IPv4 address
                    type: string
                  ipv6:
                    description: IPv6 addressing
                    properties:
                      address:
                        description: IPv6 address
                        type: string
                      assignmentMode:
                        description: Assignment mode
                        type: string
                      gateway:
                        description: IPv6 gateway
                        type: string
                      prefix:
                        description: IPv6 subnet
                        type: string
                    type: object
                  multicastRouting:
                    description: Multicast routing status
                    type: string
                  name:
                    description: The name
                    type: string
                  ospfSettings:
                    description: IPv4 OSPF Settings
                    properties:
                      area:
                        description: Area id
                        type: string
                      cost:
                        description: OSPF Cost
                        type: integer
                      isPassiveEnabled:
                        description: Disable sending Hello packets on this interface's IPv4 area
                        type: boolean
                    type: object
                  ospfV3:
                    description: IPv6 OSPF Settings
                    properties:
                      area:
                        description: Area id
                        type: string
                      cost:
                        description: OSPF Cost
                        type: integer
                      isPassiveEnabled:
                        description: Disable sending Hello packets on this interface's IPv6 area
                        type: boolean
                    type: object
                  subnet:
                    description: IPv4 subnet
                    type: string
                  vlanId:
                    description: VLAN id
                    type: integer
                type: object
          description: Successful operation
      summary: Return a layer 3 interface for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
    put:
      description: Update a layer 3 interface for a switch
      operationId: updateDeviceSwitchRoutingInterface
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createDeviceSwitchRoutingInterfaceCreatedeviceswitchroutinginterface"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultGateway: 192.168.1.1
                    interfaceId: "1234"
                    interfaceIp: 192.168.1.2
                    ipv6:
                      address: 1:2:3:4::1
                      assignmentMode: static
                      gateway: 1:2:3:4::2
                      prefix: 1:2:3:4::/48
                    multicastRouting: disabled
                    name: L3 interface
                    ospfSettings:
                      area: "0"
                      cost: 1
                      isPassiveEnabled: true
                    ospfV3:
                      area: "1"
                      cost: 2
                      isPassiveEnabled: true
                    subnet: 192.168.1.0/24
                    vlanId: 100
              schema:
                properties:
                  defaultGateway:
                    description: IPv4 default gateway
                    type: string
                  interfaceId:
                    description: The id
                    type: string
                  interfaceIp:
                    description: IPv4 address
                    type: string
                  ipv6:
                    description: IPv6 addressing
                    properties:
                      address:
                        description: IPv6 address
                        type: string
                      assignmentMode:
                        description: Assignment mode
                        type: string
                      gateway:
                        description: IPv6 gateway
                        type: string
                      prefix:
                        description: IPv6 subnet
                        type: string
                    type: object
                  multicastRouting:
                    description: Multicast routing status
                    type: string
                  name:
                    description: The name
                    type: string
                  ospfSettings:
                    description: IPv4 OSPF Settings
                    properties:
                      area:
                        description: Area id
                        type: string
                      cost:
                        description: OSPF Cost
                        type: integer
                      isPassiveEnabled:
                        description: Disable sending Hello packets on this interface's IPv4 area
                        type: boolean
                    type: object
                  ospfV3:
                    description: IPv6 OSPF Settings
                    properties:
                      area:
                        description: Area id
                        type: string
                      cost:
                        description: OSPF Cost
                        type: integer
                      isPassiveEnabled:
                        description: Disable sending Hello packets on this interface's IPv6 area
                        type: boolean
                    type: object
                  subnet:
                    description: IPv4 subnet
                    type: string
                  vlanId:
                    description: VLAN id
                    type: integer
                type: object
          description: Successful operation
      summary: Update a layer 3 interface for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
  "/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp":
    get:
      description: Return a layer 3 interface DHCP configuration for a switch
      operationId: getDeviceSwitchRoutingInterfaceDhcp
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bootFileName: home_boot_file
                    bootNextServer: 1.2.3.4
                    bootOptionsEnabled: true
                    dhcpLeaseTime: 1 day
                    dhcpMode: dhcpServer
                    dhcpOptions:
                      - code: "5"
                        type: text
                        value: five
                    dnsCustomNameservers:
                      - 8.8.8.8, 8.8.4.4
                    dnsNameserversOption: custom
                    fixedIpAssignments:
                      - ip: 192.168.1.12
                        mac: 22:33:44:55:66:77
                        name: Cisco Meraki valued client
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.10
                        start: 192.168.1.1
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 interface DHCP configuration for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
        - dhcp
    put:
      description: Update a layer 3 interface DHCP configuration for a switch
      operationId: updateDeviceSwitchRoutingInterfaceDhcp
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                bootFileName: home_boot_file
                bootNextServer: 1.2.3.4
                bootOptionsEnabled: true
                dhcpLeaseTime: 1 day
                dhcpMode: dhcpServer
                dhcpOptions:
                  - code: "5"
                    type: text
                    value: five
                dnsCustomNameservers:
                  - 8.8.8.8, 8.8.4.4
                dnsNameserversOption: custom
                fixedIpAssignments:
                  - ip: 192.168.1.12
                    mac: 22:33:44:55:66:77
                    name: Cisco Meraki valued client
                reservedIpRanges:
                  - comment: A reserved IP range
                    end: 192.168.1.10
                    start: 192.168.1.1
              properties:
                bootFileName:
                  description: The PXE boot server filename for the DHCP server running on the switch interface
                  type: string
                bootNextServer:
                  description: The PXE boot server IP for the DHCP server running on the switch interface
                  type: string
                bootOptionsEnabled:
                  description: Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch interface
                  type: boolean
                dhcpLeaseTime:
                  description: The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
                  enum:
                    - 1 day
                    - 1 hour
                    - 1 week
                    - 12 hours
                    - 30 minutes
                    - 4 hours
                  type: string
                dhcpMode:
                  description: The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
                  enum:
                    - dhcpDisabled
                    - dhcpRelay
                    - dhcpServer
                  type: string
                dhcpOptions:
                  description: Array of DHCP options consisting of code, type and value for the DHCP server running on the switch interface
                  items:
                    properties:
                      code:
                        description: The code for DHCP option which should be from 2 to 254
                        type: string
                      type:
                        description: The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
                        enum:
                          - hex
                          - integer
                          - ip
                          - text
                        type: string
                      value:
                        description: The value of the DHCP option
                        type: string
                    required:
                      - code
                      - type
                      - value
                    type: object
                  type: array
                dhcpRelayServerIps:
                  description: The DHCP relay server IPs to which DHCP packets would get relayed for the switch interface
                  items:
                    type: string
                  type: array
                dnsCustomNameservers:
                  description: The DHCP name server IPs when DHCP name server option is 'custom'
                  items:
                    type: string
                  type: array
                dnsNameserversOption:
                  description: The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')
                  enum:
                    - custom
                    - googlePublicDns
                    - openDns
                  type: string
                fixedIpAssignments:
                  description: Array of DHCP fixed IP assignments for the DHCP server running on the switch interface
                  items:
                    properties:
                      ip:
                        description: The IP address of the client which has fixed IP address assigned to it
                        type: string
                      mac:
                        description: The MAC address of the client which has fixed IP address
                        type: string
                      name:
                        description: The name of the client which has fixed IP address
                        type: string
                    required:
                      - name
                      - mac
                      - ip
                    type: object
                  type: array
                reservedIpRanges:
                  description: Array of DHCP reserved IP assignments for the DHCP server running on the switch interface
                  items:
                    properties:
                      comment:
                        description: The comment for the reserved IP range
                        type: string
                      end:
                        description: The ending IP address of the reserved IP range
                        type: string
                      start:
                        description: The starting IP address of the reserved IP range
                        type: string
                    required:
                      - start
                      - end
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bootFileName: home_boot_file
                    bootNextServer: 1.2.3.4
                    bootOptionsEnabled: true
                    dhcpLeaseTime: 1 day
                    dhcpMode: dhcpServer
                    dhcpOptions:
                      - code: "5"
                        type: text
                        value: five
                    dnsCustomNameservers:
                      - 8.8.8.8, 8.8.4.4
                    dnsNameserversOption: custom
                    fixedIpAssignments:
                      - ip: 192.168.1.12
                        mac: 22:33:44:55:66:77
                        name: Cisco Meraki valued client
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.10
                        start: 192.168.1.1
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 interface DHCP configuration for a switch
      tags:
        - switch
        - configure
        - routing
        - interfaces
        - dhcp
  "/devices/{serial}/switch/routing/staticRoutes":
    get:
      description: List layer 3 static routes for a switch
      operationId: getDeviceSwitchRoutingStaticRoutes
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - advertiseViaOspfEnabled: false
                      name: My route
                      nextHopIp: 1.2.3.4
                      preferOverOspfRoutesEnabled: false
                      staticRouteId: "1234"
                      subnet: 192.168.1.0/24
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 static routes for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
    post:
      description: Create a layer 3 static route for a switch
      operationId: createDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createDeviceSwitchRoutingStaticRouteCreatedeviceswitchroutingstaticroute"
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertiseViaOspfEnabled: false
                    name: My route
                    nextHopIp: 1.2.3.4
                    preferOverOspfRoutesEnabled: false
                    staticRouteId: "1234"
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Create a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
  "/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}":
    delete:
      description: Delete a layer 3 static route for a switch
      operationId: deleteDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
    get:
      description: Return a layer 3 static route for a switch
      operationId: getDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertiseViaOspfEnabled: false
                    name: My route
                    nextHopIp: 1.2.3.4
                    preferOverOspfRoutesEnabled: false
                    staticRouteId: "1234"
                    subnet: 192.168.1.0/24
              schema:
                properties:
                  advertiseViaOspfEnabled:
                    description: Option to advertise static routes via OSPF
                    type: boolean
                  name:
                    description: The name or description of the layer 3 static route
                    type: string
                  nextHopIp:
                    description: " The IP address of the router to which traffic for this destination network should be sent"
                    type: string
                  preferOverOspfRoutesEnabled:
                    description: Option to prefer static routes over OSPF routes
                    type: boolean
                  staticRouteId:
                    description: The identifier of a layer 3 static route
                    type: string
                  subnet:
                    description: The IP address of the subnetwork specified in CIDR notation (ex. 1.2.3.0/24)
                    type: string
                required:
                  - subnet
                  - nextHopIp
                type: object
          description: Successful operation
      summary: Return a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
    put:
      description: Update a layer 3 static route for a switch
      operationId: updateDeviceSwitchRoutingStaticRoute
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateDeviceSwitchRoutingStaticRouteUpdatedeviceswitchroutingstaticroute"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertiseViaOspfEnabled: false
                    name: My route
                    nextHopIp: 1.2.3.4
                    preferOverOspfRoutesEnabled: false
                    staticRouteId: "1234"
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 static route for a switch
      tags:
        - switch
        - configure
        - routing
        - staticRoutes
  "/devices/{serial}/switch/warmSpare":
    get:
      description: Return warm spare configuration for a switch
      operationId: getDeviceSwitchWarmSpare
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    primarySerial: Q234-ABCD-0001
                    spareSerial: Q234-ABCD-0002
              schema:
                type: object
          description: Successful operation
      summary: Return warm spare configuration for a switch
      tags:
        - switch
        - configure
        - warmSpare
    put:
      description: Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.
      operationId: updateDeviceSwitchWarmSpare
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                spareSerial: Q234-ABCD-0002
              properties:
                enabled:
                  description: Enable or disable warm spare for a switch
                  type: boolean
                spareSerial:
                  description: Serial number of the warm spare switch
                  type: string
              required:
                - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    primarySerial: Q234-ABCD-0001
                    spareSerial: Q234-ABCD-0002
              schema:
                type: object
          description: Successful operation
      summary: Update warm spare configuration for a switch
      tags:
        - switch
        - configure
        - warmSpare
  "/devices/{serial}/wireless/bluetooth/settings":
    get:
      description: Return the bluetooth settings for a wireless device
      operationId: getDeviceWirelessBluetoothSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    major: 13
                    minor: 125
                    uuid: 00000000-0000-0000-000-000000000000
              schema:
                properties:
                  major:
                    description: Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                    type: integer
                  minor:
                    description: Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                    type: integer
                  uuid:
                    description: Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                    type: string
                type: object
          description: Successful operation
      summary: Return the bluetooth settings for a wireless device
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
    put:
      description: Update the bluetooth settings for a wireless device
      operationId: updateDeviceWirelessBluetoothSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                major: 13
                minor: 125
                uuid: 00000000-0000-0000-000-000000000000
              properties:
                major:
                  description: Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                  type: integer
                minor:
                  description: Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                  type: integer
                uuid:
                  description: Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    major: 13
                    minor: 125
                    uuid: 00000000-0000-0000-000-000000000000
              schema:
                properties:
                  major:
                    description: Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                    type: integer
                  minor:
                    description: Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                    type: integer
                  uuid:
                    description: Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value.
                    type: string
                type: object
          description: Successful operation
      summary: Update the bluetooth settings for a wireless device
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
  "/devices/{serial}/wireless/connectionStats":
    get:
      description: Aggregated connectivity info for a given AP on this network
      operationId: getDeviceWirelessConnectionStats
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    connectionStats:
                      assoc: 0
                      auth: 1
                      dhcp: 0
                      dns: 0
                      success: 43
                    serial: Q234-ABCD-5678
              schema:
                properties:
                  connectionStats:
                    description: The connection stats of the device
                    properties:
                      assoc:
                        description: The number of failed association attempts
                        type: integer
                      auth:
                        description: The number of failed authentication attempts
                        type: integer
                      dhcp:
                        description: The number of failed DHCP attempts
                        type: integer
                      dns:
                        description: The number of failed DNS attempts
                        type: integer
                      success:
                        description: The number of successful connection attempts
                        type: integer
                    type: object
                  serial:
                    description: The serial number for the device
                    type: string
                type: object
          description: Successful operation
      summary: Aggregated connectivity info for a given AP on this network
      tags:
        - wireless
        - monitor
        - connectionStats
  "/devices/{serial}/wireless/latencyStats":
    get:
      description: Aggregated latency info for a given AP on this network
      operationId: getDeviceWirelessLatencyStats
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
        - description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          in: query
          name: fields
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    latencyStats:
                      backgroundTraffic:
                        avg: 606.52
                        rawDistribution:
                          "0": 1234
                          "1": 2345
                          "2": 3456
                          "4": 4567
                          "8": 5678
                          "16": 6789
                          "32": 7890
                          "64": 8901
                          "128": 9012
                          "256": 83
                          "512": 1234
                          "1024": 2345
                          "2048": 9999
                      bestEffortTraffic: same shape as backgroundTraffic
                      videoTraffic: same shape as backgroundTraffic
                      voiceTraffic: same shape as backgroundTraffic
                    serial: Q2JC-2MJM-FHRD
              schema:
                type: object
          description: Successful operation
      summary: Aggregated latency info for a given AP on this network
      tags:
        - wireless
        - monitor
        - latencyStats
  "/devices/{serial}/wireless/radio/settings":
    get:
      description: Return the radio settings of a device
      operationId: getDeviceWirelessRadioSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    fiveGhzSettings:
                      channel: 149
                      channelWidth: 20
                      targetPower: 15
                    rfProfileId: "1234"
                    serial: Q234-ABCD-5678
                    twoFourGhzSettings:
                      channel: 11
                      targetPower: 21
              schema:
                type: object
          description: Successful operation
      summary: Return the radio settings of a device
      tags:
        - wireless
        - configure
        - radio
        - settings
    put:
      description: Update the radio settings of a device
      operationId: updateDeviceWirelessRadioSettings
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                fiveGhzSettings:
                  channel: 149
                  channelWidth: 20
                  targetPower: 15
                rfProfileId: "1234"
                twoFourGhzSettings:
                  channel: 11
                  targetPower: 21
              properties:
                fiveGhzSettings:
                  description: Manual radio settings for 5 GHz.
                  properties:
                    channel:
                      description: Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel.
                      enum:
                        - 36
                        - 40
                        - 44
                        - 48
                        - 52
                        - 56
                        - 60
                        - 64
                        - 100
                        - 104
                        - 108
                        - 112
                        - 116
                        - 120
                        - 124
                        - 128
                        - 132
                        - 136
                        - 140
                        - 144
                        - 149
                        - 153
                        - 157
                        - 161
                        - 165
                        - 169
                        - 173
                        - 177
                      type: integer
                    channelWidth:
                      description: Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width.
                      enum:
                        - 0
                        - 20
                        - 40
                        - 80
                        - 160
                      type: integer
                    targetPower:
                      description: Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range.
                      type: integer
                  type: object
                rfProfileId:
                  description: The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power).
                  type: string
                twoFourGhzSettings:
                  description: Manual radio settings for 2.4 GHz.
                  properties:
                    channel:
                      description: Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel.
                      enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                        - 8
                        - 9
                        - 10
                        - 11
                        - 12
                        - 13
                        - 14
                      type: integer
                    targetPower:
                      description: Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range.
                      type: integer
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    fiveGhzSettings:
                      channel: 149
                      channelWidth: 20
                      targetPower: 15
                    rfProfileId: "1234"
                    serial: Q234-ABCD-5678
                    twoFourGhzSettings:
                      channel: 11
                      targetPower: 21
              schema:
                type: object
          description: Successful operation
      summary: Update the radio settings of a device
      tags:
        - wireless
        - configure
        - radio
        - settings
  "/devices/{serial}/wireless/status":
    get:
      description: Return the SSID statuses of an access point
      operationId: getDeviceWirelessStatus
      parameters:
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    basicServiceSets:
                      - band: 2.4 GHz
                        broadcasting: true
                        bssid: 8A:15:04:00:00:00
                        channel: 11
                        channelWidth: 20 MHz
                        enabled: true
                        power: 18 dBm
                        ssidName: My SSID
                        ssidNumber: 0
                        visible: true
                      - band: 5 GHz
                        broadcasting: true
                        bssid: 8A:15:14:00:00:00
                        channel: 64
                        channelWidth: 40 MHz
                        enabled: true
                        power: 18 dBm
                        ssidName: My SSID
                        ssidNumber: 0
                        visible: true
                      - band: 6 GHz
                        broadcasting: true
                        bssid: 8A:15:24:00:00:00
                        channel: 145
                        channelWidth: 80 MHz
                        enabled: true
                        power: 18 dBm
                        ssidName: My SSID
                        ssidNumber: 0
                        visible: true
              schema:
                type: object
          description: Successful operation
      summary: Return the SSID statuses of an access point
      tags:
        - wireless
        - monitor
        - status
  "/networks/{networkId}":
    delete:
      description: Delete a network
      operationId: deleteNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a network
      tags:
        - networks
        - configure
    get:
      description: Return a network
      operationId: getNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enrollmentString: my-enrollment-string
                    id: N_24329156
                    isBoundToConfigTemplate: false
                    name: Main Office
                    notes: Additional description of the network
                    organizationId: "2930418"
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    tags:
                      - tag1
                      - tag2
                    timeZone: America/Los_Angeles
                    url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                properties:
                  enrollmentString:
                    description: Enrollment string for the network
                    type: string
                  id:
                    description: Network ID
                    type: string
                  isBoundToConfigTemplate:
                    description: If the network is bound to a config template
                    type: boolean
                  name:
                    description: Network name
                    type: string
                  notes:
                    description: Notes for the network
                    type: string
                  organizationId:
                    description: Organization ID
                    type: string
                  productTypes:
                    description: List of the product types that the network supports
                    items:
                      type: string
                    type: array
                  tags:
                    description: Network tags
                    items:
                      type: string
                    type: array
                  timeZone:
                    description: Timezone of the network
                    type: string
                  url:
                    description: URL to the network Dashboard UI
                    type: string
                type: object
          description: Successful operation
      summary: Return a network
      tags:
        - networks
        - configure
    put:
      description: Update a network
      operationId: updateNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enrollmentString: my-enrollment-string
                name: Main Office
                notes: Additional description of the network
                tags:
                  - tag1
                  - tag2
                timeZone: America/Los_Angeles
              properties:
                enrollmentString:
                  description: A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break.
                  type: string
                name:
                  description: The name of the network
                  type: string
                notes:
                  description: Add any notes or additional information about this network here.
                  type: string
                tags:
                  description: A list of tags to be applied to the network
                  items:
                    type: string
                  type: array
                timeZone:
                  description: The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enrollmentString: my-enrollment-string
                    id: N_24329156
                    isBoundToConfigTemplate: false
                    name: Main Office
                    notes: Additional description of the network
                    organizationId: "2930418"
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    tags:
                      - tag1
                      - tag2
                    timeZone: America/Los_Angeles
                    url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                properties:
                  enrollmentString:
                    description: Enrollment string for the network
                    type: string
                  id:
                    description: Network ID
                    type: string
                  isBoundToConfigTemplate:
                    description: If the network is bound to a config template
                    type: boolean
                  name:
                    description: Network name
                    type: string
                  notes:
                    description: Notes for the network
                    type: string
                  organizationId:
                    description: Organization ID
                    type: string
                  productTypes:
                    description: List of the product types that the network supports
                    items:
                      type: string
                    type: array
                  tags:
                    description: Network tags
                    items:
                      type: string
                    type: array
                  timeZone:
                    description: Timezone of the network
                    type: string
                  url:
                    description: URL to the network Dashboard UI
                    type: string
                type: object
          description: Successful operation
      summary: Update a network
      tags:
        - networks
        - configure
  "/networks/{networkId}/alerts/history":
    get:
      description: Return the alert history for this network
      operationId: getNetworkAlertsHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - alertType: Settings changed
                      alertTypeId: settings_changed
                      destinations:
                        email:
                          sentAt: 2022-07-11T22:40:34Z
                        push:
                          sentAt: 2022-07-11T22:40:34Z
                        sms:
                          sentAt: 2022-07-11T22:40:34Z
                        webhook:
                          sentAt: 2022-07-11T22:40:34Z
                      device:
                        serial: Q2KN-6CN7-EC4X
                      occurredAt: 2022-07-11T22:35:34Z
              schema:
                items:
                  properties:
                    alertData:
                      description: relevant data about the event that caused the alert
                      properties: {}
                      type: object
                    alertType:
                      description: user friendly alert type
                      type: string
                    alertTypeId:
                      description: type of alert
                      type: string
                    destinations:
                      description: the destinations this alert is configured to be delivered to
                      properties:
                        email:
                          description: email destinations for this alert
                          properties:
                            sentAt:
                              description: time when the alert was sent to the user(s) for this channel
                              type: string
                          type: object
                        push:
                          description: push destinations for this alert
                          properties:
                            sentAt:
                              description: time when the alert was sent to the user(s) for this channel
                              type: string
                          type: object
                        sms:
                          description: sms destinations for this alert
                          properties:
                            sentAt:
                              description: time when the alert was sent to the user(s) for this channel
                              type: string
                          type: object
                        webhook:
                          description: webhook destinations for this alert
                          properties:
                            sentAt:
                              description: time when the alert was sent to the user(s) for this channel
                              type: string
                          type: object
                      type: object
                    device:
                      description: info related to the device that caused the alert
                      properties:
                        serial:
                          description: device serial
                          type: string
                      type: object
                    occurredAt:
                      description: time when the event occurred
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the alert history for this network
      tags:
        - networks
        - monitor
        - alerts
        - history
  "/networks/{networkId}/alerts/settings":
    get:
      description: Return the alert configuration for this network
      operationId: getNetworkAlertsSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    alerts:
                      - alertDestinations:
                          allAdmins: false
                          emails:
                            - miles@meraki.com
                          httpServerIds:
                            - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                          snmp: false
                        enabled: true
                        filters:
                          timeout: 60
                        type: gatewayDown
                    defaultDestinations:
                      allAdmins: true
                      emails:
                        - miles@meraki.com
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                      snmp: true
              schema:
                type: object
          description: Successful operation
      summary: Return the alert configuration for this network
      tags:
        - networks
        - configure
        - alerts
        - settings
    put:
      description: Update the alert configuration for this network
      operationId: updateNetworkAlertsSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                alerts:
                  - alertDestinations:
                      allAdmins: false
                      emails:
                        - miles@meraki.com
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                      snmp: false
                    enabled: true
                    filters:
                      timeout: 60
                    type: gatewayDown
                defaultDestinations:
                  allAdmins: true
                  emails:
                    - miles@meraki.com
                  httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                  snmp: true
              properties:
                alerts:
                  description: Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.
                  items:
                    properties:
                      alertDestinations:
                        description: A hash of destinations for this specific alert
                        properties:
                          allAdmins:
                            description: If true, then all network admins will receive emails for this alert
                            type: boolean
                          emails:
                            description: A list of emails that will receive information about the alert
                            items:
                              type: string
                            type: array
                          httpServerIds:
                            description: A list of HTTP server IDs to send a Webhook to for this alert
                            items:
                              type: string
                            type: array
                          snmp:
                            description: If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network
                            type: boolean
                        type: object
                      enabled:
                        description: A boolean depicting if the alert is turned on or off
                        type: boolean
                      filters:
                        description: A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.
                        properties: {}
                        type: object
                      type:
                        description: The type of alert
                        type: string
                    required:
                      - type
                    type: object
                  type: array
                defaultDestinations:
                  description: The network-wide destinations for all alerts on the network.
                  properties:
                    allAdmins:
                      description: If true, then all network admins will receive emails.
                      type: boolean
                    emails:
                      description: A list of emails that will recieve the alert(s).
                      items:
                        type: string
                      type: array
                    httpServerIds:
                      description: A list of HTTP server IDs to send a Webhook to
                      items:
                        type: string
                      type: array
                    snmp:
                      description: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.
                      type: boolean
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    alerts:
                      - alertDestinations:
                          allAdmins: false
                          emails:
                            - miles@meraki.com
                          httpServerIds:
                            - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                          snmp: false
                        enabled: true
                        filters:
                          timeout: 60
                        type: gatewayDown
                    defaultDestinations:
                      allAdmins: true
                      emails:
                        - miles@meraki.com
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                      snmp: true
              schema:
                type: object
          description: Successful operation
      summary: Update the alert configuration for this network
      tags:
        - networks
        - configure
        - alerts
        - settings
  "/networks/{networkId}/appliance/clients/{clientId}/security/events":
    get:
      description: List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkApplianceClientSecurityEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 791 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
          in: query
          name: sortOrder
          schema:
            enum:
              - ascending
              - descending
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - action: Blocked
                      canonicalName: PUA.Win.Dropper.Kraddare::1201
                      clientIp: 192.168.128.2
                      clientMac: 10:dd:b1:eb:88:f8
                      clientName: COMPUTER-M-V78J
                      destIp: 119.192.233.48
                      destinationPort: 80
                      disposition: Malicious
                      eventType: File Scanned
                      fileHash: 3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                      fileSizeBytes: 193688
                      fileType: MS_EXE
                      protocol: http
                      srcIp: 192.168.128.2
                      ts: 2020-03-20T16:00:10.144989Z
                      uri: http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                    - blocked: true
                      classification: "4"
                      clientMac: A1:B2:C3:D4:E5:F6
                      destIp: 10.20.30.40:80
                      deviceMac: 00:18:0a:01:02:03
                      eventType: IDS Alert
                      message: SERVER-WEBAPP JBoss JMX console access attempt
                      priority: "2"
                      protocol: tcp/ip
                      ruleId: meraki:intrusion/snort/GID/1/SID/26267
                      sigSource: ""
                      signature: 1:21516:9
                      srcIp: 1.2.3.4:34195
                      ts: 2018-02-11T00:00:00.090210Z
                    - blocked: true
                      classification: "33"
                      clientMac: A1:B2:C3:D4:E5:F6
                      destIp: 10.20.30.40:80
                      deviceMac: 00:18:0a:01:02:03
                      eventType: IDS Alert
                      message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                      priority: "1"
                      protocol: tcp/ip
                      ruleId: meraki:intrusion/snort/GID/1/SID/26267
                      sigSource: ""
                      signature: 1:25975:2
                      srcIp: 1.2.3.4:56023
                      ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the security events for a client
      tags:
        - appliance
        - monitor
        - clients
        - security
        - events
  "/networks/{networkId}/appliance/connectivityMonitoringDestinations":
    get:
      description: Return the connectivity testing destinations for an MX network
      operationId: getNetworkApplianceConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    destinations:
                      - default: false
                        description: Google
                        ip: 8.8.8.8
                      - default: true
                        description: test description
                        ip: 1.23.45.67
                      - default: false
                        description: null
                        ip: 9.8.7.6
              schema:
                type: object
          description: Successful operation
      summary: Return the connectivity testing destinations for an MX network
      tags:
        - appliance
        - configure
        - connectivityMonitoringDestinations
    put:
      description: Update the connectivity testing destinations for an MX network
      operationId: updateNetworkApplianceConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                destinations:
                  - default: false
                    description: Google
                    ip: 8.8.8.8
                  - default: true
                    description: test description
                    ip: 1.23.45.67
                  - ip: 9.8.7.6
              properties:
                destinations:
                  description: The list of connectivity monitoring destinations
                  items:
                    properties:
                      default:
                        description: Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed
                        type: boolean
                      description:
                        description: Description of the testing destination. Optional, defaults to null
                        type: string
                      ip:
                        description: The IP address to test connectivity with
                        type: string
                    required:
                      - ip
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    destinations:
                      - default: false
                        description: Google
                        ip: 8.8.8.8
                      - default: true
                        description: test description
                        ip: 1.23.45.67
                      - default: false
                        description: null
                        ip: 9.8.7.6
              schema:
                type: object
          description: Successful operation
      summary: Update the connectivity testing destinations for an MX network
      tags:
        - appliance
        - configure
        - connectivityMonitoringDestinations
  "/networks/{networkId}/appliance/contentFiltering":
    get:
      description: Return the content filtering settings for an MX network
      operationId: getNetworkApplianceContentFiltering
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowedUrlPatterns:
                      - http://www.example.org
                      - http://help.com.au
                    blockedUrlCategories:
                      - id: meraki:contentFiltering/category/1
                        name: Real Estate
                      - id: meraki:contentFiltering/category/7
                        name: Shopping
                    blockedUrlPatterns:
                      - http://www.example.com
                      - http://www.betting.com
                    urlCategoryListSize: topSites
              schema:
                type: object
          description: Successful operation
      summary: Return the content filtering settings for an MX network
      tags:
        - appliance
        - configure
        - contentFiltering
    put:
      description: Update the content filtering settings for an MX network
      operationId: updateNetworkApplianceContentFiltering
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                allowedUrlPatterns:
                  - http://www.example.org
                  - http://help.com.au
                blockedUrlCategories:
                  - meraki:contentFiltering/category/1
                  - meraki:contentFiltering/category/7
                blockedUrlPatterns:
                  - http://www.example.com
                  - http://www.betting.com
                urlCategoryListSize: topSites
              properties:
                allowedUrlPatterns:
                  description: A list of URL patterns that are allowed
                  items:
                    type: string
                  type: array
                blockedUrlCategories:
                  description: A list of URL categories to block
                  items:
                    type: string
                  type: array
                blockedUrlPatterns:
                  description: A list of URL patterns that are blocked
                  items:
                    type: string
                  type: array
                urlCategoryListSize:
                  description: URL category list size which is either 'topSites' or 'fullList'
                  enum:
                    - fullList
                    - topSites
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowedUrlPatterns:
                      - http://www.example.org
                      - http://help.com.au
                    blockedUrlCategories:
                      - id: meraki:contentFiltering/category/1
                        name: Real Estate
                      - id: meraki:contentFiltering/category/7
                        name: Shopping
                    blockedUrlPatterns:
                      - http://www.example.com
                      - http://www.betting.com
                    urlCategoryListSize: topSites
              schema:
                type: object
          description: Successful operation
      summary: Update the content filtering settings for an MX network
      tags:
        - appliance
        - configure
        - contentFiltering
  "/networks/{networkId}/appliance/contentFiltering/categories":
    get:
      description: List all available content filtering categories for an MX network
      operationId: getNetworkApplianceContentFilteringCategories
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    categories:
                      - id: meraki:contentFiltering/category/1
                        name: Real Estate
                      - id: meraki:contentFiltering/category/3
                        name: Financial Services
                      - ...
                      - id: meraki:contentFiltering/category/11
                        name: Adult and Pornography
              schema:
                type: object
          description: Successful operation
      summary: List all available content filtering categories for an MX network
      tags:
        - appliance
        - configure
        - contentFiltering
        - categories
  "/networks/{networkId}/appliance/firewall/cellularFirewallRules":
    get:
      description: Return the cellular firewall rules for an MX network
      operationId: getNetworkApplianceFirewallCellularFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return the cellular firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - cellularFirewallRules
    put:
      description: Update the cellular firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallCellularFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateNetworkApplianceFirewallCellularFirewallRulesUpdatenetworkappliancefirewallcellularfirewallrules"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update the cellular firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - cellularFirewallRules
  "/networks/{networkId}/appliance/firewall/firewalledServices":
    get:
      description: List the appliance services and their accessibility rules
      operationId: getNetworkApplianceFirewallFirewalledServices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - access: restricted
                      allowedIps:
                        - 123.123.123.1
                      service: web
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the appliance services and their accessibility rules
      tags:
        - appliance
        - configure
        - firewall
        - firewalledServices
  "/networks/{networkId}/appliance/firewall/firewalledServices/{service}":
    get:
      description: Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')
      operationId: getNetworkApplianceFirewallFirewalledService
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    access: restricted
                    allowedIps:
                      - 123.123.123.1
                    service: web
              schema:
                type: object
          description: Successful operation
      summary: Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')
      tags:
        - appliance
        - configure
        - firewall
        - firewalledServices
    put:
      description: Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')
      operationId: updateNetworkApplianceFirewallFirewalledService
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: service
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                access: restricted
                allowedIps:
                  - 123.123.123.1
              properties:
                access:
                  description: A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are "blocked" (no remote IPs can access the service), "restricted" (only allowed IPs can access the service), and "unrestriced" (any remote IP can access the service). This field is required
                  enum:
                    - blocked
                    - restricted
                    - unrestricted
                  type: string
                allowedIps:
                  description: An array of allowed IPs that can access the service. This field is required if "access" is set to "restricted". Otherwise this field is ignored
                  items:
                    type: string
                  type: array
              required:
                - access
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    access: restricted
                    allowedIps:
                      - 123.123.123.1
                    service: web
              schema:
                type: object
          description: Successful operation
      summary: Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')
      tags:
        - appliance
        - configure
        - firewall
        - firewalledServices
  "/networks/{networkId}/appliance/firewall/inboundCellularFirewallRules":
    get:
      description: Return the inbound cellular firewall rules for an MX network
      operationId: getNetworkApplianceFirewallInboundCellularFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      destCidr: 192.168.1.0/24
                      destPort: "443"
                      policy: allow
                      protocol: tcp
                      srcCidr: Any
                      srcPort: Any
                      syslogEnabled: false
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the inbound cellular firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - inboundCellularFirewallRules
    put:
      description: Update the inbound cellular firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallInboundCellularFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateNetworkApplianceFirewallCellularFirewallRulesUpdatenetworkappliancefirewallcellularfirewallrules"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      destCidr: 192.168.1.0/24
                      destPort: "443"
                      policy: allow
                      protocol: tcp
                      srcCidr: Any
                      srcPort: Any
                      syslogEnabled: false
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Update the inbound cellular firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - inboundCellularFirewallRules
  "/networks/{networkId}/appliance/firewall/inboundFirewallRules":
    get:
      description: Return the inbound firewall rules for an MX network
      operationId: getNetworkApplianceFirewallInboundFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
                    syslogDefaultRule: true
              schema:
                type: object
          description: Successful operation
      summary: Return the inbound firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - inboundFirewallRules
    put:
      description: Update the inbound firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallInboundFirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateNetworkApplianceFirewallInboundFirewallRulesUpdatenetworkappliancefirewallinboundfirewallrules"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
                    syslogDefaultRule: true
              schema:
                type: object
          description: Successful operation
      summary: Update the inbound firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - inboundFirewallRules
  "/networks/{networkId}/appliance/firewall/l3FirewallRules":
    get:
      description: Return the L3 firewall rules for an MX network
      operationId: getNetworkApplianceFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return the L3 firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l3FirewallRules
    put:
      description: Update the L3 firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateNetworkApplianceFirewallInboundFirewallRulesUpdatenetworkappliancefirewallinboundfirewallrules"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update the L3 firewall rules of an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l3FirewallRules
  "/networks/{networkId}/appliance/firewall/l7FirewallRules":
    get:
      description: List the MX L7 firewall rules for an MX network
      operationId: getNetworkApplianceFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - policy: deny
                        type: host
                        value: google.com
                      - policy: deny
                        type: port
                        value: "23"
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: List the MX L7 firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l7FirewallRules
    put:
      description: Update the MX L7 firewall rules for an MX network
      operationId: updateNetworkApplianceFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
              properties:
                rules:
                  description: An ordered array of the MX L7 firewall rules
                  items:
                    properties:
                      policy:
                        description: "'Deny' traffic specified by this rule"
                        enum:
                          - deny
                        type: string
                      type:
                        description: "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                        enum:
                          - application
                          - applicationCategory
                          - host
                          - ipRange
                          - port
                        type: string
                      value:
                        description: The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.
                        type: string
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - policy: deny
                        type: host
                        value: google.com
                      - policy: deny
                        type: port
                        value: "23"
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: Update the MX L7 firewall rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l7FirewallRules
  "/networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories":
    get:
      description: Return the L7 firewall application categories and their associated applications for an MX network
      operationId: getNetworkApplianceFirewallL7FirewallRulesApplicationCategories
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    applicationCategories:
                      - applications:
                          - id: meraki:layer7/application/5
                            name: Advertising.com
                          - id: meraki:layer7/application/0
                            name: AppNexus
                          - id: meraki:layer7/application/1
                            name: Brightroll
                        id: meraki:layer7/category/24
                        name: Advertising
              schema:
                type: object
          description: Successful operation
      summary: Return the L7 firewall application categories and their associated applications for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - l7FirewallRules
        - applicationCategories
  "/networks/{networkId}/appliance/firewall/oneToManyNatRules":
    get:
      description: Return the 1:Many NAT mapping rules for an MX network
      operationId: getNetworkApplianceFirewallOneToManyNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - portRules:
                          - allowedIps:
                              - any
                            localIp: 192.168.128.1
                            localPort: "443"
                            name: Rule 1
                            protocol: tcp
                            publicPort: "9443"
                          - allowedIps:
                              - 10.82.110.0/24
                              - 10.82.111.0/24
                            localIp: 192.168.128.1
                            localPort: "80"
                            name: Rule 2
                            protocol: tcp
                            publicPort: "8080"
                        publicIp: 146.11.11.13
                        uplink: internet1
              schema:
                type: object
          description: Successful operation
      summary: Return the 1:Many NAT mapping rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - oneToManyNatRules
    put:
      description: Set the 1:Many NAT mapping rules for an MX network
      operationId: updateNetworkApplianceFirewallOneToManyNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - portRules:
                      - allowedIps:
                          - any
                        localIp: 192.168.128.1
                        localPort: "443"
                        name: Rule 1
                        protocol: tcp
                        publicPort: "9443"
                      - allowedIps:
                          - 10.82.110.0/24
                          - 10.82.111.0/24
                        localIp: 192.168.128.1
                        localPort: "80"
                        name: Rule 2
                        protocol: tcp
                        publicPort: "8080"
                    publicIp: 146.11.11.13
                    uplink: internet1
              properties:
                rules:
                  description: An array of 1:Many nat rules
                  items:
                    properties:
                      portRules:
                        description: An array of associated forwarding rules
                        items:
                          properties:
                            allowedIps:
                              description: Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'
                              items:
                                type: string
                              type: array
                            localIp:
                              description: Local IP address to which traffic will be forwarded
                              type: string
                            localPort:
                              description: Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port
                              type: string
                            name:
                              description: A description of the rule
                              type: string
                            protocol:
                              description: "'tcp' or 'udp'"
                              enum:
                                - tcp
                                - udp
                              type: string
                            publicPort:
                              description: Destination port of the traffic that is arriving on the WAN
                              type: string
                          type: object
                        type: array
                      publicIp:
                        description: The IP address that will be used to access the internal resource from the WAN
                        type: string
                      uplink:
                        description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')
                        enum:
                          - internet1
                          - internet2
                        type: string
                    required:
                      - publicIp
                      - uplink
                      - portRules
                    type: object
                  type: array
              required:
                - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - portRules:
                          - allowedIps:
                              - any
                            localIp: 192.168.128.1
                            localPort: "443"
                            name: Rule 1
                            protocol: tcp
                            publicPort: "9443"
                          - allowedIps:
                              - 10.82.110.0/24
                              - 10.82.111.0/24
                            localIp: 192.168.128.1
                            localPort: "80"
                            name: Rule 2
                            protocol: tcp
                            publicPort: "8080"
                        publicIp: 146.11.11.13
                        uplink: internet1
              schema:
                type: object
          description: Successful operation
      summary: Set the 1:Many NAT mapping rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - oneToManyNatRules
  "/networks/{networkId}/appliance/firewall/oneToOneNatRules":
    get:
      description: Return the 1:1 NAT mapping rules for an MX network
      operationId: getNetworkApplianceFirewallOneToOneNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - allowedInbound:
                          - allowedIps:
                              - 10.82.112.0/24
                              - 10.82.0.0/16
                            destinationPorts:
                              - "80"
                            protocol: tcp
                          - allowedIps:
                              - 10.81.110.5
                              - 10.81.0.0/16
                            destinationPorts:
                              - "8080"
                            protocol: udp
                        lanIp: 192.168.128.22
                        name: Service behind NAT
                        publicIp: 146.12.3.33
                        uplink: internet1
              schema:
                type: object
          description: Successful operation
      summary: Return the 1:1 NAT mapping rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - oneToOneNatRules
    put:
      description: Set the 1:1 NAT mapping rules for an MX network
      operationId: updateNetworkApplianceFirewallOneToOneNatRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - allowedInbound:
                      - allowedIps:
                          - 10.82.112.0/24
                          - 10.82.0.0/16
                        destinationPorts:
                          - "80"
                        protocol: tcp
                      - allowedIps:
                          - 10.81.110.5
                          - 10.81.0.0/16
                        destinationPorts:
                          - "8080"
                        protocol: udp
                    lanIp: 192.168.128.22
                    name: Service behind NAT
                    publicIp: 146.12.3.33
                    uplink: internet1
              properties:
                rules:
                  description: An array of 1:1 nat rules
                  items:
                    properties:
                      allowedInbound:
                        description: The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource
                        items:
                          properties:
                            allowedIps:
                              description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'
                              items:
                                type: string
                              type: array
                            destinationPorts:
                              description: An array of ports or port ranges that will be forwarded to the host on the LAN
                              items:
                                type: string
                              type: array
                            protocol:
                              description: "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'"
                              enum:
                                - any
                                - icmp-ping
                                - tcp
                                - udp
                              type: string
                          type: object
                        type: array
                      lanIp:
                        description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
                        type: string
                      name:
                        description: A descriptive name for the rule
                        type: string
                      publicIp:
                        description: The IP address that will be used to access the internal resource from the WAN
                        type: string
                      uplink:
                        description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')
                        enum:
                          - internet1
                          - internet2
                        type: string
                    required:
                      - lanIp
                    type: object
                  type: array
              required:
                - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - allowedInbound:
                          - allowedIps:
                              - 10.82.112.0/24
                              - 10.82.0.0/16
                            destinationPorts:
                              - "80"
                            protocol: tcp
                          - allowedIps:
                              - 10.81.110.5
                              - 10.81.0.0/16
                            destinationPorts:
                              - "8080"
                            protocol: udp
                        lanIp: 192.168.128.22
                        name: Service behind NAT
                        publicIp: 146.12.3.33
                        uplink: internet1
              schema:
                type: object
          description: Successful operation
      summary: Set the 1:1 NAT mapping rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - oneToOneNatRules
  "/networks/{networkId}/appliance/firewall/portForwardingRules":
    get:
      description: Return the port forwarding rules for an MX network
      operationId: getNetworkApplianceFirewallPortForwardingRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - allowedIps:
                          - any
                        lanIp: 192.168.128.1
                        localPort: 442-443
                        name: Description of Port Forwarding Rule
                        protocol: tcp
                        publicPort: 8100-8101
                        uplink: both
              schema:
                type: object
          description: Successful operation
      summary: Return the port forwarding rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - portForwardingRules
    put:
      description: Update the port forwarding rules for an MX network
      operationId: updateNetworkApplianceFirewallPortForwardingRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - allowedIps:
                      - any
                    lanIp: 192.168.128.1
                    localPort: 442-443
                    name: Description of Port Forwarding Rule
                    protocol: tcp
                    publicPort: 8100-8101
                    uplink: both
              properties:
                rules:
                  description: An array of port forwarding params
                  items:
                    properties:
                      allowedIps:
                        description: An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)
                        items:
                          type: string
                        type: array
                      lanIp:
                        description: The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN
                        type: string
                      localPort:
                        description: A port or port ranges that will receive the forwarded traffic from the WAN
                        type: string
                      name:
                        description: A descriptive name for the rule
                        type: string
                      protocol:
                        description: TCP or UDP
                        enum:
                          - tcp
                          - udp
                        type: string
                      publicPort:
                        description: A port or port ranges that will be forwarded to the host on the LAN
                        type: string
                      uplink:
                        description: The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')
                        enum:
                          - both
                          - internet1
                          - internet2
                        type: string
                    required:
                      - lanIp
                      - publicPort
                      - localPort
                      - allowedIps
                      - protocol
                    type: object
                  type: array
              required:
                - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - allowedIps:
                          - any
                        lanIp: 192.168.128.1
                        localPort: 442-443
                        name: Description of Port Forwarding Rule
                        protocol: tcp
                        publicPort: 8100-8101
                        uplink: both
              schema:
                type: object
          description: Successful operation
      summary: Update the port forwarding rules for an MX network
      tags:
        - appliance
        - configure
        - firewall
        - portForwardingRules
  "/networks/{networkId}/appliance/firewall/settings":
    get:
      description: Return the firewall settings for this network
      operationId: getNetworkApplianceFirewallSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    spoofingProtection:
                      ipSourceGuard:
                        mode: block
              schema:
                type: object
          description: Successful operation
      summary: Return the firewall settings for this network
      tags:
        - appliance
        - configure
        - firewall
        - settings
    put:
      description: Update the firewall settings for this network
      operationId: updateNetworkApplianceFirewallSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                spoofingProtection:
                  ipSourceGuard:
                    mode: block
              properties:
                spoofingProtection:
                  description: Spoofing protection settings
                  properties:
                    ipSourceGuard:
                      description: IP source address spoofing settings
                      properties:
                        mode:
                          description: Mode of protection
                          enum:
                            - block
                            - log
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    spoofingProtection:
                      ipSourceGuard:
                        mode: block
              schema:
                type: object
          description: Successful operation
      summary: Update the firewall settings for this network
      tags:
        - appliance
        - configure
        - firewall
        - settings
  "/networks/{networkId}/appliance/ports":
    get:
      description: List per-port VLAN settings for all ports of a MX.
      operationId: getNetworkAppliancePorts
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accessPolicy: open
                      allowedVlans: all
                      dropUntaggedTraffic: false
                      enabled: true
                      number: 1
                      type: access
                      vlan: 3
              schema:
                items:
                  properties:
                    accessPolicy:
                      description: The name of the policy. Only applicable to Access ports.
                      type: string
                    allowedVlans:
                      description: Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
                      type: string
                    dropUntaggedTraffic:
                      description: Whether the trunk port can drop all untagged traffic.
                      type: boolean
                    enabled:
                      description: The status of the port
                      type: boolean
                    number:
                      description: Number of the port
                      type: integer
                    type:
                      description: "The type of the port: 'access' or 'trunk'."
                      type: string
                    vlan:
                      description: Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: List per-port VLAN settings for all ports of a MX.
      tags:
        - appliance
        - configure
        - ports
  "/networks/{networkId}/appliance/ports/{portId}":
    get:
      description: Return per-port VLAN settings for a single MX port.
      operationId: getNetworkAppliancePort
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: portId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicy: open
                    allowedVlans: all
                    dropUntaggedTraffic: false
                    enabled: true
                    number: 1
                    type: access
                    vlan: 3
              schema:
                properties:
                  accessPolicy:
                    description: The name of the policy. Only applicable to Access ports.
                    type: string
                  allowedVlans:
                    description: Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
                    type: string
                  dropUntaggedTraffic:
                    description: Whether the trunk port can drop all untagged traffic.
                    type: boolean
                  enabled:
                    description: The status of the port
                    type: boolean
                  number:
                    description: Number of the port
                    type: integer
                  type:
                    description: "The type of the port: 'access' or 'trunk'."
                    type: string
                  vlan:
                    description: Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
                    type: integer
                type: object
          description: Successful operation
      summary: Return per-port VLAN settings for a single MX port.
      tags:
        - appliance
        - configure
        - ports
    put:
      description: Update the per-port VLAN settings for a single MX port.
      operationId: updateNetworkAppliancePort
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: portId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accessPolicy: open
                allowedVlans: all
                dropUntaggedTraffic: false
                enabled: true
                type: access
                vlan: 3
              properties:
                accessPolicy:
                  description: "The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing."
                  type: string
                allowedVlans:
                  description: Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
                  type: string
                dropUntaggedTraffic:
                  description: Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
                  type: boolean
                enabled:
                  description: The status of the port
                  type: boolean
                type:
                  description: "The type of the port: 'access' or 'trunk'."
                  type: string
                vlan:
                  description: Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicy: open
                    allowedVlans: all
                    dropUntaggedTraffic: false
                    enabled: true
                    number: 1
                    type: access
                    vlan: 3
              schema:
                properties:
                  accessPolicy:
                    description: The name of the policy. Only applicable to Access ports.
                    type: string
                  allowedVlans:
                    description: Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
                    type: string
                  dropUntaggedTraffic:
                    description: Whether the trunk port can drop all untagged traffic.
                    type: boolean
                  enabled:
                    description: The status of the port
                    type: boolean
                  number:
                    description: Number of the port
                    type: integer
                  type:
                    description: "The type of the port: 'access' or 'trunk'."
                    type: string
                  vlan:
                    description: Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
                    type: integer
                type: object
          description: Successful operation
      summary: Update the per-port VLAN settings for a single MX port.
      tags:
        - appliance
        - configure
        - ports
  "/networks/{networkId}/appliance/prefixes/delegated/statics":
    get:
      description: List static delegated prefixes for a network
      operationId: getNetworkAppliancePrefixesDelegatedStatics
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - createdAt: 2018-05-12T00:00:00Z
                      description: Prefix on WAN 1 of Long Island Office network
                      origin:
                        interfaces:
                          - wan1
                        type: internet
                      prefix: 2001:db8:3c4d:15::/64
                      staticDelegatedPrefixId: "1284392014819"
                      updatedAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  properties:
                    createdAt:
                      description: Prefix creation time.
                      format: date-time
                      type: string
                    description:
                      description: Identifying description for the prefix.
                      type: string
                    origin:
                      description: WAN1/WAN2/Independent prefix.
                      properties:
                        interfaces:
                          description: Uplink provided or independent
                          items:
                            type: string
                          type: array
                        type:
                          description: Origin type
                          type: string
                      type: object
                    prefix:
                      description: IPv6 prefix/prefix length.
                      type: string
                    staticDelegatedPrefixId:
                      description: Static delegated prefix id.
                      type: string
                    updatedAt:
                      description: Prefix Updated time.
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List static delegated prefixes for a network
      tags:
        - appliance
        - configure
        - prefixes
        - delegated
        - statics
    post:
      description: Add a static delegated prefix from a network
      operationId: createNetworkAppliancePrefixesDelegatedStatic
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Prefix on WAN 1 of Long Island Office network
                origin:
                  interfaces:
                    - wan1
                  type: internet
                prefix: 2001:db8:3c4d:15::/64
              properties:
                description:
                  description: A name or description for the prefix
                  type: string
                origin:
                  description: The origin of the prefix
                  properties:
                    interfaces:
                      description: Interfaces associated with the prefix
                      items:
                        type: string
                      type: array
                    type:
                      description: Type of the origin
                      enum:
                        - independent
                        - internet
                      type: string
                  type: object
                prefix:
                  description: A static IPv6 prefix
                  type: string
              required:
                - prefix
                - origin
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2018-05-12T00:00:00Z
                    description: Prefix on WAN 1 of Long Island Office network
                    origin:
                      interfaces:
                        - wan1
                      type: internet
                    prefix: 2001:db8:3c4d:15::/64
                    staticDelegatedPrefixId: "1284392014819"
                    updatedAt: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Add a static delegated prefix from a network
      tags:
        - appliance
        - configure
        - prefixes
        - delegated
        - statics
  "/networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}":
    delete:
      description: Delete a static delegated prefix from a network
      operationId: deleteNetworkAppliancePrefixesDelegatedStatic
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: staticDelegatedPrefixId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a static delegated prefix from a network
      tags:
        - appliance
        - configure
        - prefixes
        - delegated
        - statics
    get:
      description: Return a static delegated prefix from a network
      operationId: getNetworkAppliancePrefixesDelegatedStatic
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: staticDelegatedPrefixId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2018-05-12T00:00:00Z
                    description: Prefix on WAN 1 of Long Island Office network
                    origin:
                      interfaces:
                        - wan1
                      type: internet
                    prefix: 2001:db8:3c4d:15::/64
                    staticDelegatedPrefixId: "1284392014819"
                    updatedAt: 2018-05-12T00:00:00Z
              schema:
                properties:
                  createdAt:
                    description: Prefix creation time.
                    format: date-time
                    type: string
                  description:
                    description: Identifying description for the prefix.
                    type: string
                  origin:
                    description: WAN1/WAN2/Independent prefix.
                    properties:
                      interfaces:
                        description: Uplink provided or independent
                        items:
                          type: string
                        type: array
                      type:
                        description: Origin type
                        type: string
                    type: object
                  prefix:
                    description: IPv6 prefix/prefix length.
                    type: string
                  staticDelegatedPrefixId:
                    description: Static delegated prefix id.
                    type: string
                  updatedAt:
                    description: Prefix Updated time.
                    format: date-time
                    type: string
                type: object
          description: Successful operation
      summary: Return a static delegated prefix from a network
      tags:
        - appliance
        - configure
        - prefixes
        - delegated
        - statics
    put:
      description: Update a static delegated prefix from a network
      operationId: updateNetworkAppliancePrefixesDelegatedStatic
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: staticDelegatedPrefixId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Prefix on WAN 1 of Long Island Office network
                origin:
                  interfaces:
                    - wan1
                  type: internet
                prefix: 2001:db8:3c4d:15::/64
              properties:
                description:
                  description: A name or description for the prefix
                  type: string
                origin:
                  description: The origin of the prefix
                  properties:
                    interfaces:
                      description: Interfaces associated with the prefix
                      items:
                        type: string
                      type: array
                    type:
                      description: Type of the origin
                      enum:
                        - independent
                        - internet
                      type: string
                  type: object
                prefix:
                  description: A static IPv6 prefix
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2018-05-12T00:00:00Z
                    description: Prefix on WAN 1 of Long Island Office network
                    origin:
                      interfaces:
                        - wan1
                      type: internet
                    prefix: 2001:db8:3c4d:15::/64
                    staticDelegatedPrefixId: "1284392014819"
                    updatedAt: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Update a static delegated prefix from a network
      tags:
        - appliance
        - configure
        - prefixes
        - delegated
        - statics
  "/networks/{networkId}/appliance/security/events":
    get:
      description: List the security events for a network
      operationId: getNetworkApplianceSecurityEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
          in: query
          name: sortOrder
          schema:
            enum:
              - ascending
              - descending
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - action: Blocked
                      canonicalName: PUA.Win.Dropper.Kraddare::1201
                      clientIp: 192.168.128.2
                      clientMac: 10:dd:b1:eb:88:f8
                      clientName: COMPUTER-M-V78J
                      destIp: 119.192.233.48
                      destinationPort: 80
                      disposition: Malicious
                      eventType: File Scanned
                      fileHash: 3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                      fileSizeBytes: 193688
                      fileType: MS_EXE
                      protocol: http
                      srcIp: 192.168.128.2
                      ts: 2020-03-20T16:00:10.144989Z
                      uri: http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                    - blocked: true
                      classification: "4"
                      clientMac: A1:B2:C3:D4:E5:F6
                      destIp: 10.20.30.40:80
                      deviceMac: 00:18:0a:01:02:03
                      eventType: IDS Alert
                      message: SERVER-WEBAPP JBoss JMX console access attempt
                      priority: "2"
                      protocol: tcp/ip
                      ruleId: meraki:intrusion/snort/GID/1/SID/26267
                      sigSource: ""
                      signature: 1:21516:9
                      srcIp: 1.2.3.4:34195
                      ts: 2018-02-11T00:00:00.090210Z
                    - blocked: true
                      classification: "33"
                      clientMac: A1:B2:C3:D4:E5:F6
                      destIp: 10.20.30.40:80
                      deviceMac: 00:18:0a:01:02:03
                      eventType: IDS Alert
                      message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                      priority: "1"
                      protocol: tcp/ip
                      ruleId: meraki:intrusion/snort/GID/1/SID/26267
                      sigSource: ""
                      signature: 1:25975:2
                      srcIp: 1.2.3.4:56023
                      ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the security events for a network
      tags:
        - appliance
        - monitor
        - security
        - events
  "/networks/{networkId}/appliance/security/intrusion":
    get:
      description: Returns all supported intrusion settings for an MX network
      operationId: getNetworkApplianceSecurityIntrusion
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    idsRulesets: balanced
                    mode: prevention
                    protectedNetworks:
                      excludedCidr:
                        - 10.0.0.0/8
                        - 127.0.0.0/8
                      includedCidr:
                        - 10.0.0.0/8
                        - 127.0.0.0/8
                        - 169.254.0.0/16
                        - 172.16.0.0/12
                      useDefault: false
              schema:
                type: object
          description: Successful operation
      summary: Returns all supported intrusion settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - intrusion
    put:
      description: Set the supported intrusion settings for an MX network
      operationId: updateNetworkApplianceSecurityIntrusion
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                idsRulesets: balanced
                mode: prevention
                protectedNetworks:
                  excludedCidr:
                    - 10.0.0.0/8
                    - 127.0.0.0/8
                  includedCidr:
                    - 10.0.0.0/8
                    - 127.0.0.0/8
                    - 169.254.0.0/16
                    - 172.16.0.0/12
                  useDefault: false
              properties:
                idsRulesets:
                  description: Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved
                  enum:
                    - balanced
                    - connectivity
                    - security
                  type: string
                mode:
                  description: Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)
                  enum:
                    - detection
                    - disabled
                    - prevention
                  type: string
                protectedNetworks:
                  description: Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged). This is available only in 'passthrough' mode
                  properties:
                    excludedCidr:
                      description: list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)
                      items:
                        type: string
                      type: array
                    includedCidr:
                      description: list of IP addresses or subnets being protected (required if 'useDefault' is false)
                      items:
                        type: string
                      type: array
                    useDefault:
                      description: "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved"
                      type: boolean
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    idsRulesets: balanced
                    mode: prevention
                    protectedNetworks:
                      excludedCidr:
                        - 10.0.0.0/8
                        - 127.0.0.0/8
                      includedCidr:
                        - 10.0.0.0/8
                        - 127.0.0.0/8
                        - 169.254.0.0/16
                        - 172.16.0.0/12
                      useDefault: false
              schema:
                type: object
          description: Successful operation
      summary: Set the supported intrusion settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - intrusion
  "/networks/{networkId}/appliance/security/malware":
    get:
      description: Returns all supported malware settings for an MX network
      operationId: getNetworkApplianceSecurityMalware
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowedFiles:
                      - comment: allow ZIP file
                        sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                    allowedUrls:
                      - comment: allow example.org
                        url: example.org
                      - comment: allow help.com.au
                        url: help.com.au
                    mode: enabled
              schema:
                type: object
          description: Successful operation
      summary: Returns all supported malware settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - malware
    put:
      description: Set the supported malware settings for an MX network
      operationId: updateNetworkApplianceSecurityMalware
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                allowedFiles:
                  - comment: allow ZIP file
                    sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                allowedUrls:
                  - comment: allow example.org
                    url: example.org
                  - comment: allow help.com.au
                    url: help.com.au
                mode: enabled
              properties:
                allowedFiles:
                  description: The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing
                  items:
                    properties:
                      comment:
                        description: Comment about the allowed entity
                        type: string
                      sha256:
                        description: The file sha256 hash to allow
                        type: string
                    required:
                      - sha256
                      - comment
                    type: object
                  type: array
                allowedUrls:
                  description: The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing
                  items:
                    properties:
                      comment:
                        description: Comment about the allowed entity
                        type: string
                      url:
                        description: The url to allow
                        type: string
                    required:
                      - url
                      - comment
                    type: object
                  type: array
                mode:
                  description: Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'
                  enum:
                    - disabled
                    - enabled
                  type: string
              required:
                - mode
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowedFiles:
                      - comment: allow ZIP file
                        sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                    allowedUrls:
                      - comment: allow example.org
                        url: example.org
                      - comment: allow help.com.au
                        url: help.com.au
                    mode: enabled
              schema:
                type: object
          description: Successful operation
      summary: Set the supported malware settings for an MX network
      tags:
        - appliance
        - configure
        - security
        - malware
  "/networks/{networkId}/appliance/settings":
    get:
      description: Return the appliance settings for a network
      operationId: getNetworkApplianceSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    clientTrackingMethod: MAC address
                    deploymentMode: routed
                    dynamicDns:
                      enabled: true
                      prefix: test
                      url: test-adfgnnhjea.meraki.com
              schema:
                properties:
                  clientTrackingMethod:
                    description: Client tracking method of a network
                    enum:
                      - IP address
                      - MAC address
                      - Unique client identifier
                    type: string
                  deploymentMode:
                    description: Deployment mode of a network
                    enum:
                      - passthrough
                      - routed
                    type: string
                  dynamicDns:
                    description: Dynamic DNS settings for a network
                    properties:
                      enabled:
                        description: Dynamic DNS enabled
                        type: boolean
                      prefix:
                        description: Dynamic DNS url prefix. DDNS must be enabled to update
                        type: string
                      url:
                        description: Dynamic DNS url. DDNS must be enabled to update
                        type: string
                    type: object
                type: object
          description: Successful operation
      summary: Return the appliance settings for a network
      tags:
        - appliance
        - configure
        - settings
    put:
      description: Update the appliance settings for a network
      operationId: updateNetworkApplianceSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                clientTrackingMethod: MAC address
                deploymentMode: routed
                dynamicDns:
                  enabled: true
                  prefix: test
              properties:
                clientTrackingMethod:
                  description: Client tracking method of a network
                  enum:
                    - IP address
                    - MAC address
                    - Unique client identifier
                  type: string
                deploymentMode:
                  description: Deployment mode of a network
                  enum:
                    - passthrough
                    - routed
                  type: string
                dynamicDns:
                  description: Dynamic DNS settings for a network
                  properties:
                    enabled:
                      description: Dynamic DNS enabled
                      type: boolean
                    prefix:
                      description: Dynamic DNS url prefix. DDNS must be enabled to update
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    clientTrackingMethod: MAC address
                    deploymentMode: routed
                    dynamicDns:
                      enabled: true
                      prefix: test
                      url: test-adfgnnhjea.meraki.com
              schema:
                properties:
                  clientTrackingMethod:
                    description: Client tracking method of a network
                    enum:
                      - IP address
                      - MAC address
                      - Unique client identifier
                    type: string
                  deploymentMode:
                    description: Deployment mode of a network
                    enum:
                      - passthrough
                      - routed
                    type: string
                  dynamicDns:
                    description: Dynamic DNS settings for a network
                    properties:
                      enabled:
                        description: Dynamic DNS enabled
                        type: boolean
                      prefix:
                        description: Dynamic DNS url prefix. DDNS must be enabled to update
                        type: string
                      url:
                        description: Dynamic DNS url. DDNS must be enabled to update
                        type: string
                    type: object
                type: object
          description: Successful operation
      summary: Update the appliance settings for a network
      tags:
        - appliance
        - configure
        - settings
  "/networks/{networkId}/appliance/singleLan":
    get:
      description: Return single LAN configuration
      operationId: getNetworkApplianceSingleLan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    applianceIp: 192.168.1.2
                    ipv6:
                      enabled: true
                      prefixAssignments:
                        - autonomous: false
                          origin:
                            interfaces:
                              - wan0
                            type: internet
                          staticApplianceIp6: 2001:db8:3c4d:15::1
                          staticPrefix: 2001:db8:3c4d:15::/64
                    mandatoryDhcp:
                      enabled: true
                    subnet: 192.168.1.0/24
              schema:
                properties:
                  applianceIp:
                    description: The local IP of the appliance on the single LAN
                    type: string
                  ipv6:
                    description: IPv6 configuration on the single LAN
                    properties:
                      enabled:
                        description: Enable IPv6 on single LAN
                        type: boolean
                      prefixAssignments:
                        description: Prefix assignments on the single LAN
                        items:
                          properties:
                            autonomous:
                              description: Auto assign a /64 prefix from the origin to the single LAN
                              type: boolean
                            origin:
                              description: The origin of the prefix
                              properties:
                                interfaces:
                                  description: Interfaces associated with the prefix
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: Type of the origin
                                  enum:
                                    - independent
                                    - internet
                                  type: string
                              type: object
                            staticApplianceIp6:
                              description: Manual configuration of the IPv6 Appliance IP
                              type: string
                            staticPrefix:
                              description: Manual configuration of a /64 prefix on the single LAN
                              type: string
                          type: object
                        type: array
                    type: object
                  mandatoryDhcp:
                    description: Mandatory DHCP will enforce that clients connecting to this single LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                    properties:
                      enabled:
                        description: Enable Mandatory DHCP on single LAN.
                        type: boolean
                    type: object
                  subnet:
                    description: The subnet of the single LAN
                    type: string
                type: object
          description: Successful operation
      summary: Return single LAN configuration
      tags:
        - appliance
        - configure
        - singleLan
    put:
      description: Update single LAN configuration
      operationId: updateNetworkApplianceSingleLan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                applianceIp:
                  description: The appliance IP address of the single LAN
                  type: string
                ipv6:
                  description: IPv6 configuration on the VLAN
                  properties:
                    enabled:
                      description: Enable IPv6 on VLAN.
                      type: boolean
                    prefixAssignments:
                      description: Prefix assignments on the VLAN
                      items:
                        properties:
                          autonomous:
                            description: Auto assign a /64 prefix from the origin to the VLAN
                            type: boolean
                          origin:
                            description: The origin of the prefix
                            properties:
                              interfaces:
                                description: Interfaces associated with the prefix
                                items:
                                  type: string
                                type: array
                              type:
                                description: Type of the origin
                                enum:
                                  - independent
                                  - internet
                                type: string
                            required:
                              - type
                            type: object
                          staticApplianceIp6:
                            description: Manual configuration of the IPv6 Appliance IP
                            type: string
                          staticPrefix:
                            description: Manual configuration of a /64 prefix on the VLAN
                            type: string
                        type: object
                      type: array
                  type: object
                mandatoryDhcp:
                  description: Mandatory DHCP will enforce that clients connecting to this LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                  properties:
                    enabled:
                      description: Enable Mandatory DHCP on LAN.
                      type: boolean
                  type: object
                subnet:
                  description: The subnet of the single LAN configuration
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    applianceIp: 192.168.1.2
                    ipv6:
                      enabled: true
                      prefixAssignments:
                        - autonomous: false
                          origin:
                            interfaces:
                              - wan0
                            type: internet
                          staticApplianceIp6: 2001:db8:3c4d:15::1
                          staticPrefix: 2001:db8:3c4d:15::/64
                    mandatoryDhcp:
                      enabled: true
                    subnet: 192.168.1.0/24
              schema:
                properties:
                  applianceIp:
                    description: The local IP of the appliance on the single LAN
                    type: string
                  ipv6:
                    description: IPv6 configuration on the single LAN
                    properties:
                      enabled:
                        description: Enable IPv6 on single LAN
                        type: boolean
                      prefixAssignments:
                        description: Prefix assignments on the single LAN
                        items:
                          properties:
                            autonomous:
                              description: Auto assign a /64 prefix from the origin to the single LAN
                              type: boolean
                            origin:
                              description: The origin of the prefix
                              properties:
                                interfaces:
                                  description: Interfaces associated with the prefix
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: Type of the origin
                                  enum:
                                    - independent
                                    - internet
                                  type: string
                              type: object
                            staticApplianceIp6:
                              description: Manual configuration of the IPv6 Appliance IP
                              type: string
                            staticPrefix:
                              description: Manual configuration of a /64 prefix on the single LAN
                              type: string
                          type: object
                        type: array
                    type: object
                  mandatoryDhcp:
                    description: Mandatory DHCP will enforce that clients connecting to this single LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                    properties:
                      enabled:
                        description: Enable Mandatory DHCP on single LAN.
                        type: boolean
                    type: object
                  subnet:
                    description: The subnet of the single LAN
                    type: string
                type: object
          description: Successful operation
      summary: Update single LAN configuration
      tags:
        - appliance
        - configure
        - singleLan
  "/networks/{networkId}/appliance/ssids":
    get:
      description: List the MX SSIDs in a network
      operationId: getNetworkApplianceSsids
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - authMode: 8021x-radius
                      defaultVlanId: 1
                      enabled: true
                      encryptionMode: wpa
                      name: My SSID
                      number: 1
                      radiusServers:
                        - host: 0.0.0.0
                          port: 1000
                      visible: true
                      wpaEncryptionMode: WPA2 only
              schema:
                items:
                  properties:
                    authMode:
                      description: The association control method for the SSID.
                      type: string
                    defaultVlanId:
                      description: The VLAN ID of the VLAN associated to this SSID.
                      type: integer
                    enabled:
                      description: Whether or not the SSID is enabled.
                      type: boolean
                    encryptionMode:
                      description: The psk encryption mode for the SSID.
                      type: string
                    name:
                      description: The name of the SSID.
                      type: string
                    number:
                      description: The number of the SSID.
                      type: integer
                    radiusServers:
                      description: The RADIUS 802.1x servers to be used for authentication.
                      items:
                        properties:
                          host:
                            description: The IP address of your RADIUS server.
                            type: string
                          port:
                            description: The UDP port your RADIUS servers listens on for Access-requests.
                            type: integer
                        type: object
                      type: array
                    visible:
                      description: Boolean indicating whether the MX should advertise or hide this SSID.
                      type: boolean
                    wpaEncryptionMode:
                      description: WPA encryption mode for the SSID.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the MX SSIDs in a network
      tags:
        - appliance
        - configure
        - ssids
  "/networks/{networkId}/appliance/ssids/{number}":
    get:
      description: Return a single MX SSID
      operationId: getNetworkApplianceSsid
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    authMode: 8021x-radius
                    defaultVlanId: 1
                    enabled: true
                    encryptionMode: wpa
                    name: My SSID
                    number: 1
                    radiusServers:
                      - host: 0.0.0.0
                        port: 1000
                    visible: true
                    wpaEncryptionMode: WPA2 only
              schema:
                properties:
                  authMode:
                    description: The association control method for the SSID.
                    type: string
                  defaultVlanId:
                    description: The VLAN ID of the VLAN associated to this SSID.
                    type: integer
                  enabled:
                    description: Whether or not the SSID is enabled.
                    type: boolean
                  encryptionMode:
                    description: The psk encryption mode for the SSID.
                    type: string
                  name:
                    description: The name of the SSID.
                    type: string
                  number:
                    description: The number of the SSID.
                    type: integer
                  radiusServers:
                    description: The RADIUS 802.1x servers to be used for authentication.
                    items:
                      properties:
                        host:
                          description: The IP address of your RADIUS server.
                          type: string
                        port:
                          description: The UDP port your RADIUS servers listens on for Access-requests.
                          type: integer
                      type: object
                    type: array
                  visible:
                    description: Boolean indicating whether the MX should advertise or hide this SSID.
                    type: boolean
                  wpaEncryptionMode:
                    description: WPA encryption mode for the SSID.
                    type: string
                type: object
          description: Successful operation
      summary: Return a single MX SSID
      tags:
        - appliance
        - configure
        - ssids
    put:
      description: Update the attributes of an MX SSID
      operationId: updateNetworkApplianceSsid
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                authMode: 8021x-radius
                defaultVlanId: 1
                dhcpEnforcedDeauthentication:
                  enabled: true
                enabled: true
                encryptionMode: wpa
                name: My SSID
                psk: psk
                radiusServers:
                  - host: 0.0.0.0
                    port: 1000
                    secret: secret
                visible: true
                wpaEncryptionMode: WPA2 only
              properties:
                authMode:
                  description: The association control method for the SSID ('open', 'psk', '8021x-meraki' or '8021x-radius').
                  enum:
                    - 8021x-meraki
                    - 8021x-radius
                    - open
                    - psk
                  type: string
                defaultVlanId:
                  description: The VLAN ID of the VLAN associated to this SSID. This parameter is only valid if the network is in routed mode.
                  type: integer
                dhcpEnforcedDeauthentication:
                  description: "DHCP Enforced Deauthentication enables the disassociation of wireless clients in addition to Mandatory DHCP. This param is only valid on firmware versions >= MX 17.0 where the associated LAN has Mandatory DHCP Enabled "
                  properties:
                    enabled:
                      description: Enable DCHP Enforced Deauthentication on the SSID.
                      type: boolean
                  type: object
                enabled:
                  description: Whether or not the SSID is enabled.
                  type: boolean
                encryptionMode:
                  description: The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'.
                  enum:
                    - wep
                    - wpa
                  type: string
                name:
                  description: The name of the SSID.
                  type: string
                psk:
                  description: The passkey for the SSID. This param is only valid if the authMode is 'psk'.
                  type: string
                radiusServers:
                  description: The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is '8021x-radius'.
                  items:
                    properties:
                      host:
                        description: The IP address of your RADIUS server.
                        type: string
                      port:
                        description: The UDP port your RADIUS servers listens on for Access-requests.
                        type: integer
                      secret:
                        description: The RADIUS client shared secret.
                        type: string
                    type: object
                  type: array
                visible:
                  description: Boolean indicating whether the MX should advertise or hide this SSID.
                  type: boolean
                wpaEncryptionMode:
                  description: The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only'). This param is only valid if (1) the authMode is 'psk' & the encryptionMode is 'wpa' OR (2) the authMode is '8021x-meraki' OR (3) the authMode is '8021x-radius'
                  enum:
                    - WPA1 and WPA2
                    - WPA2 only
                    - WPA3 Transition Mode
                    - WPA3 only
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    authMode: 8021x-radius
                    defaultVlanId: 1
                    enabled: true
                    encryptionMode: wpa
                    name: My SSID
                    number: 1
                    radiusServers:
                      - host: 0.0.0.0
                        port: 1000
                    visible: true
                    wpaEncryptionMode: WPA2 only
              schema:
                properties:
                  authMode:
                    description: The association control method for the SSID.
                    type: string
                  defaultVlanId:
                    description: The VLAN ID of the VLAN associated to this SSID.
                    type: integer
                  enabled:
                    description: Whether or not the SSID is enabled.
                    type: boolean
                  encryptionMode:
                    description: The psk encryption mode for the SSID.
                    type: string
                  name:
                    description: The name of the SSID.
                    type: string
                  number:
                    description: The number of the SSID.
                    type: integer
                  radiusServers:
                    description: The RADIUS 802.1x servers to be used for authentication.
                    items:
                      properties:
                        host:
                          description: The IP address of your RADIUS server.
                          type: string
                        port:
                          description: The UDP port your RADIUS servers listens on for Access-requests.
                          type: integer
                      type: object
                    type: array
                  visible:
                    description: Boolean indicating whether the MX should advertise or hide this SSID.
                    type: boolean
                  wpaEncryptionMode:
                    description: WPA encryption mode for the SSID.
                    type: string
                type: object
          description: Successful operation
      summary: Update the attributes of an MX SSID
      tags:
        - appliance
        - configure
        - ssids
  "/networks/{networkId}/appliance/staticRoutes":
    get:
      description: List the static routes for an MX or teleworker network
      operationId: getNetworkApplianceStaticRoutes
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - enabled: true
                      fixedIpAssignments:
                        22:33:44:55:66:77:
                          ip: 1.2.3.4
                          name: Some client name
                      gatewayIp: 1.2.3.5
                      id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                      ipVersion: 4
                      name: My route
                      networkId: N_24329156
                      reservedIpRanges:
                        - comment: A reserved IP range
                          end: 192.168.1.1
                          start: 192.168.1.0
                      subnet: 192.168.1.0/24
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the static routes for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
    post:
      description: Add a static route for an MX or teleworker network
      operationId: createNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                gatewayIp: 1.2.3.5
                name: My route
                subnet: 192.168.1.0/24
              properties:
                gatewayIp:
                  description: The gateway IP (next hop) of the static route
                  type: string
                gatewayVlanId:
                  description: The gateway IP (next hop) VLAN ID of the static route
                  type: string
                name:
                  description: The name of the new static route
                  type: string
                subnet:
                  description: The subnet of the static route
                  type: string
              required:
                - name
                - subnet
                - gatewayIp
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    fixedIpAssignments: {}
                    gatewayIp: 1.2.3.5
                    gatewayVlanId: 100
                    id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                    ipVersion: 4
                    name: My route
                    networkId: N_24329156
                    reservedIpRanges: []
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Add a static route for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
  "/networks/{networkId}/appliance/staticRoutes/{staticRouteId}":
    delete:
      description: Delete a static route from an MX or teleworker network
      operationId: deleteNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a static route from an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
    get:
      description: Return a static route for an MX or teleworker network
      operationId: getNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    fixedIpAssignments:
                      22:33:44:55:66:77:
                        ip: 1.2.3.4
                        name: Some client name
                    gatewayIp: 1.2.3.5
                    id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                    ipVersion: 4
                    name: My route
                    networkId: N_24329156
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.1
                        start: 192.168.1.0
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Return a static route for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
    put:
      description: Update a static route for an MX or teleworker network
      operationId: updateNetworkApplianceStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                fixedIpAssignments:
                  22:33:44:55:66:77:
                    ip: 1.2.3.4
                    name: Some client name
                name: My route
                reservedIpRanges:
                  - comment: A reserved IP range
                    end: 192.168.1.1
                    start: 192.168.1.0
                subnet: 192.168.1.0/24
              properties:
                enabled:
                  description: The enabled state of the static route
                  type: boolean
                fixedIpAssignments:
                  description: The DHCP fixed IP assignments on the static route. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
                  properties: {}
                  type: object
                gatewayIp:
                  description: The gateway IP (next hop) of the static route
                  type: string
                gatewayVlanId:
                  description: The gateway IP (next hop) VLAN ID of the static route
                  type: string
                name:
                  description: The name of the static route
                  type: string
                reservedIpRanges:
                  description: The DHCP reserved IP ranges on the static route
                  items:
                    properties:
                      comment:
                        description: A text comment for the reserved range
                        type: string
                      end:
                        description: The last IP in the reserved range
                        type: string
                      start:
                        description: The first IP in the reserved range
                        type: string
                    required:
                      - start
                      - end
                      - comment
                    type: object
                  type: array
                subnet:
                  description: The subnet of the static route
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    fixedIpAssignments:
                      22:33:44:55:66:77:
                        ip: 1.2.3.4
                        name: Some client name
                    gatewayIp: 1.2.3.5
                    id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                    ipVersion: 4
                    name: My route
                    networkId: N_24329156
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.1
                        start: 192.168.1.0
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update a static route for an MX or teleworker network
      tags:
        - appliance
        - configure
        - staticRoutes
  "/networks/{networkId}/appliance/trafficShaping":
    get:
      description: Display the traffic shaping settings for an MX network
      operationId: getNetworkApplianceTrafficShaping
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    globalBandwidthLimits:
                      limitDown: 5120
                      limitUp: 2048
              schema:
                type: object
          description: Successful operation
      summary: Display the traffic shaping settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
    put:
      description: Update the traffic shaping settings for an MX network
      operationId: updateNetworkApplianceTrafficShaping
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                globalBandwidthLimits:
                  limitDown: 5120
                  limitUp: 2048
              properties:
                globalBandwidthLimits:
                  description: Global per-client bandwidth limit
                  properties:
                    limitDown:
                      description: The download bandwidth limit in Kbps. (0 represents no limit.)
                      type: integer
                    limitUp:
                      description: The upload bandwidth limit in Kbps. (0 represents no limit.)
                      type: integer
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    globalBandwidthLimits:
                      limitDown: 5120
                      limitUp: 2048
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic shaping settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
  "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses":
    get:
      description: List all custom performance classes for an MX network
      operationId: getNetworkApplianceTrafficShapingCustomPerformanceClasses
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - customPerformanceClassId: "123"
                      maxJitter: 100
                      maxLatency: 100
                      maxLossPercentage: 5
                      name: myCustomPerformanceClass
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List all custom performance classes for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
    post:
      description: Add a custom performance class for an MX network
      operationId: createNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                maxJitter: 100
                maxLatency: 100
                maxLossPercentage: 5
                name: myCustomPerformanceClass
              properties:
                maxJitter:
                  description: Maximum jitter in milliseconds
                  type: integer
                maxLatency:
                  description: Maximum latency in milliseconds
                  type: integer
                maxLossPercentage:
                  description: Maximum percentage of packet loss
                  type: integer
                name:
                  description: Name of the custom performance class
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    customPerformanceClassId: "123"
                    maxJitter: 100
                    maxLatency: 100
                    maxLossPercentage: 5
                    name: myCustomPerformanceClass
              schema:
                type: object
          description: Successful operation
      summary: Add a custom performance class for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
  "/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}":
    delete:
      description: Delete a custom performance class from an MX network
      operationId: deleteNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: customPerformanceClassId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a custom performance class from an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
    get:
      description: Return a custom performance class for an MX network
      operationId: getNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: customPerformanceClassId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    customPerformanceClassId: "123"
                    maxJitter: 100
                    maxLatency: 100
                    maxLossPercentage: 5
                    name: myCustomPerformanceClass
              schema:
                type: object
          description: Successful operation
      summary: Return a custom performance class for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
    put:
      description: Update a custom performance class for an MX network
      operationId: updateNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: customPerformanceClassId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                maxJitter: 100
                maxLatency: 100
                maxLossPercentage: 5
                name: myCustomPerformanceClass
              properties:
                maxJitter:
                  description: Maximum jitter in milliseconds
                  type: integer
                maxLatency:
                  description: Maximum latency in milliseconds
                  type: integer
                maxLossPercentage:
                  description: Maximum percentage of packet loss
                  type: integer
                name:
                  description: Name of the custom performance class
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    customPerformanceClassId: "123"
                    maxJitter: 100
                    maxLatency: 100
                    maxLossPercentage: 5
                    name: myCustomPerformanceClass
              schema:
                type: object
          description: Successful operation
      summary: Update a custom performance class for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - customPerformanceClasses
  "/networks/{networkId}/appliance/trafficShaping/rules":
    get:
      description: Display the traffic shaping settings rules for an MX network
      operationId: getNetworkApplianceTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultRulesEnabled: true
                    rules:
                      - definitions:
                          - type: host
                            value: google.com
                          - type: port
                            value: "9090"
                          - type: ipRange
                            value: 192.1.0.0
                          - type: ipRange
                            value: 192.1.0.0/16
                          - type: ipRange
                            value: 10.1.0.0/16:80
                          - type: localNet
                            value: 192.168.0.0/16
                        dscpTagValue: 0
                        perClientBandwidthLimits:
                          bandwidthLimits:
                            limitDown: 1000000
                            limitUp: 1000000
                          settings: custom
                        priority: normal
              schema:
                type: object
          description: Successful operation
      summary: Display the traffic shaping settings rules for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - rules
    put:
      description: Update the traffic shaping settings rules for an MX network
      operationId: updateNetworkApplianceTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                defaultRulesEnabled: true
                rules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: "9090"
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: 10.1.0.0/16:80
                      - type: localNet
                        value: 192.168.0.0/16
                    dscpTagValue: 0
                    perClientBandwidthLimits:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
                    priority: normal
              properties:
                defaultRulesEnabled:
                  description: Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
                  type: boolean
                rules:
                  description: |2
                        An array of traffic shaping rules. Rules are applied in the order that
                        they are specified in. An empty list (or null) means no rules. Note that
                        you are allowed a maximum of 8 rules.
                  items:
                    properties:
                      definitions:
                        description: |2
                              A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                        items:
                          properties:
                            type:
                              description: The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
                              enum:
                                - application
                                - applicationCategory
                                - host
                                - ipRange
                                - localNet
                                - port
                              type: string
                            value:
                              description: |2
                                    If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                    a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                    "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                    custom ports.
                                     If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                    with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                    endpoint).
                              type: string
                          required:
                            - type
                            - value
                          type: object
                        type: array
                      dscpTagValue:
                        description: |2
                              The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                              For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                        type: integer
                      perClientBandwidthLimits:
                        description: |2
                              An object describing the bandwidth settings for your rule.
                        properties:
                          bandwidthLimits:
                            description: The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
                            properties:
                              limitDown:
                                description: The maximum download limit (integer, in Kbps).
                                type: integer
                              limitUp:
                                description: The maximum upload limit (integer, in Kbps).
                                type: integer
                            type: object
                          settings:
                            description: How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
                            type: string
                        type: object
                      priority:
                        description: |2
                              A string, indicating the priority level for packets bound to your rule.
                              Can be 'low', 'normal' or 'high'.
                        type: string
                    required:
                      - definitions
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultRulesEnabled: true
                    rules:
                      - definitions:
                          - type: host
                            value: google.com
                          - type: port
                            value: "9090"
                          - type: ipRange
                            value: 192.1.0.0
                          - type: ipRange
                            value: 192.1.0.0/16
                          - type: ipRange
                            value: 10.1.0.0/16:80
                          - type: localNet
                            value: 192.168.0.0/16
                        dscpTagValue: 0
                        perClientBandwidthLimits:
                          bandwidthLimits:
                            limitDown: 1000000
                            limitUp: 1000000
                          settings: custom
                        priority: normal
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic shaping settings rules for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - rules
  "/networks/{networkId}/appliance/trafficShaping/uplinkBandwidth":
    get:
      description: Returns the uplink bandwidth limits for your MX network. This may not reflect the affected device's hardware capabilities.  For more information on your device's hardware capabilities, please consult our MX Family Datasheet - [https://meraki.cisco.com/product-collateral/mx-family-datasheet/?file]
      operationId: getNetworkApplianceTrafficShapingUplinkBandwidth
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidthLimits:
                      cellular:
                        limitDown: 51200
                        limitUp: 51200
                      wan1:
                        limitDown: 1000000
                        limitUp: 1000000
                      wan2:
                        limitDown: 1000000
                        limitUp: 1000000
              schema:
                properties:
                  bandwidthLimits:
                    description: A hash uplink keys and their configured settings for the Appliance
                    properties:
                      cellular:
                        description: uplink cellular configured limits [optional]
                        properties:
                          limitDown:
                            description: configured DOWN limit for the uplink (in Kbps).  Null indicated unlimited
                            type: integer
                          limitUp:
                            description: configured UP limit for the uplink (in Kbps).  Null indicated unlimited
                            type: integer
                        type: object
                      wan1:
                        description: uplink wan1 configured limits [optional]
                        properties:
                          limitDown:
                            description: configured DOWN limit for the uplink (in Kbps).  Null indicated unlimited
                            type: integer
                          limitUp:
                            description: configured UP limit for the uplink (in Kbps).  Null indicated unlimited
                            type: integer
                        type: object
                      wan2:
                        description: uplink wan2 configured limits [optional]
                        properties:
                          limitDown:
                            description: configured DOWN limit for the uplink (in Kbps).  Null indicated unlimited
                            type: integer
                          limitUp:
                            description: configured UP limit for the uplink (in Kbps).  Null indicated unlimited
                            type: integer
                        type: object
                    type: object
                type: object
          description: Successful operation
      summary: Returns the uplink bandwidth limits for your MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkBandwidth
    put:
      description: Updates the uplink bandwidth settings for your MX network.
      operationId: updateNetworkApplianceTrafficShapingUplinkBandwidth
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                bandwidthLimits:
                  cellular:
                    limitDown: 51200
                    limitUp: 51200
                  wan1:
                    limitDown: 1000000
                    limitUp: 1000000
                  wan2:
                    limitDown: 1000000
                    limitUp: 1000000
              properties:
                bandwidthLimits:
                  description: A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
                  properties:
                    cellular:
                      description: The bandwidth settings for the 'cellular' uplink
                      properties:
                        limitDown:
                          description: The maximum download limit (integer, in Kbps). null indicates no limit
                          type: integer
                        limitUp:
                          description: The maximum upload limit (integer, in Kbps). null indicates no limit
                          type: integer
                      type: object
                    wan1:
                      description: The bandwidth settings for the 'wan1' uplink
                      properties:
                        limitDown:
                          description: The maximum download limit (integer, in Kbps). null indicates no limit
                          type: integer
                        limitUp:
                          description: The maximum upload limit (integer, in Kbps). null indicates no limit
                          type: integer
                      type: object
                    wan2:
                      description: The bandwidth settings for the 'wan2' uplink
                      properties:
                        limitDown:
                          description: The maximum download limit (integer, in Kbps). null indicates no limit
                          type: integer
                        limitUp:
                          description: The maximum upload limit (integer, in Kbps). null indicates no limit
                          type: integer
                      type: object
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidthLimits:
                      cellular:
                        limitDown: 51200
                        limitUp: 51200
                      wan1:
                        limitDown: 1000000
                        limitUp: 1000000
                      wan2:
                        limitDown: 1000000
                        limitUp: 1000000
              schema:
                type: object
          description: Successful operation
      summary: Updates the uplink bandwidth settings for your MX network.
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkBandwidth
  "/networks/{networkId}/appliance/trafficShaping/uplinkSelection":
    get:
      description: Show uplink selection settings for an MX network
      operationId: getNetworkApplianceTrafficShapingUplinkSelection
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    activeActiveAutoVpnEnabled: true
                    defaultUplink: wan1
                    failoverAndFailback:
                      immediate:
                        enabled: true
                    loadBalancingEnabled: true
                    vpnTrafficUplinkPreferences:
                      - failOverCriterion: poorPerformance
                        performanceClass:
                          builtinPerformanceClassName: VoIP
                          customPerformanceClassId: "123456"
                          type: custom
                        preferredUplink: bestForVoIP
                        trafficFilters:
                          - type: applicationCategory
                            value:
                              destination:
                                cidr: any
                                fqdn: www.google.com
                                host: 254
                                network: L_12345678
                                port: 1-1024
                                vlan: 10
                              id: meraki:layer7/category/1
                              protocol: tcp
                              source:
                                cidr: 192.168.1.0/24
                                host: 200
                                network: L_23456789
                                port: any
                                vlan: 20
                    wanTrafficUplinkPreferences:
                      - preferredUplink: wan1
                        trafficFilters:
                          - type: custom
                            value:
                              destination:
                                cidr: any
                                port: any
                              protocol: tcp
                              source:
                                cidr: 192.168.1.0/24
                                host: 254
                                port: 1-1024
                                vlan: 10
              schema:
                properties:
                  activeActiveAutoVpnEnabled:
                    description: Whether active-active AutoVPN is enabled
                    type: boolean
                  defaultUplink:
                    description: "The default uplink. Must be one of: 'wan1' or 'wan2'"
                    enum:
                      - wan1
                      - wan2
                    type: string
                  failoverAndFailback:
                    description: WAN failover and failback
                    properties:
                      immediate:
                        description: Immediate WAN failover and failback
                        properties:
                          enabled:
                            description: Whether immediate WAN failover and failback is enabled
                            type: boolean
                        required:
                          - enabled
                        type: object
                    type: object
                  loadBalancingEnabled:
                    description: Whether load balancing is enabled
                    type: boolean
                  vpnTrafficUplinkPreferences:
                    description: Uplink preference rules for VPN traffic
                    items:
                      properties:
                        failOverCriterion:
                          description: "Fail over criterion for uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'"
                          enum:
                            - poorPerformance
                            - uplinkDown
                          type: string
                        performanceClass:
                          description: Performance class setting for uplink preference rule
                          properties:
                            builtinPerformanceClassName:
                              description: "Name of builtin performance class. Must be present when performanceClass type is 'builtin' and value must be one of: 'VoIP'"
                              enum:
                                - VoIP
                              type: string
                            customPerformanceClassId:
                              description: ID of created custom performance class, must be present when performanceClass type is "custom"
                              type: string
                            type:
                              description: "Type of this performance class. Must be one of: 'builtin' or 'custom'"
                              enum:
                                - builtin
                                - custom
                              type: string
                          required:
                            - type
                          type: object
                        preferredUplink:
                          description: "Preferred uplink for uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'"
                          enum:
                            - bestForVoIP
                            - defaultUplink
                            - loadBalancing
                            - wan1
                            - wan2
                          type: string
                        trafficFilters:
                          description: Traffic filters
                          items:
                            properties:
                              type:
                                description: "Traffic filter type. Must be one of: 'applicationCategory', 'application' or 'custom'"
                                enum:
                                  - application
                                  - applicationCategory
                                  - custom
                                type: string
                              value:
                                description: Value of traffic filter
                                properties:
                                  destination:
                                    description: Destination of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" or "fqdn" property
                                        type: string
                                      fqdn:
                                        description: 'FQDN format address. Cannot be used in combination with the "cidr" or "fqdn" property and is currently only available in the "destination" object of the "vpnTrafficUplinkPreference" object. E.g.: "www.google.com"'
                                        type: string
                                      host:
                                        description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
                                        type: integer
                                      network:
                                        description: 'Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".'
                                        type: string
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                      vlan:
                                        description: VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" or "fqdn" property and is currently only available under a template network.
                                        type: integer
                                    type: object
                                  id:
                                    description: ID of 'applicationCategory' or 'application' type traffic filter
                                    type: string
                                  protocol:
                                    description: "Protocol of 'custom' type traffic filter. Must be one of: 'tcp', 'udp', 'icmp', 'icmp6' or 'any'"
                                    enum:
                                      - any
                                      - icmp
                                      - icmp6
                                      - tcp
                                      - udp
                                    type: string
                                  source:
                                    description: Source of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" property
                                        type: string
                                      host:
                                        description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
                                        type: integer
                                      network:
                                        description: 'Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".'
                                        type: string
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                      vlan:
                                        description: VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" property and is currently only available under a template network.
                                        type: integer
                                    type: object
                                type: object
                            required:
                              - type
                              - value
                            type: object
                          type: array
                      required:
                        - trafficFilters
                        - preferredUplink
                      type: object
                    type: array
                  wanTrafficUplinkPreferences:
                    description: Uplink preference rules for WAN traffic
                    items:
                      properties:
                        preferredUplink:
                          description: "Preferred uplink for uplink preference rule. Must be one of: 'wan1' or 'wan2'"
                          enum:
                            - wan1
                            - wan2
                          type: string
                        trafficFilters:
                          description: Traffic filters
                          items:
                            properties:
                              type:
                                description: Traffic filter type. Must be "custom"
                                enum:
                                  - custom
                                type: string
                              value:
                                description: Value of traffic filter
                                properties:
                                  destination:
                                    description: Destination of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any"
                                        type: string
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                    type: object
                                  protocol:
                                    description: "Protocol of 'custom' type traffic filter. Must be one of: 'tcp', 'udp', 'icmp6' or 'any'"
                                    enum:
                                      - any
                                      - icmp6
                                      - tcp
                                      - udp
                                    type: string
                                  source:
                                    description: Source of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" property
                                        type: string
                                      host:
                                        description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
                                        type: integer
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                      vlan:
                                        description: VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" property and is currently only available under a template network.
                                        type: integer
                                    type: object
                                required:
                                  - source
                                  - destination
                                type: object
                            required:
                              - type
                              - value
                            type: object
                          type: array
                      required:
                        - trafficFilters
                        - preferredUplink
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Show uplink selection settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkSelection
    put:
      description: Update uplink selection settings for an MX network
      operationId: updateNetworkApplianceTrafficShapingUplinkSelection
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                activeActiveAutoVpnEnabled: true
                defaultUplink: wan1
                failoverAndFailback:
                  immediate:
                    enabled: true
                loadBalancingEnabled: true
                vpnTrafficUplinkPreferences:
                  - failOverCriterion: poorPerformance
                    performanceClass:
                      builtinPerformanceClassName: VoIP
                      customPerformanceClassId: "123456"
                      type: custom
                    preferredUplink: bestForVoIP
                    trafficFilters:
                      - type: applicationCategory
                        value:
                          destination:
                            cidr: any
                            fqdn: www.google.com
                            host: 254
                            network: L_12345678
                            port: 1-1024
                            vlan: 10
                          id: meraki:layer7/category/1
                          protocol: tcp
                          source:
                            cidr: 192.168.1.0/24
                            host: 200
                            network: L_23456789
                            port: any
                            vlan: 20
                wanTrafficUplinkPreferences:
                  - preferredUplink: wan1
                    trafficFilters:
                      - type: custom
                        value:
                          destination:
                            cidr: any
                            port: any
                          protocol: tcp
                          source:
                            cidr: 192.168.1.0/24
                            host: 254
                            port: 1-1024
                            vlan: 10
              properties:
                activeActiveAutoVpnEnabled:
                  description: Toggle for enabling or disabling active-active AutoVPN
                  type: boolean
                defaultUplink:
                  description: "The default uplink. Must be one of: 'wan1' or 'wan2'"
                  enum:
                    - wan1
                    - wan2
                  type: string
                failoverAndFailback:
                  description: WAN failover and failback behavior
                  properties:
                    immediate:
                      description: Immediate WAN transition terminates all flows (new and existing) on current WAN when it is deemed unreliable.
                      properties:
                        enabled:
                          description: Toggle for enabling or disabling immediate WAN failover and failback
                          type: boolean
                      required:
                        - enabled
                      type: object
                  type: object
                loadBalancingEnabled:
                  description: Toggle for enabling or disabling load balancing
                  type: boolean
                vpnTrafficUplinkPreferences:
                  description: Array of uplink preference rules for VPN traffic
                  items:
                    properties:
                      failOverCriterion:
                        description: "Fail over criterion for this uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'"
                        enum:
                          - poorPerformance
                          - uplinkDown
                        type: string
                      performanceClass:
                        description: Performance class setting for this uplink preference rule
                        properties:
                          builtinPerformanceClassName:
                            description: "Name of builtin performance class, must be present when performanceClass type is 'builtin', and value must be one of: 'VoIP'"
                            enum:
                              - VoIP
                            type: string
                          customPerformanceClassId:
                            description: ID of created custom performance class, must be present when performanceClass type is 'custom'
                            type: string
                          type:
                            description: "Type of this performance class. Must be one of: 'builtin' or 'custom'"
                            enum:
                              - builtin
                              - custom
                            type: string
                        required:
                          - type
                        type: object
                      preferredUplink:
                        description: "Preferred uplink for this uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'"
                        enum:
                          - bestForVoIP
                          - defaultUplink
                          - loadBalancing
                          - wan1
                          - wan2
                        type: string
                      trafficFilters:
                        description: Array of traffic filters for this uplink preference rule
                        items:
                          properties:
                            type:
                              description: "Type of this traffic filter. Must be one of: 'applicationCategory', 'application' or 'custom'"
                              enum:
                                - application
                                - applicationCategory
                                - custom
                              type: string
                            value:
                              description: Value object of this traffic filter
                              properties:
                                destination:
                                  description: Destination of this custom type traffic filter
                                  properties:
                                    cidr:
                                      description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1" (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
                                      type: string
                                    fqdn:
                                      description: "FQDN format address. Currently only availabe in 'destination' of 'vpnTrafficUplinkPreference' object. E.g.: 'www.google.com'"
                                      type: string
                                    host:
                                      description: Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network.
                                      type: integer
                                    network:
                                      description: 'Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".'
                                      type: string
                                    port:
                                      description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                      type: string
                                    vlan:
                                      description: VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network.
                                      type: integer
                                  type: object
                                id:
                                  description: 'ID of this applicationCategory or application type traffic filter. E.g.: "meraki:layer7/category/1", "meraki:layer7/application/4"'
                                  type: string
                                protocol:
                                  description: "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp', 'icmp', 'icmp6' or 'any'"
                                  enum:
                                    - any
                                    - icmp
                                    - icmp6
                                    - tcp
                                    - udp
                                  type: string
                                source:
                                  description: Source of this custom type traffic filter
                                  properties:
                                    cidr:
                                      description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1" (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
                                      type: string
                                    host:
                                      description: Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network.
                                      type: integer
                                    network:
                                      description: 'Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".'
                                      type: string
                                    port:
                                      description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                      type: string
                                    vlan:
                                      description: VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network.
                                      type: integer
                                  type: object
                              type: object
                          required:
                            - type
                            - value
                          type: object
                        type: array
                    required:
                      - trafficFilters
                      - preferredUplink
                    type: object
                  type: array
                wanTrafficUplinkPreferences:
                  description: Array of uplink preference rules for WAN traffic
                  items:
                    properties:
                      preferredUplink:
                        description: "Preferred uplink for this uplink preference rule. Must be one of: 'wan1' or 'wan2'"
                        enum:
                          - wan1
                          - wan2
                        type: string
                      trafficFilters:
                        description: Array of traffic filters for this uplink preference rule
                        items:
                          properties:
                            type:
                              description: "Type of this traffic filter. Must be one of: 'custom'"
                              enum:
                                - custom
                              type: string
                            value:
                              description: Value object of this traffic filter
                              properties:
                                destination:
                                  description: Destination of this custom type traffic filter
                                  properties:
                                    cidr:
                                      description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1" (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
                                      type: string
                                    port:
                                      description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                      type: string
                                  type: object
                                protocol:
                                  description: "Protocol of this custom type traffic filter. Must be one of: 'tcp', 'udp', 'icmp6' or 'any'"
                                  enum:
                                    - any
                                    - icmp6
                                    - tcp
                                    - udp
                                  type: string
                                source:
                                  description: Source of this custom type traffic filter
                                  properties:
                                    cidr:
                                      description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1" (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
                                      type: string
                                    host:
                                      description: Host ID in the VLAN, should be used along with 'vlan', and not exceed the vlan subnet capacity. Currently only available under a template network.
                                      type: integer
                                    port:
                                      description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                      type: string
                                    vlan:
                                      description: VLAN ID of the configured VLAN in the Meraki network. Currently only available under a template network.
                                      type: integer
                                  type: object
                              required:
                                - source
                                - destination
                              type: object
                          required:
                            - type
                            - value
                          type: object
                        type: array
                    required:
                      - trafficFilters
                      - preferredUplink
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    activeActiveAutoVpnEnabled: true
                    defaultUplink: wan1
                    failoverAndFailback:
                      immediate:
                        enabled: true
                    loadBalancingEnabled: true
                    vpnTrafficUplinkPreferences:
                      - failOverCriterion: poorPerformance
                        performanceClass:
                          builtinPerformanceClassName: VoIP
                          customPerformanceClassId: "123456"
                          type: custom
                        preferredUplink: bestForVoIP
                        trafficFilters:
                          - type: applicationCategory
                            value:
                              destination:
                                cidr: any
                                fqdn: www.google.com
                                host: 254
                                network: L_12345678
                                port: 1-1024
                                vlan: 10
                              id: meraki:layer7/category/1
                              protocol: tcp
                              source:
                                cidr: 192.168.1.0/24
                                host: 200
                                network: L_23456789
                                port: any
                                vlan: 20
                    wanTrafficUplinkPreferences:
                      - preferredUplink: wan1
                        trafficFilters:
                          - type: custom
                            value:
                              destination:
                                cidr: any
                                port: any
                              protocol: tcp
                              source:
                                cidr: 192.168.1.0/24
                                host: 254
                                port: 1-1024
                                vlan: 10
              schema:
                properties:
                  activeActiveAutoVpnEnabled:
                    description: Whether active-active AutoVPN is enabled
                    type: boolean
                  defaultUplink:
                    description: "The default uplink. Must be one of: 'wan1' or 'wan2'"
                    enum:
                      - wan1
                      - wan2
                    type: string
                  failoverAndFailback:
                    description: WAN failover and failback
                    properties:
                      immediate:
                        description: Immediate WAN failover and failback
                        properties:
                          enabled:
                            description: Whether immediate WAN failover and failback is enabled
                            type: boolean
                        required:
                          - enabled
                        type: object
                    type: object
                  loadBalancingEnabled:
                    description: Whether load balancing is enabled
                    type: boolean
                  vpnTrafficUplinkPreferences:
                    description: Uplink preference rules for VPN traffic
                    items:
                      properties:
                        failOverCriterion:
                          description: "Fail over criterion for uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'"
                          enum:
                            - poorPerformance
                            - uplinkDown
                          type: string
                        performanceClass:
                          description: Performance class setting for uplink preference rule
                          properties:
                            builtinPerformanceClassName:
                              description: "Name of builtin performance class. Must be present when performanceClass type is 'builtin' and value must be one of: 'VoIP'"
                              enum:
                                - VoIP
                              type: string
                            customPerformanceClassId:
                              description: ID of created custom performance class, must be present when performanceClass type is "custom"
                              type: string
                            type:
                              description: "Type of this performance class. Must be one of: 'builtin' or 'custom'"
                              enum:
                                - builtin
                                - custom
                              type: string
                          required:
                            - type
                          type: object
                        preferredUplink:
                          description: "Preferred uplink for uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'"
                          enum:
                            - bestForVoIP
                            - defaultUplink
                            - loadBalancing
                            - wan1
                            - wan2
                          type: string
                        trafficFilters:
                          description: Traffic filters
                          items:
                            properties:
                              type:
                                description: "Traffic filter type. Must be one of: 'applicationCategory', 'application' or 'custom'"
                                enum:
                                  - application
                                  - applicationCategory
                                  - custom
                                type: string
                              value:
                                description: Value of traffic filter
                                properties:
                                  destination:
                                    description: Destination of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" or "fqdn" property
                                        type: string
                                      fqdn:
                                        description: 'FQDN format address. Cannot be used in combination with the "cidr" or "fqdn" property and is currently only available in the "destination" object of the "vpnTrafficUplinkPreference" object. E.g.: "www.google.com"'
                                        type: string
                                      host:
                                        description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
                                        type: integer
                                      network:
                                        description: 'Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".'
                                        type: string
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                      vlan:
                                        description: VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" or "fqdn" property and is currently only available under a template network.
                                        type: integer
                                    type: object
                                  id:
                                    description: ID of 'applicationCategory' or 'application' type traffic filter
                                    type: string
                                  protocol:
                                    description: "Protocol of 'custom' type traffic filter. Must be one of: 'tcp', 'udp', 'icmp', 'icmp6' or 'any'"
                                    enum:
                                      - any
                                      - icmp
                                      - icmp6
                                      - tcp
                                      - udp
                                    type: string
                                  source:
                                    description: Source of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" property
                                        type: string
                                      host:
                                        description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
                                        type: integer
                                      network:
                                        description: 'Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".'
                                        type: string
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                      vlan:
                                        description: VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" property and is currently only available under a template network.
                                        type: integer
                                    type: object
                                type: object
                            required:
                              - type
                              - value
                            type: object
                          type: array
                      required:
                        - trafficFilters
                        - preferredUplink
                      type: object
                    type: array
                  wanTrafficUplinkPreferences:
                    description: Uplink preference rules for WAN traffic
                    items:
                      properties:
                        preferredUplink:
                          description: "Preferred uplink for uplink preference rule. Must be one of: 'wan1' or 'wan2'"
                          enum:
                            - wan1
                            - wan2
                          type: string
                        trafficFilters:
                          description: Traffic filters
                          items:
                            properties:
                              type:
                                description: Traffic filter type. Must be "custom"
                                enum:
                                  - custom
                                type: string
                              value:
                                description: Value of traffic filter
                                properties:
                                  destination:
                                    description: Destination of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any"
                                        type: string
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                    type: object
                                  protocol:
                                    description: "Protocol of 'custom' type traffic filter. Must be one of: 'tcp', 'udp', 'icmp6' or 'any'"
                                    enum:
                                      - any
                                      - icmp6
                                      - tcp
                                      - udp
                                    type: string
                                  source:
                                    description: Source of 'custom' type traffic filter
                                    properties:
                                      cidr:
                                        description: CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" property
                                        type: string
                                      host:
                                        description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
                                        type: integer
                                      port:
                                        description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
                                        type: string
                                      vlan:
                                        description: VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" property and is currently only available under a template network.
                                        type: integer
                                    type: object
                                required:
                                  - source
                                  - destination
                                type: object
                            required:
                              - type
                              - value
                            type: object
                          type: array
                      required:
                        - trafficFilters
                        - preferredUplink
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update uplink selection settings for an MX network
      tags:
        - appliance
        - configure
        - trafficShaping
        - uplinkSelection
  "/networks/{networkId}/appliance/uplinks/usageHistory":
    get:
      description: Get the sent and received bytes for each uplink of a network.
      operationId: getNetworkApplianceUplinksUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 10 minutes.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60."
          in: query
          name: resolution
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - byInterface:
                        - interface: wan1
                          received: 9528787
                          sent: 1562063
                        - interface: wan2
                          received: 2747782
                          sent: 396646
                      endTime: 2021-07-22T03:00:00Z
                      startTime: 2021-07-22T02:00:00Z
                    - byInterface:
                        - interface: wan1
                          received: 12253346
                          sent: 6326222
                        - interface: wan2
                          received: 2981021
                          sent: 402850
                      endTime: 2021-07-22T04:00:00Z
                      startTime: 2021-07-22T03:00:00Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Get the sent and received bytes for each uplink of a network.
      tags:
        - appliance
        - monitor
        - uplinks
        - usageHistory
  "/networks/{networkId}/appliance/vlans":
    get:
      description: List the VLANs for an MX network
      operationId: getNetworkApplianceVlans
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - applianceIp: 192.168.1.2
                      cidr: 192.168.1.0/24
                      dhcpBootFilename: sample.file
                      dhcpBootNextServer: 1.2.3.4
                      dhcpBootOptionsEnabled: false
                      dhcpHandling: Run a DHCP server
                      dhcpLeaseTime: 1 day
                      dhcpOptions:
                        - code: "5"
                          type: text
                          value: five
                      dhcpRelayServerIps:
                        - 192.168.1.0/24
                        - 192.168.128.0/24
                      dnsNameservers: google_dns
                      groupPolicyId: "101"
                      id: "1234"
                      interfaceId: "1284392014819"
                      ipv6:
                        enabled: true
                        prefixAssignments:
                          - autonomous: false
                            origin:
                              interfaces:
                                - wan0
                              type: internet
                            staticApplianceIp6: 2001:db8:3c4d:15::1
                            staticPrefix: 2001:db8:3c4d:15::/64
                      mandatoryDhcp:
                        enabled: true
                      mask: 28
                      name: My VLAN
                      reservedIpRanges:
                        - comment: A reserved IP range
                          end: 192.168.1.1
                          start: 192.168.1.0
                      subnet: 192.168.1.0/24
                      templateVlanType: same
                      vpnNatSubnet: 192.168.1.0/24
              schema:
                items:
                  properties:
                    applianceIp:
                      description: The local IP of the appliance on the VLAN
                      type: string
                    cidr:
                      description: CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
                      type: string
                    dhcpBootFilename:
                      description: DHCP boot option for boot filename
                      type: string
                    dhcpBootNextServer:
                      description: DHCP boot option to direct boot clients to the server to load the boot file from
                      type: string
                    dhcpBootOptionsEnabled:
                      description: Use DHCP boot options specified in other properties
                      type: boolean
                    dhcpHandling:
                      description: "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
                      enum:
                        - Do not respond to DHCP requests
                        - Relay DHCP to another server
                        - Run a DHCP server
                      type: string
                    dhcpLeaseTime:
                      description: "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
                      enum:
                        - 1 day
                        - 1 hour
                        - 1 week
                        - 12 hours
                        - 30 minutes
                        - 4 hours
                      type: string
                    dhcpOptions:
                      description: The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
                      items:
                        properties:
                          code:
                            description: The code for the DHCP option. This should be an integer between 2 and 254.
                            type: string
                          type:
                            description: "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
                            enum:
                              - hex
                              - integer
                              - ip
                              - text
                            type: string
                          value:
                            description: The value for the DHCP option
                            type: string
                        required:
                          - code
                          - type
                          - value
                        type: object
                      type: array
                    dhcpRelayServerIps:
                      description: The IPs of the DHCP servers that DHCP requests should be relayed to
                      items:
                        type: string
                      type: array
                    dnsNameservers:
                      description: The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names
                      type: string
                    fixedIpAssignments:
                      description: The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
                      properties: {}
                      type: object
                    groupPolicyId:
                      description: The id of the desired group policy to apply to the VLAN
                      type: string
                    id:
                      description: The VLAN ID of the VLAN
                      type: string
                    interfaceId:
                      description: The interface ID of the VLAN
                      type: string
                    ipv6:
                      description: IPv6 configuration on the VLAN
                      properties:
                        enabled:
                          description: Enable IPv6 on VLAN
                          type: boolean
                        prefixAssignments:
                          description: Prefix assignments on the VLAN
                          items:
                            properties:
                              autonomous:
                                description: Auto assign a /64 prefix from the origin to the VLAN
                                type: boolean
                              origin:
                                description: The origin of the prefix
                                properties:
                                  interfaces:
                                    description: Interfaces associated with the prefix
                                    items:
                                      type: string
                                    type: array
                                  type:
                                    description: Type of the origin
                                    enum:
                                      - independent
                                      - internet
                                    type: string
                                type: object
                              staticApplianceIp6:
                                description: Manual configuration of the IPv6 Appliance IP
                                type: string
                              staticPrefix:
                                description: Manual configuration of a /64 prefix on the VLAN
                                type: string
                            type: object
                          type: array
                      type: object
                    mandatoryDhcp:
                      description: Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                      properties:
                        enabled:
                          description: Enable Mandatory DHCP on VLAN.
                          type: boolean
                      type: object
                    mask:
                      description: Mask used for the subnet of all bound to the template networks. Applicable only for template network.
                      type: integer
                    name:
                      description: The name of the VLAN
                      type: string
                    reservedIpRanges:
                      description: The DHCP reserved IP ranges on the VLAN
                      items:
                        properties:
                          comment:
                            description: A text comment for the reserved range
                            type: string
                          end:
                            description: The last IP in the reserved range
                            type: string
                          start:
                            description: The first IP in the reserved range
                            type: string
                        type: object
                      type: array
                    subnet:
                      description: The subnet of the VLAN
                      type: string
                    templateVlanType:
                      default: same
                      description: Type of subnetting of the VLAN. Applicable only for template network.
                      enum:
                        - same
                        - unique
                      type: string
                    vpnNatSubnet:
                      description: The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the VLANs for an MX network
      tags:
        - appliance
        - configure
        - vlans
    post:
      description: Add a VLAN
      operationId: createNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                applianceIp: 192.168.1.2
                groupPolicyId: "101"
                id: "1234"
                name: My VLAN
                subnet: 192.168.1.0/24
              properties:
                applianceIp:
                  description: The local IP of the appliance on the VLAN
                  type: string
                cidr:
                  description: CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
                  type: string
                groupPolicyId:
                  description: The id of the desired group policy to apply to the VLAN
                  type: string
                id:
                  description: The VLAN ID of the new VLAN (must be between 1 and 4094)
                  type: string
                ipv6:
                  description: IPv6 configuration on the VLAN
                  properties:
                    enabled:
                      description: Enable IPv6 on VLAN.
                      type: boolean
                    prefixAssignments:
                      description: Prefix assignments on the VLAN
                      items:
                        properties:
                          autonomous:
                            description: Auto assign a /64 prefix from the origin to the VLAN
                            type: boolean
                          origin:
                            description: The origin of the prefix
                            properties:
                              interfaces:
                                description: Interfaces associated with the prefix
                                items:
                                  type: string
                                type: array
                              type:
                                description: Type of the origin
                                enum:
                                  - independent
                                  - internet
                                type: string
                            required:
                              - type
                            type: object
                          staticApplianceIp6:
                            description: Manual configuration of the IPv6 Appliance IP
                            type: string
                          staticPrefix:
                            description: Manual configuration of a /64 prefix on the VLAN
                            type: string
                        type: object
                      type: array
                  type: object
                mandatoryDhcp:
                  description: Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                  properties:
                    enabled:
                      description: Enable Mandatory DHCP on VLAN.
                      type: boolean
                  type: object
                mask:
                  description: Mask used for the subnet of all bound to the template networks. Applicable only for template network.
                  type: integer
                name:
                  description: The name of the new VLAN
                  type: string
                subnet:
                  description: The subnet of the VLAN
                  type: string
                templateVlanType:
                  default: same
                  description: Type of subnetting of the VLAN. Applicable only for template network.
                  enum:
                    - same
                    - unique
                  type: string
              required:
                - id
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    applianceIp: 192.168.1.2
                    cidr: 192.168.1.0/24
                    groupPolicyId: "101"
                    id: "1234"
                    interfaceId: "1284392014819"
                    ipv6:
                      enabled: true
                      prefixAssignments:
                        - autonomous: false
                          origin:
                            interfaces:
                              - wan0
                            type: internet
                          staticApplianceIp6: 2001:db8:3c4d:15::1
                          staticPrefix: 2001:db8:3c4d:15::/64
                    mandatoryDhcp:
                      enabled: true
                    mask: 28
                    name: My VLAN
                    subnet: 192.168.1.0/24
                    templateVlanType: same
              schema:
                properties:
                  applianceIp:
                    description: The local IP of the appliance on the VLAN
                    type: string
                  cidr:
                    description: CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
                    type: string
                  groupPolicyId:
                    description: The id of the desired group policy to apply to the VLAN
                    type: string
                  id:
                    description: The VLAN ID of the VLAN
                    type: string
                  interfaceId:
                    description: The interface ID of the VLAN
                    type: string
                  ipv6:
                    description: IPv6 configuration on the VLAN
                    properties:
                      enabled:
                        description: Enable IPv6 on VLAN
                        type: boolean
                      prefixAssignments:
                        description: Prefix assignments on the VLAN
                        items:
                          properties:
                            autonomous:
                              description: Auto assign a /64 prefix from the origin to the VLAN
                              type: boolean
                            origin:
                              description: The origin of the prefix
                              properties:
                                interfaces:
                                  description: Interfaces associated with the prefix
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: Type of the origin
                                  enum:
                                    - independent
                                    - internet
                                  type: string
                              type: object
                            staticApplianceIp6:
                              description: Manual configuration of the IPv6 Appliance IP
                              type: string
                            staticPrefix:
                              description: Manual configuration of a /64 prefix on the VLAN
                              type: string
                          type: object
                        type: array
                    type: object
                  mandatoryDhcp:
                    description: Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                    properties:
                      enabled:
                        description: Enable Mandatory DHCP on VLAN.
                        type: boolean
                    type: object
                  mask:
                    description: Mask used for the subnet of all bound to the template networks. Applicable only for template network.
                    type: integer
                  name:
                    description: The name of the VLAN
                    type: string
                  subnet:
                    description: The subnet of the VLAN
                    type: string
                  templateVlanType:
                    default: same
                    description: Type of subnetting of the VLAN. Applicable only for template network.
                    enum:
                      - same
                      - unique
                    type: string
                type: object
          description: Successful operation
      summary: Add a VLAN
      tags:
        - appliance
        - configure
        - vlans
  "/networks/{networkId}/appliance/vlans/settings":
    get:
      description: Returns the enabled status of VLANs for the network
      operationId: getNetworkApplianceVlansSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    vlansEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Returns the enabled status of VLANs for the network
      tags:
        - appliance
        - configure
        - vlans
        - settings
    put:
      description: Enable/Disable VLANs for the given network
      operationId: updateNetworkApplianceVlansSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                vlansEnabled: true
              properties:
                vlansEnabled:
                  description: Boolean indicating whether to enable (true) or disable (false) VLANs for the network
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    vlansEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Enable/Disable VLANs for the given network
      tags:
        - appliance
        - configure
        - vlans
        - settings
  "/networks/{networkId}/appliance/vlans/{vlanId}":
    delete:
      description: Delete a VLAN from a network
      operationId: deleteNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: vlanId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a VLAN from a network
      tags:
        - appliance
        - configure
        - vlans
    get:
      description: Return a VLAN
      operationId: getNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: vlanId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    applianceIp: 192.168.1.2
                    cidr: 192.168.1.0/24
                    dhcpBootFilename: sample.file
                    dhcpBootNextServer: 1.2.3.4
                    dhcpBootOptionsEnabled: false
                    dhcpHandling: Run a DHCP server
                    dhcpLeaseTime: 1 day
                    dhcpOptions:
                      - code: "5"
                        type: text
                        value: five
                    dhcpRelayServerIps:
                      - 192.168.1.0/24
                      - 192.168.128.0/24
                    dnsNameservers: google_dns
                    groupPolicyId: "101"
                    id: "1234"
                    interfaceId: "1284392014819"
                    ipv6:
                      enabled: true
                      prefixAssignments:
                        - autonomous: false
                          origin:
                            interfaces:
                              - wan0
                            type: internet
                          staticApplianceIp6: 2001:db8:3c4d:15::1
                          staticPrefix: 2001:db8:3c4d:15::/64
                    mandatoryDhcp:
                      enabled: true
                    mask: 28
                    name: My VLAN
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.1
                        start: 192.168.1.0
                    subnet: 192.168.1.0/24
                    templateVlanType: same
                    vpnNatSubnet: 192.168.1.0/24
              schema:
                properties:
                  applianceIp:
                    description: The local IP of the appliance on the VLAN
                    type: string
                  cidr:
                    description: CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
                    type: string
                  dhcpBootFilename:
                    description: DHCP boot option for boot filename
                    type: string
                  dhcpBootNextServer:
                    description: DHCP boot option to direct boot clients to the server to load the boot file from
                    type: string
                  dhcpBootOptionsEnabled:
                    description: Use DHCP boot options specified in other properties
                    type: boolean
                  dhcpHandling:
                    description: "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
                    enum:
                      - Do not respond to DHCP requests
                      - Relay DHCP to another server
                      - Run a DHCP server
                    type: string
                  dhcpLeaseTime:
                    description: "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
                    enum:
                      - 1 day
                      - 1 hour
                      - 1 week
                      - 12 hours
                      - 30 minutes
                      - 4 hours
                    type: string
                  dhcpOptions:
                    description: The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
                    items:
                      properties:
                        code:
                          description: The code for the DHCP option. This should be an integer between 2 and 254.
                          type: string
                        type:
                          description: "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
                          enum:
                            - hex
                            - integer
                            - ip
                            - text
                          type: string
                        value:
                          description: The value for the DHCP option
                          type: string
                      required:
                        - code
                        - type
                        - value
                      type: object
                    type: array
                  dhcpRelayServerIps:
                    description: The IPs of the DHCP servers that DHCP requests should be relayed to
                    items:
                      type: string
                    type: array
                  dnsNameservers:
                    description: The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names
                    type: string
                  fixedIpAssignments:
                    description: The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
                    properties: {}
                    type: object
                  groupPolicyId:
                    description: The id of the desired group policy to apply to the VLAN
                    type: string
                  id:
                    description: The VLAN ID of the VLAN
                    type: string
                  interfaceId:
                    description: The interface ID of the VLAN
                    type: string
                  ipv6:
                    description: IPv6 configuration on the VLAN
                    properties:
                      enabled:
                        description: Enable IPv6 on VLAN
                        type: boolean
                      prefixAssignments:
                        description: Prefix assignments on the VLAN
                        items:
                          properties:
                            autonomous:
                              description: Auto assign a /64 prefix from the origin to the VLAN
                              type: boolean
                            origin:
                              description: The origin of the prefix
                              properties:
                                interfaces:
                                  description: Interfaces associated with the prefix
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: Type of the origin
                                  enum:
                                    - independent
                                    - internet
                                  type: string
                              type: object
                            staticApplianceIp6:
                              description: Manual configuration of the IPv6 Appliance IP
                              type: string
                            staticPrefix:
                              description: Manual configuration of a /64 prefix on the VLAN
                              type: string
                          type: object
                        type: array
                    type: object
                  mandatoryDhcp:
                    description: Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                    properties:
                      enabled:
                        description: Enable Mandatory DHCP on VLAN.
                        type: boolean
                    type: object
                  mask:
                    description: Mask used for the subnet of all bound to the template networks. Applicable only for template network.
                    type: integer
                  name:
                    description: The name of the VLAN
                    type: string
                  reservedIpRanges:
                    description: The DHCP reserved IP ranges on the VLAN
                    items:
                      properties:
                        comment:
                          description: A text comment for the reserved range
                          type: string
                        end:
                          description: The last IP in the reserved range
                          type: string
                        start:
                          description: The first IP in the reserved range
                          type: string
                      type: object
                    type: array
                  subnet:
                    description: The subnet of the VLAN
                    type: string
                  templateVlanType:
                    default: same
                    description: Type of subnetting of the VLAN. Applicable only for template network.
                    enum:
                      - same
                      - unique
                    type: string
                  vpnNatSubnet:
                    description: The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
                    type: string
                type: object
          description: Successful operation
      summary: Return a VLAN
      tags:
        - appliance
        - configure
        - vlans
    put:
      description: Update a VLAN
      operationId: updateNetworkApplianceVlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: vlanId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                applianceIp: 192.168.1.2
                cidr: 192.168.1.0/24
                dhcpBootFilename: sample.file
                dhcpBootNextServer: 1.2.3.4
                dhcpBootOptionsEnabled: false
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpOptions:
                  - code: "5"
                    type: text
                    value: five
                dhcpRelayServerIps:
                  - 192.168.1.0/24
                  - 192.168.128.0/24
                dnsNameservers: google_dns
                fixedIpAssignments:
                  22:33:44:55:66:77:
                    ip: 1.2.3.4
                    name: Some client name
                groupPolicyId: "101"
                ipv6:
                  enabled: true
                  prefixAssignments:
                    - autonomous: false
                      origin:
                        interfaces:
                          - wan0
                        type: internet
                      staticApplianceIp6: 2001:db8:3c4d:15::1
                      staticPrefix: 2001:db8:3c4d:15::/64
                mandatoryDhcp:
                  enabled: true
                mask: 28
                name: My VLAN
                reservedIpRanges:
                  - comment: A reserved IP range
                    end: 192.168.1.1
                    start: 192.168.1.0
                subnet: 192.168.1.0/24
                templateVlanType: same
                vpnNatSubnet: 192.168.1.0/24
              properties:
                applianceIp:
                  description: The local IP of the appliance on the VLAN
                  type: string
                cidr:
                  description: CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
                  type: string
                dhcpBootFilename:
                  description: DHCP boot option for boot filename
                  type: string
                dhcpBootNextServer:
                  description: DHCP boot option to direct boot clients to the server to load the boot file from
                  type: string
                dhcpBootOptionsEnabled:
                  description: Use DHCP boot options specified in other properties
                  type: boolean
                dhcpHandling:
                  description: "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
                  enum:
                    - Do not respond to DHCP requests
                    - Relay DHCP to another server
                    - Run a DHCP server
                  type: string
                dhcpLeaseTime:
                  description: "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
                  enum:
                    - 1 day
                    - 1 hour
                    - 1 week
                    - 12 hours
                    - 30 minutes
                    - 4 hours
                  type: string
                dhcpOptions:
                  description: The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
                  items:
                    properties:
                      code:
                        description: The code for the DHCP option. This should be an integer between 2 and 254.
                        type: string
                      type:
                        description: "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
                        enum:
                          - hex
                          - integer
                          - ip
                          - text
                        type: string
                      value:
                        description: The value for the DHCP option
                        type: string
                    required:
                      - code
                      - type
                      - value
                    type: object
                  type: array
                dhcpRelayServerIps:
                  description: The IPs of the DHCP servers that DHCP requests should be relayed to
                  items:
                    type: string
                  type: array
                dnsNameservers:
                  description: The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names
                  type: string
                fixedIpAssignments:
                  description: The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
                  properties: {}
                  type: object
                groupPolicyId:
                  description: The id of the desired group policy to apply to the VLAN
                  type: string
                ipv6:
                  description: IPv6 configuration on the VLAN
                  properties:
                    enabled:
                      description: Enable IPv6 on VLAN.
                      type: boolean
                    prefixAssignments:
                      description: Prefix assignments on the VLAN
                      items:
                        properties:
                          autonomous:
                            description: Auto assign a /64 prefix from the origin to the VLAN
                            type: boolean
                          origin:
                            description: The origin of the prefix
                            properties:
                              interfaces:
                                description: Interfaces associated with the prefix
                                items:
                                  type: string
                                type: array
                              type:
                                description: Type of the origin
                                enum:
                                  - independent
                                  - internet
                                type: string
                            required:
                              - type
                            type: object
                          staticApplianceIp6:
                            description: Manual configuration of the IPv6 Appliance IP
                            type: string
                          staticPrefix:
                            description: Manual configuration of a /64 prefix on the VLAN
                            type: string
                        type: object
                      type: array
                  type: object
                mandatoryDhcp:
                  description: Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                  properties:
                    enabled:
                      description: Enable Mandatory DHCP on VLAN.
                      type: boolean
                  type: object
                mask:
                  description: Mask used for the subnet of all bound to the template networks. Applicable only for template network.
                  type: integer
                name:
                  description: The name of the VLAN
                  type: string
                reservedIpRanges:
                  description: The DHCP reserved IP ranges on the VLAN
                  items:
                    properties:
                      comment:
                        description: A text comment for the reserved range
                        type: string
                      end:
                        description: The last IP in the reserved range
                        type: string
                      start:
                        description: The first IP in the reserved range
                        type: string
                    required:
                      - start
                      - end
                      - comment
                    type: object
                  type: array
                subnet:
                  description: The subnet of the VLAN
                  type: string
                templateVlanType:
                  description: Type of subnetting of the VLAN. Applicable only for template network.
                  enum:
                    - same
                    - unique
                  type: string
                vpnNatSubnet:
                  description: The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    applianceIp: 192.168.1.2
                    cidr: 192.168.1.0/24
                    dhcpBootFilename: sample.file
                    dhcpBootNextServer: 1.2.3.4
                    dhcpBootOptionsEnabled: false
                    dhcpHandling: Run a DHCP server
                    dhcpLeaseTime: 1 day
                    dhcpOptions:
                      - code: "5"
                        type: text
                        value: five
                    dhcpRelayServerIps:
                      - 192.168.1.0/24
                      - 192.168.128.0/24
                    dnsNameservers: google_dns
                    groupPolicyId: "101"
                    id: "1234"
                    interfaceId: "1284392014819"
                    ipv6:
                      enabled: true
                      prefixAssignments:
                        - autonomous: false
                          origin:
                            interfaces:
                              - wan0
                            type: internet
                          staticApplianceIp6: 2001:db8:3c4d:15::1
                          staticPrefix: 2001:db8:3c4d:15::/64
                    mandatoryDhcp:
                      enabled: true
                    mask: 28
                    name: My VLAN
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.1
                        start: 192.168.1.0
                    subnet: 192.168.1.0/24
                    templateVlanType: same
                    vpnNatSubnet: 192.168.1.0/24
              schema:
                properties:
                  applianceIp:
                    description: The local IP of the appliance on the VLAN
                    type: string
                  cidr:
                    description: CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
                    type: string
                  dhcpBootFilename:
                    description: DHCP boot option for boot filename
                    type: string
                  dhcpBootNextServer:
                    description: DHCP boot option to direct boot clients to the server to load the boot file from
                    type: string
                  dhcpBootOptionsEnabled:
                    description: Use DHCP boot options specified in other properties
                    type: boolean
                  dhcpHandling:
                    description: "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'"
                    enum:
                      - Do not respond to DHCP requests
                      - Relay DHCP to another server
                      - Run a DHCP server
                    type: string
                  dhcpLeaseTime:
                    description: "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'"
                    enum:
                      - 1 day
                      - 1 hour
                      - 1 week
                      - 12 hours
                      - 30 minutes
                      - 4 hours
                    type: string
                  dhcpOptions:
                    description: The list of DHCP options that will be included in DHCP responses. Each object in the list should have "code", "type", and "value" properties.
                    items:
                      properties:
                        code:
                          description: The code for the DHCP option. This should be an integer between 2 and 254.
                          type: string
                        type:
                          description: "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'"
                          enum:
                            - hex
                            - integer
                            - ip
                            - text
                          type: string
                        value:
                          description: The value for the DHCP option
                          type: string
                      required:
                        - code
                        - type
                        - value
                      type: object
                    type: array
                  dhcpRelayServerIps:
                    description: The IPs of the DHCP servers that DHCP requests should be relayed to
                    items:
                      type: string
                    type: array
                  dnsNameservers:
                    description: The DNS nameservers used for DHCP responses, either "upstream_dns", "google_dns", "opendns", or a newline seperated string of IP addresses or domain names
                    type: string
                  fixedIpAssignments:
                    description: The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain "ip" and "name" string fields. See the sample request/response for more details.
                    properties: {}
                    type: object
                  groupPolicyId:
                    description: The id of the desired group policy to apply to the VLAN
                    type: string
                  id:
                    description: The VLAN ID of the VLAN
                    type: string
                  interfaceId:
                    description: The interface ID of the VLAN
                    type: string
                  ipv6:
                    description: IPv6 configuration on the VLAN
                    properties:
                      enabled:
                        description: Enable IPv6 on VLAN
                        type: boolean
                      prefixAssignments:
                        description: Prefix assignments on the VLAN
                        items:
                          properties:
                            autonomous:
                              description: Auto assign a /64 prefix from the origin to the VLAN
                              type: boolean
                            origin:
                              description: The origin of the prefix
                              properties:
                                interfaces:
                                  description: Interfaces associated with the prefix
                                  items:
                                    type: string
                                  type: array
                                type:
                                  description: Type of the origin
                                  enum:
                                    - independent
                                    - internet
                                  type: string
                              type: object
                            staticApplianceIp6:
                              description: Manual configuration of the IPv6 Appliance IP
                              type: string
                            staticPrefix:
                              description: Manual configuration of a /64 prefix on the VLAN
                              type: string
                          type: object
                        type: array
                    type: object
                  mandatoryDhcp:
                    description: Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
                    properties:
                      enabled:
                        description: Enable Mandatory DHCP on VLAN.
                        type: boolean
                    type: object
                  mask:
                    description: Mask used for the subnet of all bound to the template networks. Applicable only for template network.
                    type: integer
                  name:
                    description: The name of the VLAN
                    type: string
                  reservedIpRanges:
                    description: The DHCP reserved IP ranges on the VLAN
                    items:
                      properties:
                        comment:
                          description: A text comment for the reserved range
                          type: string
                        end:
                          description: The last IP in the reserved range
                          type: string
                        start:
                          description: The first IP in the reserved range
                          type: string
                      type: object
                    type: array
                  subnet:
                    description: The subnet of the VLAN
                    type: string
                  templateVlanType:
                    default: same
                    description: Type of subnetting of the VLAN. Applicable only for template network.
                    enum:
                      - same
                      - unique
                    type: string
                  vpnNatSubnet:
                    description: The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN
                    type: string
                type: object
          description: Successful operation
      summary: Update a VLAN
      tags:
        - appliance
        - configure
        - vlans
  "/networks/{networkId}/appliance/vpn/bgp":
    get:
      description: Return a Hub BGP Configuration
      operationId: getNetworkApplianceVpnBgp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    asNumber: 64515
                    enabled: true
                    ibgpHoldTimer: 120
                    neighbors:
                      - allowTransit: true
                        ebgpHoldTimer: 180
                        ebgpMultihop: 2
                        ip: 10.10.10.22
                        receiveLimit: 120
                        remoteAsNumber: 64343
              schema:
                type: object
          description: Successful operation
      summary: Return a Hub BGP Configuration
      tags:
        - appliance
        - configure
        - vpn
        - bgp
    put:
      description: Update a Hub BGP Configuration
      operationId: updateNetworkApplianceVpnBgp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                asNumber: 64515
                enabled: true
                ibgpHoldTimer: 120
                neighbors:
                  - allowTransit: true
                    ebgpHoldTimer: 180
                    ebgpMultihop: 2
                    ip: 10.10.10.22
                    receiveLimit: 120
                    remoteAsNumber: 64343
              properties:
                asNumber:
                  description: An Autonomous System Number (ASN) is required if you are to run BGP and peer with another BGP Speaker outside of the Auto VPN domain. This ASN will be applied to the entire Auto VPN domain. The entire 4-byte ASN range is supported. So, the ASN must be an integer between 1 and 4294967295. When absent, this field is not updated. If no value exists then it defaults to 64512.
                  type: integer
                enabled:
                  description: Boolean value to enable or disable the BGP configuration. When BGP is enabled, the asNumber (ASN) will be autopopulated with the preconfigured ASN at other Hubs or a default value if there is no ASN configured.
                  type: boolean
                ibgpHoldTimer:
                  description: The IBGP holdtimer in seconds. The IBGP holdtimer must be an integer between 12 and 240. When absent, this field is not updated. If no value exists then it defaults to 240.
                  type: integer
                neighbors:
                  description: List of BGP neighbors. This list replaces the existing set of neighbors. When absent, this field is not updated.
                  items:
                    properties:
                      allowTransit:
                        description: When this feature is on, the Meraki device will advertise routes learned from other Autonomous Systems, thereby allowing traffic between Autonomous Systems to transit this AS. When absent, it defaults to false.
                        type: boolean
                      ebgpHoldTimer:
                        description: The EBGP hold timer in seconds for each neighbor. The EBGP hold timer must be an integer between 12 and 240.
                        type: integer
                      ebgpMultihop:
                        description: Configure this if the neighbor is not adjacent. The EBGP multi-hop must be an integer between 1 and 255.
                        type: integer
                      ip:
                        description: The IPv4 address of the neighbor
                        type: string
                      ipv6:
                        description: Information regarding IPv6 address of the neighbor, Required if `ip` is not present.
                        properties:
                          address:
                            description: The IPv6 address of the neighbor.
                            type: string
                        required:
                          - address
                        type: object
                      receiveLimit:
                        description: The receive limit is the maximum number of routes that can be received from any BGP peer. The receive limit must be an integer between 0 and 4294967295. When absent, it defaults to 0.
                        type: integer
                      remoteAsNumber:
                        description: Remote ASN of the neighbor. The remote ASN must be an integer between 1 and 4294967295.
                        type: integer
                    required:
                      - remoteAsNumber
                      - ebgpHoldTimer
                      - ebgpMultihop
                    type: object
                  type: array
              required:
                - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    asNumber: 64515
                    enabled: true
                    ibgpHoldTimer: 120
                    neighbors:
                      - allowTransit: true
                        ebgpHoldTimer: 180
                        ebgpMultihop: 2
                        ip: 10.10.10.22
                        receiveLimit: 120
                        remoteAsNumber: 64343
              schema:
                type: object
          description: Successful operation
      summary: Update a Hub BGP Configuration
      tags:
        - appliance
        - configure
        - vpn
        - bgp
  "/networks/{networkId}/appliance/vpn/siteToSiteVpn":
    get:
      description: Return the site-to-site VPN settings of a network. Only valid for MX networks.
      operationId: getNetworkApplianceVpnSiteToSiteVpn
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    hubs:
                      - hubId: N_4901849
                        useDefaultRoute: true
                    mode: spoke
                    subnets:
                      - localSubnet: 192.168.1.0/24
                        useVpn: true
              schema:
                properties:
                  hubs:
                    description: The list of VPN hubs, in order of preference.
                    items:
                      properties:
                        hubId:
                          description: The network ID of the hub.
                          type: string
                        useDefaultRoute:
                          description: Indicates whether default route traffic should be sent to this hub.
                          type: boolean
                      type: object
                    type: array
                  mode:
                    description: The site-to-site VPN mode.
                    type: string
                  subnets:
                    description: The list of subnets and their VPN presence.
                    items:
                      properties:
                        localSubnet:
                          description: The CIDR notation subnet used within the VPN
                          type: string
                        useVpn:
                          description: Indicates the presence of the subnet in the VPN
                          type: boolean
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Return the site-to-site VPN settings of a network
      tags:
        - appliance
        - configure
        - vpn
        - siteToSiteVpn
    put:
      description: Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.
      operationId: updateNetworkApplianceVpnSiteToSiteVpn
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                hubs:
                  - hubId: N_4901849
                    useDefaultRoute: true
                mode: spoke
                subnets:
                  - localSubnet: 192.168.1.0/24
                    useVpn: true
              properties:
                hubs:
                  description: The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.
                  items:
                    properties:
                      hubId:
                        description: The network ID of the hub.
                        type: string
                      useDefaultRoute:
                        description: Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.
                        type: boolean
                    required:
                      - hubId
                    type: object
                  type: array
                mode:
                  description: The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
                  enum:
                    - hub
                    - none
                    - spoke
                  type: string
                subnets:
                  description: The list of subnets and their VPN presence.
                  items:
                    properties:
                      localSubnet:
                        description: The CIDR notation subnet used within the VPN
                        type: string
                      useVpn:
                        description: Indicates the presence of the subnet in the VPN
                        type: boolean
                    required:
                      - localSubnet
                    type: object
                  type: array
              required:
                - mode
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    hubs:
                      - hubId: N_4901849
                        useDefaultRoute: true
                    mode: spoke
                    subnets:
                      - localSubnet: 192.168.1.0/24
                        useVpn: true
              schema:
                properties:
                  hubs:
                    description: The list of VPN hubs, in order of preference.
                    items:
                      properties:
                        hubId:
                          description: The network ID of the hub.
                          type: string
                        useDefaultRoute:
                          description: Indicates whether default route traffic should be sent to this hub.
                          type: boolean
                      type: object
                    type: array
                  mode:
                    description: The site-to-site VPN mode.
                    type: string
                  subnets:
                    description: The list of subnets and their VPN presence.
                    items:
                      properties:
                        localSubnet:
                          description: The CIDR notation subnet used within the VPN
                          type: string
                        useVpn:
                          description: Indicates the presence of the subnet in the VPN
                          type: boolean
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update the site-to-site VPN settings of a network
      tags:
        - appliance
        - configure
        - vpn
        - siteToSiteVpn
  "/networks/{networkId}/appliance/warmSpare":
    get:
      description: Return MX warm spare settings
      operationId: getNetworkApplianceWarmSpare
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    primarySerial: Q234-ABCD-5678
                    spareSerial: Q234-ABCD-5678
                    uplinkMode: virtual
                    wan1:
                      ip: 1.2.3.4
                      subnet: 192.168.1.0/24
                    wan2:
                      ip: 1.2.3.4
                      subnet: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Return MX warm spare settings
      tags:
        - appliance
        - configure
        - warmSpare
    put:
      description: Update MX warm spare settings
      operationId: updateNetworkApplianceWarmSpare
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                virtualIp1: 1.2.3.4
                virtualIp2: 1.2.3.4
              properties:
                enabled:
                  description: Enable warm spare
                  type: boolean
                spareSerial:
                  description: Serial number of the warm spare appliance
                  type: string
                uplinkMode:
                  description: Uplink mode, either virtual or public
                  type: string
                virtualIp1:
                  description: The WAN 1 shared IP
                  type: string
                virtualIp2:
                  description: The WAN 2 shared IP
                  type: string
              required:
                - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    primarySerial: Q234-ABCD-5678
                    spareSerial: Q234-ABCD-5678
                    uplinkMode: virtual
                    wan1:
                      ip: 1.2.3.4
                      subnet: 192.168.1.0/24
                    wan2:
                      ip: 1.2.3.4
                      subnet: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update MX warm spare settings
      tags:
        - appliance
        - configure
        - warmSpare
  "/networks/{networkId}/appliance/warmSpare/swap":
    post:
      description: Swap MX primary and warm spare appliances
      operationId: swapNetworkApplianceWarmSpare
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    primarySerial: Q234-ABCD-5678
                    spareSerial: Q234-ABCD-5678
                    uplinkMode: virtual
                    wan1:
                      ip: 1.2.3.4
                      subnet: 192.168.1.0/24
                    wan2:
                      ip: 1.2.3.4
                      subnet: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Swap MX primary and warm spare appliances
      tags:
        - appliance
        - configure
        - warmSpare
  "/networks/{networkId}/bind":
    post:
      description: Bind a network to a template.
      operationId: bindNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                autoBind: false
                configTemplateId: N_23952905
              properties:
                autoBind:
                  description: Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.
                  type: boolean
                configTemplateId:
                  description: The ID of the template to which the network should be bound.
                  type: string
              required:
                - configTemplateId
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    configTemplateId: N_23952905
                    enrollmentString: my-enrollment-string
                    id: N_24329156
                    isBoundToConfigTemplate: false
                    name: Main Office
                    notes: Additional description of the network
                    organizationId: "2930418"
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    tags:
                      - tag1
                      - tag2
                    timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Bind a network to a template.
      tags:
        - networks
        - configure
  "/networks/{networkId}/bluetoothClients":
    get:
      description: List the Bluetooth clients seen by APs in this network
      operationId: getNetworkBluetoothClients
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Include the connectivity history for this client
          in: query
          name: includeConnectivityHistory
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - deviceName: Bose QuietComfort 35
                      id: "1284392014819"
                      inSightAlert: false
                      lastSeen: 1526087474
                      mac: 22:33:44:55:66:77
                      manufacturer: Bose
                      name: Miles's phone
                      networkId: N_24329156
                      outOfSightAlert: false
                      seenByDeviceMac: 00:11:22:33:44:55
                      tags:
                        - tag1
                        - tag2
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the Bluetooth clients seen by APs in this network
      tags:
        - networks
        - monitor
        - bluetoothClients
  "/networks/{networkId}/bluetoothClients/{bluetoothClientId}":
    get:
      description: Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.
      operationId: getNetworkBluetoothClient
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: bluetoothClientId
          required: true
          schema:
            type: string
        - description: Include the connectivity history for this client
          in: query
          name: includeConnectivityHistory
          schema:
            type: boolean
        - description: The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.
          in: query
          name: connectivityHistoryTimespan
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    deviceName: Bose QuietComfort 35
                    id: "1284392014819"
                    inSightAlert: false
                    lastSeen: 1526087474
                    mac: 22:33:44:55:66:77
                    manufacturer: Bose
                    name: Miles's phone
                    networkId: N_24329156
                    outOfSightAlert: false
                    seenByDeviceMac: 00:11:22:33:44:55
                    tags:
                      - tag1
                      - tag2
              schema:
                type: object
          description: Successful operation
      summary: Return a Bluetooth client
      tags:
        - networks
        - monitor
        - bluetoothClients
  "/networks/{networkId}/camera/qualityRetentionProfiles":
    get:
      description: List the quality retention profiles for this network
      operationId: getNetworkCameraQualityRetentionProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - audioRecordingEnabled: false
                      cloudArchiveEnabled: false
                      id: "1234"
                      maxRetentionDays: 7
                      motionBasedRetentionEnabled: false
                      motionDetectorVersion: 2
                      name: Sample quality retention profile
                      networkId: N_24329156
                      restrictedBandwidthModeEnabled: true
                      scheduleId: null
                      videoSettings:
                        MV12/MV22/MV72:
                          quality: High
                          resolution: 1920x1080
                        MV12WE:
                          quality: High
                          resolution: 1920x1080
                        MV21/MV71:
                          quality: High
                          resolution: 1280x720
                        MV32:
                          quality: Enhanced
                          resolution: 1080x1080
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the quality retention profiles for this network
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
    post:
      description: Creates new quality retention profile for this network.
      operationId: createNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Sample quality retention profile
              properties:
                audioRecordingEnabled:
                  description: Whether or not to record audio. Can be either true or false. Defaults to false.
                  type: boolean
                cloudArchiveEnabled:
                  description: Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
                  type: boolean
                maxRetentionDays:
                  description: The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
                  type: integer
                motionBasedRetentionEnabled:
                  description: Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
                  type: boolean
                motionDetectorVersion:
                  description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
                  type: integer
                name:
                  description: The name of the new profile. Must be unique. This parameter is required.
                  type: string
                restrictedBandwidthModeEnabled:
                  description: Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
                  type: boolean
                scheduleId:
                  description: Schedule for which this camera will record video, or 'null' to always record.
                  type: string
                videoSettings:
                  description: Video quality and resolution settings for all the camera models.
                  properties:
                    MV12/MV22/MV72:
                      description: Quality and resolution for MV12/MV22/MV72 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
                          enum:
                            - 1280x720
                            - 1920x1080
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV12WE:
                      description: Quality and resolution for MV12WE camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
                          enum:
                            - 1280x720
                            - 1920x1080
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV13:
                      description: Quality and resolution for MV13 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2688x1512'.
                          enum:
                            - 1080x1080
                            - 2688x1512
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV21/MV71:
                      description: Quality and resolution for MV21/MV71 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720'.
                          enum:
                            - 1280x720
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV22X/MV72X:
                      description: Quality and resolution for MV22X/MV72X camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
                          enum:
                            - 1280x720
                            - 1920x1080
                            - 2688x1512
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV32:
                      description: Quality and resolution for MV32 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
                          enum:
                            - 1080x1080
                            - 2058x2058
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV33:
                      description: Quality and resolution for MV33 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
                          enum:
                            - 1080x1080
                            - 2112x2112
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV52:
                      description: Quality and resolution for MV52 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'.
                          enum:
                            - 1280x720
                            - 1920x1080
                            - 2688x1512
                            - 3840x2160
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV63:
                      description: Quality and resolution for MV63 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1920x1080' or '2688x1512'.
                          enum:
                            - 1920x1080
                            - 2688x1512
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV63X:
                      description: Quality and resolution for MV63X camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1920x1080', '2688x1512' or '3840x2160'.
                          enum:
                            - 1920x1080
                            - 2688x1512
                            - 3840x2160
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV93:
                      description: Quality and resolution for MV93 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
                          enum:
                            - 1080x1080
                            - 2112x2112
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV93X:
                      description: Quality and resolution for MV93X camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080', '2112x2112' or '2880x2880'.
                          enum:
                            - 1080x1080
                            - 2112x2112
                            - 2880x2880
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                  type: object
              required:
                - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioRecordingEnabled: false
                    cloudArchiveEnabled: false
                    id: "1234"
                    maxRetentionDays: 7
                    motionBasedRetentionEnabled: false
                    motionDetectorVersion: 2
                    name: Sample quality retention profile
                    networkId: N_24329156
                    restrictedBandwidthModeEnabled: true
                    scheduleId: null
                    videoSettings:
                      MV12/MV22/MV72:
                        quality: High
                        resolution: 1920x1080
                      MV12WE:
                        quality: High
                        resolution: 1920x1080
                      MV21/MV71:
                        quality: High
                        resolution: 1280x720
                      MV32:
                        quality: Enhanced
                        resolution: 1080x1080
              schema:
                type: object
          description: Successful operation
      summary: Creates new quality retention profile for this network.
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
  "/networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}":
    delete:
      description: Delete an existing quality retention profile for this network.
      operationId: deleteNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: qualityRetentionProfileId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an existing quality retention profile for this network.
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
    get:
      description: Retrieve a single quality retention profile
      operationId: getNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: qualityRetentionProfileId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioRecordingEnabled: false
                    cloudArchiveEnabled: false
                    id: "1234"
                    maxRetentionDays: 7
                    motionBasedRetentionEnabled: false
                    motionDetectorVersion: 2
                    name: Sample quality retention profile
                    networkId: N_24329156
                    restrictedBandwidthModeEnabled: true
                    scheduleId: null
                    videoSettings:
                      MV12/MV22/MV72:
                        quality: High
                        resolution: 1920x1080
                      MV12WE:
                        quality: High
                        resolution: 1920x1080
                      MV21/MV71:
                        quality: High
                        resolution: 1280x720
                      MV32:
                        quality: Enhanced
                        resolution: 1080x1080
              schema:
                type: object
          description: Successful operation
      summary: Retrieve a single quality retention profile
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
    put:
      description: Update an existing quality retention profile for this network.
      operationId: updateNetworkCameraQualityRetentionProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: qualityRetentionProfileId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                audioRecordingEnabled:
                  description: Whether or not to record audio. Can be either true or false. Defaults to false.
                  type: boolean
                cloudArchiveEnabled:
                  description: Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
                  type: boolean
                maxRetentionDays:
                  description: The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
                  type: integer
                motionBasedRetentionEnabled:
                  description: Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
                  type: boolean
                motionDetectorVersion:
                  description: The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
                  type: integer
                name:
                  description: The name of the new profile. Must be unique.
                  type: string
                restrictedBandwidthModeEnabled:
                  description: Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
                  type: boolean
                scheduleId:
                  description: Schedule for which this camera will record video, or 'null' to always record.
                  type: string
                videoSettings:
                  description: Video quality and resolution settings for all the camera models.
                  properties:
                    MV12/MV22/MV72:
                      description: Quality and resolution for MV12/MV22/MV72 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
                          enum:
                            - 1280x720
                            - 1920x1080
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV12WE:
                      description: Quality and resolution for MV12WE camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
                          enum:
                            - 1280x720
                            - 1920x1080
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV13:
                      description: Quality and resolution for MV13 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2688x1512'.
                          enum:
                            - 1080x1080
                            - 2688x1512
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV21/MV71:
                      description: Quality and resolution for MV21/MV71 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720'.
                          enum:
                            - 1280x720
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV22X/MV72X:
                      description: Quality and resolution for MV22X/MV72X camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
                          enum:
                            - 1280x720
                            - 1920x1080
                            - 2688x1512
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV32:
                      description: Quality and resolution for MV32 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
                          enum:
                            - 1080x1080
                            - 2058x2058
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV33:
                      description: Quality and resolution for MV33 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
                          enum:
                            - 1080x1080
                            - 2112x2112
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV52:
                      description: Quality and resolution for MV52 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'.
                          enum:
                            - 1280x720
                            - 1920x1080
                            - 2688x1512
                            - 3840x2160
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV63:
                      description: Quality and resolution for MV63 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1920x1080' or '2688x1512'.
                          enum:
                            - 1920x1080
                            - 2688x1512
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV63X:
                      description: Quality and resolution for MV63X camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1920x1080', '2688x1512' or '3840x2160'.
                          enum:
                            - 1920x1080
                            - 2688x1512
                            - 3840x2160
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV93:
                      description: Quality and resolution for MV93 camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
                          enum:
                            - 1080x1080
                            - 2112x2112
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                    MV93X:
                      description: Quality and resolution for MV93X camera models.
                      properties:
                        quality:
                          description: Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
                          enum:
                            - Enhanced
                            - High
                            - Standard
                          type: string
                        resolution:
                          description: Resolution of the camera. Can be one of '1080x1080', '2112x2112' or '2880x2880'.
                          enum:
                            - 1080x1080
                            - 2112x2112
                            - 2880x2880
                          type: string
                      required:
                        - quality
                        - resolution
                      type: object
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    audioRecordingEnabled: false
                    cloudArchiveEnabled: false
                    id: "1234"
                    maxRetentionDays: 7
                    motionBasedRetentionEnabled: false
                    motionDetectorVersion: 2
                    name: Sample quality retention profile
                    networkId: N_24329156
                    restrictedBandwidthModeEnabled: true
                    scheduleId: null
                    videoSettings:
                      MV12/MV22/MV72:
                        quality: High
                        resolution: 1920x1080
                      MV12WE:
                        quality: High
                        resolution: 1920x1080
                      MV21/MV71:
                        quality: High
                        resolution: 1280x720
                      MV32:
                        quality: Enhanced
                        resolution: 1080x1080
              schema:
                type: object
          description: Successful operation
      summary: Update an existing quality retention profile for this network.
      tags:
        - camera
        - configure
        - qualityRetentionProfiles
  "/networks/{networkId}/camera/schedules":
    get:
      description: Returns a list of all camera recording schedules.
      operationId: getNetworkCameraSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "123"
                      name: Weekday schedule
                    - id: "124"
                      name: Office hours
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Returns a list of all camera recording schedules.
      tags:
        - camera
        - configure
        - schedules
  "/networks/{networkId}/camera/wirelessProfiles":
    get:
      description: List the camera wireless profiles for this network.
      operationId: getNetworkCameraWirelessProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - appliedDeviceCount: 0
                      id: "152"
                      identity:
                        password: password123
                        username: identityname
                      name: wireless profile A
                      ssid:
                        authMode: 8021x-radius
                        encryptionMode: wpa-eap
                        name: ssid test
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the camera wireless profiles for this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
    post:
      description: Creates a new camera wireless profile for this network.
      operationId: createNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: wireless profile A
                ssid:
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
                  name: ssid test
              properties:
                identity:
                  description: The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
                  properties:
                    password:
                      description: The password of the identity.
                      type: string
                    username:
                      description: The username of the identity.
                      type: string
                  type: object
                name:
                  description: The name of the camera wireless profile. This parameter is required.
                  type: string
                ssid:
                  description: The details of the SSID config.
                  properties:
                    authMode:
                      description: The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
                      enum:
                        - 8021x-radius
                        - psk
                      type: string
                    encryptionMode:
                      description: The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap'). With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode should be '8021x-radius'
                      type: string
                    name:
                      description: The name of the SSID.
                      type: string
                    psk:
                      description: The pre-shared key of the SSID.
                      type: string
                  type: object
              required:
                - name
                - ssid
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    appliedDeviceCount: 0
                    id: "152"
                    identity:
                      password: password123
                      username: identityname
                    name: wireless profile A
                    ssid:
                      authMode: 8021x-radius
                      encryptionMode: wpa-eap
                      name: ssid test
              schema:
                type: object
          description: Successful operation
      summary: Creates a new camera wireless profile for this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
  "/networks/{networkId}/camera/wirelessProfiles/{wirelessProfileId}":
    delete:
      description: Delete an existing camera wireless profile for this network.
      operationId: deleteNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: wirelessProfileId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an existing camera wireless profile for this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
    get:
      description: Retrieve a single camera wireless profile.
      operationId: getNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: wirelessProfileId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    appliedDeviceCount: 0
                    id: "152"
                    identity:
                      password: password123
                      username: identityname
                    name: wireless profile A
                    ssid:
                      authMode: 8021x-radius
                      encryptionMode: wpa-eap
                      name: ssid test
              schema:
                type: object
          description: Successful operation
      summary: Retrieve a single camera wireless profile.
      tags:
        - camera
        - configure
        - wirelessProfiles
    put:
      description: Update an existing camera wireless profile in this network.
      operationId: updateNetworkCameraWirelessProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: wirelessProfileId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                identity:
                  description: The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
                  properties:
                    password:
                      description: The password of the identity.
                      type: string
                    username:
                      description: The username of the identity.
                      type: string
                  type: object
                name:
                  description: The name of the camera wireless profile.
                  type: string
                ssid:
                  description: The details of the SSID config.
                  properties:
                    authMode:
                      description: The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
                      enum:
                        - 8021x-radius
                        - psk
                      type: string
                    encryptionMode:
                      description: The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap'). With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode should be '8021x-radius'
                      type: string
                    name:
                      description: The name of the SSID.
                      type: string
                    psk:
                      description: The pre-shared key of the SSID.
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    appliedDeviceCount: 0
                    id: "152"
                    identity:
                      password: password123
                      username: identityname
                    name: wireless profile A
                    ssid:
                      authMode: 8021x-radius
                      encryptionMode: wpa-eap
                      name: ssid test
              schema:
                type: object
          description: Successful operation
      summary: Update an existing camera wireless profile in this network.
      tags:
        - camera
        - configure
        - wirelessProfiles
  "/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations":
    get:
      description: Return the connectivity testing destinations for an MG network
      operationId: getNetworkCellularGatewayConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    destinations:
                      - default: false
                        description: Google
                        ip: 8.8.8.8
                      - default: true
                        description: test description
                        ip: 1.23.45.67
                      - default: false
                        description: null
                        ip: 9.8.7.6
              schema:
                type: object
          description: Successful operation
      summary: Return the connectivity testing destinations for an MG network
      tags:
        - cellularGateway
        - configure
        - connectivityMonitoringDestinations
    put:
      description: Update the connectivity testing destinations for an MG network
      operationId: updateNetworkCellularGatewayConnectivityMonitoringDestinations
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                destinations:
                  - default: false
                    description: Google
                    ip: 8.8.8.8
                  - default: true
                    description: test description
                    ip: 1.23.45.67
                  - ip: 9.8.7.6
              properties:
                destinations:
                  description: The list of connectivity monitoring destinations
                  items:
                    properties:
                      default:
                        default: false
                        description: Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed
                        type: boolean
                      description:
                        default: ""
                        description: Description of the testing destination. Optional, defaults to an empty string
                        type: string
                      ip:
                        description: The IP address to test connectivity with
                        type: string
                    required:
                      - ip
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    destinations:
                      - default: false
                        description: Google
                        ip: 8.8.8.8
                      - default: true
                        description: test description
                        ip: 1.23.45.67
                      - default: false
                        description: null
                        ip: 9.8.7.6
              schema:
                type: object
          description: Successful operation
      summary: Update the connectivity testing destinations for an MG network
      tags:
        - cellularGateway
        - configure
        - connectivityMonitoringDestinations
  "/networks/{networkId}/cellularGateway/dhcp":
    get:
      description: List common DHCP settings of MGs
      operationId: getNetworkCellularGatewayDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    dhcpLeaseTime: 1 hour
                    dnsCustomNameservers:
                      - 172.16.2.111
                      - 172.16.2.30
                    dnsNameservers: custom
              schema:
                properties:
                  dhcpLeaseTime:
                    description: DHCP Lease time for all MG in the network.
                    enum:
                      - 1 day
                      - 1 hour
                      - 1 week
                      - 12 hours
                      - 30 minutes
                      - 4 hours
                    type: string
                  dnsCustomNameservers:
                    description: List of fixed IPs representing the the DNS Name servers when the mode is 'custom'.
                    items:
                      type: string
                    type: array
                  dnsNameservers:
                    description: DNS name servers mode for all MG in the network.
                    enum:
                      - custom
                      - google_dns
                      - opendns
                      - upstream_dns
                    type: string
                type: object
          description: Successful operation
      summary: List common DHCP settings of MGs
      tags:
        - cellularGateway
        - configure
        - dhcp
    put:
      description: Update common DHCP settings of MGs
      operationId: updateNetworkCellularGatewayDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                dhcpLeaseTime: 1 hour
                dnsCustomNameservers:
                  - 172.16.2.111
                  - 172.16.2.30
                dnsNameservers: custom
              properties:
                dhcpLeaseTime:
                  description: DHCP Lease time for all MG of the network. Possible values are '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.
                  type: string
                dnsCustomNameservers:
                  description: list of fixed IPs representing the the DNS Name servers when the mode is 'custom'
                  items:
                    type: string
                  type: array
                dnsNameservers:
                  description: "DNS name servers mode for all MG of the network. Possible values are: 'upstream_dns', 'google_dns', 'opendns', 'custom'."
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    dhcpLeaseTime: 1 hour
                    dnsCustomNameservers:
                      - 172.16.2.111
                      - 172.16.2.30
                    dnsNameservers: custom
              schema:
                properties:
                  dhcpLeaseTime:
                    description: DHCP Lease time for all MG in the network.
                    enum:
                      - 1 day
                      - 1 hour
                      - 1 week
                      - 12 hours
                      - 30 minutes
                      - 4 hours
                    type: string
                  dnsCustomNameservers:
                    description: List of fixed IPs representing the the DNS Name servers when the mode is 'custom'.
                    items:
                      type: string
                    type: array
                  dnsNameservers:
                    description: DNS name servers mode for all MG in the network.
                    enum:
                      - custom
                      - google_dns
                      - opendns
                      - upstream_dns
                    type: string
                type: object
          description: Successful operation
      summary: Update common DHCP settings of MGs
      tags:
        - cellularGateway
        - configure
        - dhcp
  "/networks/{networkId}/cellularGateway/subnetPool":
    get:
      description: Return the subnet pool and mask configured for MGs in the network.
      operationId: getNetworkCellularGatewaySubnetPool
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    cidr: 192.168.0.0/16
                    deploymentMode: routed
                    mask: 24
                    subnets:
                      - applianceIp: 192.168.0.1
                        name: my first MG
                        serial: AAAA-AAAA-AAAA
                        subnet: 192.168.0.0/24
                      - applianceIp: 192.168.0.33
                        name: my second MG
                        serial: BBBB-BBBB-BBBB
                        subnet: 192.168.0.32/24
              schema:
                type: object
          description: Successful operation
      summary: Return the subnet pool and mask configured for MGs in the network.
      tags:
        - cellularGateway
        - configure
        - subnetPool
    put:
      description: Update the subnet pool and mask configuration for MGs in the network.
      operationId: updateNetworkCellularGatewaySubnetPool
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                cidr: 192.168.0.0/16
                deploymentMode: routed
                mask: 24
              properties:
                cidr:
                  description: CIDR of the pool of subnets. Each MG in this network will automatically pick a subnet from this pool.
                  type: string
                mask:
                  description: Mask used for the subnet of all MGs in  this network.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    cidr: 192.168.0.0/16
                    deploymentMode: routed
                    mask: 24
                    subnets:
                      - applianceIp: 192.168.0.1
                        name: my first MG
                        serial: AAAA-AAAA-AAAA
                        subnet: 192.168.0.0/24
                      - applianceIp: 192.168.0.33
                        name: my second MG
                        serial: BBBB-BBBB-BBBB
                        subnet: 192.168.0.32/24
              schema:
                type: object
          description: Successful operation
      summary: Update the subnet pool and mask configuration for MGs in the network.
      tags:
        - cellularGateway
        - configure
        - subnetPool
  "/networks/{networkId}/cellularGateway/uplink":
    get:
      description: Returns the uplink settings for your MG network.
      operationId: getNetworkCellularGatewayUplink
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidthLimits:
                      limitDown: 51200
                      limitUp: 51200
              schema:
                type: object
          description: Successful operation
      summary: Returns the uplink settings for your MG network.
      tags:
        - cellularGateway
        - configure
        - uplink
    put:
      description: Updates the uplink settings for your MG network.
      operationId: updateNetworkCellularGatewayUplink
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                bandwidthLimits:
                  description: The bandwidth settings for the 'cellular' uplink
                  properties:
                    limitDown:
                      description: The maximum download limit (integer, in Kbps). null indicates no limit
                      type: integer
                    limitUp:
                      description: The maximum upload limit (integer, in Kbps). null indicates no limit
                      type: integer
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidthLimits:
                      limitDown: 51200
                      limitUp: 51200
              schema:
                type: object
          description: Successful operation
      summary: Updates the uplink settings for your MG network.
      tags:
        - cellularGateway
        - configure
        - uplink
  "/networks/{networkId}/clients":
    get:
      description: List the clients that have used this network in the timespan
      operationId: getNetworkClients
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filters clients based on status. Can be one of 'Online' or 'Offline'.
          explode: false
          in: query
          name: statuses
          schema:
            items:
              enum:
                - Offline
                - Online
              type: string
            type: array
          style: form
        - description: Filters clients based on a partial or full match for the ip address field.
          in: query
          name: ip
          schema:
            type: string
        - description: Filters clients based on a partial or full match for the ip6 address field.
          in: query
          name: ip6
          schema:
            type: string
        - description: Filters clients based on a partial or full match for the ip6Local address field.
          in: query
          name: ip6Local
          schema:
            type: string
        - description: Filters clients based on a partial or full match for the mac address field.
          in: query
          name: mac
          schema:
            type: string
        - description: Filters clients based on a partial or full match for the os (operating system) field.
          in: query
          name: os
          schema:
            type: string
        - description: Filters clients based on a partial or full match for the description field.
          in: query
          name: description
          schema:
            type: string
        - description: Filters clients based on the full match for the VLAN field.
          in: query
          name: vlan
          schema:
            type: string
        - description: Filters clients based on recent connection type. Can be one of 'Wired' or 'Wireless'.
          explode: false
          in: query
          name: recentDeviceConnections
          schema:
            items:
              enum:
                - Wired
                - Wireless
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    adaptivePolicyGroup: "2: Infrastructure"
                    description: Miles's phone
                    deviceTypePrediction: iPhone SE, iOS9.3.5
                    firstSeen: 1518365681
                    groupPolicy8021x: Student_Access
                    id: k74272e
                    ip: 1.2.3.4
                    ip6: 2001:db8:3c4d:15::1
                    ip6Local: fe80:0:0:0:1430:aac1:6826:75ab
                    lastSeen: 1526087474
                    mac: 22:33:44:55:66:77
                    manufacturer: Apple
                    namedVlan: My VLAN
                    notes: My AP's note
                    os: iOS
                    recentDeviceConnection: Wired
                    recentDeviceMac: 22:33:44:55:66:77
                    recentDeviceName: Q234-ABCD-5678
                    recentDeviceSerial: 00:11:22:33:44:55
                    smInstalled: true
                    ssid: My SSID
                    status: Online
                    switchport: My switch port
                    usage:
                      recv: 61
                      sent: 138
                    user: milesmeraki
                    vlan: "100"
                    wirelessCapabilities: 802.11b - 2.4 GHz
              schema:
                properties:
                  adaptivePolicyGroup:
                    description: The adaptive policy group of the client
                    type: string
                  description:
                    description: Short description of the client
                    type: string
                  deviceTypePrediction:
                    description: Prediction of the client's device type
                    type: string
                  firstSeen:
                    description: Timestamp client was first seen in the network
                    type: integer
                  groupPolicy8021x:
                    description: 802.1x group policy of the client
                    type: string
                  id:
                    description: The ID of the client
                    type: string
                  ip:
                    description: The IP address of the client
                    type: string
                  ip6:
                    description: The IPv6 address of the client
                    type: string
                  ip6Local:
                    description: Local IPv6 address of the client
                    type: string
                  lastSeen:
                    description: Timestamp client was last seen in the network
                    type: integer
                  mac:
                    description: The MAC address of the client
                    type: string
                  manufacturer:
                    description: Manufacturer of the client
                    type: string
                  namedVlan:
                    description: Named VLAN of the client
                    type: string
                  notes:
                    description: Notes on the client
                    type: string
                  os:
                    description: The operating system of the client
                    type: string
                  recentDeviceConnection:
                    description: Client's most recent connection type
                    enum:
                      - Wired
                      - Wireless
                    type: string
                  recentDeviceMac:
                    description: The MAC address of the node that the device was last connected to
                    type: string
                  recentDeviceName:
                    description: The name of the node the device was last connected to
                    type: string
                  recentDeviceSerial:
                    description: The serial of the node the device was last connected to
                    type: string
                  smInstalled:
                    description: Status of SM for the client
                    type: boolean
                  ssid:
                    description: The name of the SSID that the client is connected to
                    type: string
                  status:
                    description: The connection status of the client
                    enum:
                      - Offline
                      - Online
                    type: string
                  switchport:
                    description: The switch port that the client is connected to
                    type: string
                  usage:
                    description: Usage, sent and received
                    properties:
                      recv:
                        description: Usage received by the client
                        format: float
                        type: number
                      sent:
                        description: Usage sent by the client
                        format: float
                        type: number
                    type: object
                  user:
                    description: The username of the user of the client
                    type: string
                  vlan:
                    description: The name of the VLAN that the client is connected to
                    type: string
                  wirelessCapabilities:
                    description: Wireless capabilities of the client
                    type: string
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the clients that have used this network in the timespan
      tags:
        - networks
        - monitor
        - clients
  "/networks/{networkId}/clients/applicationUsage":
    get:
      description: Return the application usage data for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientsApplicationUsage
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: A list of client keys, MACs or IPs separated by comma.
          in: query
          name: clients
          required: true
          schema:
            type: string
        - description: An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.
          in: query
          name: ssidNumber
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
            type: integer
        - description: The number of entries per page returned. Acceptable range is 3 - 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - applicationUsage:
                        - application: Google
                          recv: 383
                          sent: 56
                      clientId: k74272e
                      clientIp: 1.2.3.4
                      clientMac: 00:11:22:33:44:55
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the application usage data for clients
      tags:
        - networks
        - monitor
        - clients
        - applicationUsage
  "/networks/{networkId}/clients/bandwidthUsageHistory":
    get:
      description: Returns a timeseries of total traffic consumption rates for all clients on a network within a given timespan, in megabits per second.
      operationId: getNetworkClientsBandwidthUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - total: 345
                      ts: 2021-06-20T01:00:00.000Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Returns a timeseries of total traffic consumption rates for all clients on a network within a given timespan, in megabits per second.
      tags:
        - networks
        - monitor
        - clients
        - bandwidthUsageHistory
  "/networks/{networkId}/clients/overview":
    get:
      description: Return overview statistics for network clients
      operationId: getNetworkClientsOverview
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 7200, 86400, 604800, 2592000. The default is 604800."
          in: query
          name: resolution
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    counts:
                      total: 100
                      withHeavyUsage: 2
                    usages:
                      average: 2048
                      withHeavyUsageAverage: 5345
              schema:
                type: object
          description: Successful operation
      summary: Return overview statistics for network clients
      tags:
        - networks
        - monitor
        - clients
        - overview
  "/networks/{networkId}/clients/provision":
    post:
      description: Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.
      operationId: provisionNetworkClients
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                clients:
                  - clientId: k74272e
                    mac: 00:11:22:33:44:55
                    name: Miles's phone
                devicePolicy: Group policy
                groupPolicyId: "101"
              properties:
                clients:
                  description: The array of clients to provision
                  items:
                    properties:
                      mac:
                        description: The MAC address of the client. Required.
                        type: string
                      name:
                        description: The display name for the client. Optional. Limited to 255 bytes.
                        type: string
                    required:
                      - mac
                    type: object
                  type: array
                devicePolicy:
                  description: The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
                  enum:
                    - Allowed
                    - Blocked
                    - Group policy
                    - Normal
                    - Per connection
                  type: string
                groupPolicyId:
                  description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                  type: string
                policiesBySecurityAppliance:
                  description: An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
                  properties:
                    devicePolicy:
                      description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required.
                      enum:
                        - Allowed
                        - Blocked
                        - Normal
                      type: string
                  type: object
                policiesBySsid:
                  description: An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy
                  properties:
                    "0":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "1":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "2":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "3":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "4":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "5":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "6":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "7":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "8":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "9":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "10":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "11":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "12":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "13":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                    "14":
                      description: The number for the SSID
                      properties:
                        devicePolicy:
                          description: The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
                          enum:
                            - Allowed
                            - Blocked
                            - Group policy
                            - Normal
                          type: string
                        groupPolicyId:
                          description: The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
                          type: string
                      required:
                        - devicePolicy
                      type: object
                  type: object
              required:
                - clients
                - devicePolicy
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    clients:
                      - clientId: k74272e
                        mac: 00:11:22:33:44:55
                        name: Miles's phone
                    devicePolicy: Group policy
                    groupPolicyId: "101"
              schema:
                type: object
          description: Successful operation
      summary: Provisions a client with a name and policy
      tags:
        - networks
        - configure
        - clients
  "/networks/{networkId}/clients/usageHistories":
    get:
      description: Return the usage histories for clients. Usage data is in kilobytes. Clients can be identified by client keys or either the MACs or IPs depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientsUsageHistories
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: A list of client keys, MACs or IPs separated by comma.
          in: query
          name: clients
          required: true
          schema:
            type: string
        - description: An SSID number to include. If not specified, events for all SSIDs will be returned.
          in: query
          name: ssidNumber
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
            type: integer
        - description: The number of entries per page returned. Acceptable range is 3 - 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clientId: k74272e
                      clientIp: 1.2.3.4
                      clientMac: 00:11:22:33:44:55
                      usageHistory:
                        - recv: 383
                          sent: 56
                          ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the usage histories for clients
      tags:
        - networks
        - monitor
        - clients
        - usageHistories
  "/networks/{networkId}/clients/{clientId}":
    get:
      description: Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClient
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    cdp:
                      - - System name
                        - Some system name
                      - - System description
                        - Some system description
                      - - Port ID
                        - "1"
                      - - Chassis ID
                        - 00:18:0a:00:00:00
                      - - Port description
                        - eth0
                      - - System capabilities
                        - Two-port MAC Relay
                    clientVpnConnections:
                      - connectedAt: 1522613355
                        disconnectedAt: 1522613360
                        remoteIp: 1.2.3.4
                    description: Miles's phone
                    firstSeen: 1518365681
                    id: k74272e
                    ip: 1.2.3.4
                    ip6: 2001:db8:3c4d:15::1
                    lastSeen: 1526087474
                    lldp:
                      - - System name
                        - Some system name
                      - - System description
                        - Some system description
                      - - Port ID
                        - "1"
                      - - Chassis ID
                        - 00:18:0a:00:00:00
                      - - Port description
                        - eth0
                      - - System capabilities
                        - Two-port MAC Relay
                    mac: 22:33:44:55:66:77
                    manufacturer: Apple
                    os: iOS
                    recentDeviceMac: 22:33:44:55:66:77
                    smInstalled: true
                    ssid: My SSID
                    status: Online
                    switchport: My switch port
                    user: milesmeraki
                    vlan: "100"
                    wirelessCapabilities: 802.11b - 2.4 GHz
              schema:
                properties:
                  cdp:
                    description: The Cisco discover protocol settings for the client
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  clientVpnConnections:
                    description: VPN connections associated with the client
                    items:
                      properties:
                        connectedAt:
                          description: The time the client last connected to the VPN
                          type: integer
                        disconnectedAt:
                          description: The time the client last disconnectd from the VPN
                          type: integer
                        remoteIp:
                          description: The IP address of the VPN the client last connected to
                          type: string
                      type: object
                    type: array
                  description:
                    description: Short description of the client
                    type: string
                  firstSeen:
                    description: Timestamp client was first seen in the network
                    type: integer
                  id:
                    description: The ID of the client
                    type: string
                  ip:
                    description: The IP address of the client
                    type: string
                  ip6:
                    description: The IPv6 address of the client
                    type: string
                  lastSeen:
                    description: Timestamp client was last seen in the network
                    type: integer
                  lldp:
                    description: The link layer discover protocol settings for the client
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  mac:
                    description: The MAC address of the client
                    type: string
                  manufacturer:
                    description: Manufacturer of the client
                    type: string
                  os:
                    description: The operating system of the client
                    type: string
                  recentDeviceMac:
                    description: The MAC address of the node that the device was last connected to
                    type: string
                  smInstalled:
                    description: Status of SM for the client
                    type: boolean
                  ssid:
                    description: The name of the SSID that the client is connected to
                    type: string
                  status:
                    description: The connection status of the client
                    enum:
                      - Offline
                      - Online
                    type: string
                  switchport:
                    description: The switch port that the client is connected to
                    type: string
                  user:
                    description: The username of the user of the client
                    type: string
                  vlan:
                    description: The name of the VLAN that the client is connected to
                    type: string
                  wirelessCapabilities:
                    description: Wireless capabilities of the client
                    type: string
                type: object
          description: Successful operation
      summary: Return the client associated with the given identifier
      tags:
        - networks
        - monitor
        - clients
  "/networks/{networkId}/clients/{clientId}/policy":
    get:
      description: Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    devicePolicy: Group policy
                    groupPolicyId: "101"
                    mac: 00:11:22:33:44:55
              schema:
                type: object
          description: Successful operation
      summary: Return the policy assigned to a client on the network
      tags:
        - networks
        - configure
        - clients
        - policy
    put:
      description: Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: updateNetworkClientPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                devicePolicy: Group policy
                groupPolicyId: "101"
                mac: 00:11:22:33:44:55
              properties:
                devicePolicy:
                  description: The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
                  type: string
                groupPolicyId:
                  description: "[optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID."
                  type: string
              required:
                - devicePolicy
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    devicePolicy: Group policy
                    groupPolicyId: "101"
                    mac: 00:11:22:33:44:55
              schema:
                type: object
          description: Successful operation
      summary: Update the policy assigned to a client on the network
      tags:
        - networks
        - configure
        - clients
        - policy
  "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus":
    get:
      description: Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientSplashAuthorizationStatus
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ssids:
                      "0":
                        authorizedAt: 2017-07-19 16:24:13 UTC
                        expiresAt: 2017-07-20 16:24:13 UTC
                        isAuthorized: true
                      "2":
                        isAuthorized: false
              schema:
                type: object
          description: Successful operation
      summary: Return the splash authorization for a client, for each SSID they've associated with through splash
      tags:
        - networks
        - configure
        - clients
        - splashAuthorizationStatus
    put:
      description: Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: updateNetworkClientSplashAuthorizationStatus
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ssids:
                  "0":
                    isAuthorized: true
                  "2":
                    isAuthorized: false
              properties:
                ssids:
                  description: The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency. Not all networks support configuring all SSIDs
                  properties:
                    "0":
                      description: Splash authorization for SSID 0
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "1":
                      description: Splash authorization for SSID 1
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "2":
                      description: Splash authorization for SSID 2
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "3":
                      description: Splash authorization for SSID 3
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "4":
                      description: Splash authorization for SSID 4
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "5":
                      description: Splash authorization for SSID 5
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "6":
                      description: Splash authorization for SSID 6
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "7":
                      description: Splash authorization for SSID 7
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "8":
                      description: Splash authorization for SSID 8
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "9":
                      description: Splash authorization for SSID 9
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "10":
                      description: Splash authorization for SSID 10
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "11":
                      description: Splash authorization for SSID 11
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "12":
                      description: Splash authorization for SSID 12
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "13":
                      description: Splash authorization for SSID 13
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                    "14":
                      description: Splash authorization for SSID 14
                      properties:
                        isAuthorized:
                          description: New authorization status for the SSID (true, false).
                          type: boolean
                      type: object
                  type: object
              required:
                - ssids
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ssids:
                      "0":
                        authorizedAt: 2017-07-19 16:24:13 UTC
                        expiresAt: 2017-07-20 16:24:13 UTC
                        isAuthorized: true
                      "2":
                        isAuthorized: false
              schema:
                type: object
          description: Successful operation
      summary: Update a client's splash authorization
      tags:
        - networks
        - configure
        - clients
        - splashAuthorizationStatus
  "/networks/{networkId}/clients/{clientId}/trafficHistory":
    get:
      description: Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientTrafficHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - activeSeconds: 240
                      application: Google
                      destination: www.google.com
                      numFlows: 5
                      port: 443
                      protocol: UDP
                      recv: 383
                      sent: 56
                      ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the client's network traffic data over time
      tags:
        - networks
        - monitor
        - clients
        - trafficHistory
  "/networks/{networkId}/clients/{clientId}/usageHistory":
    get:
      description: Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - received: 680
                      sent: 500
                      ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the client's daily usage history
      tags:
        - networks
        - monitor
        - clients
        - usageHistory
  "/networks/{networkId}/devices":
    get:
      description: List the devices in a network
      operationId: getNetworkDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - address: 1600 Pennsylvania Ave
                      beaconIdParams:
                        major: 5
                        minor: 3
                        uuid: 00000000-0000-0000-0000-000000000000
                      firmware: wireless-25-14
                      floorPlanId: g_1234567
                      lanIp: 1.2.3.4
                      lat: 37.4180951010362
                      lng: -122.098531723022
                      mac: 00:11:22:33:44:55
                      model: MR34
                      name: My AP
                      networkId: N_24329156
                      notes: My AP's note
                      serial: Q234-ABCD-5678
                      tags: " recently-added "
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the devices in a network
      tags:
        - networks
        - configure
        - devices
  "/networks/{networkId}/devices/claim":
    post:
      description: "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requsts against that device to succeed)"
      operationId: claimNetworkDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
              properties:
                serials:
                  description: A list of serials of devices to claim
                  items:
                    type: string
                  type: array
              required:
                - serials
              type: object
        required: true
      responses:
        "200":
          description: Successful operation
      summary: "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requsts against that device to succeed)"
      tags:
        - networks
        - configure
        - devices
  "/networks/{networkId}/devices/claim/vmx":
    post:
      description: Claim a vMX into a network
      operationId: vmxNetworkDevicesClaim
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                size: small
              properties:
                size:
                  description: "The size of the vMX you claim. It can be one of: small, medium, large, 100"
                  enum:
                    - "100"
                    - large
                    - medium
                    - small
                  type: string
              required:
                - size
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: 1600 Pennsylvania Ave
                    beaconIdParams:
                      major: 5
                      minor: 3
                      uuid: 00000000-0000-0000-0000-000000000000
                    firmware: wireless-25-14
                    floorPlanId: g_1234567
                    lanIp: 1.2.3.4
                    lat: 37.4180951010362
                    lng: -122.098531723022
                    mac: 00:11:22:33:44:55
                    model: VMX-S
                    name: My AP
                    networkId: N_24329156
                    notes: My AP's note
                    serial: Q234-ABCD-5678
                    tags:
                      - recently-added
              schema:
                type: object
          description: Successful operation
      summary: Claim a vMX into a network
      tags:
        - networks
        - configure
        - devices
        - claim
  "/networks/{networkId}/devices/remove":
    post:
      description: Remove a single device
      operationId: removeNetworkDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                serial: Q234-ABCD-5678
              properties:
                serial:
                  description: The serial of a device
                  type: string
              required:
                - serial
              type: object
        required: true
      responses:
        "204":
          description: Successful operation
      summary: Remove a single device
      tags:
        - networks
        - configure
        - devices
  "/networks/{networkId}/events":
    get:
      description: List the events for the network
      operationId: getNetworkEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, and cellularGateway
          in: query
          name: productType
          schema:
            enum:
              - appliance
              - camera
              - cellularGateway
              - switch
              - systemsManager
              - wireless
            type: string
        - description: A list of event types. The returned events will be filtered to only include events with these types.
          explode: false
          in: query
          name: includedEventTypes
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of event types. The returned events will be filtered to exclude events with these types.
          explode: false
          in: query
          name: excludedEventTypes
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The MAC address of the Meraki device which the list of events will be filtered with
          in: query
          name: deviceMac
          schema:
            type: string
        - description: The serial of the Meraki device which the list of events will be filtered with
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: The name of the Meraki device which the list of events will be filtered with
          in: query
          name: deviceName
          schema:
            type: string
        - description: The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
          in: query
          name: clientIp
          schema:
            type: string
        - description: The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
          in: query
          name: clientMac
          schema:
            type: string
        - description: The name, or partial name, of the client which the list of events will be filtered with
          in: query
          name: clientName
          schema:
            type: string
        - description: The MAC address of the Systems Manager device which the list of events will be filtered with
          in: query
          name: smDeviceMac
          schema:
            type: string
        - description: The name of the Systems Manager device which the list of events will be filtered with
          in: query
          name: smDeviceName
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    events:
                      - category: "80211"
                        clientDescription: Miles's phone
                        clientId: k74272e
                        clientMac: 22:33:44:55:66:77
                        description: 802.11 association
                        deviceName: My AP
                        deviceSerial: Q234-ABCD-5678
                        eventData:
                          aid: "2104009183"
                          channel: "36"
                          client_ip: 1.2.3.4
                          client_mac: 22:33:44:55:66:77
                          radio: "1"
                          rssi: "12"
                          vap: "1"
                        networkId: N_24329156
                        occurredAt: 2018-02-11T00:00:00.090210Z
                        ssidNumber: 1
                        type: association
                    message: Some error
                    pageEndAt: 2018-02-11T00:00:00.090210Z
                    pageStartAt: 2018-02-11T00:00:00.090210Z
              schema:
                properties:
                  events:
                    description: An array of events that took place in the network.
                    items:
                      properties:
                        category:
                          description: The category that the event type belongs to
                          type: string
                        clientDescription:
                          description: A description of the client. This is usually the client's device name.
                          type: string
                        clientId:
                          description: A string identifying the client. This could be a client's MAC or IP address
                          type: string
                        clientMac:
                          description: The client's MAC address.
                          type: string
                        description:
                          description: A description of the event the happened.
                          type: string
                        deviceName:
                          description: The name of the device. Only shown if the device is an access point.
                          type: string
                        deviceSerial:
                          description: The serial number of the device. Only shown if the device is an access point.
                          type: string
                        eventData:
                          description: An object containing more data related to the event.
                          properties:
                            aid:
                              description: The association ID of the client.
                              type: string
                            channel:
                              description: The radio channel the client is connecting to.
                              type: string
                            client_ip:
                              description: The client's IP address
                              type: string
                            client_mac:
                              description: The client's MAC address
                              type: string
                            radio:
                              description: The radio band number the client is trying to connect to.
                              type: string
                            rssi:
                              description: The current received signal strength indication (RSSI) of the client connected to an AP.
                              type: string
                            vap:
                              description: The virtual access point (VAP) number the client is connecting to.
                              type: string
                          type: object
                        networkId:
                          description: The ID of the network.
                          type: string
                        occurredAt:
                          description: An UTC ISO8601 string of the time the event occurred at.
                          type: string
                        ssidNumber:
                          description: The SSID number of the device.
                          type: integer
                        type:
                          description: The type of event being listed.
                          type: string
                      type: object
                    type: array
                  message:
                    description: A message regarding the events sent. Usually 'null' unless there are no events
                    type: string
                  pageEndAt:
                    description: An UTC ISO8601 string of the latest occured at time of the listed events of the page.
                    type: string
                  pageStartAt:
                    description: An UTC ISO8601 string of the earliest occured at time of the listed events of the page.
                    type: string
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the events for the network
      tags:
        - networks
        - monitor
        - events
  "/networks/{networkId}/events/eventTypes":
    get:
      description: List the event type to human-readable description
      operationId: getNetworkEventsEventTypes
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - category: "802.11"
                      description: 802.11 association
                      type: association
              schema:
                items:
                  properties:
                    category:
                      description: Event category
                      type: string
                    description:
                      description: Description of the event
                      type: string
                    type:
                      description: Event type
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the event type to human-readable description
      tags:
        - networks
        - monitor
        - events
        - eventTypes
  "/networks/{networkId}/firmwareUpgrades":
    get:
      description: Get firmware upgrade information for a network
      operationId: getNetworkFirmwareUpgrades
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      appliance:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      camera:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      cellularGateway:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      sensor:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      switch:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      wireless:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                    timezone: America/Los_Angeles
                    upgradeWindow:
                      dayOfWeek: sun
                      hourOfDay: 4:00
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      appliance:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      camera:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      cellularGateway:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      sensor:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      switch:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      wireless:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                    type: object
                  timezone:
                    description: The timezone for the network
                    type: string
                  upgradeWindow:
                    description: Upgrade window for devices in network
                    properties:
                      dayOfWeek:
                        description: Day of the week
                        enum:
                          - fri
                          - friday
                          - mon
                          - monday
                          - sat
                          - saturday
                          - sun
                          - sunday
                          - thu
                          - thursday
                          - tue
                          - tuesday
                          - wed
                          - wednesday
                        type: string
                      hourOfDay:
                        description: Hour of the day
                        enum:
                          - 0:00
                          - 10:00
                          - 11:00
                          - 12:00
                          - 13:00
                          - 14:00
                          - 15:00
                          - 16:00
                          - 17:00
                          - 18:00
                          - 19:00
                          - 1:00
                          - 20:00
                          - 21:00
                          - 22:00
                          - 23:00
                          - 2:00
                          - 3:00
                          - 4:00
                          - 5:00
                          - 6:00
                          - 7:00
                          - 8:00
                          - 9:00
                        type: string
                    type: object
                type: object
          description: Successful operation
      summary: Get firmware upgrade information for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
    put:
      description: Update firmware upgrade information for a network
      operationId: updateNetworkFirmwareUpgrades
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                products:
                  appliance:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1001"
                    participateInNextBetaRelease: false
                  camera:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1003"
                    participateInNextBetaRelease: false
                  cellularGateway:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1004"
                    participateInNextBetaRelease: false
                  sensor:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1005"
                    participateInNextBetaRelease: false
                  switch:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1002"
                    participateInNextBetaRelease: false
                  wireless:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1000"
                    participateInNextBetaRelease: false
                timezone: America/Los_Angeles
                upgradeWindow:
                  dayOfWeek: sun
                  hourOfDay: 4:00
              properties:
                products:
                  description: Contains information about the network to update
                  properties:
                    appliance:
                      description: The network device to be updated
                      properties:
                        nextUpgrade:
                          description: The pending firmware upgrade if it exists
                          properties:
                            time:
                              description: The time of the last successful upgrade
                              type: string
                            toVersion:
                              description: The version to be updated to
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              type: object
                          type: object
                        participateInNextBetaRelease:
                          description: Whether or not the network wants beta firmware
                          type: boolean
                      type: object
                    camera:
                      description: The network device to be updated
                      properties:
                        nextUpgrade:
                          description: The pending firmware upgrade if it exists
                          properties:
                            time:
                              description: The time of the last successful upgrade
                              type: string
                            toVersion:
                              description: The version to be updated to
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              type: object
                          type: object
                        participateInNextBetaRelease:
                          description: Whether or not the network wants beta firmware
                          type: boolean
                      type: object
                    cellularGateway:
                      description: The network device to be updated
                      properties:
                        nextUpgrade:
                          description: The pending firmware upgrade if it exists
                          properties:
                            time:
                              description: The time of the last successful upgrade
                              type: string
                            toVersion:
                              description: The version to be updated to
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              type: object
                          type: object
                        participateInNextBetaRelease:
                          description: Whether or not the network wants beta firmware
                          type: boolean
                      type: object
                    sensor:
                      description: The network device to be updated
                      properties:
                        nextUpgrade:
                          description: The pending firmware upgrade if it exists
                          properties:
                            time:
                              description: The time of the last successful upgrade
                              type: string
                            toVersion:
                              description: The version to be updated to
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              type: object
                          type: object
                        participateInNextBetaRelease:
                          description: Whether or not the network wants beta firmware
                          type: boolean
                      type: object
                    switch:
                      description: The network device to be updated
                      properties:
                        nextUpgrade:
                          description: The pending firmware upgrade if it exists
                          properties:
                            time:
                              description: The time of the last successful upgrade
                              type: string
                            toVersion:
                              description: The version to be updated to
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              type: object
                          type: object
                        participateInNextBetaRelease:
                          description: Whether or not the network wants beta firmware
                          type: boolean
                      type: object
                    wireless:
                      description: The network device to be updated
                      properties:
                        nextUpgrade:
                          description: The pending firmware upgrade if it exists
                          properties:
                            time:
                              description: The time of the last successful upgrade
                              type: string
                            toVersion:
                              description: The version to be updated to
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              type: object
                          type: object
                        participateInNextBetaRelease:
                          description: Whether or not the network wants beta firmware
                          type: boolean
                      type: object
                  type: object
                timezone:
                  description: The timezone for the network
                  type: string
                upgradeWindow:
                  description: Upgrade window for devices in network
                  properties:
                    dayOfWeek:
                      description: Day of the week
                      enum:
                        - fri
                        - friday
                        - mon
                        - monday
                        - sat
                        - saturday
                        - sun
                        - sunday
                        - thu
                        - thursday
                        - tue
                        - tuesday
                        - wed
                        - wednesday
                      type: string
                    hourOfDay:
                      description: Hour of the day
                      enum:
                        - 0:00
                        - 10:00
                        - 11:00
                        - 12:00
                        - 13:00
                        - 14:00
                        - 15:00
                        - 16:00
                        - 17:00
                        - 18:00
                        - 19:00
                        - 1:00
                        - 20:00
                        - 21:00
                        - 22:00
                        - 23:00
                        - 2:00
                        - 3:00
                        - 4:00
                        - 5:00
                        - 6:00
                        - 7:00
                        - 8:00
                        - 9:00
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      appliance:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      camera:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      cellularGateway:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      sensor:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      switch:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                      wireless:
                        availableVersions:
                          - firmware: camera-16-x-y
                            id: "3421"
                            releaseDate: 2020-11-28T17:22:52Z
                            releaseType: beta
                            shortName: MV 16.x.y
                        currentVersion:
                          firmware: camera-11-2-1
                          id: "4321"
                          releaseDate: 2020-03-17T17:22:52Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        lastUpgrade:
                          fromVersion:
                            firmware: camera-10-8-1
                            id: "1234"
                            releaseDate: 2021-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 10.8.1
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-11-2-1
                            id: "4321"
                            releaseDate: 2019-03-17T17:22:52Z
                            releaseType: stable
                            shortName: MV 11.2.1
                        nextUpgrade:
                          time: 2021-05-17T17:22:52Z
                          toVersion:
                            firmware: camera-15-5-2
                            id: "2134"
                            releaseDate: 2021-05-28T17:22:52Z
                            releaseType: stable
                            shortName: MV 25.5.2
                        participateInNextBetaRelease: false
                    timezone: America/Los_Angeles
                    upgradeWindow:
                      dayOfWeek: sun
                      hourOfDay: 4:00
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      appliance:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      camera:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      cellularGateway:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      sensor:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      switch:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                      wireless:
                        description: The network device to be updated
                        properties:
                          availableVersions:
                            description: Firmware versions available for upgrade
                            items:
                              properties:
                                firmware:
                                  description: Name of the firmware version
                                  type: string
                                id:
                                  description: Firmware version identifier
                                  type: string
                                releaseDate:
                                  description: Release date of the firmware version
                                  format: date-time
                                  type: string
                                releaseType:
                                  description: Release type of the firmware version
                                  type: string
                                shortName:
                                  description: Firmware version short name
                                  type: string
                              type: object
                            type: array
                          currentVersion:
                            description: Details of the current version on the device
                            properties:
                              firmware:
                                description: Name of the firmware version
                                type: string
                              id:
                                description: Firmware version identifier
                                type: string
                              releaseDate:
                                description: Release date of the firmware version
                                format: date-time
                                type: string
                              releaseType:
                                description: Release type of the firmware version
                                type: string
                              shortName:
                                description: Firmware version short name
                                type: string
                            type: object
                          lastUpgrade:
                            description: Details of the last firmware upgrade on the device
                            properties:
                              fromVersion:
                                description: Details of the version the device upgraded from
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                              time:
                                description: Timestamp of the last successful firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device upgraded to
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          nextUpgrade:
                            description: Details of the next firmware upgrade on the device
                            properties:
                              time:
                                description: Timestamp of the next scheduled firmware upgrade
                                format: date-time
                                type: string
                              toVersion:
                                description: Details of the version the device will upgrade to if it exists
                                properties:
                                  firmware:
                                    description: Name of the firmware version
                                    type: string
                                  id:
                                    description: Firmware version identifier
                                    type: string
                                  releaseDate:
                                    description: Release date of the firmware version
                                    format: date-time
                                    type: string
                                  releaseType:
                                    description: Release type of the firmware version
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                          participateInNextBetaRelease:
                            description: Whether or not the network wants beta firmware
                            type: boolean
                        type: object
                    type: object
                  timezone:
                    description: The timezone for the network
                    type: string
                  upgradeWindow:
                    description: Upgrade window for devices in network
                    properties:
                      dayOfWeek:
                        description: Day of the week
                        enum:
                          - fri
                          - friday
                          - mon
                          - monday
                          - sat
                          - saturday
                          - sun
                          - sunday
                          - thu
                          - thursday
                          - tue
                          - tuesday
                          - wed
                          - wednesday
                        type: string
                      hourOfDay:
                        description: Hour of the day
                        enum:
                          - 0:00
                          - 10:00
                          - 11:00
                          - 12:00
                          - 13:00
                          - 14:00
                          - 15:00
                          - 16:00
                          - 17:00
                          - 18:00
                          - 19:00
                          - 1:00
                          - 20:00
                          - 21:00
                          - 22:00
                          - 23:00
                          - 2:00
                          - 3:00
                          - 4:00
                          - 5:00
                          - 6:00
                          - 7:00
                          - 8:00
                          - 9:00
                        type: string
                    type: object
                type: object
          description: Successful operation
      summary: Update firmware upgrade information for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
  "/networks/{networkId}/firmwareUpgrades/rollbacks":
    post:
      description: Rollback a Firmware Upgrade For A Network
      operationId: createNetworkFirmwareUpgradesRollback
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                product: switch
                reasons:
                  - category: performance
                    comment: Network was slower with the upgrade
                time: 2020-10-21T02:00:00Z
                toVersion:
                  id: "7857"
              properties:
                product:
                  description: Product type to rollback (if the network is a combined network)
                  enum:
                    - appliance
                    - camera
                    - cellularGateway
                    - switch
                    - wireless
                  type: string
                reasons:
                  description: Reasons for the rollback
                  items:
                    properties:
                      category:
                        description: Reason for the rollback
                        enum:
                          - broke old features
                          - other
                          - performance
                          - stability
                          - testing
                          - unifying networks versions
                        type: string
                      comment:
                        description: Additional comment about the rollback
                        type: string
                    required:
                      - category
                      - comment
                    type: object
                  type: array
                time:
                  description: Scheduled time for the rollback
                  format: date-time
                  type: string
                toVersion:
                  description: Version to downgrade to (if the network has firmware flexibility)
                  properties:
                    id:
                      description: The version ID
                      type: string
                  type: object
              required:
                - reasons
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    product: switch
                    reasons:
                      - category: performance
                        comment: Network was slower with the upgrade
                    status: pending
                    time: 2020-10-21T02:00:00Z
                    toVersion:
                      firmware: switch-15-5-2
                      id: "7857"
                      releaseDate: 2020-03-28T17:22:52Z
                      releaseType: stable
                      shortName: MS 25.5.2
                    upgradeBatchId: "23456"
              schema:
                properties:
                  product:
                    description: Product type to rollback (if the network is a combined network)
                    enum:
                      - appliance
                      - camera
                      - cellularGateway
                      - switch
                      - wireless
                    type: string
                  reasons:
                    description: Reasons for the rollback
                    items:
                      properties:
                        category:
                          description: Reason for the rollback
                          enum:
                            - broke old features
                            - other
                            - performance
                            - stability
                            - testing
                            - unifying networks versions
                          type: string
                        comment:
                          description: Additional comment about the rollback
                          type: string
                      type: object
                    type: array
                  status:
                    description: Status of the rollback
                    enum:
                      - canceled
                      - completed
                      - in_progress
                      - pending
                    type: string
                  time:
                    description: Scheduled time for the rollback
                    format: date-time
                    type: string
                  toVersion:
                    description: Version to downgrade to (if the network has firmware flexibility)
                    properties:
                      firmware:
                        description: Name of the firmware version
                        type: string
                      id:
                        description: Firmware version identifier
                        type: string
                      releaseDate:
                        description: Release date of the firmware version
                        format: date-time
                        type: string
                      releaseType:
                        description: Release type of the firmware version
                        type: string
                      shortName:
                        description: Firmware version short name
                        type: string
                    type: object
                  upgradeBatchId:
                    description: Batch ID of the firmware rollback
                    type: string
                type: object
          description: Successful operation
      summary: Rollback a Firmware Upgrade For A Network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - rollbacks
  "/networks/{networkId}/firmwareUpgrades/staged/events":
    get:
      description: Get the Staged Upgrade Event from a network
      operationId: getNetworkFirmwareUpgradesStagedEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      switch:
                        nextUpgrade:
                          toVersion:
                            id: "1234"
                            shortName: MS 15.2.1
                    reasons:
                      - category: performance
                        comment: Network was slower with the upgrade
                    stages:
                      - group:
                          description: My Staged Upgrade Group Description
                          id: "1234"
                          name: My Staged Upgrade Group
                        milestones:
                          canceledAt: 2018-02-11T00:00:00Z
                          completedAt: 2018-02-11T00:00:00Z
                          scheduledFor: 2018-02-11T00:00:00Z
                          startedAt: 2018-02-11T00:00:00Z
                        status: Completed
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      switch:
                        description: The Switch network to be updated
                        properties:
                          nextUpgrade:
                            description: Details of the next firmware upgrade
                            properties:
                              toVersion:
                                description: Details of the version the device will upgrade to
                                properties:
                                  id:
                                    description: Id of the Version being upgraded to
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  reasons:
                    description: Reasons for the rollback
                    items:
                      properties:
                        category:
                          description: Reason for the rollback
                          enum:
                            - broke old features
                            - other
                            - performance
                            - stability
                            - testing
                            - unifying networks versions
                          type: string
                        comment:
                          description: Additional comment about the rollback
                          type: string
                      type: object
                    type: array
                  stages:
                    description: The ordered stages in the network
                    items:
                      properties:
                        group:
                          description: The staged upgrade group
                          properties:
                            description:
                              description: Description of the Staged Upgrade Group
                              type: string
                            id:
                              description: Id of the Staged Upgrade Group
                              type: string
                            name:
                              description: Name of the Staged Upgrade Group
                              type: string
                          type: object
                        milestones:
                          description: The Staged Upgrade Milestones for the stage
                          properties:
                            canceledAt:
                              description: Time that the group was canceled
                              format: date-time
                              type: string
                            completedAt:
                              description: Finish time for the group
                              format: date-time
                              type: string
                            scheduledFor:
                              description: Scheduled start time for the group
                              format: date-time
                              type: string
                            startedAt:
                              description: Start time for the group
                              format: date-time
                              type: string
                          type: object
                        status:
                          description: Current upgrade status of the group
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Get the Staged Upgrade Event from a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - events
    post:
      description: Create a Staged Upgrade Event for a network
      operationId: createNetworkFirmwareUpgradesStagedEvent
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                stages:
                  - group:
                      id: "1234"
                    milestones:
                      scheduledFor: 2018-02-11T00:00:00Z
              properties:
                products:
                  description: Contains firmware upgrade version information
                  properties:
                    switch:
                      description: Version information for the switch network being upgraded
                      properties:
                        nextUpgrade:
                          description: The next upgrade version for the switch network
                          properties:
                            toVersion:
                              description: The version to be updated to for switch devices
                              properties:
                                id:
                                  description: The version ID
                                  type: string
                              required:
                                - id
                              type: object
                          type: object
                      type: object
                  type: object
                stages:
                  description: All firmware upgrade stages in the network with their start time.
                  items:
                    properties:
                      group:
                        description: The Staged Upgrade Group containing the name and ID
                        properties:
                          id:
                            description: ID of the Staged Upgrade Group
                            type: string
                        required:
                          - id
                        type: object
                      milestones:
                        description: The Staged Upgrade Milestones for the specific stage
                        properties:
                          scheduledFor:
                            description: The start time of the staged upgrade stage. (In ISO-8601 format, in the time zone of the network.)
                            type: string
                        required:
                          - scheduledFor
                        type: object
                    type: object
                  type: array
              required:
                - stages
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      switch:
                        nextUpgrade:
                          toVersion:
                            id: "1234"
                            shortName: MS 15.2.1
                    reasons:
                      - category: performance
                        comment: Network was slower with the upgrade
                    stages:
                      - group:
                          description: My Staged Upgrade Group Description
                          id: "1234"
                          name: My Staged Upgrade Group
                        milestones:
                          canceledAt: 2018-02-11T00:00:00Z
                          completedAt: 2018-02-11T00:00:00Z
                          scheduledFor: 2018-02-11T00:00:00Z
                          startedAt: 2018-02-11T00:00:00Z
                        status: Completed
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      switch:
                        description: The Switch network to be updated
                        properties:
                          nextUpgrade:
                            description: Details of the next firmware upgrade
                            properties:
                              toVersion:
                                description: Details of the version the device will upgrade to
                                properties:
                                  id:
                                    description: Id of the Version being upgraded to
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  reasons:
                    description: Reasons for the rollback
                    items:
                      properties:
                        category:
                          description: Reason for the rollback
                          enum:
                            - broke old features
                            - other
                            - performance
                            - stability
                            - testing
                            - unifying networks versions
                          type: string
                        comment:
                          description: Additional comment about the rollback
                          type: string
                      type: object
                    type: array
                  stages:
                    description: The ordered stages in the network
                    items:
                      properties:
                        group:
                          description: The staged upgrade group
                          properties:
                            description:
                              description: Description of the Staged Upgrade Group
                              type: string
                            id:
                              description: Id of the Staged Upgrade Group
                              type: string
                            name:
                              description: Name of the Staged Upgrade Group
                              type: string
                          type: object
                        milestones:
                          description: The Staged Upgrade Milestones for the stage
                          properties:
                            canceledAt:
                              description: Time that the group was canceled
                              format: date-time
                              type: string
                            completedAt:
                              description: Finish time for the group
                              format: date-time
                              type: string
                            scheduledFor:
                              description: Scheduled start time for the group
                              format: date-time
                              type: string
                            startedAt:
                              description: Start time for the group
                              format: date-time
                              type: string
                          type: object
                        status:
                          description: Current upgrade status of the group
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Create a Staged Upgrade Event for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - events
    put:
      description: Update the Staged Upgrade Event for a network
      operationId: updateNetworkFirmwareUpgradesStagedEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                stages:
                  - group:
                      id: "1234"
                    milestones:
                      scheduledFor: 2018-02-11T00:00:00Z
              properties:
                stages:
                  description: All firmware upgrade stages in the network with their start time.
                  items:
                    properties:
                      group:
                        description: The Staged Upgrade Group containing the name and ID
                        properties:
                          id:
                            description: ID of the Staged Upgrade Group
                            type: string
                        required:
                          - id
                        type: object
                      milestones:
                        description: The Staged Upgrade Milestones for the specific stage
                        properties:
                          scheduledFor:
                            description: The start time of the staged upgrade stage. (In ISO-8601 format, in the time zone of the network.)
                            type: string
                        required:
                          - scheduledFor
                        type: object
                    type: object
                  type: array
              required:
                - stages
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      switch:
                        nextUpgrade:
                          toVersion:
                            id: "1234"
                            shortName: MS 15.2.1
                    reasons:
                      - category: performance
                        comment: Network was slower with the upgrade
                    stages:
                      - group:
                          description: My Staged Upgrade Group Description
                          id: "1234"
                          name: My Staged Upgrade Group
                        milestones:
                          canceledAt: 2018-02-11T00:00:00Z
                          completedAt: 2018-02-11T00:00:00Z
                          scheduledFor: 2018-02-11T00:00:00Z
                          startedAt: 2018-02-11T00:00:00Z
                        status: Completed
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      switch:
                        description: The Switch network to be updated
                        properties:
                          nextUpgrade:
                            description: Details of the next firmware upgrade
                            properties:
                              toVersion:
                                description: Details of the version the device will upgrade to
                                properties:
                                  id:
                                    description: Id of the Version being upgraded to
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  reasons:
                    description: Reasons for the rollback
                    items:
                      properties:
                        category:
                          description: Reason for the rollback
                          enum:
                            - broke old features
                            - other
                            - performance
                            - stability
                            - testing
                            - unifying networks versions
                          type: string
                        comment:
                          description: Additional comment about the rollback
                          type: string
                      type: object
                    type: array
                  stages:
                    description: The ordered stages in the network
                    items:
                      properties:
                        group:
                          description: The staged upgrade group
                          properties:
                            description:
                              description: Description of the Staged Upgrade Group
                              type: string
                            id:
                              description: Id of the Staged Upgrade Group
                              type: string
                            name:
                              description: Name of the Staged Upgrade Group
                              type: string
                          type: object
                        milestones:
                          description: The Staged Upgrade Milestones for the stage
                          properties:
                            canceledAt:
                              description: Time that the group was canceled
                              format: date-time
                              type: string
                            completedAt:
                              description: Finish time for the group
                              format: date-time
                              type: string
                            scheduledFor:
                              description: Scheduled start time for the group
                              format: date-time
                              type: string
                            startedAt:
                              description: Start time for the group
                              format: date-time
                              type: string
                          type: object
                        status:
                          description: Current upgrade status of the group
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update the Staged Upgrade Event for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - events
  "/networks/{networkId}/firmwareUpgrades/staged/events/defer":
    post:
      description: Postpone by 1 week all pending staged upgrade stages for a network
      operationId: deferNetworkFirmwareUpgradesStagedEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      switch:
                        nextUpgrade:
                          toVersion:
                            id: "1234"
                            shortName: MS 15.2.1
                    reasons:
                      - category: performance
                        comment: Network was slower with the upgrade
                    stages:
                      - group:
                          description: My Staged Upgrade Group Description
                          id: "1234"
                          name: My Staged Upgrade Group
                        milestones:
                          canceledAt: 2018-02-11T00:00:00Z
                          completedAt: 2018-02-11T00:00:00Z
                          scheduledFor: 2018-02-11T00:00:00Z
                          startedAt: 2018-02-11T00:00:00Z
                        status: Completed
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      switch:
                        description: The Switch network to be updated
                        properties:
                          nextUpgrade:
                            description: Details of the next firmware upgrade
                            properties:
                              toVersion:
                                description: Details of the version the device will upgrade to
                                properties:
                                  id:
                                    description: Id of the Version being upgraded to
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  reasons:
                    description: Reasons for the rollback
                    items:
                      properties:
                        category:
                          description: Reason for the rollback
                          enum:
                            - broke old features
                            - other
                            - performance
                            - stability
                            - testing
                            - unifying networks versions
                          type: string
                        comment:
                          description: Additional comment about the rollback
                          type: string
                      type: object
                    type: array
                  stages:
                    description: The ordered stages in the network
                    items:
                      properties:
                        group:
                          description: The staged upgrade group
                          properties:
                            description:
                              description: Description of the Staged Upgrade Group
                              type: string
                            id:
                              description: Id of the Staged Upgrade Group
                              type: string
                            name:
                              description: Name of the Staged Upgrade Group
                              type: string
                          type: object
                        milestones:
                          description: The Staged Upgrade Milestones for the stage
                          properties:
                            canceledAt:
                              description: Time that the group was canceled
                              format: date-time
                              type: string
                            completedAt:
                              description: Finish time for the group
                              format: date-time
                              type: string
                            scheduledFor:
                              description: Scheduled start time for the group
                              format: date-time
                              type: string
                            startedAt:
                              description: Start time for the group
                              format: date-time
                              type: string
                          type: object
                        status:
                          description: Current upgrade status of the group
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Postpone by 1 week all pending staged upgrade stages for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - events
  "/networks/{networkId}/firmwareUpgrades/staged/events/rollbacks":
    post:
      description: Rollback a Staged Upgrade Event for a network
      operationId: rollbacksNetworkFirmwareUpgradesStagedEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                reasons:
                  - category: performance
                    comment: Network was slower with the upgrade
                stages:
                  - group:
                      id: "1234"
                    milestones:
                      scheduledFor: 2018-02-11T00:00:00Z
              properties:
                reasons:
                  description: The reason for rolling back the staged upgrade
                  items:
                    properties:
                      category:
                        description: Reason for the rollback
                        enum:
                          - broke old features
                          - other
                          - performance
                          - stability
                          - testing
                          - unifying networks versions
                        type: string
                      comment:
                        description: Additional comment about the rollback
                        type: string
                    required:
                      - category
                      - comment
                    type: object
                  type: array
                stages:
                  description: All completed or in-progress stages in the network with their new start times. All pending stages will be canceled
                  items:
                    properties:
                      group:
                        description: The Staged Upgrade Group containing the name and ID
                        properties:
                          id:
                            description: ID of the Staged Upgrade Group
                            type: string
                        required:
                          - id
                        type: object
                      milestones:
                        description: The Staged Upgrade Milestones for the specific stage
                        properties:
                          scheduledFor:
                            description: The start time of the staged upgrade stage. (In ISO-8601 format, in the time zone of the network.)
                            type: string
                        required:
                          - scheduledFor
                        type: object
                    type: object
                  type: array
              required:
                - stages
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    products:
                      switch:
                        nextUpgrade:
                          toVersion:
                            id: "1234"
                            shortName: MS 15.2.1
                    reasons:
                      - category: performance
                        comment: Network was slower with the upgrade
                    stages:
                      - group:
                          description: My Staged Upgrade Group Description
                          id: "1234"
                          name: My Staged Upgrade Group
                        milestones:
                          canceledAt: 2018-02-11T00:00:00Z
                          completedAt: 2018-02-11T00:00:00Z
                          scheduledFor: 2018-02-11T00:00:00Z
                          startedAt: 2018-02-11T00:00:00Z
                        status: Completed
              schema:
                properties:
                  products:
                    description: The network devices to be updated
                    properties:
                      switch:
                        description: The Switch network to be updated
                        properties:
                          nextUpgrade:
                            description: Details of the next firmware upgrade
                            properties:
                              toVersion:
                                description: Details of the version the device will upgrade to
                                properties:
                                  id:
                                    description: Id of the Version being upgraded to
                                    type: string
                                  shortName:
                                    description: Firmware version short name
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  reasons:
                    description: Reasons for the rollback
                    items:
                      properties:
                        category:
                          description: Reason for the rollback
                          enum:
                            - broke old features
                            - other
                            - performance
                            - stability
                            - testing
                            - unifying networks versions
                          type: string
                        comment:
                          description: Additional comment about the rollback
                          type: string
                      type: object
                    type: array
                  stages:
                    description: The ordered stages in the network
                    items:
                      properties:
                        group:
                          description: The staged upgrade group
                          properties:
                            description:
                              description: Description of the Staged Upgrade Group
                              type: string
                            id:
                              description: Id of the Staged Upgrade Group
                              type: string
                            name:
                              description: Name of the Staged Upgrade Group
                              type: string
                          type: object
                        milestones:
                          description: The Staged Upgrade Milestones for the stage
                          properties:
                            canceledAt:
                              description: Time that the group was canceled
                              format: date-time
                              type: string
                            completedAt:
                              description: Finish time for the group
                              format: date-time
                              type: string
                            scheduledFor:
                              description: Scheduled start time for the group
                              format: date-time
                              type: string
                            startedAt:
                              description: Start time for the group
                              format: date-time
                              type: string
                          type: object
                        status:
                          description: Current upgrade status of the group
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Rollback a Staged Upgrade Event for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - events
  "/networks/{networkId}/firmwareUpgrades/staged/groups":
    get:
      description: List of Staged Upgrade Groups in a network
      operationId: getNetworkFirmwareUpgradesStagedGroups
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - assignedDevices:
                        devices:
                          - name: Device Name
                            serial: Q234-ABCD-5678
                        switchStacks:
                          - id: "1234"
                            name: Stack Name
                      description: The description of the group
                      groupId: "1234"
                      isDefault: false
                      name: My Staged Upgrade Group
              schema:
                items:
                  properties:
                    assignedDevices:
                      description: The devices and Switch Stacks assigned to the Group
                      properties:
                        devices:
                          description: Data Array of Devices containing the name and serial
                          items:
                            properties:
                              name:
                                description: Name of the device
                                type: string
                              serial:
                                description: Serial of the device
                                type: string
                            type: object
                          type: array
                        switchStacks:
                          description: Data Array of Switch Stacks containing the name and id
                          items:
                            properties:
                              id:
                                description: ID of the Switch Stack
                                type: string
                              name:
                                description: Name of the Switch Stack
                                type: string
                            type: object
                          type: array
                      type: object
                    description:
                      description: Description of the Staged Upgrade Group
                      type: string
                    groupId:
                      description: Id of staged upgrade group
                      type: string
                    isDefault:
                      description: Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
                      type: boolean
                    name:
                      description: Name of the Staged Upgrade Group
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List of Staged Upgrade Groups in a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - groups
    post:
      description: Create a Staged Upgrade Group for a network
      operationId: createNetworkFirmwareUpgradesStagedGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createNetworkFirmwareUpgradesStagedGroupCreatenetworkfirmwareupgradesstagedgroup"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    assignedDevices:
                      devices:
                        - name: Device Name
                          serial: Q234-ABCD-5678
                      switchStacks:
                        - id: "1234"
                          name: Stack Name
                    description: The description of the group
                    groupId: "1234"
                    isDefault: false
                    name: My Staged Upgrade Group
              schema:
                type: object
          description: Successful operation
      summary: Create a Staged Upgrade Group for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - groups
  "/networks/{networkId}/firmwareUpgrades/staged/groups/{groupId}":
    delete:
      description: Delete a Staged Upgrade Group
      operationId: deleteNetworkFirmwareUpgradesStagedGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a Staged Upgrade Group
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - groups
    get:
      description: Get a Staged Upgrade Group from a network
      operationId: getNetworkFirmwareUpgradesStagedGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    assignedDevices:
                      devices:
                        - name: Device Name
                          serial: Q234-ABCD-5678
                      switchStacks:
                        - id: "1234"
                          name: Stack Name
                    description: The description of the group
                    groupId: "1234"
                    isDefault: false
                    name: My Staged Upgrade Group
              schema:
                properties:
                  assignedDevices:
                    description: The devices and Switch Stacks assigned to the Group
                    properties:
                      devices:
                        description: Data Array of Devices containing the name and serial
                        items:
                          properties:
                            name:
                              description: Name of the device
                              type: string
                            serial:
                              description: Serial of the device
                              type: string
                          type: object
                        type: array
                      switchStacks:
                        description: Data Array of Switch Stacks containing the name and id
                        items:
                          properties:
                            id:
                              description: ID of the Switch Stack
                              type: string
                            name:
                              description: Name of the Switch Stack
                              type: string
                          type: object
                        type: array
                    type: object
                  description:
                    description: Description of the Staged Upgrade Group
                    type: string
                  groupId:
                    description: Id of staged upgrade group
                    type: string
                  isDefault:
                    description: Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
                    type: boolean
                  name:
                    description: Name of the Staged Upgrade Group
                    type: string
                type: object
          description: Successful operation
      summary: Get a Staged Upgrade Group from a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - groups
    put:
      description: Update a Staged Upgrade Group for a network
      operationId: updateNetworkFirmwareUpgradesStagedGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createNetworkFirmwareUpgradesStagedGroupCreatenetworkfirmwareupgradesstagedgroup"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    assignedDevices:
                      devices:
                        - name: Device Name
                          serial: Q234-ABCD-5678
                      switchStacks:
                        - id: "1234"
                          name: Stack Name
                    description: The description of the group
                    groupId: "1234"
                    isDefault: false
                    name: My Staged Upgrade Group
              schema:
                type: object
          description: Successful operation
      summary: Update a Staged Upgrade Group for a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - groups
  "/networks/{networkId}/firmwareUpgrades/staged/stages":
    get:
      description: Order of Staged Upgrade Groups in a network
      operationId: getNetworkFirmwareUpgradesStagedStages
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - group:
                        description: My Staged Upgrade Description
                        id: "1234"
                        name: My Staged Upgrade Group
              schema:
                items:
                  properties:
                    group:
                      description: The Staged Upgrade Group
                      properties:
                        description:
                          description: Description of the Staged Upgrade Group
                          type: string
                        id:
                          description: Id of the Staged Upgrade Group
                          type: string
                        name:
                          description: Name of the Staged Upgrade Group
                          type: string
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Order of Staged Upgrade Groups in a network
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - stages
    put:
      description: Assign Staged Upgrade Group order in the sequence.
      operationId: updateNetworkFirmwareUpgradesStagedStages
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                _json:
                  - group:
                      id: "1234"
              properties:
                _json:
                  description: Array of Staged Upgrade Groups
                  items:
                    properties:
                      group:
                        description: The Staged Upgrade Group
                        properties:
                          id:
                            description: ID of the Staged Upgrade Group
                            type: string
                        required:
                          - id
                        type: object
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - group:
                        description: My Staged Upgrade Description
                        id: "1234"
                        name: My Staged Upgrade Group
              schema:
                items:
                  properties:
                    group:
                      description: The Staged Upgrade Group
                      properties:
                        description:
                          description: Description of the Staged Upgrade Group
                          type: string
                        id:
                          description: Id of the Staged Upgrade Group
                          type: string
                        name:
                          description: Name of the Staged Upgrade Group
                          type: string
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Assign Staged Upgrade Group order in the sequence.
      tags:
        - networks
        - configure
        - firmwareUpgrades
        - staged
        - stages
  "/networks/{networkId}/floorPlans":
    get:
      description: List the floor plans that belong to your network
      operationId: getNetworkFloorPlans
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - bottomLeftCorner:
                        lat: 37.7696461495
                        lng: -122.3880815506
                      bottomRightCorner:
                        lat: 37.771524649766654
                        lng: -122.38795275055205
                      center:
                        lat: 37.770040510499996
                        lng: -122.38714009525
                      devices:
                        - address: 1600 Pennsylvania Ave
                          beaconIdParams:
                            major: 5
                            minor: 3
                            uuid: 00000000-0000-0000-0000-000000000000
                          firmware: wireless-25-14
                          floorPlanId: g_1234567
                          lanIp: 1.2.3.4
                          lat: 37.4180951010362
                          lng: -122.098531723022
                          mac: 00:11:22:33:44:55
                          model: MR34
                          name: My AP
                          networkId: N_24329156
                          notes: My AP's note
                          serial: Q234-ABCD-5678
                          tags:
                            - recently-added
                      floorPlanId: g_1234567
                      height: 150.1
                      imageExtension: png
                      imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                      imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                      imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                      name: HQ Floor Plan
                      topLeftCorner:
                        lat: 37.769700101836364
                        lng: -122.3888684251381
                      topRightCorner:
                        lat: 37.77157860210302
                        lng: -122.38873962509012
                      width: 100
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the floor plans that belong to your network
      tags:
        - networks
        - configure
        - floorPlans
    post:
      description: Upload a floor plan
      operationId: createNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                imageContents: Q2lzY28gTWVyYWtp
                name: HQ Floor Plan
              properties:
                bottomLeftCorner:
                  description: The longitude and latitude of the bottom left corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                bottomRightCorner:
                  description: The longitude and latitude of the bottom right corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                center:
                  description: The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                imageContents:
                  description: The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.
                  format: byte
                  type: string
                name:
                  description: The name of your floor plan.
                  type: string
                topLeftCorner:
                  description: The longitude and latitude of the top left corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                topRightCorner:
                  description: The longitude and latitude of the top right corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
              required:
                - name
                - imageContents
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    bottomLeftCorner:
                      lat: 37.7696461495
                      lng: -122.3880815506
                    bottomRightCorner:
                      lat: 37.771524649766654
                      lng: -122.38795275055205
                    center:
                      lat: 37.770040510499996
                      lng: -122.38714009525
                    devices:
                      - address: 1600 Pennsylvania Ave
                        beaconIdParams:
                          major: 5
                          minor: 3
                          uuid: 00000000-0000-0000-0000-000000000000
                        firmware: wireless-25-14
                        floorPlanId: g_1234567
                        lanIp: 1.2.3.4
                        lat: 37.4180951010362
                        lng: -122.098531723022
                        mac: 00:11:22:33:44:55
                        model: MR34
                        name: My AP
                        networkId: N_24329156
                        notes: My AP's note
                        serial: Q234-ABCD-5678
                        tags:
                          - recently-added
                    floorPlanId: g_1234567
                    height: 150.1
                    imageExtension: png
                    imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                    imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                    imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                    name: HQ Floor Plan
                    topLeftCorner:
                      lat: 37.769700101836364
                      lng: -122.3888684251381
                    topRightCorner:
                      lat: 37.77157860210302
                      lng: -122.38873962509012
                    width: 100
              schema:
                type: object
          description: Successful operation
      summary: Upload a floor plan
      tags:
        - networks
        - configure
        - floorPlans
  "/networks/{networkId}/floorPlans/{floorPlanId}":
    delete:
      description: Destroy a floor plan
      operationId: deleteNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: floorPlanId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Destroy a floor plan
      tags:
        - networks
        - configure
        - floorPlans
    get:
      description: Find a floor plan by ID
      operationId: getNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: floorPlanId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bottomLeftCorner:
                      lat: 37.7696461495
                      lng: -122.3880815506
                    bottomRightCorner:
                      lat: 37.771524649766654
                      lng: -122.38795275055205
                    center:
                      lat: 37.770040510499996
                      lng: -122.38714009525
                    devices:
                      - address: 1600 Pennsylvania Ave
                        beaconIdParams:
                          major: 5
                          minor: 3
                          uuid: 00000000-0000-0000-0000-000000000000
                        firmware: wireless-25-14
                        floorPlanId: g_1234567
                        lanIp: 1.2.3.4
                        lat: 37.4180951010362
                        lng: -122.098531723022
                        mac: 00:11:22:33:44:55
                        model: MR34
                        name: My AP
                        networkId: N_24329156
                        notes: My AP's note
                        serial: Q234-ABCD-5678
                        tags:
                          - recently-added
                    floorPlanId: g_1234567
                    height: 150.1
                    imageExtension: png
                    imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                    imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                    imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                    name: HQ Floor Plan
                    topLeftCorner:
                      lat: 37.769700101836364
                      lng: -122.3888684251381
                    topRightCorner:
                      lat: 37.77157860210302
                      lng: -122.38873962509012
                    width: 100
              schema:
                type: object
          description: Successful operation
      summary: Find a floor plan by ID
      tags:
        - networks
        - configure
        - floorPlans
    put:
      description: Update a floor plan's geolocation and other meta data
      operationId: updateNetworkFloorPlan
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: floorPlanId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                bottomLeftCorner:
                  description: The longitude and latitude of the bottom left corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                bottomRightCorner:
                  description: The longitude and latitude of the bottom right corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                center:
                  description: The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                imageContents:
                  description: The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image.
                  format: byte
                  type: string
                name:
                  description: The name of your floor plan.
                  type: string
                topLeftCorner:
                  description: The longitude and latitude of the top left corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
                topRightCorner:
                  description: The longitude and latitude of the top right corner of your floor plan.
                  properties:
                    lat:
                      description: Latitude
                      format: float
                      type: number
                    lng:
                      description: Longitude
                      format: float
                      type: number
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bottomLeftCorner:
                      lat: 37.7696461495
                      lng: -122.3880815506
                    bottomRightCorner:
                      lat: 37.771524649766654
                      lng: -122.38795275055205
                    center:
                      lat: 37.770040510499996
                      lng: -122.38714009525
                    devices:
                      - address: 1600 Pennsylvania Ave
                        beaconIdParams:
                          major: 5
                          minor: 3
                          uuid: 00000000-0000-0000-0000-000000000000
                        firmware: wireless-25-14
                        floorPlanId: g_1234567
                        lanIp: 1.2.3.4
                        lat: 37.4180951010362
                        lng: -122.098531723022
                        mac: 00:11:22:33:44:55
                        model: MR34
                        name: My AP
                        networkId: N_24329156
                        notes: My AP's note
                        serial: Q234-ABCD-5678
                        tags:
                          - recently-added
                    floorPlanId: g_1234567
                    height: 150.1
                    imageExtension: png
                    imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                    imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                    imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                    name: HQ Floor Plan
                    topLeftCorner:
                      lat: 37.769700101836364
                      lng: -122.3888684251381
                    topRightCorner:
                      lat: 37.77157860210302
                      lng: -122.38873962509012
                    width: 100
              schema:
                type: object
          description: Successful operation
      summary: Update a floor plan's geolocation and other meta data
      tags:
        - networks
        - configure
        - floorPlans
  "/networks/{networkId}/groupPolicies":
    get:
      description: List the group policies in a network
      operationId: getNetworkGroupPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - bandwidth:
                        bandwidthLimits:
                          limitDown: 1000000
                          limitUp: 1000000
                        settings: custom
                      bonjourForwarding:
                        rules:
                          - description: A simple bonjour rule
                            services:
                              - All Services
                            vlanId: "1"
                        settings: custom
                      contentFiltering:
                        allowedUrlPatterns:
                          patterns: []
                          settings: network default
                        blockedUrlCategories:
                          categories:
                            - meraki:contentFiltering/category/1
                            - meraki:contentFiltering/category/7
                          settings: override
                        blockedUrlPatterns:
                          patterns:
                            - http://www.example.com
                            - http://www.betting.com
                          settings: append
                      firewallAndTrafficShaping:
                        l3FirewallRules:
                          - comment: Allow TCP traffic to subnet with HTTP servers.
                            destCidr: 192.168.1.0/24
                            destPort: "443"
                            policy: allow
                            protocol: tcp
                        l7FirewallRules:
                          - policy: deny
                            type: host
                            value: google.com
                          - policy: deny
                            type: port
                            value: "23"
                          - policy: deny
                            type: ipRange
                            value: 10.11.12.00/24
                          - policy: deny
                            type: ipRange
                            value: 10.11.12.00/24:5555
                        settings: custom
                        trafficShapingRules:
                          - definitions:
                              - type: host
                                value: google.com
                              - type: port
                                value: "9090"
                              - type: ipRange
                                value: 192.1.0.0
                              - type: ipRange
                                value: 192.1.0.0/16
                              - type: ipRange
                                value: 10.1.0.0/16:80
                              - type: localNet
                                value: 192.168.0.0/16
                            dscpTagValue: 0
                            pcpTagValue: 0
                            perClientBandwidthLimits:
                              bandwidthLimits:
                                limitDown: 1000000
                                limitUp: 1000000
                              settings: custom
                      groupPolicyId: "101"
                      name: No video streaming
                      scheduling:
                        enabled: true
                        friday:
                          active: true
                          from: 9:00
                          to: 17:00
                        monday:
                          active: true
                          from: 9:00
                          to: 17:00
                        saturday:
                          active: false
                          from: 0:00
                          to: 24:00
                        sunday:
                          active: false
                          from: 0:00
                          to: 24:00
                        thursday:
                          active: true
                          from: 9:00
                          to: 17:00
                        tuesday:
                          active: true
                          from: 9:00
                          to: 17:00
                        wednesday:
                          active: true
                          from: 9:00
                          to: 17:00
                      splashAuthSettings: bypass
                      vlanTagging:
                        settings: custom
                        vlanId: "1"
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the group policies in a network
      tags:
        - networks
        - configure
        - groupPolicies
    post:
      description: Create a group policy
      operationId: createNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                bandwidth:
                  bandwidthLimits:
                    limitDown: 1000000
                    limitUp: 1000000
                  settings: custom
                bonjourForwarding:
                  rules:
                    - description: A simple bonjour rule
                      services:
                        - All Services
                      vlanId: "1"
                  settings: custom
                contentFiltering:
                  allowedUrlPatterns:
                    patterns: []
                    settings: network default
                  blockedUrlCategories:
                    categories:
                      - meraki:contentFiltering/category/1
                      - meraki:contentFiltering/category/7
                    settings: override
                  blockedUrlPatterns:
                    patterns:
                      - http://www.example.com
                      - http://www.betting.com
                    settings: append
                firewallAndTrafficShaping:
                  l3FirewallRules:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      destCidr: 192.168.1.0/24
                      destPort: "443"
                      policy: allow
                      protocol: tcp
                  l7FirewallRules:
                    - policy: deny
                      type: host
                      value: google.com
                    - policy: deny
                      type: port
                      value: "23"
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24:5555
                  settings: custom
                  trafficShapingRules:
                    - definitions:
                        - type: host
                          value: google.com
                        - type: port
                          value: "9090"
                        - type: ipRange
                          value: 192.1.0.0
                        - type: ipRange
                          value: 192.1.0.0/16
                        - type: ipRange
                          value: 10.1.0.0/16:80
                        - type: localNet
                          value: 192.168.0.0/16
                      dscpTagValue: 0
                      pcpTagValue: 0
                      perClientBandwidthLimits:
                        bandwidthLimits:
                          limitDown: 1000000
                          limitUp: 1000000
                        settings: custom
                name: No video streaming
                scheduling:
                  enabled: true
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
              properties:
                bandwidth:
                  description: |2
                        The bandwidth settings for clients bound to your group policy.
                  properties:
                    bandwidthLimits:
                      description: The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.
                      properties:
                        limitDown:
                          description: The maximum download limit (integer, in Kbps). null indicates no limit
                          type: integer
                        limitUp:
                          description: The maximum upload limit (integer, in Kbps). null indicates no limit
                          type: integer
                      type: object
                    settings:
                      description: How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                  type: object
                bonjourForwarding:
                  description: The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.
                  properties:
                    rules:
                      description: A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.
                      items:
                        properties:
                          description:
                            description: A description for your Bonjour forwarding rule. Optional.
                            type: string
                          services:
                            description: A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
                            items:
                              enum:
                                - AFP
                                - AirPlay
                                - All Services
                                - BitTorrent
                                - FTP
                                - Printers
                                - SSH
                                - Samba
                                - Scanners
                                - iChat
                                - iTunes
                              type: string
                            type: array
                          vlanId:
                            description: The ID of the service VLAN. Required.
                            type: string
                        required:
                          - vlanId
                          - services
                        type: object
                      type: array
                    settings:
                      description: How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                  type: object
                contentFiltering:
                  description: The content filtering settings for your group policy
                  properties:
                    allowedUrlPatterns:
                      description: Settings for allowed URL patterns
                      properties:
                        patterns:
                          description: A list of URL patterns that are allowed
                          items:
                            type: string
                          type: array
                        settings:
                          description: How URL patterns are applied. Can be 'network default', 'append' or 'override'.
                          enum:
                            - append
                            - network default
                            - override
                          type: string
                      type: object
                    blockedUrlCategories:
                      description: Settings for blocked URL categories
                      properties:
                        categories:
                          description: A list of URL categories to block
                          items:
                            type: string
                          type: array
                        settings:
                          description: How URL categories are applied. Can be 'network default', 'append' or 'override'.
                          enum:
                            - append
                            - network default
                            - override
                          type: string
                      type: object
                    blockedUrlPatterns:
                      description: Settings for blocked URL patterns
                      properties:
                        patterns:
                          description: A list of URL patterns that are blocked
                          items:
                            type: string
                          type: array
                        settings:
                          description: How URL patterns are applied. Can be 'network default', 'append' or 'override'.
                          enum:
                            - append
                            - network default
                            - override
                          type: string
                      type: object
                  type: object
                firewallAndTrafficShaping:
                  description: |2
                        The firewall and traffic shaping rules and settings for your policy.
                  properties:
                    l3FirewallRules:
                      description: An ordered array of the L3 firewall rules
                      items:
                        properties:
                          comment:
                            description: Description of the rule (optional)
                            type: string
                          destCidr:
                            description: Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.
                            type: string
                          destPort:
                            description: Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'
                            type: string
                          policy:
                            description: "'allow' or 'deny' traffic specified by this rule"
                            type: string
                          protocol:
                            description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
                            type: string
                        required:
                          - policy
                          - protocol
                          - destCidr
                        type: object
                      type: array
                    l7FirewallRules:
                      description: An ordered array of L7 firewall rules
                      items:
                        properties:
                          policy:
                            description: The policy applied to matching traffic. Must be 'deny'.
                            enum:
                              - deny
                            type: string
                          type:
                            description: Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'
                            enum:
                              - application
                              - applicationCategory
                              - host
                              - ipRange
                              - port
                            type: string
                          value:
                            description: The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.
                            type: string
                        type: object
                      type: array
                    settings:
                      description: How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                    trafficShapingRules:
                      description: |2
                            An array of traffic shaping rules. Rules are applied in the order that
                            they are specified in. An empty list (or null) means no rules. Note that
                            you are allowed a maximum of 8 rules.
                      items:
                        properties:
                          definitions:
                            description: |2
                                  A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                            items:
                              properties:
                                type:
                                  description: The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
                                  enum:
                                    - application
                                    - applicationCategory
                                    - host
                                    - ipRange
                                    - localNet
                                    - port
                                  type: string
                                value:
                                  description: |2
                                        If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                        a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                        "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                        custom ports.
                                         If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                        with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                        application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                        endpoint).
                                  type: string
                              required:
                                - type
                                - value
                              type: object
                            type: array
                          dscpTagValue:
                            description: |2
                                  The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                                  For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                            type: integer
                          pcpTagValue:
                            description: |2
                                  The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                                  null means 'Do not set PCP tag'.
                            type: integer
                          perClientBandwidthLimits:
                            description: |2
                                  An object describing the bandwidth settings for your rule.
                            properties:
                              bandwidthLimits:
                                description: The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
                                properties:
                                  limitDown:
                                    description: The maximum download limit (integer, in Kbps).
                                    type: integer
                                  limitUp:
                                    description: The maximum upload limit (integer, in Kbps).
                                    type: integer
                                type: object
                              settings:
                                description: How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
                                type: string
                            type: object
                          priority:
                            description: |2
                                  A string, indicating the priority level for packets bound to your rule.
                                  Can be 'low', 'normal' or 'high'.
                            type: string
                        required:
                          - definitions
                        type: object
                      type: array
                  type: object
                name:
                  description: The name for your group policy. Required.
                  type: string
                scheduling:
                  description: |2
                        The schedule for the group policy. Schedules are applied to days of the week.
                  properties:
                    enabled:
                      description: Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.
                      type: boolean
                    friday:
                      description: The schedule object for Friday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    monday:
                      description: The schedule object for Monday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    saturday:
                      description: The schedule object for Saturday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    sunday:
                      description: The schedule object for Sunday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    thursday:
                      description: The schedule object for Thursday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    tuesday:
                      description: The schedule object for Tuesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    wednesday:
                      description: The schedule object for Wednesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                  type: object
                splashAuthSettings:
                  description: Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
                  enum:
                    - bypass
                    - network default
                  type: string
                vlanTagging:
                  description: The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
                  properties:
                    settings:
                      description: How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                    vlanId:
                      description: The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.
                      type: string
                  type: object
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidth:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
                    bonjourForwarding:
                      rules:
                        - description: A simple bonjour rule
                          services:
                            - All Services
                          vlanId: "1"
                      settings: custom
                    contentFiltering:
                      allowedUrlPatterns:
                        patterns: []
                        settings: network default
                      blockedUrlCategories:
                        categories:
                          - meraki:contentFiltering/category/1
                          - meraki:contentFiltering/category/7
                        settings: override
                      blockedUrlPatterns:
                        patterns:
                          - http://www.example.com
                          - http://www.betting.com
                        settings: append
                    firewallAndTrafficShaping:
                      l3FirewallRules:
                        - comment: Allow TCP traffic to subnet with HTTP servers.
                          destCidr: 192.168.1.0/24
                          destPort: "443"
                          policy: allow
                          protocol: tcp
                      l7FirewallRules:
                        - policy: deny
                          type: host
                          value: google.com
                        - policy: deny
                          type: port
                          value: "23"
                        - policy: deny
                          type: ipRange
                          value: 10.11.12.00/24
                        - policy: deny
                          type: ipRange
                          value: 10.11.12.00/24:5555
                      settings: custom
                      trafficShapingRules:
                        - definitions:
                            - type: host
                              value: google.com
                            - type: port
                              value: "9090"
                            - type: ipRange
                              value: 192.1.0.0
                            - type: ipRange
                              value: 192.1.0.0/16
                            - type: ipRange
                              value: 10.1.0.0/16:80
                            - type: localNet
                              value: 192.168.0.0/16
                          dscpTagValue: 0
                          pcpTagValue: 0
                          perClientBandwidthLimits:
                            bandwidthLimits:
                              limitDown: 1000000
                              limitUp: 1000000
                            settings: custom
                    groupPolicyId: "101"
                    name: No video streaming
                    scheduling:
                      enabled: true
                      friday:
                        active: true
                        from: 9:00
                        to: 17:00
                      monday:
                        active: true
                        from: 9:00
                        to: 17:00
                      saturday:
                        active: false
                        from: 0:00
                        to: 24:00
                      sunday:
                        active: false
                        from: 0:00
                        to: 24:00
                      thursday:
                        active: true
                        from: 9:00
                        to: 17:00
                      tuesday:
                        active: true
                        from: 9:00
                        to: 17:00
                      wednesday:
                        active: true
                        from: 9:00
                        to: 17:00
                    splashAuthSettings: bypass
                    vlanTagging:
                      settings: custom
                      vlanId: "1"
              schema:
                type: object
          description: Successful operation
      summary: Create a group policy
      tags:
        - networks
        - configure
        - groupPolicies
  "/networks/{networkId}/groupPolicies/{groupPolicyId}":
    delete:
      description: Delete a group policy
      operationId: deleteNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: groupPolicyId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a group policy
      tags:
        - networks
        - configure
        - groupPolicies
    get:
      description: Display a group policy
      operationId: getNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: groupPolicyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidth:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
                    bonjourForwarding:
                      rules:
                        - description: A simple bonjour rule
                          services:
                            - All Services
                          vlanId: "1"
                      settings: custom
                    contentFiltering:
                      allowedUrlPatterns:
                        patterns: []
                        settings: network default
                      blockedUrlCategories:
                        categories:
                          - meraki:contentFiltering/category/1
                          - meraki:contentFiltering/category/7
                        settings: override
                      blockedUrlPatterns:
                        patterns:
                          - http://www.example.com
                          - http://www.betting.com
                        settings: append
                    firewallAndTrafficShaping:
                      l3FirewallRules:
                        - comment: Allow TCP traffic to subnet with HTTP servers.
                          destCidr: 192.168.1.0/24
                          destPort: "443"
                          policy: allow
                          protocol: tcp
                      l7FirewallRules:
                        - policy: deny
                          type: host
                          value: google.com
                        - policy: deny
                          type: port
                          value: "23"
                        - policy: deny
                          type: ipRange
                          value: 10.11.12.00/24
                        - policy: deny
                          type: ipRange
                          value: 10.11.12.00/24:5555
                      settings: custom
                      trafficShapingRules:
                        - definitions:
                            - type: host
                              value: google.com
                            - type: port
                              value: "9090"
                            - type: ipRange
                              value: 192.1.0.0
                            - type: ipRange
                              value: 192.1.0.0/16
                            - type: ipRange
                              value: 10.1.0.0/16:80
                            - type: localNet
                              value: 192.168.0.0/16
                          dscpTagValue: 0
                          pcpTagValue: 0
                          perClientBandwidthLimits:
                            bandwidthLimits:
                              limitDown: 1000000
                              limitUp: 1000000
                            settings: custom
                    groupPolicyId: "101"
                    name: No video streaming
                    scheduling:
                      enabled: true
                      friday:
                        active: true
                        from: 9:00
                        to: 17:00
                      monday:
                        active: true
                        from: 9:00
                        to: 17:00
                      saturday:
                        active: false
                        from: 0:00
                        to: 24:00
                      sunday:
                        active: false
                        from: 0:00
                        to: 24:00
                      thursday:
                        active: true
                        from: 9:00
                        to: 17:00
                      tuesday:
                        active: true
                        from: 9:00
                        to: 17:00
                      wednesday:
                        active: true
                        from: 9:00
                        to: 17:00
                    splashAuthSettings: bypass
                    vlanTagging:
                      settings: custom
                      vlanId: "1"
              schema:
                type: object
          description: Successful operation
      summary: Display a group policy
      tags:
        - networks
        - configure
        - groupPolicies
    put:
      description: Update a group policy
      operationId: updateNetworkGroupPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: groupPolicyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                bandwidth:
                  bandwidthLimits:
                    limitDown: 1000000
                    limitUp: 1000000
                  settings: custom
                bonjourForwarding:
                  rules:
                    - description: A simple bonjour rule
                      services:
                        - All Services
                      vlanId: "1"
                  settings: custom
                contentFiltering:
                  allowedUrlPatterns:
                    patterns: []
                    settings: network default
                  blockedUrlCategories:
                    categories:
                      - meraki:contentFiltering/category/1
                      - meraki:contentFiltering/category/7
                    settings: override
                  blockedUrlPatterns:
                    patterns:
                      - http://www.example.com
                      - http://www.betting.com
                    settings: append
                firewallAndTrafficShaping:
                  l3FirewallRules:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      destCidr: 192.168.1.0/24
                      destPort: "443"
                      policy: allow
                      protocol: tcp
                  l7FirewallRules:
                    - policy: deny
                      type: host
                      value: google.com
                    - policy: deny
                      type: port
                      value: "23"
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24:5555
                  settings: custom
                  trafficShapingRules:
                    - definitions:
                        - type: host
                          value: google.com
                        - type: port
                          value: "9090"
                        - type: ipRange
                          value: 192.1.0.0
                        - type: ipRange
                          value: 192.1.0.0/16
                        - type: ipRange
                          value: 10.1.0.0/16:80
                        - type: localNet
                          value: 192.168.0.0/16
                      dscpTagValue: 0
                      pcpTagValue: 0
                      perClientBandwidthLimits:
                        bandwidthLimits:
                          limitDown: 1000000
                          limitUp: 1000000
                        settings: custom
                name: No video streaming
                scheduling:
                  enabled: true
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
              properties:
                bandwidth:
                  description: |2
                        The bandwidth settings for clients bound to your group policy.
                  properties:
                    bandwidthLimits:
                      description: The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.
                      properties:
                        limitDown:
                          description: The maximum download limit (integer, in Kbps). null indicates no limit
                          type: integer
                        limitUp:
                          description: The maximum upload limit (integer, in Kbps). null indicates no limit
                          type: integer
                      type: object
                    settings:
                      description: How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                  type: object
                bonjourForwarding:
                  description: The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.
                  properties:
                    rules:
                      description: A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.
                      items:
                        properties:
                          description:
                            description: A description for your Bonjour forwarding rule. Optional.
                            type: string
                          services:
                            description: A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
                            items:
                              enum:
                                - AFP
                                - AirPlay
                                - All Services
                                - BitTorrent
                                - FTP
                                - Printers
                                - SSH
                                - Samba
                                - Scanners
                                - iChat
                                - iTunes
                              type: string
                            type: array
                          vlanId:
                            description: The ID of the service VLAN. Required.
                            type: string
                        required:
                          - vlanId
                          - services
                        type: object
                      type: array
                    settings:
                      description: How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                  type: object
                contentFiltering:
                  description: The content filtering settings for your group policy
                  properties:
                    allowedUrlPatterns:
                      description: Settings for allowed URL patterns
                      properties:
                        patterns:
                          description: A list of URL patterns that are allowed
                          items:
                            type: string
                          type: array
                        settings:
                          description: How URL patterns are applied. Can be 'network default', 'append' or 'override'.
                          enum:
                            - append
                            - network default
                            - override
                          type: string
                      type: object
                    blockedUrlCategories:
                      description: Settings for blocked URL categories
                      properties:
                        categories:
                          description: A list of URL categories to block
                          items:
                            type: string
                          type: array
                        settings:
                          description: How URL categories are applied. Can be 'network default', 'append' or 'override'.
                          enum:
                            - append
                            - network default
                            - override
                          type: string
                      type: object
                    blockedUrlPatterns:
                      description: Settings for blocked URL patterns
                      properties:
                        patterns:
                          description: A list of URL patterns that are blocked
                          items:
                            type: string
                          type: array
                        settings:
                          description: How URL patterns are applied. Can be 'network default', 'append' or 'override'.
                          enum:
                            - append
                            - network default
                            - override
                          type: string
                      type: object
                  type: object
                firewallAndTrafficShaping:
                  description: |2
                        The firewall and traffic shaping rules and settings for your policy.
                  properties:
                    l3FirewallRules:
                      description: An ordered array of the L3 firewall rules
                      items:
                        properties:
                          comment:
                            description: Description of the rule (optional)
                            type: string
                          destCidr:
                            description: Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.
                            type: string
                          destPort:
                            description: Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'
                            type: string
                          policy:
                            description: "'allow' or 'deny' traffic specified by this rule"
                            type: string
                          protocol:
                            description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
                            type: string
                        required:
                          - policy
                          - protocol
                          - destCidr
                        type: object
                      type: array
                    l7FirewallRules:
                      description: An ordered array of L7 firewall rules
                      items:
                        properties:
                          policy:
                            description: The policy applied to matching traffic. Must be 'deny'.
                            enum:
                              - deny
                            type: string
                          type:
                            description: Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'
                            enum:
                              - application
                              - applicationCategory
                              - host
                              - ipRange
                              - port
                            type: string
                          value:
                            description: The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.
                            type: string
                        type: object
                      type: array
                    settings:
                      description: How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                    trafficShapingRules:
                      description: |2
                            An array of traffic shaping rules. Rules are applied in the order that
                            they are specified in. An empty list (or null) means no rules. Note that
                            you are allowed a maximum of 8 rules.
                      items:
                        properties:
                          definitions:
                            description: |2
                                  A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                            items:
                              properties:
                                type:
                                  description: The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
                                  enum:
                                    - application
                                    - applicationCategory
                                    - host
                                    - ipRange
                                    - localNet
                                    - port
                                  type: string
                                value:
                                  description: |2
                                        If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                        a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                        "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                        custom ports.
                                         If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                        with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                        application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                        endpoint).
                                  type: string
                              required:
                                - type
                                - value
                              type: object
                            type: array
                          dscpTagValue:
                            description: |2
                                  The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                                  For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                            type: integer
                          pcpTagValue:
                            description: |2
                                  The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                                  null means 'Do not set PCP tag'.
                            type: integer
                          perClientBandwidthLimits:
                            description: |2
                                  An object describing the bandwidth settings for your rule.
                            properties:
                              bandwidthLimits:
                                description: The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
                                properties:
                                  limitDown:
                                    description: The maximum download limit (integer, in Kbps).
                                    type: integer
                                  limitUp:
                                    description: The maximum upload limit (integer, in Kbps).
                                    type: integer
                                type: object
                              settings:
                                description: How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
                                type: string
                            type: object
                          priority:
                            description: |2
                                  A string, indicating the priority level for packets bound to your rule.
                                  Can be 'low', 'normal' or 'high'.
                            type: string
                        required:
                          - definitions
                        type: object
                      type: array
                  type: object
                name:
                  description: The name for your group policy.
                  type: string
                scheduling:
                  description: |2
                        The schedule for the group policy. Schedules are applied to days of the week.
                  properties:
                    enabled:
                      description: Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.
                      type: boolean
                    friday:
                      description: The schedule object for Friday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    monday:
                      description: The schedule object for Monday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    saturday:
                      description: The schedule object for Saturday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    sunday:
                      description: The schedule object for Sunday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    thursday:
                      description: The schedule object for Thursday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    tuesday:
                      description: The schedule object for Tuesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    wednesday:
                      description: The schedule object for Wednesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                  type: object
                splashAuthSettings:
                  description: Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
                  enum:
                    - bypass
                    - network default
                  type: string
                vlanTagging:
                  description: The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
                  properties:
                    settings:
                      description: How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.
                      enum:
                        - custom
                        - ignore
                        - network default
                      type: string
                    vlanId:
                      description: The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bandwidth:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
                    bonjourForwarding:
                      rules:
                        - description: A simple bonjour rule
                          services:
                            - All Services
                          vlanId: "1"
                      settings: custom
                    contentFiltering:
                      allowedUrlPatterns:
                        patterns: []
                        settings: network default
                      blockedUrlCategories:
                        categories:
                          - meraki:contentFiltering/category/1
                          - meraki:contentFiltering/category/7
                        settings: override
                      blockedUrlPatterns:
                        patterns:
                          - http://www.example.com
                          - http://www.betting.com
                        settings: append
                    firewallAndTrafficShaping:
                      l3FirewallRules:
                        - comment: Allow TCP traffic to subnet with HTTP servers.
                          destCidr: 192.168.1.0/24
                          destPort: "443"
                          policy: allow
                          protocol: tcp
                      l7FirewallRules:
                        - policy: deny
                          type: host
                          value: google.com
                        - policy: deny
                          type: port
                          value: "23"
                        - policy: deny
                          type: ipRange
                          value: 10.11.12.00/24
                        - policy: deny
                          type: ipRange
                          value: 10.11.12.00/24:5555
                      settings: custom
                      trafficShapingRules:
                        - definitions:
                            - type: host
                              value: google.com
                            - type: port
                              value: "9090"
                            - type: ipRange
                              value: 192.1.0.0
                            - type: ipRange
                              value: 192.1.0.0/16
                            - type: ipRange
                              value: 10.1.0.0/16:80
                            - type: localNet
                              value: 192.168.0.0/16
                          dscpTagValue: 0
                          pcpTagValue: 0
                          perClientBandwidthLimits:
                            bandwidthLimits:
                              limitDown: 1000000
                              limitUp: 1000000
                            settings: custom
                    groupPolicyId: "101"
                    name: No video streaming
                    scheduling:
                      enabled: true
                      friday:
                        active: true
                        from: 9:00
                        to: 17:00
                      monday:
                        active: true
                        from: 9:00
                        to: 17:00
                      saturday:
                        active: false
                        from: 0:00
                        to: 24:00
                      sunday:
                        active: false
                        from: 0:00
                        to: 24:00
                      thursday:
                        active: true
                        from: 9:00
                        to: 17:00
                      tuesday:
                        active: true
                        from: 9:00
                        to: 17:00
                      wednesday:
                        active: true
                        from: 9:00
                        to: 17:00
                    splashAuthSettings: bypass
                    vlanTagging:
                      settings: custom
                      vlanId: "1"
              schema:
                type: object
          description: Successful operation
      summary: Update a group policy
      tags:
        - networks
        - configure
        - groupPolicies
  "/networks/{networkId}/health/alerts":
    get:
      description: Return all global alerts on this network
      operationId: getNetworkHealthAlerts
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - category: Connectivity
                      id: "1234"
                      scope:
                        applications:
                          - name: Application on application server
                            url: https://n1.meraki.com//n//manage/nodes/list
                        devices:
                          - clients:
                              - mac: 22:33:44:55:66:77
                            lldp:
                              portId: "1"
                            mac: 00:11:22:33:44:55
                            name: My AP
                            productType: switch
                            serial: Q234-ABCD-5678
                            url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                        peers:
                          - network:
                              id: N_24329156
                              name: Main Office
                            url: https://n1.meraki.com//n//manage/nodes/list
                      severity: info
                      type: Poor connectivity to the Meraki cloud
              schema:
                items:
                  properties:
                    category:
                      description: Category of the alert
                      type: string
                    id:
                      description: Alert identifier. Value can be empty
                      type: string
                    scope:
                      description: The scope of the alert
                      properties:
                        applications:
                          description: Applications related to the alert
                          items:
                            properties:
                              name:
                                description: Name of the application
                                type: string
                              url:
                                description: URL to the application
                                type: string
                            type: object
                          type: array
                        devices:
                          description: Devices related to the alert
                          items:
                            properties:
                              clients:
                                description: Clients related to the device
                                items:
                                  properties:
                                    mac:
                                      description: Mac address of the client
                                      type: string
                                  type: object
                                type: array
                              lldp:
                                description: Lldp information
                                properties:
                                  portId:
                                    description: Port Id
                                    type: string
                                type: object
                              mac:
                                description: The mac address of the device
                                type: string
                              name:
                                description: Name of the device
                                type: string
                              productType:
                                description: Product type of the device
                                type: string
                              serial:
                                description: Serial number of the device
                                type: string
                              url:
                                description: URL to the device
                                type: string
                            type: object
                          type: array
                        peers:
                          description: Peers related to the alert
                          items:
                            properties:
                              network:
                                description: Network of the peer
                                properties:
                                  id:
                                    description: Id of the network
                                    type: string
                                  name:
                                    description: Name of the network
                                    type: string
                                type: object
                              url:
                                description: URL to the peer
                                type: string
                            type: object
                          type: array
                      type: object
                    severity:
                      description: Severity of the alert
                      enum:
                        - error
                        - info
                        - warning
                      type: string
                    type:
                      description: Alert type
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return all global alerts on this network
      tags:
        - networks
        - configure
        - health
        - alerts
  "/networks/{networkId}/insight/applications/{applicationId}/healthByTime":
    get:
      description: Get application health by time
      operationId: getNetworkInsightApplicationHealthByTime
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 60, 300, 3600, 86400. The default is 300."
          in: query
          name: resolution
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - endTs: 2018-05-12T00:00:00Z
                      lanGoodput: 100000000
                      lanLatencyMs: 3.2
                      lanLossPercent: 0
                      numClients: 2
                      recv: 5000
                      responseDuration: 210
                      sent: 1000
                      startTs: 2018-02-11T00:00:00Z
                      wanGoodput: 20000000
                      wanLatencyMs: 10.1
                      wanLossPercent: 0.2
              schema:
                items:
                  properties:
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    lanGoodput:
                      description: LAN goodput (Number of useful information bits delivered over a LAN per unit of time)
                      type: integer
                    lanLatencyMs:
                      description: LAN latency in milliseconds
                      format: float
                      type: number
                    lanLossPercent:
                      description: LAN loss percentage
                      format: float
                      type: number
                    numClients:
                      description: Number of clients
                      type: integer
                    recv:
                      description: Received kilobytes-per-second
                      type: integer
                    responseDuration:
                      description: Duration of the response, in milliseconds
                      type: integer
                    sent:
                      description: Sent kilobytes-per-second
                      type: integer
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                    wanGoodput:
                      description: WAN goodput (Number of useful information bits delivered over a WAN per unit of time)
                      type: integer
                    wanLatencyMs:
                      description: WAN latency in milliseconds
                      format: float
                      type: number
                    wanLossPercent:
                      description: WAN loss percentage
                      format: float
                      type: number
                  type: object
                type: array
          description: Successful operation
      summary: Get application health by time
      tags:
        - insight
        - monitor
        - applications
        - healthByTime
  "/networks/{networkId}/merakiAuthUsers":
    get:
      description: List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)
      operationId: getNetworkMerakiAuthUsers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accountType: 802.1X
                      authorizations:
                        - authorizedByEmail: miles@meraki.com
                          authorizedByName: Miles Meraki
                          authorizedZone: Store WiFi
                          expiresAt: 2018-03-13T00:00:00.090210Z
                          ssidNumber: 1
                      createdAt: 2018-02-11T00:00:00.090210Z
                      email: miles@meraki.com
                      id: aGlAaGkuY29t
                      isAdmin: false
                      name: Miles Meraki
              schema:
                items:
                  properties:
                    accountType:
                      description: Authorization type for user.
                      type: string
                    authorizations:
                      description: User authorization info
                      items:
                        properties:
                          authorizedByEmail:
                            description: User is authorized by the account email address
                            type: string
                          authorizedByName:
                            description: User is authorized by the account name
                            type: string
                          authorizedZone:
                            description: Authorized zone of the user
                            type: string
                          expiresAt:
                            description: Authorization expiration time
                            format: date-time
                            type: string
                          ssidNumber:
                            description: SSID number
                            type: integer
                        type: object
                      type: array
                    createdAt:
                      description: Creation time of the user
                      format: date-time
                      type: string
                    email:
                      description: Email address of the user
                      type: string
                    id:
                      description: Meraki auth user id
                      type: string
                    isAdmin:
                      description: Whether or not the user is a Dashboard administrator
                      type: boolean
                    name:
                      description: Name of the user
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)
      tags:
        - networks
        - configure
        - merakiAuthUsers
    post:
      description: Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)
      operationId: createNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accountType: 802.1X
                authorizations:
                  - expiresAt: 2018-03-13T00:00:00.090210Z
                    ssidNumber: 1
                email: miles@meraki.com
                emailPasswordToUser: false
                isAdmin: false
                name: Miles Meraki
                password: secret
              properties:
                accountType:
                  default: 802.1X
                  description: Authorization type for user. Can be 'Guest' or '802.1X' for wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.
                  enum:
                    - 802.1X
                    - Client VPN
                    - Guest
                  type: string
                authorizations:
                  description: Authorization zones and expiration dates for the user.
                  items:
                    properties:
                      expiresAt:
                        default: Never
                        description: Date for authorization to expire. Set to 'Never' for the authorization to not expire, which is the default.
                        type: string
                      ssidNumber:
                        description: Required for wireless networks. The SSID for which the user is being authorized, which must be configured for the user's given accountType.
                        type: integer
                    type: object
                  type: array
                email:
                  description: Email address of the user
                  type: string
                emailPasswordToUser:
                  description: Whether or not Meraki should email the password to user. Default is false.
                  type: boolean
                isAdmin:
                  description: Whether or not the user is a Dashboard administrator.
                  type: boolean
                name:
                  description: Name of the user. Only required If the user is not a Dashboard administrator.
                  type: string
                password:
                  description: The password for this user account. Only required If the user is not a Dashboard administrator.
                  type: string
              required:
                - email
                - authorizations
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountType: 802.1X
                    authorizations:
                      - authorizedByEmail: miles@meraki.com
                        authorizedByName: Miles Meraki
                        authorizedZone: Store WiFi
                        expiresAt: 2018-03-13T00:00:00.090210Z
                        ssidNumber: 1
                    createdAt: 2018-02-11T00:00:00.090210Z
                    email: miles@meraki.com
                    id: aGlAaGkuY29t
                    isAdmin: false
                    name: Miles Meraki
              schema:
                properties:
                  accountType:
                    description: Authorization type for user.
                    type: string
                  authorizations:
                    description: User authorization info
                    items:
                      properties:
                        authorizedByEmail:
                          description: User is authorized by the account email address
                          type: string
                        authorizedByName:
                          description: User is authorized by the account name
                          type: string
                        authorizedZone:
                          description: Authorized zone of the user
                          type: string
                        expiresAt:
                          description: Authorization expiration time
                          format: date-time
                          type: string
                        ssidNumber:
                          description: SSID number
                          type: integer
                      type: object
                    type: array
                  createdAt:
                    description: Creation time of the user
                    format: date-time
                    type: string
                  email:
                    description: Email address of the user
                    type: string
                  id:
                    description: Meraki auth user id
                    type: string
                  isAdmin:
                    description: Whether or not the user is a Dashboard administrator
                    type: boolean
                  name:
                    description: Name of the user
                    type: string
                type: object
          description: Successful operation
      summary: Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)
      tags:
        - networks
        - configure
        - merakiAuthUsers
  "/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}":
    delete:
      description: Deauthorize a user. To reauthorize a user after deauthorizing them, POST to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN users can be deauthorized.)
      operationId: deleteNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: merakiAuthUserId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Deauthorize a user
      tags:
        - networks
        - configure
        - merakiAuthUsers
    get:
      description: Return the Meraki Auth splash guest, RADIUS, or client VPN user
      operationId: getNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: merakiAuthUserId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountType: 802.1X
                    authorizations:
                      - authorizedByEmail: miles@meraki.com
                        authorizedByName: Miles Meraki
                        authorizedZone: Store WiFi
                        expiresAt: 2018-03-13T00:00:00.090210Z
                        ssidNumber: 1
                    createdAt: 2018-02-11T00:00:00.090210Z
                    email: miles@meraki.com
                    id: aGlAaGkuY29t
                    isAdmin: false
                    name: Miles Meraki
              schema:
                properties:
                  accountType:
                    description: Authorization type for user.
                    type: string
                  authorizations:
                    description: User authorization info
                    items:
                      properties:
                        authorizedByEmail:
                          description: User is authorized by the account email address
                          type: string
                        authorizedByName:
                          description: User is authorized by the account name
                          type: string
                        authorizedZone:
                          description: Authorized zone of the user
                          type: string
                        expiresAt:
                          description: Authorization expiration time
                          format: date-time
                          type: string
                        ssidNumber:
                          description: SSID number
                          type: integer
                      type: object
                    type: array
                  createdAt:
                    description: Creation time of the user
                    format: date-time
                    type: string
                  email:
                    description: Email address of the user
                    type: string
                  id:
                    description: Meraki auth user id
                    type: string
                  isAdmin:
                    description: Whether or not the user is a Dashboard administrator
                    type: boolean
                  name:
                    description: Name of the user
                    type: string
                type: object
          description: Successful operation
      summary: Return the Meraki Auth splash guest, RADIUS, or client VPN user
      tags:
        - networks
        - configure
        - merakiAuthUsers
    put:
      description: Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)
      operationId: updateNetworkMerakiAuthUser
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: merakiAuthUserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                authorizations:
                  - expiresAt: 2018-03-13T00:00:00.090210Z
                    ssidNumber: 1
                emailPasswordToUser: false
                name: Miles Meraki
                password: secret
              properties:
                authorizations:
                  description: Authorization zones and expiration dates for the user.
                  items:
                    properties:
                      expiresAt:
                        default: Never
                        description: Date for authorization to expire. Default is for authorization to not expire.
                        type: string
                      ssidNumber:
                        description: SSID for which the user is being authorized
                        type: integer
                    required:
                      - ssidNumber
                    type: object
                  type: array
                emailPasswordToUser:
                  description: Whether or not Meraki should email the password to user. Default is false.
                  type: boolean
                name:
                  description: Name of the user. Only allowed If the user is not Dashboard administrator.
                  type: string
                password:
                  description: The password for this user account. Only allowed If the user is not Dashboard administrator.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountType: 802.1X
                    authorizations:
                      - authorizedByEmail: miles@meraki.com
                        authorizedByName: Miles Meraki
                        authorizedZone: Store WiFi
                        expiresAt: 2018-03-13T00:00:00.090210Z
                        ssidNumber: 1
                    createdAt: 2018-02-11T00:00:00.090210Z
                    email: miles@meraki.com
                    id: aGlAaGkuY29t
                    isAdmin: false
                    name: Miles Meraki
              schema:
                properties:
                  accountType:
                    description: Authorization type for user.
                    type: string
                  authorizations:
                    description: User authorization info
                    items:
                      properties:
                        authorizedByEmail:
                          description: User is authorized by the account email address
                          type: string
                        authorizedByName:
                          description: User is authorized by the account name
                          type: string
                        authorizedZone:
                          description: Authorized zone of the user
                          type: string
                        expiresAt:
                          description: Authorization expiration time
                          format: date-time
                          type: string
                        ssidNumber:
                          description: SSID number
                          type: integer
                      type: object
                    type: array
                  createdAt:
                    description: Creation time of the user
                    format: date-time
                    type: string
                  email:
                    description: Email address of the user
                    type: string
                  id:
                    description: Meraki auth user id
                    type: string
                  isAdmin:
                    description: Whether or not the user is a Dashboard administrator
                    type: boolean
                  name:
                    description: Name of the user
                    type: string
                type: object
          description: Successful operation
      summary: Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)
      tags:
        - networks
        - configure
        - merakiAuthUsers
  "/networks/{networkId}/mqttBrokers":
    get:
      description: List the MQTT brokers for this network
      operationId: getNetworkMqttBrokers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - authentication:
                        username: Username
                      host: 1.1.1.1
                      id: "1234"
                      name: MQTT_Broker_1
                      port: 1234
                      security:
                        mode: tls
                        tls:
                          hasCaCertificate: true
                          verifyHostnames: true
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the MQTT brokers for this network
      tags:
        - networks
        - configure
        - mqttBrokers
    post:
      description: Add an MQTT broker
      operationId: createNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                authentication:
                  username: Username
                host: 1.1.1.1
                name: MQTT_Broker_1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
              properties:
                authentication:
                  description: Authentication settings of the MQTT broker
                  properties: {}
                  type: object
                host:
                  description: Host name/IP address where the MQTT broker runs.
                  type: string
                name:
                  description: Name of the MQTT broker.
                  type: string
                port:
                  description: Host port though which the MQTT broker can be reached.
                  type: integer
                security:
                  description: Security settings of the MQTT broker.
                  properties:
                    mode:
                      description: Security protocol of the MQTT broker.
                      type: string
                    security:
                      description: TLS settings of the MQTT broker.
                      properties:
                        caCertificate:
                          description: CA Certificate of the MQTT broker.
                          type: string
                        verifyHostnames:
                          description: Whether the TLS hostname verification is enabled for the MQTT broker.
                          type: boolean
                      type: object
                  type: object
              required:
                - name
                - host
                - port
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    authentication:
                      username: Username
                    host: 1.1.1.1
                    id: "1234"
                    name: MQTT_Broker_1
                    port: 1234
                    security:
                      mode: tls
                      tls:
                        hasCaCertificate: true
                        verifyHostnames: true
              schema:
                type: object
          description: Successful operation
      summary: Add an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
  "/networks/{networkId}/mqttBrokers/{mqttBrokerId}":
    delete:
      description: Delete an MQTT broker
      operationId: deleteNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: mqttBrokerId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
    get:
      description: Return an MQTT broker
      operationId: getNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: mqttBrokerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    authentication:
                      username: Username
                    host: 1.1.1.1
                    id: "1234"
                    name: MQTT_Broker_1
                    port: 1234
                    security:
                      mode: tls
                      tls:
                        hasCaCertificate: true
                        verifyHostnames: true
              schema:
                type: object
          description: Successful operation
      summary: Return an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
    put:
      description: Update an MQTT broker
      operationId: updateNetworkMqttBroker
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: mqttBrokerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                authentication:
                  username: Username
                host: 1.1.1.1
                id: "1234"
                name: MQTT_Broker_1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
              properties:
                authentication:
                  description: Authentication settings of the MQTT broker
                  properties: {}
                  type: object
                host:
                  description: Host name/IP address where the MQTT broker runs.
                  type: string
                name:
                  description: Name of the MQTT broker.
                  type: string
                port:
                  description: Host port though which the MQTT broker can be reached.
                  type: integer
                security:
                  description: Security settings of the MQTT broker.
                  properties:
                    mode:
                      description: Security protocol of the MQTT broker.
                      type: string
                    security:
                      description: TLS settings of the MQTT broker.
                      properties:
                        caCertificate:
                          description: CA Certificate of the MQTT broker.
                          type: string
                        verifyHostnames:
                          description: Whether the TLS hostname verification is enabled for the MQTT broker.
                          type: boolean
                      type: object
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    authentication:
                      username: Username
                    host: 1.1.1.1
                    id: "1234"
                    name: MQTT_Broker_1
                    port: 1234
                    security:
                      mode: tls
                      tls:
                        hasCaCertificate: true
                        verifyHostnames: true
              schema:
                type: object
          description: Successful operation
      summary: Update an MQTT broker
      tags:
        - networks
        - configure
        - mqttBrokers
  "/networks/{networkId}/netflow":
    get:
      description: Return the NetFlow traffic reporting settings for a network
      operationId: getNetworkNetflow
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    collectorIp: 1.2.3.4
                    collectorPort: 443
                    etaDstPort: 443
                    etaEnabled: true
                    reportingEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Return the NetFlow traffic reporting settings for a network
      tags:
        - networks
        - configure
        - netflow
    put:
      description: Update the NetFlow traffic reporting settings for a network
      operationId: updateNetworkNetflow
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                collectorIp: 1.2.3.4
                collectorPort: 443
                etaDstPort: 443
                etaEnabled: true
                reportingEnabled: true
              properties:
                collectorIp:
                  description: The IPv4 address of the NetFlow collector.
                  type: string
                collectorPort:
                  description: The port that the NetFlow collector will be listening on.
                  type: integer
                etaDstPort:
                  description: The port that the Encrypted Traffic Analytics collector will be listening on.
                  type: integer
                etaEnabled:
                  description: Boolean indicating whether Encrypted Traffic Analytics is enabled (true) or disabled (false).
                  type: boolean
                reportingEnabled:
                  description: Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    collectorIp: 1.2.3.4
                    collectorPort: 443
                    etaDstPort: 443
                    etaEnabled: true
                    reportingEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Update the NetFlow traffic reporting settings for a network
      tags:
        - networks
        - configure
        - netflow
  "/networks/{networkId}/networkHealth/channelUtilization":
    get:
      description: Get the channel utilization over each radio for all APs in a network.
      operationId: getNetworkNetworkHealthChannelUtilization
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 600. The default is 600."
          in: query
          name: resolution
          schema:
            type: integer
        - description: The number of entries per page returned. Acceptable range is 3 - 100. Default is 10.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - model: MR34
                      serial: Q234-ABCD-5678
                      tags: " recently-added "
                      wifi0:
                        - endTime: 2018-10-09T22:19:27Z
                          startTime: 2018-10-09T22:18:27Z
                          utilization80211: 32
                          utilizationNon80211: 1.84
                          utilizationTotal: 33.84
                        - endTime: 2018-10-09T22:20:27Z
                          startTime: 2018-10-09T22:19:27Z
                          utilization80211: 32.01
                          utilizationNon80211: 1.84
                          utilizationTotal: 33.85
                        - endTime: 2018-10-09T22:21:27Z
                          startTime: 2018-10-09T22:20:27Z
                          utilization80211: 33.48
                          utilizationNon80211: 1.41
                          utilizationTotal: 34.89
                      wifi1:
                        - endTime: 2018-10-09T22:19:27Z
                          startTime: 2018-10-09T22:18:27Z
                          utilization80211: 32
                          utilizationNon80211: 1.84
                          utilizationTotal: 33.84
                        - endTime: 2018-10-09T22:20:27Z
                          startTime: 2018-10-09T22:19:27Z
                          utilization80211: 32.01
                          utilizationNon80211: 1.84
                          utilizationTotal: 33.85
                        - endTime: 2018-10-09T22:21:27Z
                          startTime: 2018-10-09T22:20:27Z
                          utilization80211: 33.48
                          utilizationNon80211: 1.41
                          utilizationTotal: 34.89
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Get the channel utilization over each radio for all APs in a network.
      tags:
        - networks
        - monitor
        - networkHealth
        - channelUtilization
  "/networks/{networkId}/pii/piiKeys":
    get:
      description: |-
        List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key "0" containing the applicable keys.

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/piiKeys
        ```
      operationId: getNetworkPiiPiiKeys
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The username of a Systems Manager user
          in: query
          name: username
          schema:
            type: string
        - description: The email of a network user account or a Systems Manager device
          in: query
          name: email
          schema:
            type: string
        - description: The MAC of a network client device or a Systems Manager device
          in: query
          name: mac
          schema:
            type: string
        - description: The serial of a Systems Manager device
          in: query
          name: serial
          schema:
            type: string
        - description: The IMEI of a Systems Manager device
          in: query
          name: imei
          schema:
            type: string
        - description: The MAC of a Bluetooth client
          in: query
          name: bluetoothMac
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    N_1234:
                      bluetoothMacs:
                        - 00:77:00:77:00:77
                      emails:
                        - fake@example.com
                      imeis:
                        - "990000862471854"
                      macs:
                        - 00:77:00:77:00:77
                      serials:
                        - abcd1234
                      usernames:
                        - fakename
              schema:
                type: object
          description: Successful operation
      summary: List the keys required to access Personally Identifiable Information (PII) for a given identifier
      tags:
        - networks
        - configure
        - pii
        - piiKeys
  "/networks/{networkId}/pii/requests":
    get:
      description: |-
        List the PII requests for this network or organization

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      operationId: getNetworkPiiRequests
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - completedAt: 1524702227
                      createdAt: 1524692227
                      datasets: "['usage', 'events']"
                      id: "1234"
                      mac: 00:77:00:77:00:77
                      networkId: N_1234
                      organizationWide: false
                      status: Completed
                      type: delete
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the PII requests for this network or organization
      tags:
        - networks
        - configure
        - pii
        - requests
    post:
      description: |-
        Submit a new delete or restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      operationId: createNetworkPiiRequest
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                datasets:
                  - usage
                  - events
                mac: 00:77:00:77:00:77
                type: delete
              properties:
                datasets:
                  description: 'The datasets related to the provided key that should be deleted. Only applies to "delete" requests. The value "all" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)'
                  items:
                    type: string
                  type: array
                email:
                  description: The email of a network user account. Only applies to "delete" requests.
                  type: string
                mac:
                  description: The MAC of a network client device. Applies to both "restrict processing" and "delete" requests.
                  type: string
                smDeviceId:
                  description: The sm_device_id of a Systems Manager device. The only way to "restrict processing" or "delete" a Systems Manager device. Must include "device" in the dataset for a "delete" request to destroy the device.
                  type: string
                smUserId:
                  description: The sm_user_id of a Systems Manager user. The only way to "restrict processing" or "delete" a Systems Manager user. Must include "user" in the dataset for a "delete" request to destroy the user.
                  type: string
                type:
                  description: One of "delete" or "restrict processing"
                  enum:
                    - delete
                    - restrict processing
                  type: string
                username:
                  description: The username of a network log in. Only applies to "delete" requests.
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    completedAt: null
                    createdAt: 1524692227
                    datasets: "['usage', 'events']"
                    id: "1234"
                    mac: 00:77:00:77:00:77
                    networkId: N_1234
                    organizationWide: false
                    status: Not visible in Dashboard; database deletion in process
                    type: delete
              schema:
                type: object
          description: Successful operation
      summary: Submit a new delete or restrict processing PII request
      tags:
        - networks
        - configure
        - pii
        - requests
  "/networks/{networkId}/pii/requests/{requestId}":
    delete:
      description: |-
        Delete a restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      operationId: deleteNetworkPiiRequest
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a restrict processing PII request
      tags:
        - networks
        - configure
        - pii
        - requests
    get:
      description: |-
        Return a PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      operationId: getNetworkPiiRequest
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: requestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    completedAt: 1524702227
                    createdAt: 1524692227
                    datasets: "['usage', 'events']"
                    id: "1234"
                    mac: 00:77:00:77:00:77
                    networkId: N_1234
                    organizationWide: false
                    status: Completed
                    type: delete
              schema:
                type: object
          description: Successful operation
      summary: Return a PII request
      tags:
        - networks
        - configure
        - pii
        - requests
  "/networks/{networkId}/pii/smDevicesForKey":
    get:
      description: |-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/smDevicesForKey
        ```
      operationId: getNetworkPiiSmDevicesForKey
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The username of a Systems Manager user
          in: query
          name: username
          schema:
            type: string
        - description: The email of a network user account or a Systems Manager device
          in: query
          name: email
          schema:
            type: string
        - description: The MAC of a network client device or a Systems Manager device
          in: query
          name: mac
          schema:
            type: string
        - description: The serial of a Systems Manager device
          in: query
          name: serial
          schema:
            type: string
        - description: The IMEI of a Systems Manager device
          in: query
          name: imei
          schema:
            type: string
        - description: The MAC of a Bluetooth client
          in: query
          name: bluetoothMac
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    N_1234:
                      - "1099541095293"
                      - "8348382288234"
              schema:
                type: object
          description: Successful operation
      summary: Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier
      tags:
        - networks
        - configure
        - pii
        - smDevicesForKey
  "/networks/{networkId}/pii/smOwnersForKey":
    get:
      description: |-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/smOwnersForKey
        ```
      operationId: getNetworkPiiSmOwnersForKey
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The username of a Systems Manager user
          in: query
          name: username
          schema:
            type: string
        - description: The email of a network user account or a Systems Manager device
          in: query
          name: email
          schema:
            type: string
        - description: The MAC of a network client device or a Systems Manager device
          in: query
          name: mac
          schema:
            type: string
        - description: The serial of a Systems Manager device
          in: query
          name: serial
          schema:
            type: string
        - description: The IMEI of a Systems Manager device
          in: query
          name: imei
          schema:
            type: string
        - description: The MAC of a Bluetooth client
          in: query
          name: bluetoothMac
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    N_1234:
                      - "1099541095293"
              schema:
                type: object
          description: Successful operation
      summary: Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier
      tags:
        - networks
        - configure
        - pii
        - smOwnersForKey
  "/networks/{networkId}/policies/byClient":
    get:
      description: Get policies for all clients with policies
      operationId: getNetworkPoliciesByClient
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - assigned:
                        - groupPolicyId: "100"
                          name: Allowed
                          ssid:
                            - ssidNumber: 1
                          type: ssid
                      clientId: abc
                      name: my phone
              schema:
                items:
                  properties:
                    assigned:
                      description: Assigned policies
                      items:
                        properties:
                          groupPolicyId:
                            description: id of policy
                            type: string
                          name:
                            description: name of policy
                            type: string
                          ssid:
                            description: ssid
                            items:
                              properties:
                                ssidNumber:
                                  description: number of ssid
                                  type: integer
                              type: object
                            type: array
                          type:
                            description: type of policy
                            type: string
                        type: object
                      type: array
                    clientId:
                      description: ID of client
                      type: string
                    name:
                      description: Name of client
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Get policies for all clients with policies
      tags:
        - networks
        - configure
        - policies
        - byClient
  "/networks/{networkId}/sensor/alerts/current/overview/byMetric":
    get:
      description: Return an overview of currently alerting sensors by metric
      operationId: getNetworkSensorAlertsCurrentOverviewByMetric
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    counts:
                      door: 0
                      humidity: 1
                      indoorAirQuality: 0
                      noise:
                        ambient: 0
                      pm25: 0
                      temperature: 4
                      tvoc: 0
                      water: 0
                    supportedMetrics:
                      - temperature
                      - humidity
                      - door
              schema:
                properties:
                  counts:
                    description: Counts of currently alerting sensors, aggregated by alerting metric
                    properties:
                      door:
                        description: Number of sensors that are currently alerting due to an open door
                        type: integer
                      humidity:
                        description: Number of sensors that are currently alerting due to humidity readings
                        type: integer
                      indoorAirQuality:
                        description: Number of sensors that are currently alerting due to indoor air quality readings
                        type: integer
                      noise:
                        description: Object containing the number of sensors that are currently alerting due to noise readings
                        properties:
                          ambient:
                            description: Number of sensors that are currently alerting due to ambient noise readings
                            type: integer
                        type: object
                      pm25:
                        description: Number of sensors that are currently alerting due to PM2.5 readings
                        type: integer
                      temperature:
                        description: Number of sensors that are currently alerting due to temperature readings
                        type: integer
                      tvoc:
                        description: Number of sensors that are currently alerting due to TVOC readings
                        type: integer
                      water:
                        description: Number of sensors that are currently alerting due to the presence of water
                        type: integer
                    type: object
                  supportedMetrics:
                    description: List of metrics that are supported for alerts, based on available sensor devices in the network
                    items:
                      enum:
                        - door
                        - humidity
                        - indoorAirQuality
                        - noise
                        - pm25
                        - temperature
                        - tvoc
                        - water
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Return an overview of currently alerting sensors by metric
      tags:
        - sensor
        - monitor
        - alerts
        - current
        - overview
        - byMetric
  "/networks/{networkId}/sensor/alerts/overview/byMetric":
    get:
      description: Return an overview of alert occurrences over a timespan, by metric
      operationId: getNetworkSensorAlertsOverviewByMetric
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800."
          in: query
          name: interval
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - counts:
                        door: 0
                        humidity: 1
                        indoorAirQuality: 0
                        noise:
                          ambient: 2
                        pm25: 0
                        temperature: 4
                        tvoc: 0
                        water: 0
                      endTs: 2022-08-27T23:59:59Z
                      startTs: 2022-08-21T00:00:00Z
              schema:
                items:
                  properties:
                    counts:
                      description: Counts of sensor alerts over the timespan, by reading metric
                      properties:
                        door:
                          description: Number of sensor alerts that occurred due to an open door
                          type: integer
                        humidity:
                          description: Number of sensor alerts that occurred due to humidity readings
                          type: integer
                        indoorAirQuality:
                          description: Number of sensor alerts that occurred due to indoor air quality readings
                          type: integer
                        noise:
                          description: Object containing the number of sensor alerts that occurred due to noise readings
                          properties:
                            ambient:
                              description: Number of sensor alerts that occurred due to ambient noise readings
                              type: integer
                          type: object
                        pm25:
                          description: Number of sensor alerts that occurred due to PM2.5 readings
                          type: integer
                        temperature:
                          description: Number of sensor alerts that occurred due to temperature readings
                          type: integer
                        tvoc:
                          description: Number of sensor alerts that occurred due to TVOC readings
                          type: integer
                        water:
                          description: Number of sensor alerts that occurred due to the presence of water
                          type: integer
                      type: object
                    endTs:
                      description: End of the timespan over which sensor alerts are counted
                      format: date-time
                      type: string
                    startTs:
                      description: Start of the timespan over which sensor alerts are counted
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return an overview of alert occurrences over a timespan, by metric
      tags:
        - sensor
        - monitor
        - alerts
        - overview
        - byMetric
  "/networks/{networkId}/sensor/alerts/profiles":
    get:
      description: Lists all sensor alert profiles for a network.
      operationId: getNetworkSensorAlertsProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - conditions:
                        - direction: above
                          duration: 60
                          metric: temperature
                          threshold:
                            door:
                              open: true
                            humidity:
                              quality: inadequate
                              relativePercentage: 65
                            indoorAirQuality:
                              quality: fair
                              score: 80
                            noise:
                              ambient:
                                level: 120
                                quality: poor
                            pm25:
                              concentration: 90
                              quality: fair
                            temperature:
                              celsius: 20.5
                              fahrenheit: 70
                              quality: good
                            tvoc:
                              concentration: 400
                              quality: poor
                            water:
                              present: true
                      name: My Sensor Alert Profile
                      profileId: "1"
                      recipients:
                        emails:
                          - miles@meraki.com
                        httpServerIds:
                          - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                        smsNumbers:
                          - "+15555555555"
                      schedule:
                        id: "5"
                        name: My Schedule
                      serials:
                        - Q234-ABCD-0001
                        - Q234-ABCD-0002
                        - Q234-ABCD-0003
              schema:
                items:
                  properties:
                    conditions:
                      description: List of conditions that will cause the profile to send an alert.
                      items:
                        properties:
                          direction:
                            description: If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
                            enum:
                              - above
                              - below
                            type: string
                          duration:
                            default: 0
                            description: Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
                            enum:
                              - 0
                              - 60
                              - 120
                              - 180
                              - 240
                              - 300
                              - 600
                              - 900
                              - 1800
                              - 3600
                            type: integer
                          metric:
                            description: The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
                            type: string
                          threshold:
                            description: Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
                            properties:
                              door:
                                description: Door open threshold. 'open' must be provided and set to true.
                                properties:
                                  open:
                                    description: Alerting threshold for a door open event. Must be set to true.
                                    type: boolean
                                required:
                                  - open
                                type: object
                              humidity:
                                description: Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
                                properties:
                                  quality:
                                    description: Alerting threshold as a qualitative humidity level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                  relativePercentage:
                                    description: Alerting threshold in %RH.
                                    type: integer
                                type: object
                              indoorAirQuality:
                                description: Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
                                properties:
                                  quality:
                                    description: Alerting threshold as a qualitative indoor air quality level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                  score:
                                    description: Alerting threshold as indoor air quality score.
                                    type: integer
                                type: object
                              noise:
                                description: Noise threshold. 'ambient' must be provided.
                                properties:
                                  ambient:
                                    description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
                                    properties:
                                      level:
                                        description: Alerting threshold as adjusted decibels.
                                        type: integer
                                      quality:
                                        description: Alerting threshold as a qualitative ambient noise level.
                                        enum:
                                          - fair
                                          - good
                                          - inadequate
                                          - poor
                                        type: string
                                    type: object
                                required:
                                  - ambient
                                type: object
                              pm25:
                                description: PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
                                properties:
                                  concentration:
                                    description: Alerting threshold as PM2.5 parts per million.
                                    type: integer
                                  quality:
                                    description: Alerting threshold as a qualitative PM2.5 level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                type: object
                              temperature:
                                description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
                                properties:
                                  celsius:
                                    description: Alerting threshold in degrees Celsius.
                                    format: float
                                    type: number
                                  fahrenheit:
                                    description: Alerting threshold in degrees Fahrenheit.
                                    format: float
                                    type: number
                                  quality:
                                    description: Alerting threshold as a qualitative temperature level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                type: object
                              tvoc:
                                description: TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
                                properties:
                                  concentration:
                                    description: Alerting threshold as TVOC micrograms per cubic meter.
                                    type: integer
                                  quality:
                                    description: Alerting threshold as a qualitative TVOC level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                type: object
                              water:
                                description: Water detection threshold. 'present' must be provided and set to true.
                                properties:
                                  present:
                                    description: Alerting threshold for a water detection event. Must be set to true.
                                    type: boolean
                                required:
                                  - present
                                type: object
                            type: object
                        required:
                          - metric
                          - threshold
                        type: object
                      type: array
                    name:
                      description: Name of the sensor alert profile.
                      type: string
                    profileId:
                      description: ID of the sensor alert profile.
                      type: string
                    recipients:
                      description: List of recipients that will recieve the alert.
                      properties:
                        emails:
                          description: A list of emails that will receive information about the alert.
                          items:
                            type: string
                          type: array
                        httpServerIds:
                          description: A list of webhook endpoint IDs that will receive information about the alert.
                          items:
                            type: string
                          type: array
                        smsNumbers:
                          description: A list of SMS numbers that will receive information about the alert.
                          items:
                            type: string
                          type: array
                      type: object
                    schedule:
                      description: The sensor schedule to use with the alert profile.
                      properties:
                        id:
                          description: ID of the sensor schedule to use with the alert profile. If not defined, the alert profile will be active at all times.
                          type: string
                        name:
                          description: Name of the sensor schedule to use with the alert profile.
                          type: string
                      type: object
                    serials:
                      description: List of device serials assigned to this sensor alert profile.
                      items:
                        type: string
                      type: array
                  required:
                    - conditions
                  type: object
                type: array
          description: Successful operation
      summary: Lists all sensor alert profiles for a network.
      tags:
        - sensor
        - configure
        - alerts
        - profiles
    post:
      description: Creates a sensor alert profile for a network.
      operationId: createNetworkSensorAlertsProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                conditions:
                  - direction: above
                    duration: 60
                    metric: temperature
                    threshold:
                      door:
                        open: true
                      humidity:
                        quality: inadequate
                        relativePercentage: 65
                      indoorAirQuality:
                        quality: fair
                        score: 80
                      noise:
                        ambient:
                          level: 120
                          quality: poor
                      pm25:
                        concentration: 90
                        quality: fair
                      temperature:
                        celsius: 20.5
                        fahrenheit: 70
                        quality: good
                      tvoc:
                        concentration: 400
                        quality: poor
                      water:
                        present: true
                name: My Sensor Alert Profile
                recipients:
                  emails:
                    - miles@meraki.com
                  httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                  smsNumbers:
                    - "+15555555555"
                schedule:
                  id: "5"
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
              properties:
                conditions:
                  description: List of conditions that will cause the profile to send an alert.
                  items:
                    properties:
                      direction:
                        description: If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
                        enum:
                          - above
                          - below
                        type: string
                      duration:
                        default: 0
                        description: Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
                        enum:
                          - 0
                          - 60
                          - 120
                          - 180
                          - 240
                          - 300
                          - 600
                          - 900
                          - 1800
                          - 3600
                        type: integer
                      metric:
                        description: The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
                        type: string
                      threshold:
                        description: Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
                        properties:
                          door:
                            description: Door open threshold. 'open' must be provided and set to true.
                            properties:
                              open:
                                description: Alerting threshold for a door open event. Must be set to true.
                                type: boolean
                            required:
                              - open
                            type: object
                          humidity:
                            description: Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
                            properties:
                              quality:
                                description: Alerting threshold as a qualitative humidity level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                              relativePercentage:
                                description: Alerting threshold in %RH.
                                type: integer
                            type: object
                          indoorAirQuality:
                            description: Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
                            properties:
                              quality:
                                description: Alerting threshold as a qualitative indoor air quality level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                              score:
                                description: Alerting threshold as indoor air quality score.
                                type: integer
                            type: object
                          noise:
                            description: Noise threshold. 'ambient' must be provided.
                            properties:
                              ambient:
                                description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
                                properties:
                                  level:
                                    description: Alerting threshold as adjusted decibels.
                                    type: integer
                                  quality:
                                    description: Alerting threshold as a qualitative ambient noise level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                type: object
                            required:
                              - ambient
                            type: object
                          pm25:
                            description: PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
                            properties:
                              concentration:
                                description: Alerting threshold as PM2.5 parts per million.
                                type: integer
                              quality:
                                description: Alerting threshold as a qualitative PM2.5 level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                            type: object
                          temperature:
                            description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
                            properties:
                              celsius:
                                description: Alerting threshold in degrees Celsius.
                                format: float
                                type: number
                              fahrenheit:
                                description: Alerting threshold in degrees Fahrenheit.
                                format: float
                                type: number
                              quality:
                                description: Alerting threshold as a qualitative temperature level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                            type: object
                          tvoc:
                            description: TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
                            properties:
                              concentration:
                                description: Alerting threshold as TVOC micrograms per cubic meter.
                                type: integer
                              quality:
                                description: Alerting threshold as a qualitative TVOC level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                            type: object
                          water:
                            description: Water detection threshold. 'present' must be provided and set to true.
                            properties:
                              present:
                                description: Alerting threshold for a water detection event. Must be set to true.
                                type: boolean
                            required:
                              - present
                            type: object
                        type: object
                    required:
                      - metric
                      - threshold
                    type: object
                  type: array
                name:
                  description: Name of the sensor alert profile.
                  type: string
                recipients:
                  description: List of recipients that will recieve the alert.
                  properties:
                    emails:
                      description: A list of emails that will receive information about the alert.
                      items:
                        type: string
                      type: array
                    httpServerIds:
                      description: A list of webhook endpoint IDs that will receive information about the alert.
                      items:
                        type: string
                      type: array
                    smsNumbers:
                      description: A list of SMS numbers that will receive information about the alert.
                      items:
                        type: string
                      type: array
                  type: object
                schedule:
                  description: The sensor schedule to use with the alert profile.
                  properties:
                    id:
                      description: ID of the sensor schedule to use with the alert profile. If not defined, the alert profile will be active at all times.
                      type: string
                  type: object
                serials:
                  description: List of device serials assigned to this sensor alert profile.
                  items:
                    type: string
                  type: array
              required:
                - name
                - conditions
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    conditions:
                      - direction: above
                        duration: 60
                        metric: temperature
                        threshold:
                          door:
                            open: true
                          humidity:
                            quality: inadequate
                            relativePercentage: 65
                          indoorAirQuality:
                            quality: fair
                            score: 80
                          noise:
                            ambient:
                              level: 120
                              quality: poor
                          pm25:
                            concentration: 90
                            quality: fair
                          temperature:
                            celsius: 20.5
                            fahrenheit: 70
                            quality: good
                          tvoc:
                            concentration: 400
                            quality: poor
                          water:
                            present: true
                    name: My Sensor Alert Profile
                    profileId: "1"
                    recipients:
                      emails:
                        - miles@meraki.com
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                      smsNumbers:
                        - "+15555555555"
                    schedule:
                      id: "5"
                      name: My Schedule
                    serials:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
              schema:
                properties:
                  conditions:
                    description: List of conditions that will cause the profile to send an alert.
                    items:
                      properties:
                        direction:
                          description: If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
                          enum:
                            - above
                            - below
                          type: string
                        duration:
                          default: 0
                          description: Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
                          enum:
                            - 0
                            - 60
                            - 120
                            - 180
                            - 240
                            - 300
                            - 600
                            - 900
                            - 1800
                            - 3600
                          type: integer
                        metric:
                          description: The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
                          type: string
                        threshold:
                          description: Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
                          properties:
                            door:
                              description: Door open threshold. 'open' must be provided and set to true.
                              properties:
                                open:
                                  description: Alerting threshold for a door open event. Must be set to true.
                                  type: boolean
                              required:
                                - open
                              type: object
                            humidity:
                              description: Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
                              properties:
                                quality:
                                  description: Alerting threshold as a qualitative humidity level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                                relativePercentage:
                                  description: Alerting threshold in %RH.
                                  type: integer
                              type: object
                            indoorAirQuality:
                              description: Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
                              properties:
                                quality:
                                  description: Alerting threshold as a qualitative indoor air quality level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                                score:
                                  description: Alerting threshold as indoor air quality score.
                                  type: integer
                              type: object
                            noise:
                              description: Noise threshold. 'ambient' must be provided.
                              properties:
                                ambient:
                                  description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
                                  properties:
                                    level:
                                      description: Alerting threshold as adjusted decibels.
                                      type: integer
                                    quality:
                                      description: Alerting threshold as a qualitative ambient noise level.
                                      enum:
                                        - fair
                                        - good
                                        - inadequate
                                        - poor
                                      type: string
                                  type: object
                              required:
                                - ambient
                              type: object
                            pm25:
                              description: PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
                              properties:
                                concentration:
                                  description: Alerting threshold as PM2.5 parts per million.
                                  type: integer
                                quality:
                                  description: Alerting threshold as a qualitative PM2.5 level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            temperature:
                              description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
                              properties:
                                celsius:
                                  description: Alerting threshold in degrees Celsius.
                                  format: float
                                  type: number
                                fahrenheit:
                                  description: Alerting threshold in degrees Fahrenheit.
                                  format: float
                                  type: number
                                quality:
                                  description: Alerting threshold as a qualitative temperature level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            tvoc:
                              description: TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
                              properties:
                                concentration:
                                  description: Alerting threshold as TVOC micrograms per cubic meter.
                                  type: integer
                                quality:
                                  description: Alerting threshold as a qualitative TVOC level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            water:
                              description: Water detection threshold. 'present' must be provided and set to true.
                              properties:
                                present:
                                  description: Alerting threshold for a water detection event. Must be set to true.
                                  type: boolean
                              required:
                                - present
                              type: object
                          type: object
                      required:
                        - metric
                        - threshold
                      type: object
                    type: array
                  name:
                    description: Name of the sensor alert profile.
                    type: string
                  profileId:
                    description: ID of the sensor alert profile.
                    type: string
                  recipients:
                    description: List of recipients that will recieve the alert.
                    properties:
                      emails:
                        description: A list of emails that will receive information about the alert.
                        items:
                          type: string
                        type: array
                      httpServerIds:
                        description: A list of webhook endpoint IDs that will receive information about the alert.
                        items:
                          type: string
                        type: array
                      smsNumbers:
                        description: A list of SMS numbers that will receive information about the alert.
                        items:
                          type: string
                        type: array
                    type: object
                  schedule:
                    description: The sensor schedule to use with the alert profile.
                    properties:
                      id:
                        description: ID of the sensor schedule to use with the alert profile. If not defined, the alert profile will be active at all times.
                        type: string
                      name:
                        description: Name of the sensor schedule to use with the alert profile.
                        type: string
                    type: object
                  serials:
                    description: List of device serials assigned to this sensor alert profile.
                    items:
                      type: string
                    type: array
                required:
                  - conditions
                type: object
          description: Successful operation
      summary: Creates a sensor alert profile for a network.
      tags:
        - sensor
        - configure
        - alerts
        - profiles
  "/networks/{networkId}/sensor/alerts/profiles/{id}":
    delete:
      description: Deletes a sensor alert profile from a network.
      operationId: deleteNetworkSensorAlertsProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Deletes a sensor alert profile from a network.
      tags:
        - sensor
        - configure
        - alerts
        - profiles
    get:
      description: Show details of a sensor alert profile for a network.
      operationId: getNetworkSensorAlertsProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    conditions:
                      - direction: above
                        duration: 60
                        metric: temperature
                        threshold:
                          door:
                            open: true
                          humidity:
                            quality: inadequate
                            relativePercentage: 65
                          indoorAirQuality:
                            quality: fair
                            score: 80
                          noise:
                            ambient:
                              level: 120
                              quality: poor
                          pm25:
                            concentration: 90
                            quality: fair
                          temperature:
                            celsius: 20.5
                            fahrenheit: 70
                            quality: good
                          tvoc:
                            concentration: 400
                            quality: poor
                          water:
                            present: true
                    name: My Sensor Alert Profile
                    profileId: "1"
                    recipients:
                      emails:
                        - miles@meraki.com
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                      smsNumbers:
                        - "+15555555555"
                    schedule:
                      id: "5"
                      name: My Schedule
                    serials:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
              schema:
                properties:
                  conditions:
                    description: List of conditions that will cause the profile to send an alert.
                    items:
                      properties:
                        direction:
                          description: If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
                          enum:
                            - above
                            - below
                          type: string
                        duration:
                          default: 0
                          description: Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
                          enum:
                            - 0
                            - 60
                            - 120
                            - 180
                            - 240
                            - 300
                            - 600
                            - 900
                            - 1800
                            - 3600
                          type: integer
                        metric:
                          description: The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
                          type: string
                        threshold:
                          description: Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
                          properties:
                            door:
                              description: Door open threshold. 'open' must be provided and set to true.
                              properties:
                                open:
                                  description: Alerting threshold for a door open event. Must be set to true.
                                  type: boolean
                              required:
                                - open
                              type: object
                            humidity:
                              description: Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
                              properties:
                                quality:
                                  description: Alerting threshold as a qualitative humidity level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                                relativePercentage:
                                  description: Alerting threshold in %RH.
                                  type: integer
                              type: object
                            indoorAirQuality:
                              description: Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
                              properties:
                                quality:
                                  description: Alerting threshold as a qualitative indoor air quality level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                                score:
                                  description: Alerting threshold as indoor air quality score.
                                  type: integer
                              type: object
                            noise:
                              description: Noise threshold. 'ambient' must be provided.
                              properties:
                                ambient:
                                  description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
                                  properties:
                                    level:
                                      description: Alerting threshold as adjusted decibels.
                                      type: integer
                                    quality:
                                      description: Alerting threshold as a qualitative ambient noise level.
                                      enum:
                                        - fair
                                        - good
                                        - inadequate
                                        - poor
                                      type: string
                                  type: object
                              required:
                                - ambient
                              type: object
                            pm25:
                              description: PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
                              properties:
                                concentration:
                                  description: Alerting threshold as PM2.5 parts per million.
                                  type: integer
                                quality:
                                  description: Alerting threshold as a qualitative PM2.5 level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            temperature:
                              description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
                              properties:
                                celsius:
                                  description: Alerting threshold in degrees Celsius.
                                  format: float
                                  type: number
                                fahrenheit:
                                  description: Alerting threshold in degrees Fahrenheit.
                                  format: float
                                  type: number
                                quality:
                                  description: Alerting threshold as a qualitative temperature level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            tvoc:
                              description: TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
                              properties:
                                concentration:
                                  description: Alerting threshold as TVOC micrograms per cubic meter.
                                  type: integer
                                quality:
                                  description: Alerting threshold as a qualitative TVOC level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            water:
                              description: Water detection threshold. 'present' must be provided and set to true.
                              properties:
                                present:
                                  description: Alerting threshold for a water detection event. Must be set to true.
                                  type: boolean
                              required:
                                - present
                              type: object
                          type: object
                      required:
                        - metric
                        - threshold
                      type: object
                    type: array
                  name:
                    description: Name of the sensor alert profile.
                    type: string
                  profileId:
                    description: ID of the sensor alert profile.
                    type: string
                  recipients:
                    description: List of recipients that will recieve the alert.
                    properties:
                      emails:
                        description: A list of emails that will receive information about the alert.
                        items:
                          type: string
                        type: array
                      httpServerIds:
                        description: A list of webhook endpoint IDs that will receive information about the alert.
                        items:
                          type: string
                        type: array
                      smsNumbers:
                        description: A list of SMS numbers that will receive information about the alert.
                        items:
                          type: string
                        type: array
                    type: object
                  schedule:
                    description: The sensor schedule to use with the alert profile.
                    properties:
                      id:
                        description: ID of the sensor schedule to use with the alert profile. If not defined, the alert profile will be active at all times.
                        type: string
                      name:
                        description: Name of the sensor schedule to use with the alert profile.
                        type: string
                    type: object
                  serials:
                    description: List of device serials assigned to this sensor alert profile.
                    items:
                      type: string
                    type: array
                required:
                  - conditions
                type: object
          description: Successful operation
      summary: Show details of a sensor alert profile for a network.
      tags:
        - sensor
        - configure
        - alerts
        - profiles
    put:
      description: Updates a sensor alert profile for a network.
      operationId: updateNetworkSensorAlertsProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                conditions:
                  - direction: above
                    duration: 60
                    metric: temperature
                    threshold:
                      door:
                        open: true
                      humidity:
                        quality: inadequate
                        relativePercentage: 65
                      indoorAirQuality:
                        quality: fair
                        score: 80
                      noise:
                        ambient:
                          level: 120
                          quality: poor
                      pm25:
                        concentration: 90
                        quality: fair
                      temperature:
                        celsius: 20.5
                        fahrenheit: 70
                        quality: good
                      tvoc:
                        concentration: 400
                        quality: poor
                      water:
                        present: true
                name: My Sensor Alert Profile
                recipients:
                  emails:
                    - miles@meraki.com
                  httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                  smsNumbers:
                    - "+15555555555"
                schedule:
                  id: "5"
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
              properties:
                conditions:
                  description: List of conditions that will cause the profile to send an alert.
                  items:
                    properties:
                      direction:
                        description: If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
                        enum:
                          - above
                          - below
                        type: string
                      duration:
                        default: 0
                        description: Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
                        enum:
                          - 0
                          - 60
                          - 120
                          - 180
                          - 240
                          - 300
                          - 600
                          - 900
                          - 1800
                          - 3600
                        type: integer
                      metric:
                        description: The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
                        type: string
                      threshold:
                        description: Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
                        properties:
                          door:
                            description: Door open threshold. 'open' must be provided and set to true.
                            properties:
                              open:
                                description: Alerting threshold for a door open event. Must be set to true.
                                type: boolean
                            required:
                              - open
                            type: object
                          humidity:
                            description: Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
                            properties:
                              quality:
                                description: Alerting threshold as a qualitative humidity level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                              relativePercentage:
                                description: Alerting threshold in %RH.
                                type: integer
                            type: object
                          indoorAirQuality:
                            description: Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
                            properties:
                              quality:
                                description: Alerting threshold as a qualitative indoor air quality level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                              score:
                                description: Alerting threshold as indoor air quality score.
                                type: integer
                            type: object
                          noise:
                            description: Noise threshold. 'ambient' must be provided.
                            properties:
                              ambient:
                                description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
                                properties:
                                  level:
                                    description: Alerting threshold as adjusted decibels.
                                    type: integer
                                  quality:
                                    description: Alerting threshold as a qualitative ambient noise level.
                                    enum:
                                      - fair
                                      - good
                                      - inadequate
                                      - poor
                                    type: string
                                type: object
                            required:
                              - ambient
                            type: object
                          pm25:
                            description: PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
                            properties:
                              concentration:
                                description: Alerting threshold as PM2.5 parts per million.
                                type: integer
                              quality:
                                description: Alerting threshold as a qualitative PM2.5 level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                            type: object
                          temperature:
                            description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
                            properties:
                              celsius:
                                description: Alerting threshold in degrees Celsius.
                                format: float
                                type: number
                              fahrenheit:
                                description: Alerting threshold in degrees Fahrenheit.
                                format: float
                                type: number
                              quality:
                                description: Alerting threshold as a qualitative temperature level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                            type: object
                          tvoc:
                            description: TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
                            properties:
                              concentration:
                                description: Alerting threshold as TVOC micrograms per cubic meter.
                                type: integer
                              quality:
                                description: Alerting threshold as a qualitative TVOC level.
                                enum:
                                  - fair
                                  - good
                                  - inadequate
                                  - poor
                                type: string
                            type: object
                          water:
                            description: Water detection threshold. 'present' must be provided and set to true.
                            properties:
                              present:
                                description: Alerting threshold for a water detection event. Must be set to true.
                                type: boolean
                            required:
                              - present
                            type: object
                        type: object
                    required:
                      - metric
                      - threshold
                    type: object
                  type: array
                name:
                  description: Name of the sensor alert profile.
                  type: string
                recipients:
                  description: List of recipients that will recieve the alert.
                  properties:
                    emails:
                      description: A list of emails that will receive information about the alert.
                      items:
                        type: string
                      type: array
                    httpServerIds:
                      description: A list of webhook endpoint IDs that will receive information about the alert.
                      items:
                        type: string
                      type: array
                    smsNumbers:
                      description: A list of SMS numbers that will receive information about the alert.
                      items:
                        type: string
                      type: array
                  type: object
                schedule:
                  description: The sensor schedule to use with the alert profile.
                  properties:
                    id:
                      description: ID of the sensor schedule to use with the alert profile. If not defined, the alert profile will be active at all times.
                      type: string
                  type: object
                serials:
                  description: List of device serials assigned to this sensor alert profile.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    conditions:
                      - direction: above
                        duration: 60
                        metric: temperature
                        threshold:
                          door:
                            open: true
                          humidity:
                            quality: inadequate
                            relativePercentage: 65
                          indoorAirQuality:
                            quality: fair
                            score: 80
                          noise:
                            ambient:
                              level: 120
                              quality: poor
                          pm25:
                            concentration: 90
                            quality: fair
                          temperature:
                            celsius: 20.5
                            fahrenheit: 70
                            quality: good
                          tvoc:
                            concentration: 400
                            quality: poor
                          water:
                            present: true
                    name: My Sensor Alert Profile
                    profileId: "1"
                    recipients:
                      emails:
                        - miles@meraki.com
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                      smsNumbers:
                        - "+15555555555"
                    schedule:
                      id: "5"
                      name: My Schedule
                    serials:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
              schema:
                properties:
                  conditions:
                    description: List of conditions that will cause the profile to send an alert.
                    items:
                      properties:
                        direction:
                          description: If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
                          enum:
                            - above
                            - below
                          type: string
                        duration:
                          default: 0
                          description: Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
                          enum:
                            - 0
                            - 60
                            - 120
                            - 180
                            - 240
                            - 300
                            - 600
                            - 900
                            - 1800
                            - 3600
                          type: integer
                        metric:
                          description: The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
                          type: string
                        threshold:
                          description: Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
                          properties:
                            door:
                              description: Door open threshold. 'open' must be provided and set to true.
                              properties:
                                open:
                                  description: Alerting threshold for a door open event. Must be set to true.
                                  type: boolean
                              required:
                                - open
                              type: object
                            humidity:
                              description: Humidity threshold. One of 'relativePercentage' or 'quality' must be provided.
                              properties:
                                quality:
                                  description: Alerting threshold as a qualitative humidity level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                                relativePercentage:
                                  description: Alerting threshold in %RH.
                                  type: integer
                              type: object
                            indoorAirQuality:
                              description: Indoor air quality score threshold. One of 'score' or 'quality' must be provided.
                              properties:
                                quality:
                                  description: Alerting threshold as a qualitative indoor air quality level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                                score:
                                  description: Alerting threshold as indoor air quality score.
                                  type: integer
                              type: object
                            noise:
                              description: Noise threshold. 'ambient' must be provided.
                              properties:
                                ambient:
                                  description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
                                  properties:
                                    level:
                                      description: Alerting threshold as adjusted decibels.
                                      type: integer
                                    quality:
                                      description: Alerting threshold as a qualitative ambient noise level.
                                      enum:
                                        - fair
                                        - good
                                        - inadequate
                                        - poor
                                      type: string
                                  type: object
                              required:
                                - ambient
                              type: object
                            pm25:
                              description: PM2.5 concentration threshold. One of 'concentration' or 'quality' must be provided.
                              properties:
                                concentration:
                                  description: Alerting threshold as PM2.5 parts per million.
                                  type: integer
                                quality:
                                  description: Alerting threshold as a qualitative PM2.5 level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            temperature:
                              description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
                              properties:
                                celsius:
                                  description: Alerting threshold in degrees Celsius.
                                  format: float
                                  type: number
                                fahrenheit:
                                  description: Alerting threshold in degrees Fahrenheit.
                                  format: float
                                  type: number
                                quality:
                                  description: Alerting threshold as a qualitative temperature level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            tvoc:
                              description: TVOC concentration threshold. One of 'concentration' or 'quality' must be provided.
                              properties:
                                concentration:
                                  description: Alerting threshold as TVOC micrograms per cubic meter.
                                  type: integer
                                quality:
                                  description: Alerting threshold as a qualitative TVOC level.
                                  enum:
                                    - fair
                                    - good
                                    - inadequate
                                    - poor
                                  type: string
                              type: object
                            water:
                              description: Water detection threshold. 'present' must be provided and set to true.
                              properties:
                                present:
                                  description: Alerting threshold for a water detection event. Must be set to true.
                                  type: boolean
                              required:
                                - present
                              type: object
                          type: object
                      required:
                        - metric
                        - threshold
                      type: object
                    type: array
                  name:
                    description: Name of the sensor alert profile.
                    type: string
                  profileId:
                    description: ID of the sensor alert profile.
                    type: string
                  recipients:
                    description: List of recipients that will recieve the alert.
                    properties:
                      emails:
                        description: A list of emails that will receive information about the alert.
                        items:
                          type: string
                        type: array
                      httpServerIds:
                        description: A list of webhook endpoint IDs that will receive information about the alert.
                        items:
                          type: string
                        type: array
                      smsNumbers:
                        description: A list of SMS numbers that will receive information about the alert.
                        items:
                          type: string
                        type: array
                    type: object
                  schedule:
                    description: The sensor schedule to use with the alert profile.
                    properties:
                      id:
                        description: ID of the sensor schedule to use with the alert profile. If not defined, the alert profile will be active at all times.
                        type: string
                      name:
                        description: Name of the sensor schedule to use with the alert profile.
                        type: string
                    type: object
                  serials:
                    description: List of device serials assigned to this sensor alert profile.
                    items:
                      type: string
                    type: array
                required:
                  - conditions
                type: object
          description: Successful operation
      summary: Updates a sensor alert profile for a network.
      tags:
        - sensor
        - configure
        - alerts
        - profiles
  "/networks/{networkId}/sensor/relationships":
    get:
      description: List the sensor roles for devices in a given network
      operationId: getNetworkSensorRelationships
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - device:
                        name: My sensor
                        productType: sensor
                        serial: Q234-ABCD-0001
                      relationships:
                        livestream:
                          relatedDevices:
                            - productType: camera
                              serial: Q234-ABCD-5678
              schema:
                items:
                  properties:
                    device:
                      description: A sensor or gateway device in the network
                      properties:
                        name:
                          description: The name of the device
                          type: string
                        productType:
                          description: The product type of the device
                          enum:
                            - camera
                            - sensor
                          type: string
                        serial:
                          description: The serial of the device
                          type: string
                      type: object
                    relationships:
                      description: An object describing the relationships defined between the device and other devices
                      properties:
                        livestream:
                          description: A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
                          properties:
                            relatedDevices:
                              description: An array of the related devices for the role
                              items:
                                properties:
                                  productType:
                                    description: The product type of the related device
                                    enum:
                                      - camera
                                      - sensor
                                    type: string
                                  serial:
                                    description: The serial of the related device
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: List the sensor roles for devices in a given network
      tags:
        - sensor
        - configure
        - relationships
  "/networks/{networkId}/settings":
    get:
      description: Return the settings for a network
      operationId: getNetworkSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    clientPrivacy:
                      expireDataBefore: 2022-10-01T00:00:00Z
                      expireDataOlderThan: 86400
                    fips:
                      enabled: true
                    localStatusPage:
                      authentication:
                        enabled: false
                        username: admin
                    localStatusPageEnabled: true
                    namedVlans:
                      enabled: true
                    remoteStatusPageEnabled: true
                    securePort:
                      enabled: false
              schema:
                properties:
                  clientPrivacy:
                    description: Privacy settings
                    properties:
                      expireDataBefore:
                        description: The date to expire the data before
                        format: date-time
                        type: string
                      expireDataOlderThan:
                        description: The number of days, weeks, or months in Epoch time to expire the data before
                        type: integer
                    type: object
                  fips:
                    description: A hash of FIPS options applied to the Network
                    properties:
                      enabled:
                        description: Enables / disables FIPS on the network.
                        type: boolean
                    type: object
                  localStatusPage:
                    description: A hash of Local Status page(s)' authentication options applied to the Network.
                    properties:
                      authentication:
                        description: A hash of Local Status page(s)' authentication options applied to the Network.
                        properties:
                          enabled:
                            description: Enables / disables the authentication on Local Status page(s).
                            type: boolean
                          username:
                            description: The username used for Local Status Page(s).
                            type: string
                        type: object
                    type: object
                  localStatusPageEnabled:
                    description: Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
                    type: boolean
                  namedVlans:
                    description: A hash of Named VLANs options applied to the Network.
                    properties:
                      enabled:
                        description: Enables / disables Named VLANs on the Network.
                        type: boolean
                    required:
                      - enabled
                    type: object
                  remoteStatusPageEnabled:
                    description: Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true
                    type: boolean
                  securePort:
                    description: A hash of SecureConnect options applied to the Network.
                    properties:
                      enabled:
                        description: Enables / disables SecureConnect on the network. Optional.
                        type: boolean
                    type: object
                type: object
          description: Successful operation
      summary: Return the settings for a network
      tags:
        - networks
        - configure
        - settings
    put:
      description: Update the settings for a network
      operationId: updateNetworkSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                localStatusPage:
                  authentication:
                    enabled: false
                    password: miles123
                localStatusPageEnabled: true
                remoteStatusPageEnabled: true
                securePort:
                  enabled: false
              properties:
                localStatusPage:
                  description: A hash of Local Status page(s)' authentication options applied to the Network.
                  properties:
                    authentication:
                      description: A hash of Local Status page(s)' authentication options applied to the Network.
                      properties:
                        enabled:
                          description: Enables / disables the authentication on Local Status page(s).
                          type: boolean
                        password:
                          description: The password used for Local Status Page(s). Set this to null to clear the password.
                          type: string
                      type: object
                  type: object
                localStatusPageEnabled:
                  description: Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
                  type: boolean
                remoteStatusPageEnabled:
                  description: Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true
                  type: boolean
                securePort:
                  description: A hash of SecureConnect options applied to the Network.
                  properties:
                    enabled:
                      description: Enables / disables SecureConnect on the network. Optional.
                      type: boolean
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    clientPrivacy:
                      expireDataBefore: 2022-10-01T00:00:00Z
                      expireDataOlderThan: 86400
                    fips:
                      enabled: true
                    localStatusPage:
                      authentication:
                        enabled: false
                        username: admin
                    localStatusPageEnabled: true
                    namedVlans:
                      enabled: true
                    remoteStatusPageEnabled: true
                    securePort:
                      enabled: false
              schema:
                properties:
                  clientPrivacy:
                    description: Privacy settings
                    properties:
                      expireDataBefore:
                        description: The date to expire the data before
                        format: date-time
                        type: string
                      expireDataOlderThan:
                        description: The number of days, weeks, or months in Epoch time to expire the data before
                        type: integer
                    type: object
                  fips:
                    description: A hash of FIPS options applied to the Network
                    properties:
                      enabled:
                        description: Enables / disables FIPS on the network.
                        type: boolean
                    type: object
                  localStatusPage:
                    description: A hash of Local Status page(s)' authentication options applied to the Network.
                    properties:
                      authentication:
                        description: A hash of Local Status page(s)' authentication options applied to the Network.
                        properties:
                          enabled:
                            description: Enables / disables the authentication on Local Status page(s).
                            type: boolean
                          username:
                            description: The username used for Local Status Page(s).
                            type: string
                        type: object
                    type: object
                  localStatusPageEnabled:
                    description: Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)
                    type: boolean
                  namedVlans:
                    description: A hash of Named VLANs options applied to the Network.
                    properties:
                      enabled:
                        description: Enables / disables Named VLANs on the Network.
                        type: boolean
                    required:
                      - enabled
                    type: object
                  remoteStatusPageEnabled:
                    description: Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true
                    type: boolean
                  securePort:
                    description: A hash of SecureConnect options applied to the Network.
                    properties:
                      enabled:
                        description: Enables / disables SecureConnect on the network. Optional.
                        type: boolean
                    type: object
                type: object
          description: Successful operation
      summary: Update the settings for a network
      tags:
        - networks
        - configure
        - settings
  "/networks/{networkId}/sm/bypassActivationLockAttempts":
    post:
      description: Bypass activation lock attempt
      operationId: createNetworkSmBypassActivationLockAttempt
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ids:
                  - "1284392014819"
                  - "2983092129865"
              properties:
                ids:
                  description: The ids of the devices to attempt activation lock bypass.
                  items:
                    type: string
                  type: array
              required:
                - ids
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    data: {}
                    id: "1234"
                    status: pending
              schema:
                type: object
          description: Successful operation
      summary: Bypass activation lock attempt
      tags:
        - sm
        - configure
        - bypassActivationLockAttempts
  "/networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}":
    get:
      description: Bypass activation lock attempt status
      operationId: getNetworkSmBypassActivationLockAttempt
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: attemptId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    data:
                      "2090938209":
                        errors:
                          - Activation lock bypass code not known for this device
                        success: false
                      "38290139892":
                        success: true
                    id: "1234"
                    status: complete
              schema:
                type: object
          description: Successful operation
      summary: Bypass activation lock attempt status
      tags:
        - sm
        - configure
        - bypassActivationLockAttempts
  "/networks/{networkId}/sm/devices":
    get:
      description: List the devices enrolled in an SM network with various specified fields and filters
      operationId: getNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: |-
            Additional fields that will be displayed for each device.
                The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,
                systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,
                ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,
                simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,
                isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,
                hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, and url.
          explode: false
          in: query
          name: fields
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter devices by wifi mac(s).
          explode: false
          in: query
          name: wifiMacs
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter devices by serial(s).
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter devices by id(s).
          explode: false
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags.
          explode: false
          in: query
          name: scope
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "1284392014819"
                      ip: 1.2.3.4
                      name: Miles's phone
                      notes: Here's some info about my device
                      osName: iOS 9.3.5
                      serial: F5XKHEBX
                      serialNumber: F5XKHEBX
                      ssid: My SSID
                      systemModel: iPhone
                      tags:
                        - tag1
                        - tag2
                      uuid: 3d990628ede4c628d52
                      wifiMac: 00:11:22:33:44:55
              schema:
                items:
                  properties:
                    id:
                      description: The Meraki Id of the device record.
                      type: string
                    ip:
                      description: The IP address of the device.
                      type: string
                    name:
                      description: The name of the device.
                      type: string
                    notes:
                      description: Notes associated with the device.
                      type: string
                    osName:
                      description: The name of the device OS.
                      type: string
                    serial:
                      description: The device serial.
                      type: string
                    serialNumber:
                      description: The device serial number.
                      type: string
                    ssid:
                      description: The name of the SSID the device was last connected to.
                      type: string
                    systemModel:
                      description: The device model.
                      type: string
                    tags:
                      description: An array of tags associated with the device.
                      items:
                        type: string
                      type: array
                    uuid:
                      description: The UUID of the device.
                      type: string
                    wifiMac:
                      description: The MAC of the device.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the devices enrolled in an SM network with various specified fields and filters
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/checkin":
    post:
      description: Force check-in a set of devices
      operationId: checkinNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ids:
                  - "1284392014819"
                  - "2983092129865"
                scope:
                  - withAny
                  - tag1
                  - tag2
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                wifiMacs:
                  - 00:11:22:33:44:55
              properties:
                ids:
                  description: The ids of the devices to be checked-in.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be checked-in.
                  items:
                    type: string
                  type: array
                wifiMacs:
                  description: The wifiMacs of the devices to be checked-in.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ids:
                      - "1284392014819"
                      - "2983092129865"
              schema:
                properties:
                  ids:
                    description: The Meraki Ids of the set of devices.
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Force check-in a set of devices
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/fields":
    put:
      description: Modify the fields of a device
      operationId: updateNetworkSmDevicesFields
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                deviceFields:
                  name: Miles's phone
                  notes: Here's some info about my device
                id: "1284392014819"
                serial: Q234-ABCD-5678
                wifiMac: 00:11:22:33:44:55
              properties:
                deviceFields:
                  description: The new fields of the device. Each field of this object is optional.
                  properties:
                    name:
                      description: New name for the device
                      type: string
                    notes:
                      description: New notes for the device
                      type: string
                  type: object
                id:
                  description: The id of the device to be modified.
                  type: string
                serial:
                  description: The serial of the device to be modified.
                  type: string
                wifiMac:
                  description: The wifiMac of the device to be modified.
                  type: string
              required:
                - deviceFields
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "1284392014819"
                      name: Miles's phone
                      notes: Here's some info about my device
                      serial: F5XKHEBX
                      wifiMac: 00:11:22:33:44:55
              schema:
                items:
                  properties:
                    id:
                      description: The Meraki Id of the device record.
                      type: string
                    name:
                      description: The name of the device.
                      type: string
                    notes:
                      description: Notes associated with the device.
                      type: string
                    serial:
                      description: The device serial.
                      type: string
                    wifiMac:
                      description: The MAC of the device.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Modify the fields of a device
      tags:
        - sm
        - configure
        - devices
        - fields
  "/networks/{networkId}/sm/devices/lock":
    post:
      description: Lock a set of devices
      operationId: lockNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ids:
                  - "1284392014819"
                  - "2983092129865"
                pin: 123456
                scope:
                  - withAny
                  - tag1
                  - tag2
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                wifiMacs:
                  - 00:11:22:33:44:55
              properties:
                ids:
                  description: The ids of the devices to be locked.
                  items:
                    type: string
                  type: array
                pin:
                  description: The pin number for locking macOS devices (a six digit number). Required only for macOS devices.
                  type: integer
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be locked.
                  items:
                    type: string
                  type: array
                wifiMacs:
                  description: The wifiMacs of the devices to be locked.
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ids:
                      - "1284392014819"
                      - "2983092129865"
              schema:
                properties:
                  ids:
                    description: The Meraki Ids of the set of devices.
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Lock a set of devices
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/modifyTags":
    post:
      description: Add, delete, or update the tags of a set of devices
      operationId: modifyNetworkSmDevicesTags
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ids:
                  - "1284392014819"
                  - "2983092129865"
                scope:
                  - withAny, old_tag
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                tags:
                  - tag1
                  - tag2
                updateAction: add
                wifiMacs:
                  - 00:11:22:33:44:55
              properties:
                ids:
                  description: The ids of the devices to be modified.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be modified.
                  items:
                    type: string
                  type: array
                tags:
                  description: The tags to be added, deleted, or updated.
                  items:
                    type: string
                  type: array
                updateAction:
                  description: One of add, delete, or update. Only devices that have been modified will be returned.
                  type: string
                wifiMacs:
                  description: The wifiMacs of the devices to be modified.
                  items:
                    type: string
                  type: array
              required:
                - tags
                - updateAction
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "1284392014819"
                      serial: F5XKHEBX
                      tags:
                        - tag1
                        - tag2
                      wifiMac: 00:11:22:33:44:55
              schema:
                items:
                  properties:
                    id:
                      description: The Meraki Id of the device record.
                      type: string
                    serial:
                      description: The device serial.
                      type: string
                    tags:
                      description: An array of tags associated with the device.
                      items:
                        type: string
                      type: array
                    wifiMac:
                      description: The MAC of the device.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Add, delete, or update the tags of a set of devices
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/move":
    post:
      description: Move a set of devices to a new network
      operationId: moveNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ids:
                  - "1284392014819"
                  - "2983092129865"
                newNetwork: "1284392014819"
                scope:
                  - withAny
                  - tag1
                  - tag2
                serials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                wifiMacs:
                  - 00:11:22:33:44:55
              properties:
                ids:
                  description: The ids of the devices to be moved.
                  items:
                    type: string
                  type: array
                newNetwork:
                  description: The new network to which the devices will be moved.
                  type: string
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be moved.
                  items:
                    type: string
                  type: array
                wifiMacs:
                  description: The wifiMacs of the devices to be moved.
                  items:
                    type: string
                  type: array
              required:
                - newNetwork
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ids:
                      - "1284392014819"
                      - "2983092129865"
                    newNetwork: "1284392014819"
              schema:
                properties:
                  ids:
                    description: The Meraki Ids of the set of devices.
                    items:
                      type: string
                    type: array
                  newNetwork:
                    description: The network to which the devices was moved.
                    type: string
                type: object
          description: Successful operation
      summary: Move a set of devices to a new network
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/wipe":
    post:
      description: Wipe a device
      operationId: wipeNetworkSmDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: "1284392014819"
                pin: 123456
                serial: Q234-ABCD-5678
                wifiMac: 00:11:22:33:44:55
              properties:
                id:
                  description: The id of the device to be wiped.
                  type: string
                pin:
                  description: The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.
                  type: integer
                serial:
                  description: The serial of the device to be wiped.
                  type: string
                wifiMac:
                  description: The wifiMac of the device to be wiped.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1284392014819"
              schema:
                properties:
                  id:
                    description: The Meraki Id of the devices.
                    type: string
                type: object
          description: Successful operation
      summary: Wipe a device
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory":
    get:
      description: Return the client's daily cellular data usage history. Usage data is in kilobytes.
      operationId: getNetworkSmDeviceCellularUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - received: 61
                      sent: 138
                      ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  properties:
                    received:
                      description: The amount of cellular data received by the device.
                      format: float
                      type: number
                    sent:
                      description: The amount of cellular sent received by the device.
                      format: float
                      type: number
                    ts:
                      description: When the cellular usage data was collected.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return the client's daily cellular data usage history
      tags:
        - sm
        - monitor
        - devices
        - cellularUsageHistory
  "/networks/{networkId}/sm/devices/{deviceId}/certs":
    get:
      description: List the certs on a device
      operationId: getNetworkSmDeviceCerts
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - certPem: |
                        -----BEGIN CERTIFICATE-----
                        -----END CERTIFICATE-----
                      deviceId: "1234"
                      id: "15"
                      issuer: ""
                      name: My Cert
                      notValidAfter: 2018-05-12T00:00:00Z
                      notValidBefore: 2018-02-11T00:00:00Z
                      subject: ""
              schema:
                items:
                  properties:
                    certPem:
                      description: The PEM of the certificate.
                      type: string
                    deviceId:
                      description: The Meraki managed device Id.
                      type: string
                    id:
                      description: The Meraki Id of the certificate record.
                      type: string
                    issuer:
                      description: The certificate issuer.
                      type: string
                    name:
                      description: The name of the certificate.
                      type: string
                    notValidAfter:
                      description: The date after which the certificate is no longer valid.
                      type: string
                    notValidBefore:
                      description: The date before which the certificate is not valid.
                      type: string
                    subject:
                      description: The subject of the certificate.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the certs on a device
      tags:
        - sm
        - configure
        - devices
        - certs
  "/networks/{networkId}/sm/devices/{deviceId}/connectivity":
    get:
      description: Returns historical connectivity data (whether a device is regularly checking in to Dashboard).
      operationId: getNetworkSmDeviceConnectivity
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - firstSeenAt: 2018-02-11T00:00:00Z
                      lastSeenAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  properties:
                    firstSeenAt:
                      description: When the device was first seen as connected to the internet in each connection.
                      type: string
                    lastSeenAt:
                      description: When the device was last seen as connected to the internet in each connection.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Returns historical connectivity data (whether a device is regularly checking in to Dashboard).
      tags:
        - sm
        - monitor
        - devices
        - connectivity
  "/networks/{networkId}/sm/devices/{deviceId}/desktopLogs":
    get:
      description: Return historical records of various Systems Manager network connection details for desktop devices.
      operationId: getNetworkSmDeviceDesktopLogs
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - dhcpServer: 1.2.3.4
                      dnsServer: "8"
                      gateway: 1.2.3.5
                      ip: 1.2.3.4
                      measuredAt: 2018-05-12T00:00:00Z
                      networkDevice: NIC
                      networkDriver: Driver
                      networkMTU: "1500"
                      publicIP: 123.123.123.1
                      subnet: 192.168.1.0/24
                      ts: 2018-05-12T00:00:00Z
                      user: milesmeraki
                      wifiAuth: wpa-psk
                      wifiBssid: 00:11:22:33:44:55
                      wifiChannel: "11"
                      wifiNoise: "-99"
                      wifiRssi: "-11"
                      wifiSsid: ssid
              schema:
                items:
                  properties:
                    dhcpServer:
                      description: The IP address of the DCHP Server.
                      type: string
                    dnsServer:
                      description: The DNS Server during the connection.
                      type: string
                    gateway:
                      description: The gateway IP the device was connected to.
                      type: string
                    ip:
                      description: The IP of the device during connection.
                      type: string
                    measuredAt:
                      description: The time the data was measured at.
                      type: string
                    networkDevice:
                      description: The network device for the device used for connection.
                      type: string
                    networkDriver:
                      description: The network driver for the device.
                      type: string
                    networkMTU:
                      description: The network max transmission unit.
                      type: string
                    publicIP:
                      description: The public IP address of the device.
                      type: string
                    subnet:
                      description: The subnet of the device connection.
                      type: string
                    ts:
                      description: The time the connection was logged.
                      type: string
                    user:
                      description: The user during connection.
                      type: string
                    wifiAuth:
                      description: The type of authentication used by the SSID.
                      type: string
                    wifiBssid:
                      description: The MAC of the access point the device is connected to.
                      type: string
                    wifiChannel:
                      description: Channel through which the connection is routing.
                      type: string
                    wifiNoise:
                      description: The wireless signal power level received by the device.
                      type: string
                    wifiRssi:
                      description: The Received Signal Strength Indicator for the device.
                      type: string
                    wifiSsid:
                      description: The name of the network the device is connected to.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return historical records of various Systems Manager network connection details for desktop devices.
      tags:
        - sm
        - monitor
        - devices
        - desktopLogs
  "/networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs":
    get:
      description: Return historical records of commands sent to Systems Manager devices. Note that this will include the name of the Dashboard user who initiated the command if it was generated by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out of any reports.
      operationId: getNetworkSmDeviceDeviceCommandLogs
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - action: UpdateProfile
                      dashboardUser: Miles Meraki
                      details: "{}"
                      name: My profile
                      ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  properties:
                    action:
                      description: The type of command sent to the device.
                      type: string
                    dashboardUser:
                      description: The Meraki dashboard user who initiated the command.
                      type: string
                    details:
                      description: A JSON string object containing command details.
                      type: string
                    name:
                      description: The name of the device to which the command is sent.
                      type: string
                    ts:
                      description: The time the command was sent to the device.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return historical records of commands sent to Systems Manager devices
      tags:
        - sm
        - monitor
        - devices
        - deviceCommandLogs
  "/networks/{networkId}/sm/devices/{deviceId}/deviceProfiles":
    get:
      description: Get the installed profiles associated with a device
      operationId: getNetworkSmDeviceDeviceProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - deviceId: "1234"
                      id: "1284392014819"
                      isEncrypted: true
                      isManaged: true
                      name: My profile
                      profileData: "{}"
                      profileIdentifier: com.test.app
                      version: 0.0.1
              schema:
                items:
                  properties:
                    deviceId:
                      description: The Meraki managed device Id.
                      type: string
                    id:
                      description: The numerical Meraki Id of the profile.
                      type: string
                    isEncrypted:
                      description: A boolean indicating if the profile is encrypted.
                      type: boolean
                    isManaged:
                      description: Whether or not the profile is managed by Meraki.
                      type: boolean
                    name:
                      description: The name of the profile.
                      type: string
                    profileData:
                      description: A string containing a JSON object with the profile data.
                      type: string
                    profileIdentifier:
                      description: The identifier of the profile.
                      type: string
                    version:
                      description: The verison of the profile.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Get the installed profiles associated with a device
      tags:
        - sm
        - configure
        - devices
        - deviceProfiles
  "/networks/{networkId}/sm/devices/{deviceId}/networkAdapters":
    get:
      description: List the network adapters of a device
      operationId: getNetworkSmDeviceNetworkAdapters
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - dhcpServer: 123.123.123.1
                      dnsServer: 8.8.8.8, 8.8.4.4
                      gateway: 1.2.3.5
                      id: "1284392014819"
                      ip: 1.2.3.4
                      mac: 00:11:22:33:44:55
                      name: en0
                      subnet: 255.255.255.0
              schema:
                items:
                  properties:
                    dhcpServer:
                      description: The IP address of the DCHP Server.
                      type: string
                    dnsServer:
                      description: The IP address of the DNS Server.
                      type: string
                    gateway:
                      description: The IP address of the Gateway.
                      type: string
                    id:
                      description: The Meraki Id of the network adapter record.
                      type: string
                    ip:
                      description: The IP address of the network adapter.
                      type: string
                    mac:
                      description: The MAC associated with the network adapter.
                      type: string
                    name:
                      description: The name of the newtwork adapter.
                      type: string
                    subnet:
                      description: The subnet for the network adapter.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the network adapters of a device
      tags:
        - sm
        - configure
        - devices
        - networkAdapters
  "/networks/{networkId}/sm/devices/{deviceId}/performanceHistory":
    get:
      description: Return historical records of various Systems Manager client metrics for desktop devices.
      operationId: getNetworkSmDevicePerformanceHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - cpuPercentUsed: 0.95
                      diskUsage:
                        c:
                          space: 9096
                          used: 2048
                      memActive: 1024
                      memFree: 1024
                      memInactive: 2048
                      memWired: 4096
                      networkReceived: 512
                      networkSent: 512
                      swapUsed: 768
                      ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  properties:
                    cpuPercentUsed:
                      description: The percentage of CPU used as a decimal format.
                      format: float
                      type: number
                    diskUsage:
                      description: An object containing disk usage details.
                      properties:
                        c:
                          description: An object containing current disk usage details.
                          properties:
                            space:
                              description: The available disk space.
                              type: integer
                            used:
                              description: The used disk space.
                              type: integer
                          type: object
                      type: object
                    memActive:
                      description: The active RAM on the device.
                      type: integer
                    memFree:
                      description: Memory that is not yet in use by the system.
                      type: integer
                    memInactive:
                      description: The inactive RAM on the device.
                      type: integer
                    memWired:
                      description: Memory used for core OS functions on the device.
                      type: integer
                    networkReceived:
                      description: Network bandwith received.
                      type: integer
                    networkSent:
                      description: Network bandwith transmitted.
                      type: integer
                    swapUsed:
                      description: The amount of space being used on the startup disk to swap unused files to and from RAM.
                      type: integer
                    ts:
                      description: The time at which the performance was measured.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return historical records of various Systems Manager client metrics for desktop devices.
      tags:
        - sm
        - monitor
        - devices
        - performanceHistory
  "/networks/{networkId}/sm/devices/{deviceId}/refreshDetails":
    post:
      description: Refresh the details of a device
      operationId: refreshNetworkSmDeviceDetails
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
      summary: Refresh the details of a device
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/{deviceId}/restrictions":
    get:
      description: List the restrictions on a device
      operationId: getNetworkSmDeviceRestrictions
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - profile: com.meraki.sm.1
                      restrictions:
                        myRestriction:
                          value: true
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the restrictions on a device
      tags:
        - sm
        - configure
        - devices
        - restrictions
  "/networks/{networkId}/sm/devices/{deviceId}/securityCenters":
    get:
      description: List the security centers on a device
      operationId: getNetworkSmDeviceSecurityCenters
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - antiVirusName: meraki_av
                      fireWallName: meraki_fw
                      hasAntiVirus: true
                      hasFireWallInstalled: true
                      id: "1284392014819"
                      isAutoLoginDisabled: true
                      isDiskEncrypted: true
                      isFireWallEnabled: true
                      isRooted: true
                      runningProcs: /software,/software_2
              schema:
                items:
                  properties:
                    antiVirusName:
                      description: The name of the Antivirus.
                      type: string
                    fireWallName:
                      description: The name of the Firewall.
                      type: string
                    hasAntiVirus:
                      description: Boolean indicating if the device has Antivirus.
                      type: boolean
                    hasFireWallInstalled:
                      description: Boolean indicating if the device has a Firewall installed.
                      type: boolean
                    id:
                      description: The Meraki identifier for the security center record.
                      type: string
                    isAutoLoginDisabled:
                      description: Boolean indicating if the device has auto login disabled.
                      type: boolean
                    isDiskEncrypted:
                      description: Boolean indicating if the device has disk encryption.
                      type: boolean
                    isFireWallEnabled:
                      description: Boolean indicating if the device has a Firewall enabled.
                      type: boolean
                    isRooted:
                      description: Boolean indicating if the device is rooted.
                      type: boolean
                    runningProcs:
                      description: A comma seperated list of procs running on the device.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the security centers on a device
      tags:
        - sm
        - configure
        - devices
        - securityCenters
  "/networks/{networkId}/sm/devices/{deviceId}/softwares":
    get:
      description: Get a list of softwares associated with a device
      operationId: getNetworkSmDeviceSoftwares
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - appId: "1234"
                      bundleSize: 1024
                      createdAt: 2018-02-11T00:00:00Z
                      deviceId: "1234"
                      dynamicSize: 2048
                      id: "1284392014819"
                      identifier: com.test.app
                      installedAt: 2018-05-12T00:00:00Z
                      iosRedemptionCode: false
                      isManaged: true
                      itunesId: "1234"
                      licenseKey: Z21234567890
                      name: My app
                      path: /Path/to/app.app
                      redemptionCode: 1234
                      shortVersion: "1.1"
                      status: Managed
                      toInstall: true
                      toUninstall: false
                      uninstalledAt: 2018-02-11T00:00:00Z
                      updatedAt: 2018-05-12T00:00:00Z
                      vendor: Apple
                      version: "0.1"
              schema:
                items:
                  properties:
                    appId:
                      description: The Meraki managed application Id for this record on a particular device.
                      type: string
                    bundleSize:
                      description: The size of the software bundle.
                      type: integer
                    createdAt:
                      description: When the Meraki record for the software was created.
                      type: string
                    deviceId:
                      description: The Meraki managed device Id.
                      type: string
                    dynamicSize:
                      description: The size of the data stored in the application.
                      type: integer
                    id:
                      description: The Meraki software Id.
                      type: string
                    identifier:
                      description: Software bundle identifier.
                      type: string
                    installedAt:
                      description: When the Software was installed on the device.
                      type: string
                    iosRedemptionCode:
                      description: A boolean indicating whether or not an iOS redemption code was used.
                      type: boolean
                    isManaged:
                      description: A boolean indicating whether or not the software is managed by Meraki.
                      type: boolean
                    itunesId:
                      description: The itunes numerical identifier.
                      type: string
                    licenseKey:
                      description: The license key associated with this software installation.
                      type: string
                    name:
                      description: The name of the software.
                      type: string
                    path:
                      description: The path on the device where the software record is located.
                      type: string
                    redemptionCode:
                      description: The redemption code used for this software.
                      type: integer
                    shortVersion:
                      description: Short version notation for the software.
                      type: string
                    status:
                      description: The management status of the software.
                      type: string
                    toInstall:
                      description: A boolean indicating this software record should be installed on the associated device.
                      type: boolean
                    toUninstall:
                      description: A boolean indicating this software record should be uninstalled on the associated device.
                      type: boolean
                    uninstalledAt:
                      description: When the record was uninstalled from the device.
                      type: string
                    updatedAt:
                      description: When the record was last updated by Meraki.
                      type: string
                    vendor:
                      description: The vendor of the software.
                      type: string
                    version:
                      description: Full version notation for the software.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Get a list of softwares associated with a device
      tags:
        - sm
        - configure
        - devices
        - softwares
  "/networks/{networkId}/sm/devices/{deviceId}/unenroll":
    post:
      description: Unenroll a device
      operationId: unenrollNetworkSmDevice
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    success: true
              schema:
                type: object
          description: Successful operation
      summary: Unenroll a device
      tags:
        - sm
        - configure
        - devices
  "/networks/{networkId}/sm/devices/{deviceId}/wlanLists":
    get:
      description: List the saved SSID names on a device
      operationId: getNetworkSmDeviceWlanLists
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: deviceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - createdAt: 2018-02-11T00:00:00Z
                      id: "1284392014819"
                      xml: "Preferred networks on en0:"
              schema:
                items:
                  properties:
                    createdAt:
                      description: When the Meraki record for the wlanList was created.
                      type: string
                    id:
                      description: The Meraki managed Id of the wlanList record.
                      type: string
                    xml:
                      description: An XML string containing the WLAN List for the device.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the saved SSID names on a device
      tags:
        - sm
        - configure
        - devices
        - wlanLists
  "/networks/{networkId}/sm/profiles":
    get:
      description: List all profiles in a network
      operationId: getNetworkSmProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - description: Some profile description
                      id: "1284392014819"
                      name: My profile
                      scope: withAny
                      tags:
                        - tag1
                        - tag2
              schema:
                items:
                  properties:
                    description:
                      description: Description of a profile.
                      type: string
                    id:
                      description: ID of a profile.
                      type: string
                    name:
                      description: Name of a profile.
                      type: string
                    scope:
                      description: Scope of a profile.
                      type: string
                    tags:
                      description: Tags of a profile.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
      summary: List all profiles in a network
      tags:
        - sm
        - configure
        - profiles
  "/networks/{networkId}/sm/targetGroups":
    get:
      description: List the target groups in this network
      operationId: getNetworkSmTargetGroups
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
          in: query
          name: withDetails
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - name: My target group
                      scope: none
                      tags: "[]"
                      type: devices
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the target groups in this network
      tags:
        - sm
        - configure
        - targetGroups
    post:
      description: Add a target group
      operationId: createNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createNetworkSmTargetGroupCreatenetworksmtargetgroup"
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: My target group
                    scope: none
                    tags: "[]"
                    type: devices
              schema:
                type: object
          description: Successful operation
      summary: Add a target group
      tags:
        - sm
        - configure
        - targetGroups
  "/networks/{networkId}/sm/targetGroups/{targetGroupId}":
    delete:
      description: Delete a target group from a network
      operationId: deleteNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: targetGroupId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a target group from a network
      tags:
        - sm
        - configure
        - targetGroups
    get:
      description: Return a target group
      operationId: getNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: targetGroupId
          required: true
          schema:
            type: string
        - description: Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response
          in: query
          name: withDetails
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: My target group
                    scope: none
                    tags: "[]"
                    type: devices
              schema:
                type: object
          description: Successful operation
      summary: Return a target group
      tags:
        - sm
        - configure
        - targetGroups
    put:
      description: Update a target group
      operationId: updateNetworkSmTargetGroup
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: targetGroupId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createNetworkSmTargetGroupCreatenetworksmtargetgroup"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    name: My target group
                    scope: none
                    tags: "[]"
                    type: devices
              schema:
                type: object
          description: Successful operation
      summary: Update a target group
      tags:
        - sm
        - configure
        - targetGroups
  "/networks/{networkId}/sm/trustedAccessConfigs":
    get:
      description: List Trusted Access Configs
      operationId: getNetworkSmTrustedAccessConfigs
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accessEndAt: 2018-05-12T00:00:00Z
                      accessStartAt: 2018-02-11T00:00:00Z
                      id: "1284392014819"
                      name: Cisco Meraki valued client
                      scope: withAny
                      ssidName: My SSID
                      tags:
                        - tag1
                        - tag2
                      timeboundType: static
              schema:
                items:
                  properties:
                    accessEndAt:
                      description: time that access ends
                      format: date-time
                      type: string
                    accessStartAt:
                      description: time that access starts
                      format: date-time
                      type: string
                    id:
                      description: device ID
                      type: string
                    name:
                      description: device name
                      type: string
                    scope:
                      description: scope
                      type: string
                    ssidName:
                      description: SSID name
                      type: string
                    tags:
                      description: device tags
                      items:
                        type: string
                      type: array
                    timeboundType:
                      description: type of access period, either a static range or a dynamic period
                      enum:
                        - dynamic
                        - static
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List Trusted Access Configs
      tags:
        - sm
        - configure
        - trustedAccessConfigs
  "/networks/{networkId}/sm/userAccessDevices":
    get:
      description: List User Access Devices and its Trusted Access Connections
      operationId: getNetworkSmUserAccessDevices
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - email: miles@meraki.com
                      id: "1284392014819"
                      mac: 00:11:22:33:44:55
                      name: Cisco Meraki valued client
                      systemType: ios
                      tags:
                        - tag1
                        - tag2
                      trustedAccessConnections:
                        - downloadedAt: 2018-02-11T00:00:00Z
                          lastConnectedAt: 2018-05-12T00:00:00Z
                          scepCompletedAt: 2018-05-12T00:00:00Z
                          trustedAccessConfigId: "1234"
                      username: milesmeraki
              schema:
                items:
                  properties:
                    email:
                      description: user email
                      type: string
                    id:
                      description: device ID
                      type: string
                    mac:
                      description: mac address
                      type: string
                    name:
                      description: device name
                      type: string
                    systemType:
                      description: system type
                      type: string
                    tags:
                      description: device tags
                      items:
                        type: string
                      type: array
                    trustedAccessConnections:
                      description: Array of trusted access configs
                      items:
                        properties:
                          downloadedAt:
                            description: time that config was downloaded
                            type: string
                          lastConnectedAt:
                            description: time of last connection
                            format: date-time
                            type: string
                          scepCompletedAt:
                            description: time that SCEP completed
                            format: date-time
                            type: string
                          trustedAccessConfigId:
                            description: config id
                            type: string
                        type: object
                      type: array
                    username:
                      description: username
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List User Access Devices and its Trusted Access Connections
      tags:
        - sm
        - configure
        - userAccessDevices
  "/networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}":
    delete:
      description: Delete a User Access Device
      operationId: deleteNetworkSmUserAccessDevice
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: userAccessDeviceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a User Access Device
      tags:
        - sm
        - configure
        - userAccessDevices
  "/networks/{networkId}/sm/users":
    get:
      description: List the owners in an SM network with various specified fields and filters
      operationId: getNetworkSmUsers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: Filter users by id(s).
          explode: false
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter users by username(s).
          explode: false
          in: query
          name: usernames
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter users by email(s).
          explode: false
          in: query
          name: emails
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags.
          explode: false
          in: query
          name: scope
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - adGroups: []
                      asmGroups: []
                      azureAdGroups: []
                      displayName: Miles Meraki <miles@meraki.com>
                      email: miles@meraki.com
                      fullName: Miles Meraki
                      hasIdentityCertificate: false
                      hasPassword: false
                      id: "1234"
                      isExternal: false
                      samlGroups: []
                      tags: " tag1 tag2 "
                      userThumbnail: https://s3.amazonaws.com/image.extension
                      username: ""
              schema:
                items:
                  properties:
                    adGroups:
                      description: Active Directory Groups the user belongs to.
                      items:
                        type: string
                      type: array
                    asmGroups:
                      description: Apple School Manager Groups the user belongs to.
                      items:
                        type: string
                      type: array
                    azureAdGroups:
                      description: Azure Active Directory Groups the user belongs to.
                      items:
                        type: string
                      type: array
                    displayName:
                      description: The user display name.
                      type: string
                    email:
                      description: User email.
                      type: string
                    fullName:
                      description: User full name.
                      type: string
                    hasIdentityCertificate:
                      description: A boolean indicating if the user has an associated identity certificate..
                      type: boolean
                    hasPassword:
                      description: A boolean denoting if the user has a password associated with the record.
                      type: boolean
                    id:
                      description: The Meraki managed Id of the user record.
                      type: string
                    isExternal:
                      description: Whether the user was created using an external integration, or via the Meraki Dashboard.
                      type: boolean
                    samlGroups:
                      description: SAML Groups the user belongs to.
                      items:
                        type: string
                      type: array
                    tags:
                      description: The set of tags the user is scoped to.
                      type: string
                    userThumbnail:
                      description: The url where the users thumbnail is hosted.
                      type: string
                    username:
                      description: The users username.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the owners in an SM network with various specified fields and filters
      tags:
        - sm
        - configure
        - users
  "/networks/{networkId}/sm/users/{userId}/deviceProfiles":
    get:
      description: Get the profiles associated with a user
      operationId: getNetworkSmUserDeviceProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - deviceId: "1234"
                      id: "1284392014819"
                      isEncrypted: true
                      isManaged: true
                      name: My profile
                      profileData: "{}"
                      profileIdentifier: com.test.app
                      version: 0.0.1
              schema:
                items:
                  properties:
                    deviceId:
                      description: The Meraki managed device Id.
                      type: string
                    id:
                      description: The numerical Meraki Id of the profile.
                      type: string
                    isEncrypted:
                      description: A boolean indicating if the profile is encrypted.
                      type: boolean
                    isManaged:
                      description: Whether or not the profile is managed by Meraki.
                      type: boolean
                    name:
                      description: The name of the profile.
                      type: string
                    profileData:
                      description: A string containing a JSON object with the profile data.
                      type: string
                    profileIdentifier:
                      description: The identifier of the profile.
                      type: string
                    version:
                      description: The verison of the profile.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Get the profiles associated with a user
      tags:
        - sm
        - configure
        - users
        - deviceProfiles
  "/networks/{networkId}/sm/users/{userId}/softwares":
    get:
      description: Get a list of softwares associated with a user
      operationId: getNetworkSmUserSoftwares
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - appId: "1234"
                      bundleSize: 1024
                      createdAt: 2018-02-11T00:00:00Z
                      deviceId: "1234"
                      dynamicSize: 2048
                      id: "1284392014819"
                      identifier: com.test.app
                      installedAt: 2018-05-12T00:00:00Z
                      iosRedemptionCode: false
                      isManaged: true
                      itunesId: "1234"
                      licenseKey: Z21234567890
                      name: My app
                      path: /Path/to/app.app
                      redemptionCode: 1234
                      shortVersion: "1.1"
                      status: Managed
                      toInstall: true
                      toUninstall: false
                      uninstalledAt: 2018-02-11T00:00:00Z
                      updatedAt: 2018-05-12T00:00:00Z
                      vendor: Apple
                      version: "0.1"
              schema:
                items:
                  properties:
                    appId:
                      description: The Meraki managed application Id for this record on a particular device.
                      type: string
                    bundleSize:
                      description: The size of the software bundle.
                      type: integer
                    createdAt:
                      description: When the Meraki record for the software was created.
                      type: string
                    deviceId:
                      description: The Meraki managed device Id.
                      type: string
                    dynamicSize:
                      description: The size of the data stored in the application.
                      type: integer
                    id:
                      description: The Meraki software Id.
                      type: string
                    identifier:
                      description: Software bundle identifier.
                      type: string
                    installedAt:
                      description: When the Software was installed on the device.
                      type: string
                    iosRedemptionCode:
                      description: A boolean indicating whether or not an iOS redemption code was used.
                      type: boolean
                    isManaged:
                      description: A boolean indicating whether or not the software is managed by Meraki.
                      type: boolean
                    itunesId:
                      description: The itunes numerical identifier.
                      type: string
                    licenseKey:
                      description: The license key associated with this software installation.
                      type: string
                    name:
                      description: The name of the software.
                      type: string
                    path:
                      description: The path on the device where the software record is located.
                      type: string
                    redemptionCode:
                      description: The redemption code used for this software.
                      type: integer
                    shortVersion:
                      description: Short version notation for the software.
                      type: string
                    status:
                      description: The management status of the software.
                      type: string
                    toInstall:
                      description: A boolean indicating this software record should be installed on the associated device.
                      type: boolean
                    toUninstall:
                      description: A boolean indicating this software record should be uninstalled on the associated device.
                      type: boolean
                    uninstalledAt:
                      description: When the record was uninstalled from the device.
                      type: string
                    updatedAt:
                      description: When the record was last updated by Meraki.
                      type: string
                    vendor:
                      description: The vendor of the software.
                      type: string
                    version:
                      description: Full version notation for the software.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Get a list of softwares associated with a user
      tags:
        - sm
        - configure
        - users
        - softwares
  "/networks/{networkId}/snmp":
    get:
      description: Return the SNMP settings for a network
      operationId: getNetworkSnmp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    access: users
                    users:
                      - passphrase: hunter2
                        username: AzureDiamond
              schema:
                type: object
          description: Successful operation
      summary: Return the SNMP settings for a network
      tags:
        - networks
        - configure
        - snmp
    put:
      description: Update the SNMP settings for a network
      operationId: updateNetworkSnmp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                access: users
                users:
                  - passphrase: hunter2
                    username: AzureDiamond
              properties:
                access:
                  description: The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).
                  enum:
                    - community
                    - none
                    - users
                  type: string
                communityString:
                  description: The SNMP community string. Only relevant if 'access' is set to 'community'.
                  type: string
                users:
                  description: The list of SNMP users. Only relevant if 'access' is set to 'users'.
                  items:
                    properties:
                      passphrase:
                        description: The passphrase for the SNMP user. Required.
                        type: string
                      username:
                        description: The username for the SNMP user. Required.
                        type: string
                    required:
                      - username
                      - passphrase
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    access: users
                    users:
                      - passphrase: hunter2
                        username: AzureDiamond
              schema:
                type: object
          description: Successful operation
      summary: Update the SNMP settings for a network
      tags:
        - networks
        - configure
        - snmp
  "/networks/{networkId}/splashLoginAttempts":
    get:
      description: List the splash login attempts for a network
      operationId: getNetworkSplashLoginAttempts
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: Only return the login attempts for the specified SSID
          in: query
          name: ssidNumber
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
            type: integer
        - description: The username, email, or phone number used during login
          in: query
          name: loginIdentifier
          schema:
            type: string
        - description: The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months
          in: query
          name: timespan
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - authorization: success
                      clientId: k74272e
                      clientMac: 22:33:44:55:66:77
                      gatewayDeviceMac: 00:11:22:33:44:55
                      login: miles@meraki.com
                      loginAt: 2018-02-11T00:00:00.090210Z
                      name: Miles Meraki
                      ssid: My SSID
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the splash login attempts for a network
      tags:
        - networks
        - monitor
        - splashLoginAttempts
  "/networks/{networkId}/split":
    post:
      description: Split a combined network into individual networks for each type of device
      operationId: splitNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    resultingNetworks:
                      - enrollmentString: my-enrollment-string
                        id: N_24329156
                        isBoundToConfigTemplate: false
                        name: Main Office - switch
                        notes: Additional description of the network
                        organizationId: "2930418"
                        productTypes:
                          - switch
                        tags:
                          - tag1
                          - tag2
                        timeZone: America/Los_Angeles
                        url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                properties:
                  resultingNetworks:
                    description: Networks after the split
                    items:
                      properties:
                        enrollmentString:
                          description: Enrollment string for the network
                          type: string
                        id:
                          description: Network ID
                          type: string
                        isBoundToConfigTemplate:
                          description: If the network is bound to a config template
                          type: boolean
                        name:
                          description: Network name
                          type: string
                        notes:
                          description: Notes for the network
                          type: string
                        organizationId:
                          description: Organization ID
                          type: string
                        productTypes:
                          description: List of the product types that the network supports
                          items:
                            type: string
                          type: array
                        tags:
                          description: Network tags
                          items:
                            type: string
                          type: array
                        timeZone:
                          description: Timezone of the network
                          type: string
                        url:
                          description: URL to the network Dashboard UI
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Split a combined network into individual networks for each type of device
      tags:
        - networks
        - configure
  "/networks/{networkId}/switch/accessControlLists":
    get:
      description: Return the access control lists for a MS network
      operationId: getNetworkSwitchAccessControlLists
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Deny SSH
                        dstCidr: 172.16.30/24
                        dstPort: "22"
                        ipVersion: ipv4
                        policy: deny
                        protocol: tcp
                        srcCidr: 10.1.10.0/24
                        srcPort: any
                        vlan: "10"
              schema:
                properties:
                  rules:
                    description: An ordered array of the access control list rules
                    items:
                      properties:
                        comment:
                          description: Description of the rule (optional)
                          type: string
                        dstCidr:
                          description: Destination IP address (in IP or CIDR notation)
                          type: string
                        dstPort:
                          description: Destination port
                          type: string
                        ipVersion:
                          description: IP address version
                          enum:
                            - any
                            - ipv4
                            - ipv6
                          type: string
                        policy:
                          description: "'allow' or 'deny' traffic specified by this rule"
                          enum:
                            - allow
                            - deny
                          type: string
                        protocol:
                          description: The type of protocol
                          enum:
                            - any
                            - tcp
                            - udp
                          type: string
                        srcCidr:
                          description: Source IP address (in IP or CIDR notation)
                          type: string
                        srcPort:
                          description: Source port
                          type: string
                        vlan:
                          description: ncoming traffic VLAN
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Return the access control lists for a MS network
      tags:
        - switch
        - configure
        - accessControlLists
    put:
      description: Update the access control lists for a MS network
      operationId: updateNetworkSwitchAccessControlLists
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - comment: Deny SSH
                    dstCidr: 172.16.30/24
                    dstPort: "22"
                    ipVersion: ipv4
                    policy: deny
                    protocol: tcp
                    srcCidr: 10.1.10.0/24
                    srcPort: any
                    vlan: "10"
              properties:
                rules:
                  description: An ordered array of the access control list rules (not including the default rule). An empty array will clear the rules.
                  items:
                    properties:
                      comment:
                        description: Description of the rule (optional).
                        type: string
                      dstCidr:
                        description: Destination IP address (in IP or CIDR notation) or 'any'.
                        type: string
                      dstPort:
                        description: Destination port. Must be in the range of 1-65535 or 'any'. Default is 'any'.
                        type: string
                      ipVersion:
                        description: IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable only if network supports IPv6. Default value is 'ipv4'.
                        enum:
                          - any
                          - ipv4
                          - ipv6
                        type: string
                      policy:
                        description: "'allow' or 'deny' traffic specified by this rule."
                        enum:
                          - allow
                          - deny
                        type: string
                      protocol:
                        description: The type of protocol (must be 'tcp', 'udp', or 'any').
                        enum:
                          - any
                          - tcp
                          - udp
                        type: string
                      srcCidr:
                        description: Source IP address (in IP or CIDR notation) or 'any'.
                        type: string
                      srcPort:
                        description: Source port. Must be in the range  of 1-65535 or 'any'. Default is 'any'.
                        type: string
                      vlan:
                        description: Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'. Default is 'any'.
                        type: string
                    required:
                      - policy
                      - protocol
                      - srcCidr
                      - dstCidr
                    type: object
                  type: array
              required:
                - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Deny SSH
                        dstCidr: 172.16.30/24
                        dstPort: "22"
                        ipVersion: ipv4
                        policy: deny
                        protocol: tcp
                        srcCidr: 10.1.10.0/24
                        srcPort: any
                        vlan: "10"
              schema:
                properties:
                  rules:
                    description: An ordered array of the access control list rules
                    items:
                      properties:
                        comment:
                          description: Description of the rule (optional)
                          type: string
                        dstCidr:
                          description: Destination IP address (in IP or CIDR notation)
                          type: string
                        dstPort:
                          description: Destination port
                          type: string
                        ipVersion:
                          description: IP address version
                          enum:
                            - any
                            - ipv4
                            - ipv6
                          type: string
                        policy:
                          description: "'allow' or 'deny' traffic specified by this rule"
                          enum:
                            - allow
                            - deny
                          type: string
                        protocol:
                          description: The type of protocol
                          enum:
                            - any
                            - tcp
                            - udp
                          type: string
                        srcCidr:
                          description: Source IP address (in IP or CIDR notation)
                          type: string
                        srcPort:
                          description: Source port
                          type: string
                        vlan:
                          description: ncoming traffic VLAN
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update the access control lists for a MS network
      tags:
        - switch
        - configure
        - accessControlLists
  "/networks/{networkId}/switch/accessPolicies":
    get:
      description: List the access policies for a switch network. Only returns access policies with 'my RADIUS server' as authentication method
      operationId: getNetworkSwitchAccessPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accessPolicyType: Hybrid authentication
                      dot1x:
                        controlDirection: inbound
                      guestPortBouncing: false
                      guestVlanId: 100
                      hostMode: Single-Host
                      increaseAccessSpeed: false
                      name: "Access policy #1"
                      radius:
                        criticalAuth:
                          dataVlanId: 100
                          suspendPortBounce: true
                          voiceVlanId: 100
                        failedAuthVlanId: 100
                        reAuthenticationInterval: 120
                      radiusAccountingEnabled: true
                      radiusAccountingServers:
                        - host: 1.2.3.4
                          port: 22
                      radiusCoaSupportEnabled: false
                      radiusGroupAttribute: "11"
                      radiusServers:
                        - host: 1.2.3.4
                          port: 22
                      radiusTestingEnabled: false
                      urlRedirectWalledGardenEnabled: true
                      urlRedirectWalledGardenRanges:
                        - 192.168.1.0/24
                      voiceVlanClients: true
              schema:
                items:
                  properties:
                    accessPolicyType:
                      description: Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
                      enum:
                        - 802.1x
                        - Hybrid authentication
                        - MAC authentication bypass
                      type: string
                    dot1x:
                      description: 802.1x Settings
                      properties:
                        controlDirection:
                          description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
                          enum:
                            - both
                            - inbound
                          type: string
                      type: object
                    guestPortBouncing:
                      description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                      type: boolean
                    guestVlanId:
                      description: ID for the guest VLAN allow unauthorized devices access to limited network resources
                      type: integer
                    hostMode:
                      description: Choose the Host Mode for the access policy.
                      enum:
                        - Multi-Auth
                        - Multi-Domain
                        - Multi-Host
                        - Single-Host
                      type: string
                    increaseAccessSpeed:
                      description: Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
                      type: boolean
                    name:
                      description: Name of the access policy
                      type: string
                    radius:
                      description: Object for RADIUS Settings
                      properties:
                        criticalAuth:
                          description: Critical auth settings for when authentication is rejected by the RADIUS server
                          properties:
                            dataVlanId:
                              description: VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                              type: integer
                            suspendPortBounce:
                              description: Enable to suspend port bounce when RADIUS servers are unreachable
                              type: boolean
                            voiceVlanId:
                              description: VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                              type: integer
                          type: object
                        failedAuthVlanId:
                          description: VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                          type: integer
                        reAuthenticationInterval:
                          description: Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
                          type: integer
                      type: object
                    radiusAccountingEnabled:
                      description: Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
                      type: boolean
                    radiusAccountingServers:
                      description: List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
                      items:
                        properties:
                          host:
                            description: Public IP address of the RADIUS accounting server
                            type: string
                          port:
                            description: UDP port that the RADIUS Accounting server listens on for access requests
                            type: integer
                        type: object
                      type: array
                    radiusCoaSupportEnabled:
                      description: Change of authentication for RADIUS re-authentication and disconnection
                      type: boolean
                    radiusGroupAttribute:
                      description: Acceptable values are `""` for None, or `"11"` for Group Policies ACL
                      type: string
                    radiusServers:
                      description: List of RADIUS servers to require connecting devices to authenticate against before granting network access
                      items:
                        properties:
                          host:
                            description: Public IP address of the RADIUS server
                            type: string
                          port:
                            description: UDP port that the RADIUS server listens on for access requests
                            type: integer
                        type: object
                      type: array
                    radiusTestingEnabled:
                      description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                      type: boolean
                    urlRedirectWalledGardenEnabled:
                      description: Enable to restrict access for clients to a response_objectific set of IP addresses or hostnames prior to authentication
                      type: boolean
                    urlRedirectWalledGardenRanges:
                      description: IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                      items:
                        type: string
                      type: array
                    voiceVlanClients:
                      description: CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                      type: boolean
                  type: object
                type: array
          description: Successful operation
      summary: List the access policies for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
    post:
      description: Create an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array.
      operationId: createNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accessPolicyType: Hybrid authentication
                dot1x:
                  controlDirection: inbound
                guestPortBouncing: false
                guestVlanId: 100
                hostMode: Single-Host
                increaseAccessSpeed: false
                name: "Access policy #1"
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    suspendPortBounce: true
                    voiceVlanId: 100
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                radiusAccountingEnabled: true
                radiusAccountingServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: secret
                radiusCoaSupportEnabled: false
                radiusGroupAttribute: "11"
                radiusServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: secret
                radiusTestingEnabled: false
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                  - 192.168.1.0/24
                voiceVlanClients: true
              properties:
                accessPolicyType:
                  description: Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
                  enum:
                    - 802.1x
                    - Hybrid authentication
                    - MAC authentication bypass
                  type: string
                dot1x:
                  description: 802.1x Settings
                  properties:
                    controlDirection:
                      description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
                      enum:
                        - both
                        - inbound
                      type: string
                  type: object
                guestPortBouncing:
                  description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                  type: boolean
                guestVlanId:
                  description: ID for the guest VLAN allow unauthorized devices access to limited network resources
                  type: integer
                hostMode:
                  description: Choose the Host Mode for the access policy.
                  enum:
                    - Multi-Auth
                    - Multi-Domain
                    - Multi-Host
                    - Single-Host
                  type: string
                increaseAccessSpeed:
                  description: Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
                  type: boolean
                name:
                  description: Name of the access policy
                  type: string
                radius:
                  description: Object for RADIUS Settings
                  properties:
                    criticalAuth:
                      description: Critical auth settings for when authentication is rejected by the RADIUS server
                      properties:
                        dataVlanId:
                          description: VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                          type: integer
                        suspendPortBounce:
                          description: Enable to suspend port bounce when RADIUS servers are unreachable
                          type: boolean
                        voiceVlanId:
                          description: VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                          type: integer
                      type: object
                    failedAuthVlanId:
                      description: VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                      type: integer
                    reAuthenticationInterval:
                      description: Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
                      type: integer
                  type: object
                radiusAccountingEnabled:
                  description: Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
                  type: boolean
                radiusAccountingServers:
                  description: List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
                  items:
                    properties:
                      host:
                        description: Public IP address of the RADIUS accounting server
                        type: string
                      port:
                        description: UDP port that the RADIUS Accounting server listens on for access requests
                        type: integer
                      secret:
                        description: RADIUS client shared secret
                        type: string
                    required:
                      - host
                      - port
                      - secret
                    type: object
                  type: array
                radiusCoaSupportEnabled:
                  description: Change of authentication for RADIUS re-authentication and disconnection
                  type: boolean
                radiusGroupAttribute:
                  description: Acceptable values are `""` for None, or `"11"` for Group Policies ACL
                  type: string
                radiusServers:
                  description: List of RADIUS servers to require connecting devices to authenticate against before granting network access
                  items:
                    properties:
                      host:
                        description: Public IP address of the RADIUS server
                        type: string
                      port:
                        description: UDP port that the RADIUS server listens on for access requests
                        type: integer
                      secret:
                        description: RADIUS client shared secret
                        type: string
                    required:
                      - host
                      - port
                      - secret
                    type: object
                  type: array
                radiusTestingEnabled:
                  description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                  type: boolean
                urlRedirectWalledGardenEnabled:
                  description: Enable to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                  type: boolean
                urlRedirectWalledGardenRanges:
                  description: IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                  items:
                    type: string
                  type: array
                voiceVlanClients:
                  description: CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                  type: boolean
              required:
                - name
                - radiusServers
                - radiusTestingEnabled
                - radiusCoaSupportEnabled
                - radiusAccountingEnabled
                - hostMode
                - urlRedirectWalledGardenEnabled
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyType: Hybrid authentication
                    dot1x:
                      controlDirection: inbound
                    guestPortBouncing: false
                    guestVlanId: 100
                    hostMode: Single-Host
                    increaseAccessSpeed: false
                    name: "Access policy #1"
                    radius:
                      criticalAuth:
                        dataVlanId: 100
                        suspendPortBounce: true
                        voiceVlanId: 100
                      failedAuthVlanId: 100
                      reAuthenticationInterval: 120
                    radiusAccountingEnabled: true
                    radiusAccountingServers:
                      - host: 1.2.3.4
                        port: 22
                    radiusCoaSupportEnabled: false
                    radiusGroupAttribute: "11"
                    radiusServers:
                      - host: 1.2.3.4
                        port: 22
                    radiusTestingEnabled: false
                    urlRedirectWalledGardenEnabled: true
                    urlRedirectWalledGardenRanges:
                      - 192.168.1.0/24
                    voiceVlanClients: true
              schema:
                properties:
                  accessPolicyType:
                    description: Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
                    enum:
                      - 802.1x
                      - Hybrid authentication
                      - MAC authentication bypass
                    type: string
                  dot1x:
                    description: 802.1x Settings
                    properties:
                      controlDirection:
                        description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
                        enum:
                          - both
                          - inbound
                        type: string
                    type: object
                  guestPortBouncing:
                    description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                    type: boolean
                  guestVlanId:
                    description: ID for the guest VLAN allow unauthorized devices access to limited network resources
                    type: integer
                  hostMode:
                    description: Choose the Host Mode for the access policy.
                    enum:
                      - Multi-Auth
                      - Multi-Domain
                      - Multi-Host
                      - Single-Host
                    type: string
                  increaseAccessSpeed:
                    description: Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
                    type: boolean
                  name:
                    description: Name of the access policy
                    type: string
                  radius:
                    description: Object for RADIUS Settings
                    properties:
                      criticalAuth:
                        description: Critical auth settings for when authentication is rejected by the RADIUS server
                        properties:
                          dataVlanId:
                            description: VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                            type: integer
                          suspendPortBounce:
                            description: Enable to suspend port bounce when RADIUS servers are unreachable
                            type: boolean
                          voiceVlanId:
                            description: VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                            type: integer
                        type: object
                      failedAuthVlanId:
                        description: VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                        type: integer
                      reAuthenticationInterval:
                        description: Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
                        type: integer
                    type: object
                  radiusAccountingEnabled:
                    description: Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
                    type: boolean
                  radiusAccountingServers:
                    description: List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
                    items:
                      properties:
                        host:
                          description: Public IP address of the RADIUS accounting server
                          type: string
                        port:
                          description: UDP port that the RADIUS Accounting server listens on for access requests
                          type: integer
                      type: object
                    type: array
                  radiusCoaSupportEnabled:
                    description: Change of authentication for RADIUS re-authentication and disconnection
                    type: boolean
                  radiusGroupAttribute:
                    description: Acceptable values are `""` for None, or `"11"` for Group Policies ACL
                    type: string
                  radiusServers:
                    description: List of RADIUS servers to require connecting devices to authenticate against before granting network access
                    items:
                      properties:
                        host:
                          description: Public IP address of the RADIUS server
                          type: string
                        port:
                          description: UDP port that the RADIUS server listens on for access requests
                          type: integer
                      type: object
                    type: array
                  radiusTestingEnabled:
                    description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                    type: boolean
                  urlRedirectWalledGardenEnabled:
                    description: Enable to restrict access for clients to a response_objectific set of IP addresses or hostnames prior to authentication
                    type: boolean
                  urlRedirectWalledGardenRanges:
                    description: IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                    items:
                      type: string
                    type: array
                  voiceVlanClients:
                    description: CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                    type: boolean
                type: object
          description: Successful operation
      summary: Create an access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
  "/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}":
    delete:
      description: Delete an access policy for a switch network
      operationId: deleteNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: accessPolicyNumber
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
    get:
      description: Return a specific access policy for a switch network
      operationId: getNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: accessPolicyNumber
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyType: Hybrid authentication
                    dot1x:
                      controlDirection: inbound
                    guestPortBouncing: false
                    guestVlanId: 100
                    hostMode: Single-Host
                    increaseAccessSpeed: false
                    name: "Access policy #1"
                    radius:
                      criticalAuth:
                        dataVlanId: 100
                        suspendPortBounce: true
                        voiceVlanId: 100
                      failedAuthVlanId: 100
                      reAuthenticationInterval: 120
                    radiusAccountingEnabled: true
                    radiusAccountingServers:
                      - host: 1.2.3.4
                        port: 22
                    radiusCoaSupportEnabled: false
                    radiusGroupAttribute: "11"
                    radiusServers:
                      - host: 1.2.3.4
                        port: 22
                    radiusTestingEnabled: false
                    urlRedirectWalledGardenEnabled: true
                    urlRedirectWalledGardenRanges:
                      - 192.168.1.0/24
                    voiceVlanClients: true
              schema:
                properties:
                  accessPolicyType:
                    description: Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
                    enum:
                      - 802.1x
                      - Hybrid authentication
                      - MAC authentication bypass
                    type: string
                  dot1x:
                    description: 802.1x Settings
                    properties:
                      controlDirection:
                        description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
                        enum:
                          - both
                          - inbound
                        type: string
                    type: object
                  guestPortBouncing:
                    description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                    type: boolean
                  guestVlanId:
                    description: ID for the guest VLAN allow unauthorized devices access to limited network resources
                    type: integer
                  hostMode:
                    description: Choose the Host Mode for the access policy.
                    enum:
                      - Multi-Auth
                      - Multi-Domain
                      - Multi-Host
                      - Single-Host
                    type: string
                  increaseAccessSpeed:
                    description: Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
                    type: boolean
                  name:
                    description: Name of the access policy
                    type: string
                  radius:
                    description: Object for RADIUS Settings
                    properties:
                      criticalAuth:
                        description: Critical auth settings for when authentication is rejected by the RADIUS server
                        properties:
                          dataVlanId:
                            description: VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                            type: integer
                          suspendPortBounce:
                            description: Enable to suspend port bounce when RADIUS servers are unreachable
                            type: boolean
                          voiceVlanId:
                            description: VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                            type: integer
                        type: object
                      failedAuthVlanId:
                        description: VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                        type: integer
                      reAuthenticationInterval:
                        description: Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
                        type: integer
                    type: object
                  radiusAccountingEnabled:
                    description: Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
                    type: boolean
                  radiusAccountingServers:
                    description: List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
                    items:
                      properties:
                        host:
                          description: Public IP address of the RADIUS accounting server
                          type: string
                        port:
                          description: UDP port that the RADIUS Accounting server listens on for access requests
                          type: integer
                      type: object
                    type: array
                  radiusCoaSupportEnabled:
                    description: Change of authentication for RADIUS re-authentication and disconnection
                    type: boolean
                  radiusGroupAttribute:
                    description: Acceptable values are `""` for None, or `"11"` for Group Policies ACL
                    type: string
                  radiusServers:
                    description: List of RADIUS servers to require connecting devices to authenticate against before granting network access
                    items:
                      properties:
                        host:
                          description: Public IP address of the RADIUS server
                          type: string
                        port:
                          description: UDP port that the RADIUS server listens on for access requests
                          type: integer
                      type: object
                    type: array
                  radiusTestingEnabled:
                    description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                    type: boolean
                  urlRedirectWalledGardenEnabled:
                    description: Enable to restrict access for clients to a response_objectific set of IP addresses or hostnames prior to authentication
                    type: boolean
                  urlRedirectWalledGardenRanges:
                    description: IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                    items:
                      type: string
                    type: array
                  voiceVlanClients:
                    description: CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                    type: boolean
                type: object
          description: Successful operation
      summary: Return a specific access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
    put:
      description: Update an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array.
      operationId: updateNetworkSwitchAccessPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: accessPolicyNumber
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accessPolicyType: Hybrid authentication
                dot1x:
                  controlDirection: inbound
                guestPortBouncing: false
                guestVlanId: 100
                hostMode: Single-Host
                increaseAccessSpeed: false
                name: "Access policy #1"
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    suspendPortBounce: true
                    voiceVlanId: 100
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                radiusAccountingEnabled: true
                radiusAccountingServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: secret
                radiusCoaSupportEnabled: false
                radiusGroupAttribute: "11"
                radiusServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: secret
                radiusTestingEnabled: false
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                  - 192.168.1.0/24
                voiceVlanClients: true
              properties:
                accessPolicyType:
                  description: Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
                  enum:
                    - 802.1x
                    - Hybrid authentication
                    - MAC authentication bypass
                  type: string
                dot1x:
                  description: 802.1x Settings
                  properties:
                    controlDirection:
                      description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
                      enum:
                        - both
                        - inbound
                      type: string
                  type: object
                guestPortBouncing:
                  description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                  type: boolean
                guestVlanId:
                  description: ID for the guest VLAN allow unauthorized devices access to limited network resources
                  type: integer
                hostMode:
                  description: Choose the Host Mode for the access policy.
                  enum:
                    - Multi-Auth
                    - Multi-Domain
                    - Multi-Host
                    - Single-Host
                  type: string
                increaseAccessSpeed:
                  description: Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
                  type: boolean
                name:
                  description: Name of the access policy
                  type: string
                radius:
                  description: Object for RADIUS Settings
                  properties:
                    criticalAuth:
                      description: Critical auth settings for when authentication is rejected by the RADIUS server
                      properties:
                        dataVlanId:
                          description: VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                          type: integer
                        suspendPortBounce:
                          description: Enable to suspend port bounce when RADIUS servers are unreachable
                          type: boolean
                        voiceVlanId:
                          description: VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                          type: integer
                      type: object
                    failedAuthVlanId:
                      description: VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                      type: integer
                    reAuthenticationInterval:
                      description: Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
                      type: integer
                  type: object
                radiusAccountingEnabled:
                  description: Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
                  type: boolean
                radiusAccountingServers:
                  description: List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
                  items:
                    properties:
                      host:
                        description: Public IP address of the RADIUS accounting server
                        type: string
                      port:
                        description: UDP port that the RADIUS Accounting server listens on for access requests
                        type: integer
                      secret:
                        description: RADIUS client shared secret
                        type: string
                    required:
                      - host
                      - port
                      - secret
                    type: object
                  type: array
                radiusCoaSupportEnabled:
                  description: Change of authentication for RADIUS re-authentication and disconnection
                  type: boolean
                radiusGroupAttribute:
                  description: Acceptable values are `""` for None, or `"11"` for Group Policies ACL
                  type: string
                radiusServers:
                  description: List of RADIUS servers to require connecting devices to authenticate against before granting network access
                  items:
                    properties:
                      host:
                        description: Public IP address of the RADIUS server
                        type: string
                      port:
                        description: UDP port that the RADIUS server listens on for access requests
                        type: integer
                      secret:
                        description: RADIUS client shared secret
                        type: string
                    required:
                      - host
                      - port
                      - secret
                    type: object
                  type: array
                radiusTestingEnabled:
                  description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                  type: boolean
                urlRedirectWalledGardenEnabled:
                  description: Enable to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                  type: boolean
                urlRedirectWalledGardenRanges:
                  description: IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                  items:
                    type: string
                  type: array
                voiceVlanClients:
                  description: CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyType: Hybrid authentication
                    dot1x:
                      controlDirection: inbound
                    guestPortBouncing: false
                    guestVlanId: 100
                    hostMode: Single-Host
                    increaseAccessSpeed: false
                    name: "Access policy #1"
                    radius:
                      criticalAuth:
                        dataVlanId: 100
                        suspendPortBounce: true
                        voiceVlanId: 100
                      failedAuthVlanId: 100
                      reAuthenticationInterval: 120
                    radiusAccountingEnabled: true
                    radiusAccountingServers:
                      - host: 1.2.3.4
                        port: 22
                    radiusCoaSupportEnabled: false
                    radiusGroupAttribute: "11"
                    radiusServers:
                      - host: 1.2.3.4
                        port: 22
                    radiusTestingEnabled: false
                    urlRedirectWalledGardenEnabled: true
                    urlRedirectWalledGardenRanges:
                      - 192.168.1.0/24
                    voiceVlanClients: true
              schema:
                properties:
                  accessPolicyType:
                    description: Access Type of the policy. Automatically 'Hybrid authentication' when hostMode is 'Multi-Domain'.
                    enum:
                      - 802.1x
                      - Hybrid authentication
                      - MAC authentication bypass
                    type: string
                  dot1x:
                    description: 802.1x Settings
                    properties:
                      controlDirection:
                        description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow unauthorized egress on the switchport. Set to 'both' to control both traffic directions with authorization. Defaults to 'both'
                        enum:
                          - both
                          - inbound
                        type: string
                    type: object
                  guestPortBouncing:
                    description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                    type: boolean
                  guestVlanId:
                    description: ID for the guest VLAN allow unauthorized devices access to limited network resources
                    type: integer
                  hostMode:
                    description: Choose the Host Mode for the access policy.
                    enum:
                      - Multi-Auth
                      - Multi-Domain
                      - Multi-Host
                      - Single-Host
                    type: string
                  increaseAccessSpeed:
                    description: Enabling this option will make switches execute 802.1X and MAC-bypass authentication simultaneously so that clients authenticate faster. Only required when accessPolicyType is 'Hybrid Authentication.
                    type: boolean
                  name:
                    description: Name of the access policy
                    type: string
                  radius:
                    description: Object for RADIUS Settings
                    properties:
                      criticalAuth:
                        description: Critical auth settings for when authentication is rejected by the RADIUS server
                        properties:
                          dataVlanId:
                            description: VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                            type: integer
                          suspendPortBounce:
                            description: Enable to suspend port bounce when RADIUS servers are unreachable
                            type: boolean
                          voiceVlanId:
                            description: VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                            type: integer
                        type: object
                      failedAuthVlanId:
                        description: VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
                        type: integer
                      reAuthenticationInterval:
                        description: Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
                        type: integer
                    type: object
                  radiusAccountingEnabled:
                    description: Enable to send start, interim-update and stop messages to a configured RADIUS accounting server for tracking connected clients
                    type: boolean
                  radiusAccountingServers:
                    description: List of RADIUS accounting servers to require connecting devices to authenticate against before granting network access
                    items:
                      properties:
                        host:
                          description: Public IP address of the RADIUS accounting server
                          type: string
                        port:
                          description: UDP port that the RADIUS Accounting server listens on for access requests
                          type: integer
                      type: object
                    type: array
                  radiusCoaSupportEnabled:
                    description: Change of authentication for RADIUS re-authentication and disconnection
                    type: boolean
                  radiusGroupAttribute:
                    description: Acceptable values are `""` for None, or `"11"` for Group Policies ACL
                    type: string
                  radiusServers:
                    description: List of RADIUS servers to require connecting devices to authenticate against before granting network access
                    items:
                      properties:
                        host:
                          description: Public IP address of the RADIUS server
                          type: string
                        port:
                          description: UDP port that the RADIUS server listens on for access requests
                          type: integer
                      type: object
                    type: array
                  radiusTestingEnabled:
                    description: If enabled, Meraki devices will periodically send access-request messages to these RADIUS servers
                    type: boolean
                  urlRedirectWalledGardenEnabled:
                    description: Enable to restrict access for clients to a response_objectific set of IP addresses or hostnames prior to authentication
                    type: boolean
                  urlRedirectWalledGardenRanges:
                    description: IP address ranges, in CIDR notation, to restrict access for clients to a specific set of IP addresses or hostnames prior to authentication
                    items:
                      type: string
                    type: array
                  voiceVlanClients:
                    description: CDP/LLDP capable voice clients will be able to use this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                    type: boolean
                type: object
          description: Successful operation
      summary: Update an access policy for a switch network
      tags:
        - switch
        - configure
        - accessPolicies
  "/networks/{networkId}/switch/alternateManagementInterface":
    get:
      description: Return the switch alternate management interface for the network
      operationId: getNetworkSwitchAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    protocols:
                      - radius
                      - snmp
                      - syslog
                    switches:
                      - alternateManagementIp: 1.2.3.4
                        gateway: 1.2.3.5
                        serial: Q234-ABCD-5678
                        subnetMask: 255.255.255.0
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Return the switch alternate management interface for the network
      tags:
        - switch
        - configure
        - alternateManagementInterface
    put:
      description: Update the switch alternate management interface for the network
      operationId: updateNetworkSwitchAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                protocols:
                  - radius
                  - snmp
                  - syslog
                switches:
                  - alternateManagementIp: 1.2.3.4
                    gateway: 1.2.3.5
                    serial: Q234-ABCD-5678
                    subnetMask: 255.255.255.0
                vlanId: 100
              properties:
                enabled:
                  description: Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
                  type: boolean
                protocols:
                  description: "Can be one or more of the following values: 'radius', 'snmp' or 'syslog'"
                  items:
                    enum:
                      - radius
                      - snmp
                      - syslog
                    type: string
                  type: array
                switches:
                  description: "Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments"
                  items:
                    properties:
                      alternateManagementIp:
                        description: Switch alternative management IP. To remove a prior IP setting, provide an empty string
                        type: string
                      gateway:
                        description: Switch gateway must be in IP format. Only and must be specified for Polaris switches
                        type: string
                      serial:
                        description: Switch serial number
                        type: string
                      subnetMask:
                        description: Switch subnet mask must be in IP format. Only and must be specified for Polaris switches
                        type: string
                    required:
                      - serial
                      - alternateManagementIp
                    type: object
                  type: array
                vlanId:
                  description: Alternate management VLAN, must be between 1 and 4094
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    protocols:
                      - radius
                      - snmp
                      - syslog
                    switches:
                      - alternateManagementIp: 1.2.3.4
                        gateway: 1.2.3.5
                        serial: Q234-ABCD-5678
                        subnetMask: 255.255.255.0
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Update the switch alternate management interface for the network
      tags:
        - switch
        - configure
        - alternateManagementInterface
  "/networks/{networkId}/switch/dhcp/v4/servers/seen":
    get:
      description: Return the network's DHCPv4 servers seen within the selected timeframe (default 1 day)
      operationId: getNetworkSwitchDhcpV4ServersSeen
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clientId: k74272e
                      device:
                        interface:
                          name: My L3 Interface
                          url: https://n1.meraki.com//n//manage/configure/switch_l3/l3_interface/00000
                        name: My AP
                        serial: Q234-ABCD-0002
                        url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                      ipv4:
                        address: 10.0.0.0/24
                        gateway: 1.2.3.5
                        subnet: 192.168.1.0/24
                      isAllowed: true
                      isConfigured: true
                      lastAck:
                        ipv4:
                          address: 123.123.123.1
                        ts: 2018-02-11T00:00:00.090210Z
                      lastPacket:
                        destination:
                          ipv4:
                            address: 123.123.123.1
                          mac: 22:33:44:55:66:77
                          port: 444
                        ethernet:
                          type: "0x1212"
                        fields:
                          chaddr: abcdefghijkl
                          ciaddr: 1.2.3.4
                          flags: "0x0000"
                          giaddr: 1.2.3.5
                          hlen: 6
                          hops: 0
                          htype: 1
                          magicCookie: "0x22222222"
                          op: 1
                          options:
                            - name: Lease time
                              value: 86400 seconds
                          secs: 1526087474
                          siaddr: 1.2.3.4
                          sname: 1.2.3.4
                          xid: "0x11111111"
                          yiaddr: 123.123.123.1
                        ip:
                          dscp:
                            ecn: 1
                            tag: 24
                          headerLength: 1
                          id: "0x1313"
                          length: 24929
                          protocol: 1
                          ttl: 50
                          version: 4
                        source:
                          ipv4:
                            address: 1.2.3.4
                          mac: 00:11:22:33:44:55
                          port: 443
                        type: ACK
                        udp:
                          checksum: "0x1414"
                          length: 24929
                      lastSeenAt: 2018-02-11T00:00:00.090210Z
                      mac: 00:11:22:33:44:55
                      seenBy:
                        - name: My switch2
                          serial: Q234-ABCD-0001
                          url: https://n1.meraki.com//n//manage/nodes/new_list/0000000000001
                      type: device
                      vlan: 100
              schema:
                items:
                  properties:
                    clientId:
                      description: Client id of the server if available.
                      type: string
                    device:
                      description: Attributes of the server when it's a device.
                      properties:
                        interface:
                          description: Interface attributes of the server. Only for configured servers.
                          properties:
                            name:
                              description: Interface name.
                              type: string
                            url:
                              description: Url link to interface.
                              type: string
                          type: object
                        name:
                          description: Device name.
                          type: string
                        serial:
                          description: Device serial.
                          type: string
                        url:
                          description: Url link to device.
                          type: string
                      type: object
                    ipv4:
                      description: IPv4 attributes of the server.
                      properties:
                        address:
                          description: IPv4 address of the server.
                          type: string
                        gateway:
                          description: IPv4 gateway address of the server.
                          type: string
                        subnet:
                          description: Subnet of the server.
                          type: string
                      type: object
                    isAllowed:
                      description: Whether the server is allowed or blocked. Always true for configured servers.
                      type: boolean
                    isConfigured:
                      description: Whether the server is configured.
                      type: boolean
                    lastAck:
                      description: Attributes of the server's last ack.
                      properties:
                        ipv4:
                          description: IPv4 attributes of the last ack.
                          properties:
                            address:
                              description: IPv4 address of the last ack.
                              type: string
                          type: object
                        ts:
                          description: Last time the server was acked.
                          format: date-time
                          type: string
                      type: object
                    lastPacket:
                      description: Last packet the server received.
                      properties:
                        destination:
                          description: Destination of the packet.
                          properties:
                            ipv4:
                              description: Destination ipv4 attributes of the packet.
                              properties:
                                address:
                                  description: Destination ipv4 address of the packet.
                                  type: string
                              type: object
                            mac:
                              description: Destination mac address of the packet.
                              type: string
                            port:
                              description: Destination port of the packet.
                              type: integer
                          type: object
                        ethernet:
                          description: Additional ethernet attributes of the packet.
                          properties:
                            type:
                              description: Ethernet type of the packet.
                              type: string
                          type: object
                        fields:
                          description: DHCP-specific fields of the packet.
                          properties:
                            chaddr:
                              description: Client hardware address of the packet.
                              type: string
                            ciaddr:
                              description: Client IP address of the packet.
                              type: string
                            flags:
                              description: Packet flags.
                              type: string
                            giaddr:
                              description: Gateway IP address of the packet.
                              type: string
                            hlen:
                              description: Hardware length of the packet.
                              type: integer
                            hops:
                              description: Number of hops the packet took.
                              type: integer
                            htype:
                              description: Hardware type code of the packet.
                              type: integer
                            magicCookie:
                              description: Magic cookie of the packet.
                              type: string
                            op:
                              description: Operation code of the packet.
                              type: integer
                            options:
                              description: Additional DHCP options of the packet.
                              items:
                                properties:
                                  name:
                                    description: Option name.
                                    type: string
                                  value:
                                    description: Option value.
                                    type: string
                                type: object
                              type: array
                            secs:
                              description: Number of seconds since receiving the packet.
                              type: integer
                            siaddr:
                              description: Server IP address of the packet.
                              type: string
                            sname:
                              description: Server identifier address of the packet.
                              type: string
                            xid:
                              description: Transaction id of the packet.
                              type: string
                            yiaddr:
                              description: Assigned IP address of the packet.
                              type: string
                          type: object
                        ip:
                          description: Additional IP attributes of the packet.
                          properties:
                            dscp:
                              description: DSCP attributes of the packet.
                              properties:
                                ecn:
                                  description: ECN number of the packet.
                                  type: integer
                                tag:
                                  description: DSCP tag number of the packet.
                                  type: integer
                              type: object
                            headerLength:
                              description: IP header length of the packet.
                              type: integer
                            id:
                              description: IP ID of the packet.
                              type: string
                            length:
                              description: IP length of the packet.
                              type: integer
                            protocol:
                              description: IP protocol number of the packet.
                              type: integer
                            ttl:
                              description: Time to live of the packet.
                              type: integer
                            version:
                              description: IP version of the packet.
                              enum:
                                - 4
                                - 6
                              type: integer
                          type: object
                        source:
                          description: Source of the packet.
                          properties:
                            ipv4:
                              description: Source ipv4 attributes of the packet.
                              properties:
                                address:
                                  description: Source ipv4 address of the packet.
                                  type: string
                              type: object
                            mac:
                              description: Source mac address of the packet.
                              type: string
                            port:
                              description: Source port of the packet.
                              type: integer
                          type: object
                        type:
                          description: Packet type.
                          type: string
                        udp:
                          description: UDP attributes of the packet.
                          properties:
                            checksum:
                              description: UDP checksum of the packet.
                              type: string
                            length:
                              description: UDP length of the packet.
                              type: integer
                          type: object
                      type: object
                    lastSeenAt:
                      description: Last time the server was seen.
                      format: date-time
                      type: string
                    mac:
                      description: Mac address of the server.
                      type: string
                    seenBy:
                      description: Devices that saw the server.
                      items:
                        properties:
                          name:
                            description: Device name.
                            type: string
                          serial:
                            description: Device serial.
                            type: string
                          url:
                            description: Url link to device.
                            type: string
                        type: object
                      type: array
                    type:
                      description: server type. Can be a 'device', 'stack', or 'discovered' (i.e client).
                      enum:
                        - device
                        - discovered
                        - stack
                      type: string
                    vlan:
                      description: Vlan id of the server.
                      type: integer
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the network's DHCPv4 servers seen within the selected timeframe (default 1 day)
      tags:
        - switch
        - configure
        - dhcp
        - v4
        - servers
        - seen
  "/networks/{networkId}/switch/dhcpServerPolicy":
    get:
      description: Return the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively
      operationId: getNetworkSwitchDhcpServerPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    alerts:
                      email:
                        enabled: false
                    allowedServers:
                      - 00:50:56:00:00:01
                      - 00:50:56:00:00:02
                    arpInspection:
                      enabled: false
                      unsupportedModels:
                        - MS120-8
                        - MS125-24
                    blockedServers:
                      - 00:50:56:00:00:03
                      - 00:50:56:00:00:04
                    defaultPolicy: block
              schema:
                type: object
          description: Successful operation
      summary: Return the DHCP server settings
      tags:
        - switch
        - configure
        - dhcpServerPolicy
    put:
      description: Update the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively
      operationId: updateNetworkSwitchDhcpServerPolicy
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                alerts:
                  email:
                    enabled: false
                allowedServers:
                  - 00:50:56:00:00:01
                  - 00:50:56:00:00:02
                arpInspection:
                  enabled: false
                blockedServers:
                  - 00:50:56:00:00:03
                  - 00:50:56:00:00:04
                defaultPolicy: block
              properties:
                alerts:
                  description: Alert settings for DHCP servers
                  properties:
                    email:
                      description: Email alert settings for DHCP servers
                      properties:
                        enabled:
                          description: When enabled, send an email if a new DHCP server is seen. Default value is false.
                          type: boolean
                      type: object
                  type: object
                allowedServers:
                  description: List the MAC addresses of DHCP servers to permit on the network when defaultPolicy is set to block. An empty array will clear the entries.
                  items:
                    type: string
                  type: array
                arpInspection:
                  description: Dynamic ARP Inspection settings
                  properties:
                    enabled:
                      description: Enable or disable Dynamic ARP Inspection on the network. Default value is false.
                      type: boolean
                  type: object
                blockedServers:
                  description: List the MAC addresses of DHCP servers to block on the network when defaultPolicy is set to allow. An empty array will clear the entries.
                  items:
                    type: string
                  type: array
                defaultPolicy:
                  description: "'allow' or 'block' new DHCP servers. Default value is 'allow'."
                  enum:
                    - allow
                    - block
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    alerts:
                      email:
                        enabled: false
                    allowedServers:
                      - 00:50:56:00:00:01
                      - 00:50:56:00:00:02
                    arpInspection:
                      enabled: false
                      unsupportedModels:
                        - MS120-8
                        - MS125-24
                    blockedServers:
                      - 00:50:56:00:00:03
                      - 00:50:56:00:00:04
                    defaultPolicy: block
              schema:
                type: object
          description: Successful operation
      summary: Update the DHCP server settings
      tags:
        - switch
        - configure
        - dhcpServerPolicy
  "/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers":
    get:
      description: Return the list of servers trusted by Dynamic ARP Inspection on this network. These are also known as whitelisted snoop entries
      operationId: getNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - ipv4:
                        address: 1.2.3.4
                      mac: 00:11:22:33:44:55
                      trustedServerId: "123"
                      vlan: 100
              schema:
                items:
                  properties:
                    ipv4:
                      description: IPv4 attributes of the trusted server.
                      properties:
                        address:
                          description: IPv4 address of the trusted server.
                          type: string
                      type: object
                    mac:
                      description: Mac address of the trusted server.
                      type: string
                    trustedServerId:
                      description: ID of the trusted server.
                      type: string
                    vlan:
                      description: Vlan ID of the trusted server.
                      type: integer
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the list of servers trusted by Dynamic ARP Inspection on this network
      tags:
        - switch
        - configure
        - dhcpServerPolicy
        - arpInspection
        - trustedServers
    post:
      description: Add a server to be trusted by Dynamic ARP Inspection on this network
      operationId: createNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ipv4:
                  address: 1.2.3.4
                mac: 00:11:22:33:44:55
                vlan: 100
              properties:
                ipv4:
                  description: The IPv4 attributes of the trusted server being added
                  properties:
                    address:
                      description: The IPv4 address of the trusted server being added
                      type: string
                  type: object
                mac:
                  description: The mac address of the trusted server being added
                  type: string
                vlan:
                  description: The VLAN of the trusted server being added. It must be between 1 and 4094
                  type: integer
              required:
                - mac
                - vlan
                - ipv4
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipv4:
                      address: 1.2.3.4
                    mac: 00:11:22:33:44:55
                    trustedServerId: "123"
                    vlan: 100
              schema:
                properties:
                  ipv4:
                    description: IPv4 attributes of the trusted server.
                    properties:
                      address:
                        description: IPv4 address of the trusted server.
                        type: string
                    type: object
                  mac:
                    description: Mac address of the trusted server.
                    type: string
                  trustedServerId:
                    description: ID of the trusted server.
                    type: string
                  vlan:
                    description: Vlan ID of the trusted server.
                    type: integer
                type: object
          description: Successful operation
      summary: Add a server to be trusted by Dynamic ARP Inspection on this network
      tags:
        - switch
        - configure
        - dhcpServerPolicy
        - arpInspection
        - trustedServers
  "/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}":
    delete:
      description: Remove a server from being trusted by Dynamic ARP Inspection on this network
      operationId: deleteNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: trustedServerId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Remove a server from being trusted by Dynamic ARP Inspection on this network
      tags:
        - switch
        - configure
        - dhcpServerPolicy
        - arpInspection
        - trustedServers
    put:
      description: Update a server that is trusted by Dynamic ARP Inspection on this network
      operationId: updateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: trustedServerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ipv4:
                  address: 1.2.3.4
                mac: 00:11:22:33:44:55
                vlan: 100
              properties:
                ipv4:
                  description: The updated IPv4 attributes of the trusted server
                  properties:
                    address:
                      description: The updated IPv4 address of the trusted server
                      type: string
                  type: object
                mac:
                  description: The updated mac address of the trusted server
                  type: string
                vlan:
                  description: The updated VLAN of the trusted server. It must be between 1 and 4094
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipv4:
                      address: 1.2.3.4
                    mac: 00:11:22:33:44:55
                    trustedServerId: "123"
                    vlan: 100
              schema:
                properties:
                  ipv4:
                    description: IPv4 attributes of the trusted server.
                    properties:
                      address:
                        description: IPv4 address of the trusted server.
                        type: string
                    type: object
                  mac:
                    description: Mac address of the trusted server.
                    type: string
                  trustedServerId:
                    description: ID of the trusted server.
                    type: string
                  vlan:
                    description: Vlan ID of the trusted server.
                    type: integer
                type: object
          description: Successful operation
      summary: Update a server that is trusted by Dynamic ARP Inspection on this network
      tags:
        - switch
        - configure
        - dhcpServerPolicy
        - arpInspection
        - trustedServers
  "/networks/{networkId}/switch/dhcpServerPolicy/arpInspection/warnings/byDevice":
    get:
      description: Return the devices that have a Dynamic ARP Inspection warning and their warnings
      operationId: getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - hasTrustedPort: false
                      name: My switch
                      serial: Q234-ABCD-0001
                      supportsInspection: false
                      url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
              schema:
                items:
                  properties:
                    hasTrustedPort:
                      description: Whether this switch has a trusted DAI port. Always false if supportsInspection is false.
                      type: boolean
                    name:
                      description: Switch name.
                      type: string
                    serial:
                      description: Switch serial.
                      type: string
                    supportsInspection:
                      description: Whether this switch supports Dynamic ARP Inspection.
                      type: boolean
                    url:
                      description: Url link to switch.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the devices that have a Dynamic ARP Inspection warning and their warnings
      tags:
        - switch
        - configure
        - dhcpServerPolicy
        - arpInspection
        - warnings
        - byDevice
  "/networks/{networkId}/switch/dscpToCosMappings":
    get:
      description: Return the DSCP to CoS mappings
      operationId: getNetworkSwitchDscpToCosMappings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    mappings:
                      - cos: 1
                        dscp: 1
                        title: Video
              schema:
                type: object
          description: Successful operation
      summary: Return the DSCP to CoS mappings
      tags:
        - switch
        - configure
        - dscpToCosMappings
    put:
      description: Update the DSCP to CoS mappings
      operationId: updateNetworkSwitchDscpToCosMappings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                mappings:
                  - cos: 1
                    dscp: 1
                    title: Video
              properties:
                mappings:
                  description: An array of DSCP to CoS mappings. An empty array will reset the mappings to default.
                  items:
                    properties:
                      cos:
                        description: The actual layer-2 CoS queue the DSCP value is mapped to. These are not bits set on outgoing frames. Value can be in the range of 0 to 5 inclusive.
                        type: integer
                      dscp:
                        description: The Differentiated Services Code Point (DSCP) tag in the IP header that will be mapped to a particular Class-of-Service (CoS) queue. Value can be in the range of 0 to 63 inclusive.
                        type: integer
                      title:
                        description: Label for the mapping (optional).
                        type: string
                    required:
                      - dscp
                      - cos
                    type: object
                  type: array
              required:
                - mappings
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    mappings:
                      - cos: 1
                        dscp: 1
                        title: Video
              schema:
                type: object
          description: Successful operation
      summary: Update the DSCP to CoS mappings
      tags:
        - switch
        - configure
        - dscpToCosMappings
  "/networks/{networkId}/switch/linkAggregations":
    get:
      description: List link aggregation groups
      operationId: getNetworkSwitchLinkAggregations
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: NDU2N18yXzM=
                      switchPorts:
                        - portId: "1"
                          serial: Q234-ABCD-0001
                        - portId: "2"
                          serial: Q234-ABCD-0002
                        - portId: "3"
                          serial: Q234-ABCD-0003
                        - portId: "4"
                          serial: Q234-ABCD-0004
                        - portId: "5"
                          serial: Q234-ABCD-0005
                        - portId: "6"
                          serial: Q234-ABCD-0006
                        - portId: "7"
                          serial: Q234-ABCD-0007
                        - portId: "8"
                          serial: Q234-ABCD-0008
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List link aggregation groups
      tags:
        - switch
        - configure
        - linkAggregations
    post:
      description: Create a link aggregation group
      operationId: createNetworkSwitchLinkAggregation
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                switchPorts:
                  - portId: "1"
                    serial: Q234-ABCD-0001
                  - portId: "2"
                    serial: Q234-ABCD-0002
                  - portId: "3"
                    serial: Q234-ABCD-0003
                  - portId: "4"
                    serial: Q234-ABCD-0004
                  - portId: "5"
                    serial: Q234-ABCD-0005
                  - portId: "6"
                    serial: Q234-ABCD-0006
                  - portId: "7"
                    serial: Q234-ABCD-0007
                  - portId: "8"
                    serial: Q234-ABCD-0008
              properties:
                switchPorts:
                  description: Array of switch or stack ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    properties:
                      portId:
                        description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: "1_8X10G_1"), otherwise it is just the port number (Ex: "8").'
                        type: string
                      serial:
                        description: Serial number of the switch.
                        type: string
                    required:
                      - serial
                      - portId
                    type: object
                  type: array
                switchProfilePorts:
                  description: Array of switch profile ports for creating aggregation group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    properties:
                      portId:
                        description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: "1_8X10G_1"), otherwise it is just the port number (Ex: "8").'
                        type: string
                      profile:
                        description: Profile identifier.
                        type: string
                    required:
                      - profile
                      - portId
                    type: object
                  type: array
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: NDU2N18yXzM=
                    switchPorts:
                      - portId: "1"
                        serial: Q234-ABCD-0001
                      - portId: "2"
                        serial: Q234-ABCD-0002
                      - portId: "3"
                        serial: Q234-ABCD-0003
                      - portId: "4"
                        serial: Q234-ABCD-0004
                      - portId: "5"
                        serial: Q234-ABCD-0005
                      - portId: "6"
                        serial: Q234-ABCD-0006
                      - portId: "7"
                        serial: Q234-ABCD-0007
                      - portId: "8"
                        serial: Q234-ABCD-0008
              schema:
                type: object
          description: Successful operation
      summary: Create a link aggregation group
      tags:
        - switch
        - configure
        - linkAggregations
  "/networks/{networkId}/switch/linkAggregations/{linkAggregationId}":
    delete:
      description: Split a link aggregation group into separate ports
      operationId: deleteNetworkSwitchLinkAggregation
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: linkAggregationId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Split a link aggregation group into separate ports
      tags:
        - switch
        - configure
        - linkAggregations
    put:
      description: Update a link aggregation group
      operationId: updateNetworkSwitchLinkAggregation
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: linkAggregationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                id: NDU2N18yXzM=
                switchPorts:
                  - portId: "1"
                    serial: Q234-ABCD-0001
                  - portId: "2"
                    serial: Q234-ABCD-0002
                  - portId: "3"
                    serial: Q234-ABCD-0003
                  - portId: "4"
                    serial: Q234-ABCD-0004
                  - portId: "5"
                    serial: Q234-ABCD-0005
                  - portId: "6"
                    serial: Q234-ABCD-0006
                  - portId: "7"
                    serial: Q234-ABCD-0007
                  - portId: "8"
                    serial: Q234-ABCD-0008
              properties:
                switchPorts:
                  description: Array of switch or stack ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    properties:
                      portId:
                        description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: "1_8X10G_1"), otherwise it is just the port number (Ex: "8").'
                        type: string
                      serial:
                        description: Serial number of the switch.
                        type: string
                    required:
                      - serial
                      - portId
                    type: object
                  type: array
                switchProfilePorts:
                  description: Array of switch profile ports for updating aggregation group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    properties:
                      portId:
                        description: 'Port identifier of switch port. For modules, the identifier is "SlotNumber_ModuleType_PortNumber" (Ex: "1_8X10G_1"), otherwise it is just the port number (Ex: "8").'
                        type: string
                      profile:
                        description: Profile identifier.
                        type: string
                    required:
                      - profile
                      - portId
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: NDU2N18yXzM=
                    switchPorts:
                      - portId: "1"
                        serial: Q234-ABCD-0001
                      - portId: "2"
                        serial: Q234-ABCD-0002
                      - portId: "3"
                        serial: Q234-ABCD-0003
                      - portId: "4"
                        serial: Q234-ABCD-0004
                      - portId: "5"
                        serial: Q234-ABCD-0005
                      - portId: "6"
                        serial: Q234-ABCD-0006
                      - portId: "7"
                        serial: Q234-ABCD-0007
                      - portId: "8"
                        serial: Q234-ABCD-0008
              schema:
                type: object
          description: Successful operation
      summary: Update a link aggregation group
      tags:
        - switch
        - configure
        - linkAggregations
  "/networks/{networkId}/switch/mtu":
    get:
      description: Return the MTU configuration
      operationId: getNetworkSwitchMtu
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultMtuSize: 9578
                    overrides:
                      - mtuSize: 1500
                        switchProfiles:
                          - "1284392014819"
                          - "2983092129865"
                        switches:
                          - Q234-ABCD-0001
                          - Q234-ABCD-0002
                          - Q234-ABCD-0003
              schema:
                properties:
                  defaultMtuSize:
                    description: MTU size for the entire network. Default value is 9578.
                    type: integer
                  overrides:
                    description: |-
                      Override MTU size for individual switches or switch profiles.
                            An empty array will clear overrides.
                    items:
                      properties:
                        mtuSize:
                          description: MTU size for the switches or switch profiles.
                          type: integer
                        switchProfiles:
                          description: List of switch profile IDs. Applicable only for template network.
                          items:
                            type: string
                          type: array
                        switches:
                          description: List of switch serials. Applicable only for switch network.
                          items:
                            type: string
                          type: array
                      required:
                        - mtuSize
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Return the MTU configuration
      tags:
        - switch
        - configure
        - mtu
    put:
      description: Update the MTU configuration
      operationId: updateNetworkSwitchMtu
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                defaultMtuSize: 9578
                overrides:
                  - mtuSize: 1500
                    switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                  - mtuSize: 1600
                    switchProfiles:
                      - "1284392014819"
                      - "2983092129865"
              properties:
                defaultMtuSize:
                  description: MTU size for the entire network. Default value is 9578.
                  type: integer
                overrides:
                  description: Override MTU size for individual switches or switch profiles. An empty array will clear overrides.
                  items:
                    properties:
                      mtuSize:
                        description: MTU size for the switches or switch profiles.
                        type: integer
                      switchProfiles:
                        description: List of switch profile IDs. Applicable only for template network.
                        items:
                          type: string
                        type: array
                      switches:
                        description: List of switch serials. Applicable only for switch network.
                        items:
                          type: string
                        type: array
                    required:
                      - mtuSize
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultMtuSize: 9578
                    overrides:
                      - mtuSize: 1500
                        switches:
                          - Q234-ABCD-0001
                          - Q234-ABCD-0002
                          - Q234-ABCD-0003
                      - mtuSize: 1600
                        switchProfiles:
                          - "1284392014819"
                          - "2983092129865"
              schema:
                type: object
          description: Successful operation
      summary: Update the MTU configuration
      tags:
        - switch
        - configure
        - mtu
  "/networks/{networkId}/switch/portSchedules":
    get:
      description: List switch port schedules
      operationId: getNetworkSwitchPortSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "1234"
                      name: Weekdays schedule
                      networkId: N_24329156
                      portSchedule:
                        friday:
                          active: true
                          from: 9:00
                          to: 17:00
                        monday:
                          active: true
                          from: 9:00
                          to: 17:00
                        saturday:
                          active: false
                          from: 0:00
                          to: 24:00
                        sunday:
                          active: false
                          from: 0:00
                          to: 24:00
                        thursday:
                          active: true
                          from: 9:00
                          to: 17:00
                        tuesday:
                          active: true
                          from: 9:00
                          to: 17:00
                        wednesday:
                          active: true
                          from: 9:00
                          to: 17:00
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List switch port schedules
      tags:
        - switch
        - configure
        - portSchedules
    post:
      description: Add a switch port schedule
      operationId: createNetworkSwitchPortSchedule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Weekdays schedule
                portSchedule:
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
              properties:
                name:
                  description: The name for your port schedule. Required
                  type: string
                portSchedule:
                  description: |2
                        The schedule for switch port scheduling. Schedules are applied to days of the week.
                        When it's empty, default schedule with all days of a week are configured.
                        Any unspecified day in the schedule is added as a default schedule configuration of the day.
                  properties:
                    friday:
                      description: The schedule object for Friday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    monday:
                      description: The schedule object for Monday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    saturday:
                      description: The schedule object for Saturday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    sunday:
                      description: The schedule object for Sunday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    thursday:
                      description: The schedule object for Thursday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    tuesday:
                      description: The schedule object for Tuesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    wednesday:
                      description: The schedule object for Wednesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                  type: object
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1234"
                    name: Weekdays schedule
                    networkId: N_24329156
                    portSchedule:
                      friday:
                        active: true
                        from: 9:00
                        to: 17:00
                      monday:
                        active: true
                        from: 9:00
                        to: 17:00
                      saturday:
                        active: false
                        from: 0:00
                        to: 24:00
                      sunday:
                        active: false
                        from: 0:00
                        to: 24:00
                      thursday:
                        active: true
                        from: 9:00
                        to: 17:00
                      tuesday:
                        active: true
                        from: 9:00
                        to: 17:00
                      wednesday:
                        active: true
                        from: 9:00
                        to: 17:00
              schema:
                type: object
          description: Successful operation
      summary: Add a switch port schedule
      tags:
        - switch
        - configure
        - portSchedules
  "/networks/{networkId}/switch/portSchedules/{portScheduleId}":
    delete:
      description: Delete a switch port schedule
      operationId: deleteNetworkSwitchPortSchedule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: portScheduleId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a switch port schedule
      tags:
        - switch
        - configure
        - portSchedules
    put:
      description: Update a switch port schedule
      operationId: updateNetworkSwitchPortSchedule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: portScheduleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Weekdays schedule
                portSchedule:
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
              properties:
                name:
                  description: The name for your port schedule.
                  type: string
                portSchedule:
                  description: |2
                        The schedule for switch port scheduling. Schedules are applied to days of the week.
                        When it's empty, default schedule with all days of a week are configured.
                        Any unspecified day in the schedule is added as a default schedule configuration of the day.
                  properties:
                    friday:
                      description: The schedule object for Friday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    monday:
                      description: The schedule object for Monday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    saturday:
                      description: The schedule object for Saturday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    sunday:
                      description: The schedule object for Sunday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    thursday:
                      description: The schedule object for Thursday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    tuesday:
                      description: The schedule object for Tuesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                    wednesday:
                      description: The schedule object for Wednesday.
                      properties:
                        active:
                          description: Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.
                          type: boolean
                        from:
                          description: The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.
                          type: string
                        to:
                          description: The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1234"
                    name: Weekdays schedule
                    networkId: N_24329156
                    portSchedule:
                      friday:
                        active: true
                        from: 9:00
                        to: 17:00
                      monday:
                        active: true
                        from: 9:00
                        to: 17:00
                      saturday:
                        active: false
                        from: 0:00
                        to: 24:00
                      sunday:
                        active: false
                        from: 0:00
                        to: 24:00
                      thursday:
                        active: true
                        from: 9:00
                        to: 17:00
                      tuesday:
                        active: true
                        from: 9:00
                        to: 17:00
                      wednesday:
                        active: true
                        from: 9:00
                        to: 17:00
              schema:
                type: object
          description: Successful operation
      summary: Update a switch port schedule
      tags:
        - switch
        - configure
        - portSchedules
  "/networks/{networkId}/switch/qosRules":
    get:
      description: List quality of service rules
      operationId: getNetworkSwitchQosRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - dscp: 0
                      dstPort: 3000
                      dstPortRange: 3000-3100
                      id: "1284392014819"
                      protocol: TCP
                      srcPort: 2000
                      srcPortRange: 70-80
                      vlan: 100
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List quality of service rules
      tags:
        - switch
        - configure
        - qosRules
    post:
      description: Add a quality of service rule
      operationId: createNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                dscp: 0
                dstPort: 3000
                dstPortRange: 3000-3100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                vlan: 100
              properties:
                dscp:
                  description: DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
                  type: integer
                dstPort:
                  description: The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
                  type: integer
                dstPortRange:
                  description: "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  type: string
                protocol:
                  description: The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
                  enum:
                    - ANY
                    - TCP
                    - UDP
                  type: string
                srcPort:
                  description: The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
                  type: integer
                srcPortRange:
                  description: "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  type: string
                vlan:
                  description: The VLAN of the incoming packet. A null value will match any VLAN.
                  type: integer
              required:
                - vlan
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    dscp: 0
                    dstPort: 3000
                    dstPortRange: 3000-3100
                    id: "1284392014819"
                    protocol: TCP
                    srcPort: 2000
                    srcPortRange: 70-80
                    vlan: 100
              schema:
                type: object
          description: Successful operation
      summary: Add a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
  "/networks/{networkId}/switch/qosRules/order":
    get:
      description: Return the quality of service rule IDs by order in which they will be processed by the switch
      operationId: getNetworkSwitchQosRulesOrder
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ruleIds:
                      - "1284392014819"
                      - "2983092129865"
              schema:
                type: object
          description: Successful operation
      summary: Return the quality of service rule IDs by order in which they will be processed by the switch
      tags:
        - switch
        - configure
        - qosRules
        - order
    put:
      description: Update the order in which the rules should be processed by the switch
      operationId: updateNetworkSwitchQosRulesOrder
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ruleIds:
                  - "1284392014819"
                  - "2983092129865"
              properties:
                ruleIds:
                  description: A list of quality of service rule IDs arranged in order in which they should be processed by the switch.
                  items:
                    type: string
                  type: array
              required:
                - ruleIds
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ruleIds:
                      - "1284392014819"
                      - "2983092129865"
              schema:
                type: object
          description: Successful operation
      summary: Update the order in which the rules should be processed by the switch
      tags:
        - switch
        - configure
        - qosRules
        - order
  "/networks/{networkId}/switch/qosRules/{qosRuleId}":
    delete:
      description: Delete a quality of service rule
      operationId: deleteNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: qosRuleId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
    get:
      description: Return a quality of service rule
      operationId: getNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: qosRuleId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    dscp: 0
                    dstPort: 3000
                    dstPortRange: 3000-3100
                    id: "1284392014819"
                    protocol: TCP
                    srcPort: 2000
                    srcPortRange: 70-80
                    vlan: 100
              schema:
                type: object
          description: Successful operation
      summary: Return a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
    put:
      description: Update a quality of service rule
      operationId: updateNetworkSwitchQosRule
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: qosRuleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                dscp: 0
                dstPort: 3000
                dstPortRange: 3000-3100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                vlan: 100
              properties:
                dscp:
                  description: DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0.
                  type: integer
                dstPort:
                  description: The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
                  type: integer
                dstPortRange:
                  description: "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  type: string
                protocol:
                  description: The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY".
                  enum:
                    - ANY
                    - TCP
                    - UDP
                  type: string
                srcPort:
                  description: The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
                  type: integer
                srcPortRange:
                  description: "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  type: string
                vlan:
                  description: The VLAN of the incoming packet. A null value will match any VLAN.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    dscp: 0
                    dstPort: 3000
                    dstPortRange: 3000-3100
                    id: "1284392014819"
                    protocol: TCP
                    srcPort: 2000
                    srcPortRange: 70-80
                    vlan: 100
              schema:
                type: object
          description: Successful operation
      summary: Update a quality of service rule
      tags:
        - switch
        - configure
        - qosRules
  "/networks/{networkId}/switch/routing/multicast":
    get:
      description: Return multicast settings for a network
      operationId: getNetworkSwitchRoutingMulticast
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultSettings:
                      floodUnknownMulticastTrafficEnabled: true
                      igmpSnoopingEnabled: true
                    overrides:
                      - floodUnknownMulticastTrafficEnabled: true
                        igmpSnoopingEnabled: true
                        switches:
                          - Q234-ABCD-0001
                          - Q234-ABCD-0002
                          - Q234-ABCD-0003
                      - floodUnknownMulticastTrafficEnabled: true
                        igmpSnoopingEnabled: true
                        stacks:
                          - "789102"
                          - "123456"
                          - "129102"
              schema:
                type: object
          description: Successful operation
      summary: Return multicast settings for a network
      tags:
        - switch
        - configure
        - routing
        - multicast
    put:
      description: Update multicast settings for a network
      operationId: updateNetworkSwitchRoutingMulticast
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                defaultSettings:
                  floodUnknownMulticastTrafficEnabled: true
                  igmpSnoopingEnabled: true
                overrides:
                  - floodUnknownMulticastTrafficEnabled: true
                    igmpSnoopingEnabled: true
                    switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                  - floodUnknownMulticastTrafficEnabled: true
                    igmpSnoopingEnabled: true
                    stacks:
                      - "789102"
                      - "123456"
                      - "129102"
              properties:
                defaultSettings:
                  description: Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default.
                  properties:
                    floodUnknownMulticastTrafficEnabled:
                      description: Flood unknown multicast traffic setting for entire network
                      type: boolean
                    igmpSnoopingEnabled:
                      description: IGMP snooping setting for entire network
                      type: boolean
                  type: object
                overrides:
                  description: Array of paired switches/stacks/profiles and corresponding multicast settings. An empty array will clear the multicast settings.
                  items:
                    properties:
                      floodUnknownMulticastTrafficEnabled:
                        description: Flood unknown multicast traffic setting for switches, switch stacks or switch profiles
                        type: boolean
                      igmpSnoopingEnabled:
                        description: IGMP snooping setting for switches, switch stacks or switch profiles
                        type: boolean
                      stacks:
                        description: List of switch stack ids for non-template network
                        items:
                          type: string
                        type: array
                      switchProfiles:
                        description: List of switch profiles ids for template network
                        items:
                          type: string
                        type: array
                      switches:
                        description: List of switch serials for non-template network
                        items:
                          type: string
                        type: array
                    required:
                      - igmpSnoopingEnabled
                      - floodUnknownMulticastTrafficEnabled
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultSettings:
                      floodUnknownMulticastTrafficEnabled: true
                      igmpSnoopingEnabled: true
                    overrides:
                      - floodUnknownMulticastTrafficEnabled: true
                        igmpSnoopingEnabled: true
                        switches:
                          - Q234-ABCD-0001
                          - Q234-ABCD-0002
                          - Q234-ABCD-0003
                      - floodUnknownMulticastTrafficEnabled: true
                        igmpSnoopingEnabled: true
                        stacks:
                          - "789102"
                          - "123456"
                          - "129102"
              schema:
                type: object
          description: Successful operation
      summary: Update multicast settings for a network
      tags:
        - switch
        - configure
        - routing
        - multicast
  "/networks/{networkId}/switch/routing/multicast/rendezvousPoints":
    get:
      description: List multicast rendezvous points
      operationId: getNetworkSwitchRoutingMulticastRendezvousPoints
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - - interfaceIp: 192.168.1.2
                        interfaceName: l3_interface_0
                        multicastGroup: Any
                        rendezvousPointId: "1234"
                        serial: Q234-ABCD-5678
                      - interfaceIp: 192.0.0.10
                        interfaceName: l3_interface_1
                        multicastGroup: 239.0.0.0/24
                        rendezvousPointId: "1234"
                        switchStackId: "789102"
                      - interfaceIp: 192.168.1.2
                        multicastGroup: 192.168.128.0/24
                        rendezvousPointId: "1234"
              schema:
                items:
                  items:
                    type: object
                  type: array
                type: array
          description: Successful operation
      summary: List multicast rendezvous points
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
    post:
      description: Create a multicast rendezvous point
      operationId: createNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
              properties:
                interfaceIp:
                  description: The IP address of the interface where the RP needs to be created.
                  type: string
                multicastGroup:
                  description: "'Any', or the IP address of a multicast group"
                  type: string
              required:
                - interfaceIp
                - multicastGroup
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    interfaceIp: 192.168.1.2
                    multicastGroup: 192.168.128.0/24
                    rendezvousPointId: "1234"
              schema:
                type: object
          description: Successful operation
      summary: Create a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
  "/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}":
    delete:
      description: Delete a multicast rendezvous point
      operationId: deleteNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: rendezvousPointId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
    get:
      description: Return a multicast rendezvous point
      operationId: getNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: rendezvousPointId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    interfaceIp: 192.168.1.2
                    interfaceName: l3_interface_0
                    multicastGroup: Any
                    rendezvousPointId: "1234"
                    serial: Q234-ABCD-5678
              schema:
                type: object
          description: Successful operation
      summary: Return a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
    put:
      description: Update a multicast rendezvous point
      operationId: updateNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: rendezvousPointId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
              properties:
                interfaceIp:
                  description: The IP address of the interface to use
                  type: string
                multicastGroup:
                  description: "'Any', or the IP address of a multicast group"
                  type: string
              required:
                - interfaceIp
                - multicastGroup
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    interfaceIp: 192.168.1.2
                    multicastGroup: 192.168.128.0/24
                    rendezvousPointId: "1234"
              schema:
                type: object
          description: Successful operation
      summary: Update a multicast rendezvous point
      tags:
        - switch
        - configure
        - routing
        - multicast
        - rendezvousPoints
  "/networks/{networkId}/switch/routing/ospf":
    get:
      description: Return layer 3 OSPF routing configuration
      operationId: getNetworkSwitchRoutingOspf
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    areas:
                      - areaId: "1284392014819"
                        areaName: Backbone
                        areaType: normal
                    deadTimerInSeconds: 40
                    enabled: true
                    helloTimerInSeconds: 10
                    md5AuthenticationEnabled: true
                    md5AuthenticationKey:
                      id: 1234
                      passphrase: abc1234
                    v3:
                      areas:
                        - areaId: "1284392014819"
                          areaName: V3 Backbone
                          areaType: normal
                      deadTimerInSeconds: 40
                      enabled: true
                      helloTimerInSeconds: 10
              schema:
                type: object
          description: Successful operation
      summary: Return layer 3 OSPF routing configuration
      tags:
        - switch
        - configure
        - routing
        - ospf
    put:
      description: Update layer 3 OSPF routing configuration
      operationId: updateNetworkSwitchRoutingOspf
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                areas:
                  - areaId: "1284392014819"
                    areaName: Backbone
                    areaType: normal
                deadTimerInSeconds: 40
                enabled: true
                helloTimerInSeconds: 10
                md5AuthenticationEnabled: true
                md5AuthenticationKey:
                  id: 1234
                  passphrase: abc1234
                v3:
                  areas:
                    - areaId: "1284392014819"
                      areaName: V3 Backbone
                      areaType: normal
                  deadTimerInSeconds: 40
                  enabled: true
                  helloTimerInSeconds: 10
              properties:
                areas:
                  description: OSPF areas
                  items:
                    properties:
                      areaId:
                        description: OSPF area ID
                        type: string
                      areaName:
                        description: Name of the OSPF area
                        type: string
                      areaType:
                        description: 'Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]'
                        enum:
                          - normal
                          - nssa
                          - stub
                        type: string
                    required:
                      - areaId
                      - areaName
                      - areaType
                    type: object
                  type: array
                deadTimerInSeconds:
                  description: Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
                  type: integer
                enabled:
                  description: Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
                  type: boolean
                helloTimerInSeconds:
                  description: Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
                  type: integer
                md5AuthenticationEnabled:
                  description: Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
                  type: boolean
                md5AuthenticationKey:
                  description: MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
                  properties:
                    id:
                      description: MD5 authentication key index. Key index must be between 1 to 255
                      type: integer
                    passphrase:
                      description: MD5 authentication passphrase
                      type: string
                  type: object
                v3:
                  description: OSPF v3 configuration
                  properties:
                    areas:
                      description: OSPF v3 areas
                      items:
                        properties:
                          areaId:
                            description: OSPF area ID
                            type: string
                          areaName:
                            description: Name of the OSPF area
                            type: string
                          areaType:
                            description: 'Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]'
                            enum:
                              - normal
                              - nssa
                              - stub
                            type: string
                        required:
                          - areaId
                          - areaName
                          - areaType
                        type: object
                      type: array
                    deadTimerInSeconds:
                      description: Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
                      type: integer
                    enabled:
                      description: Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.
                      type: boolean
                    helloTimerInSeconds:
                      description: Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
                      type: integer
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    areas:
                      - areaId: "1284392014819"
                        areaName: Backbone
                        areaType: normal
                    deadTimerInSeconds: 40
                    enabled: true
                    helloTimerInSeconds: 10
                    md5AuthenticationEnabled: true
                    md5AuthenticationKey:
                      id: 1234
                      passphrase: abc1234
                    v3:
                      areas:
                        - areaId: "1284392014819"
                          areaName: V3 Backbone
                          areaType: normal
                      deadTimerInSeconds: 40
                      enabled: true
                      helloTimerInSeconds: 10
              schema:
                type: object
          description: Successful operation
      summary: Update layer 3 OSPF routing configuration
      tags:
        - switch
        - configure
        - routing
        - ospf
  "/networks/{networkId}/switch/settings":
    get:
      description: Returns the switch network settings
      operationId: getNetworkSwitchSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    powerExceptions:
                      - powerType: redundant
                        serial: Q234-ABCD-0001
                    useCombinedPower: false
                    vlan: 100
              schema:
                properties:
                  powerExceptions:
                    description: Exceptions on a per switch basis to "useCombinedPower"
                    items:
                      properties:
                        powerType:
                          description: Per switch exception (combined, redundant, useNetworkSetting)
                          enum:
                            - combined
                            - redundant
                            - useNetworkSetting
                          type: string
                        serial:
                          description: Serial number of the switch
                          type: string
                      type: object
                    type: array
                  useCombinedPower:
                    description: The use Combined Power as the default behavior of secondary power supplies on supported devices.
                    type: boolean
                  vlan:
                    description: Management VLAN
                    type: integer
                type: object
          description: Successful operation
      summary: Returns the switch network settings
      tags:
        - switch
        - configure
        - settings
    put:
      description: Update switch network settings
      operationId: updateNetworkSwitchSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                powerExceptions:
                  description: Exceptions on a per switch basis to "useCombinedPower"
                  items:
                    properties:
                      powerType:
                        description: Per switch exception (combined, redundant, useNetworkSetting)
                        enum:
                          - combined
                          - redundant
                          - useNetworkSetting
                        type: string
                      serial:
                        description: Serial number of the switch
                        type: string
                    required:
                      - serial
                      - powerType
                    type: object
                  type: array
                useCombinedPower:
                  description: The use Combined Power as the default behavior of secondary power supplies on supported devices.
                  type: boolean
                vlan:
                  description: Management VLAN
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    powerExceptions:
                      - powerType: redundant
                        serial: Q234-ABCD-0001
                    useCombinedPower: false
                    vlan: 100
              schema:
                properties:
                  powerExceptions:
                    description: Exceptions on a per switch basis to "useCombinedPower"
                    items:
                      properties:
                        powerType:
                          description: Per switch exception (combined, redundant, useNetworkSetting)
                          enum:
                            - combined
                            - redundant
                            - useNetworkSetting
                          type: string
                        serial:
                          description: Serial number of the switch
                          type: string
                      type: object
                    type: array
                  useCombinedPower:
                    description: The use Combined Power as the default behavior of secondary power supplies on supported devices.
                    type: boolean
                  vlan:
                    description: Management VLAN
                    type: integer
                type: object
          description: Successful operation
      summary: Update switch network settings
      tags:
        - switch
        - configure
        - settings
  "/networks/{networkId}/switch/stacks":
    get:
      description: List the switch stacks in a network
      operationId: getNetworkSwitchStacks
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "8473"
                      name: A cool stack
                      serials:
                        - QBZY-XWVU-TSRQ
                        - QBAB-CDEF-GHIJ
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the switch stacks in a network
      tags:
        - switch
        - configure
        - stacks
    post:
      description: Create a stack
      operationId: createNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: A cool stack
                serials:
                  - QBZY-XWVU-TSRQ
                  - QBAB-CDEF-GHIJ
              properties:
                name:
                  description: The name of the new stack
                  type: string
                serials:
                  description: An array of switch serials to be added into the new stack
                  items:
                    type: string
                  type: array
              required:
                - name
                - serials
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "8473"
                    name: A cool stack
                    serials:
                      - QBZY-XWVU-TSRQ
                      - QBAB-CDEF-GHIJ
              schema:
                type: object
          description: Successful operation
      summary: Create a stack
      tags:
        - switch
        - configure
        - stacks
  "/networks/{networkId}/switch/stacks/{switchStackId}":
    delete:
      description: Delete a stack
      operationId: deleteNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a stack
      tags:
        - switch
        - configure
        - stacks
    get:
      description: Show a switch stack
      operationId: getNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "8473"
                    name: A cool stack
                    serials:
                      - QBZY-XWVU-TSRQ
                      - QBAB-CDEF-GHIJ
              schema:
                properties:
                  id:
                    description: Switch stacks id
                    type: string
                  name:
                    description: Switch stacks name
                    type: string
                  serials:
                    description: Serials of the switches in the switch stack
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Show a switch stack
      tags:
        - switch
        - configure
        - stacks
  "/networks/{networkId}/switch/stacks/{switchStackId}/add":
    post:
      description: Add a switch to a stack
      operationId: addNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                serial: QBZY-XWVU-TSRQ
              properties:
                serial:
                  description: The serial of the switch to be added
                  type: string
              required:
                - serial
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "8473"
                    name: A cool stack
                    serials:
                      - QBZY-XWVU-TSRQ
                      - QBAB-CDEF-GHIJ
              schema:
                type: object
          description: Successful operation
      summary: Add a switch to a stack
      tags:
        - switch
        - configure
        - stacks
  "/networks/{networkId}/switch/stacks/{switchStackId}/remove":
    post:
      description: Remove a switch from a stack
      operationId: removeNetworkSwitchStack
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                serial: QBZY-XWVU-TSRQ
              properties:
                serial:
                  description: The serial of the switch to be removed
                  type: string
              required:
                - serial
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "8473"
                    name: A cool stack
                    serials:
                      - QBAB-CDEF-GHIJ
              schema:
                type: object
          description: Successful operation
      summary: Remove a switch from a stack
      tags:
        - switch
        - configure
        - stacks
  "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces":
    get:
      description: List layer 3 interfaces for a switch stack
      operationId: getNetworkSwitchStackRoutingInterfaces
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - defaultGateway: 192.168.1.1
                      interfaceId: "1234"
                      interfaceIp: 192.168.1.2
                      ipv6:
                        address: 1:2:3:4::1
                        assignmentMode: static
                        gateway: 1:2:3:4::2
                        prefix: 1:2:3:4::/48
                      multicastRouting: disabled
                      name: L3 interface
                      ospfSettings:
                        area: "0"
                        cost: 1
                        isPassiveEnabled: true
                      ospfV3:
                        area: "1"
                        cost: 2
                        isPassiveEnabled: true
                      subnet: 192.168.1.0/24
                      vlanId: 100
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 interfaces for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
    post:
      description: Create a layer 3 interface for a switch stack
      operationId: createNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                defaultGateway: 192.168.1.1
                interfaceIp: 192.168.1.2
                ipv6:
                  address: 1:2:3:4::1
                  assignmentMode: static
                  gateway: 1:2:3:4::2
                  prefix: 1:2:3:4::/48
                multicastRouting: disabled
                name: L3 interface
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                subnet: 192.168.1.0/24
                vlanId: 100
              properties:
                defaultGateway:
                  description: The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface.
                  type: string
                interfaceIp:
                  description: The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.
                  type: string
                ipv6:
                  description: The IPv6 settings of the interface.
                  properties:
                    address:
                      description: The IPv6 address of the interface. Required if assignmentMode is 'static'. Must not be included if assignmentMode is 'eui-64'.
                      type: string
                    assignmentMode:
                      description: The IPv6 assignment mode for the interface. Can be either 'eui-64' or 'static'.
                      type: string
                    gateway:
                      description: The IPv6 default gateway of the interface. Required if prefix is defined and this is the first interface with IPv6 configured for the stack.
                      type: string
                    prefix:
                      description: The IPv6 prefix of the interface. Required if IPv6 object is included.
                      type: string
                  type: object
                multicastRouting:
                  description: Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'.
                  enum:
                    - IGMP snooping querier
                    - disabled
                    - enabled
                  type: string
                name:
                  description: A friendly name or description for the interface or VLAN.
                  type: string
                ospfSettings:
                  description: The OSPF routing settings of the interface.
                  properties:
                    area:
                      description: The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area. Defaults to 'disabled'.
                      type: string
                    cost:
                      description: The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority.
                      type: integer
                    isPassiveEnabled:
                      description: When enabled, OSPF will not run on the interface, but the subnet will still be advertised.
                      type: boolean
                  type: object
                subnet:
                  description: The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
                  type: string
                vlanId:
                  description: The VLAN this routed interface is on. VLAN must be between 1 and 4094.
                  type: integer
              required:
                - name
                - vlanId
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultGateway: 192.168.1.1
                    interfaceId: "1234"
                    interfaceIp: 192.168.1.2
                    ipv6:
                      address: 1:2:3:4::1
                      assignmentMode: static
                      gateway: 1:2:3:4::2
                      prefix: 1:2:3:4::/48
                    multicastRouting: disabled
                    name: L3 interface
                    ospfSettings:
                      area: "0"
                      cost: 1
                      isPassiveEnabled: true
                    ospfV3:
                      area: "1"
                      cost: 2
                      isPassiveEnabled: true
                    subnet: 192.168.1.0/24
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Create a layer 3 interface for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
  "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}":
    delete:
      description: Delete a layer 3 interface from a switch stack
      operationId: deleteNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a layer 3 interface from a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
    get:
      description: Return a layer 3 interface from a switch stack
      operationId: getNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultGateway: 192.168.1.1
                    interfaceId: "1234"
                    interfaceIp: 192.168.1.2
                    ipv6:
                      address: 1:2:3:4::1
                      assignmentMode: static
                      gateway: 1:2:3:4::2
                      prefix: 1:2:3:4::/48
                    multicastRouting: disabled
                    name: L3 interface
                    ospfSettings:
                      area: "0"
                      cost: 1
                      isPassiveEnabled: true
                    ospfV3:
                      area: "1"
                      cost: 2
                      isPassiveEnabled: true
                    subnet: 192.168.1.0/24
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 interface from a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
    put:
      description: Update a layer 3 interface for a switch stack
      operationId: updateNetworkSwitchStackRoutingInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                interfaceIp: 192.168.1.2
                ipv6:
                  address: 1:2:3:4::1
                  assignmentMode: static
                  gateway: 1:2:3:4::2
                  prefix: 1:2:3:4::/48
                multicastRouting: disabled
                name: L3 interface
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                subnet: 192.168.1.0/24
                vlanId: 100
              properties:
                defaultGateway:
                  description: The next hop for any traffic that isn't going to a directly connected subnet or over a static route. This IP address must exist in a subnet with a routed interface.
                  type: string
                interfaceIp:
                  description: The IP address this switch stack will use for layer 3 routing on this VLAN or subnet. This cannot be the same as the switch's management IP.
                  type: string
                ipv6:
                  description: The IPv6 settings of the interface.
                  properties:
                    address:
                      description: The IPv6 address of the interface. Required if assignmentMode is included and set as 'static'. Must not be included if assignmentMode is 'eui-64'.
                      type: string
                    assignmentMode:
                      description: The IPv6 assignment mode for the interface. Can be either 'eui-64' or 'static'.
                      type: string
                    gateway:
                      description: The IPv6 default gateway of the interface. Required if prefix is defined and this is the first interface with IPv6 configured for the stack.
                      type: string
                    prefix:
                      description: The IPv6 prefix of the interface. Required if IPv6 object is included and interface does not already have ipv6.prefix configured
                      type: string
                  type: object
                multicastRouting:
                  description: Enable multicast support if, multicast routing between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'.
                  enum:
                    - IGMP snooping querier
                    - disabled
                    - enabled
                  type: string
                name:
                  description: A friendly name or description for the interface or VLAN.
                  type: string
                ospfSettings:
                  description: The OSPF routing settings of the interface.
                  properties:
                    area:
                      description: The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an existing OSPF area.
                      type: string
                    cost:
                      description: The path cost for this interface. Defaults to 1, but can be increased up to 65535 to give lower priority.
                      type: integer
                    isPassiveEnabled:
                      description: When enabled, OSPF will not run on the interface, but the subnet will still be advertised.
                      type: boolean
                  type: object
                subnet:
                  description: The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
                  type: string
                vlanId:
                  description: The VLAN this routed interface is on. VLAN must be between 1 and 4094.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    interfaceId: "1234"
                    interfaceIp: 192.168.1.2
                    ipv6:
                      address: 1:2:3:4::1
                      assignmentMode: static
                      gateway: 1:2:3:4::2
                      prefix: 1:2:3:4::/48
                    multicastRouting: disabled
                    name: L3 interface
                    ospfSettings:
                      area: "0"
                      cost: 1
                      isPassiveEnabled: true
                    ospfV3:
                      area: "1"
                      cost: 2
                      isPassiveEnabled: true
                    subnet: 192.168.1.0/24
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 interface for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
  "/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp":
    get:
      description: Return a layer 3 interface DHCP configuration for a switch stack
      operationId: getNetworkSwitchStackRoutingInterfaceDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bootFileName: home_boot_file
                    bootNextServer: 1.2.3.4
                    bootOptionsEnabled: true
                    dhcpLeaseTime: 1 day
                    dhcpMode: dhcpServer
                    dhcpOptions:
                      - code: "5"
                        type: text
                        value: five
                    dnsCustomNameservers:
                      - 8.8.8.8, 8.8.4.4
                    dnsNameserversOption: custom
                    fixedIpAssignments:
                      - ip: 192.168.1.12
                        mac: 22:33:44:55:66:77
                        name: Cisco Meraki valued client
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.10
                        start: 192.168.1.1
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 interface DHCP configuration for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
        - dhcp
    put:
      description: Update a layer 3 interface DHCP configuration for a switch stack
      operationId: updateNetworkSwitchStackRoutingInterfaceDhcp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: interfaceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                bootFileName: home_boot_file
                bootNextServer: 1.2.3.4
                bootOptionsEnabled: true
                dhcpLeaseTime: 1 day
                dhcpMode: dhcpServer
                dhcpOptions:
                  - code: "5"
                    type: text
                    value: five
                dnsCustomNameservers:
                  - 8.8.8.8, 8.8.4.4
                dnsNameserversOption: custom
                fixedIpAssignments:
                  - ip: 192.168.1.12
                    mac: 22:33:44:55:66:77
                    name: Cisco Meraki valued client
                reservedIpRanges:
                  - comment: A reserved IP range
                    end: 192.168.1.10
                    start: 192.168.1.1
              properties:
                bootFileName:
                  description: The PXE boot server file name for the DHCP server running on the switch stack interface
                  type: string
                bootNextServer:
                  description: The PXE boot server IP for the DHCP server running on the switch stack interface
                  type: string
                bootOptionsEnabled:
                  description: Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch stack interface
                  type: boolean
                dhcpLeaseTime:
                  description: The DHCP lease time config for the dhcp server running on switch stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
                  enum:
                    - 1 day
                    - 1 hour
                    - 1 week
                    - 12 hours
                    - 30 minutes
                    - 4 hours
                  type: string
                dhcpMode:
                  description: The DHCP mode options for the switch stack interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
                  enum:
                    - dhcpDisabled
                    - dhcpRelay
                    - dhcpServer
                  type: string
                dhcpOptions:
                  description: Array of DHCP options consisting of code, type and value for the DHCP server running on the switch stack interface
                  items:
                    properties:
                      code:
                        description: The code for DHCP option which should be from 2 to 254
                        type: string
                      type:
                        description: The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
                        enum:
                          - hex
                          - integer
                          - ip
                          - text
                        type: string
                      value:
                        description: The value of the DHCP option
                        type: string
                    required:
                      - code
                      - type
                      - value
                    type: object
                  type: array
                dhcpRelayServerIps:
                  description: The DHCP relay server IPs to which DHCP packets would get relayed for the switch stack interface
                  items:
                    type: string
                  type: array
                dnsCustomNameservers:
                  description: The DHCP name server IPs when DHCP name server option is 'custom'
                  items:
                    type: string
                  type: array
                dnsNameserversOption:
                  description: The DHCP name server option for the dhcp server running on the switch stack interface ('googlePublicDns', 'openDns' or 'custom')
                  enum:
                    - custom
                    - googlePublicDns
                    - openDns
                  type: string
                fixedIpAssignments:
                  description: Array of DHCP fixed IP assignments for the DHCP server running on the switch stack interface
                  items:
                    properties:
                      ip:
                        description: The IP address of the client which has fixed IP address assigned to it
                        type: string
                      mac:
                        description: The MAC address of the client which has fixed IP address
                        type: string
                      name:
                        description: The name of the client which has fixed IP address
                        type: string
                    required:
                      - name
                      - mac
                      - ip
                    type: object
                  type: array
                reservedIpRanges:
                  description: Array of DHCP reserved IP assignments for the DHCP server running on the switch stack interface
                  items:
                    properties:
                      comment:
                        description: The comment for the reserved IP range
                        type: string
                      end:
                        description: The ending IP address of the reserved IP range
                        type: string
                      start:
                        description: The starting IP address of the reserved IP range
                        type: string
                    required:
                      - start
                      - end
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    bootFileName: home_boot_file
                    bootNextServer: 1.2.3.4
                    bootOptionsEnabled: true
                    dhcpLeaseTime: 1 day
                    dhcpMode: dhcpServer
                    dhcpOptions:
                      - code: "5"
                        type: text
                        value: five
                    dnsCustomNameservers:
                      - 8.8.8.8, 8.8.4.4
                    dnsNameserversOption: custom
                    fixedIpAssignments:
                      - ip: 192.168.1.12
                        mac: 22:33:44:55:66:77
                        name: Cisco Meraki valued client
                    reservedIpRanges:
                      - comment: A reserved IP range
                        end: 192.168.1.10
                        start: 192.168.1.1
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 interface DHCP configuration for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - interfaces
        - dhcp
  "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes":
    get:
      description: List layer 3 static routes for a switch stack
      operationId: getNetworkSwitchStackRoutingStaticRoutes
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - advertiseViaOspfEnabled: false
                      name: My route
                      nextHopIp: 1.2.3.4
                      preferOverOspfRoutesEnabled: false
                      staticRouteId: "1234"
                      subnet: 192.168.1.0/24
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 static routes for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
    post:
      description: Create a layer 3 static route for a switch stack
      operationId: createNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/createDeviceSwitchRoutingStaticRouteCreatedeviceswitchroutingstaticroute"
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertiseViaOspfEnabled: false
                    name: My route
                    nextHopIp: 1.2.3.4
                    preferOverOspfRoutesEnabled: false
                    staticRouteId: "1234"
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Create a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
  "/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}":
    delete:
      description: Delete a layer 3 static route for a switch stack
      operationId: deleteNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
    get:
      description: Return a layer 3 static route for a switch stack
      operationId: getNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertiseViaOspfEnabled: false
                    name: My route
                    nextHopIp: 1.2.3.4
                    preferOverOspfRoutesEnabled: false
                    staticRouteId: "1234"
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
    put:
      description: Update a layer 3 static route for a switch stack
      operationId: updateNetworkSwitchStackRoutingStaticRoute
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: switchStackId
          required: true
          schema:
            type: string
        - in: path
          name: staticRouteId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateDeviceSwitchRoutingStaticRouteUpdatedeviceswitchroutingstaticroute"
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertiseViaOspfEnabled: false
                    name: My route
                    nextHopIp: 1.2.3.4
                    preferOverOspfRoutesEnabled: false
                    staticRouteId: "1234"
                    subnet: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 static route for a switch stack
      tags:
        - switch
        - configure
        - stacks
        - routing
        - staticRoutes
  "/networks/{networkId}/switch/stormControl":
    get:
      description: Return the storm control configuration for a switch network
      operationId: getNetworkSwitchStormControl
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    broadcastThreshold: 30
                    multicastThreshold: 30
                    unknownUnicastThreshold: 30
              schema:
                properties:
                  broadcastThreshold:
                    description: Broadcast threshold.
                    type: integer
                  multicastThreshold:
                    description: Multicast threshold.
                    type: integer
                  unknownUnicastThreshold:
                    description: Unknown Unicast threshold.
                    type: integer
                type: object
          description: Successful operation
      summary: Return the storm control configuration for a switch network
      tags:
        - switch
        - configure
        - stormControl
    put:
      description: Update the storm control configuration for a switch network
      operationId: updateNetworkSwitchStormControl
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                broadcastThreshold: 30
                multicastThreshold: 30
                unknownUnicastThreshold: 30
              properties:
                broadcastThreshold:
                  description: Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration.
                  type: integer
                multicastThreshold:
                  description: Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration.
                  type: integer
                unknownUnicastThreshold:
                  description: Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    broadcastThreshold: 30
                    multicastThreshold: 30
                    unknownUnicastThreshold: 30
              schema:
                type: object
          description: Successful operation
      summary: Update the storm control configuration for a switch network
      tags:
        - switch
        - configure
        - stormControl
  "/networks/{networkId}/switch/stp":
    get:
      description: Returns STP settings
      operationId: getNetworkSwitchStp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rstpEnabled: true
                    stpBridgePriority:
                      - stpPriority: 4096
                        switches:
                          - Q234-ABCD-0001
                          - Q234-ABCD-0002
                          - Q234-ABCD-0003
                      - stacks:
                          - "789102"
                          - "123456"
                          - "129102"
                        stpPriority: 28672
              schema:
                type: object
          description: Successful operation
      summary: Returns STP settings
      tags:
        - switch
        - configure
        - stp
    put:
      description: Updates STP settings
      operationId: updateNetworkSwitchStp
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rstpEnabled: true
                stpBridgePriority:
                  - stpPriority: 4096
                    switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                  - stacks:
                      - "789102"
                      - "123456"
                      - "129102"
                    stpPriority: 28672
              properties:
                rstpEnabled:
                  description: The spanning tree protocol status in network
                  type: boolean
                stpBridgePriority:
                  description: STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings.
                  items:
                    properties:
                      stacks:
                        description: List of stack IDs
                        items:
                          type: string
                        type: array
                      stpPriority:
                        description: STP priority for switch, stacks, or switch profiles
                        type: integer
                      switchProfiles:
                        description: List of switch profile IDs
                        items:
                          type: string
                        type: array
                      switches:
                        description: List of switch serial numbers
                        items:
                          type: string
                        type: array
                    required:
                      - stpPriority
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rstpEnabled: true
                    stpBridgePriority:
                      - stpPriority: 4096
                        switches:
                          - Q234-ABCD-0001
                          - Q234-ABCD-0002
                          - Q234-ABCD-0003
                      - stacks:
                          - "789102"
                          - "123456"
                          - "129102"
                        stpPriority: 28672
              schema:
                type: object
          description: Successful operation
      summary: Updates STP settings
      tags:
        - switch
        - configure
        - stp
  "/networks/{networkId}/syslogServers":
    get:
      description: List the syslog servers for a network
      operationId: getNetworkSyslogServers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    servers:
                      - host: 1.2.3.4
                        port: 443
                        roles:
                          - Wireless event log
                          - URLs
              schema:
                properties:
                  servers:
                    description: List of the syslog servers for this network
                    items:
                      properties:
                        host:
                          description: The IP address of the syslog server
                          type: string
                        port:
                          description: The port of the syslog server
                          type: integer
                        roles:
                          description: "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: List the syslog servers for a network
      tags:
        - networks
        - configure
        - syslogServers
    put:
      description: Update the syslog servers for a network
      operationId: updateNetworkSyslogServers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                servers:
                  - host: 1.2.3.4
                    port: 443
                    roles:
                      - Wireless event log
                      - URLs
              properties:
                servers:
                  description: A list of the syslog servers for this network
                  items:
                    properties:
                      host:
                        description: The IP address of the syslog server
                        type: string
                      port:
                        description: The port of the syslog server
                        type: integer
                      roles:
                        description: "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
                        items:
                          type: string
                        type: array
                    required:
                      - host
                      - port
                      - roles
                    type: object
                  type: array
              required:
                - servers
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    servers:
                      - host: 1.2.3.4
                        port: 443
                        roles:
                          - Wireless event log
                          - URLs
              schema:
                properties:
                  servers:
                    description: List of the syslog servers for this network
                    items:
                      properties:
                        host:
                          description: The IP address of the syslog server
                          type: string
                        port:
                          description: The port of the syslog server
                          type: integer
                        roles:
                          description: "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'"
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update the syslog servers for a network
      tags:
        - networks
        - configure
        - syslogServers
  "/networks/{networkId}/topology/linkLayer":
    get:
      description: List the LLDP and CDP information for all discovered devices and connections in a network.
      operationId: getNetworkTopologyLinkLayer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    links:
                      - ends:
                          - device:
                              name: Study Switch 2
                              serial: Q2UN-E55e-KO6L
                            discovered:
                              cdp:
                                nativeVlan: 102
                                portId: Port 20
                              lldp:
                                portDescription: eth0
                                portId: Port 20
                            node:
                              derivedId: "34564"
                              type: stack
                          - discovered:
                              cdp: "null"
                              lldp:
                                portDescription: eth1
                                portId: 0010.7fdb.51f7
                            node:
                              derivedId: ccddeeffgghh
                              type: discovered
                        lastReportedAt: 2021-06-25T14:56:27z
                    nodes:
                      - derivedId: ccddeeffgghh
                        discovered:
                          cdp: "null"
                          lldp:
                            chassisId: "12345"
                            managementAddress: 10.130.105.154
                            systemCapabilities:
                              - router
                              - switch
                            systemDescription: Router and Switch Device
                            systemName: Non-Meraki device
                        mac: CC:DD:EE:FF:GG:HH
                        root: true
                        type: discovered
                      - derivedId: "34564"
                        mac: "null"
                        stack:
                          clients:
                            counts:
                              total: 14
                          id: 98765
                          members:
                            - derivedId: "4567"
                              device:
                                clients:
                                  counts:
                                    total: 8
                                lastReportedAt: 2021-06-24T10:23:12z
                                model: GS110
                                name: Study Switch
                                product: switch
                                serial: Q2UN-A44e-CU4L
                                status: online
                                switch:
                                  ports:
                                    counts:
                                      byStatus:
                                        active: 11
                                uplinks:
                                  - vlanId: 0
                              mac: EE:FF:GG:HH:II:JJ
                              type: device
                            - derivedId: "4567"
                              device:
                                clients:
                                  counts:
                                    total: 8
                                lastReportedAt: 2021-06-24T10:23:12z
                                model: GS110
                                name: Study Switch 2
                                productType: switch
                                serial: Q2UN-E55e-KO6L
                                status: online
                                switch:
                                  ports:
                                    counts:
                                      byStatus:
                                        active: 11
                                uplinks:
                                  - vlanId: 0
                              mac: GG:HH:II:JJ:KK:LL
                              type: device
                          name: Corp Stack
                        type: stack
                      - derivedId: aabbccddeeff
                        device:
                          lastReportedAt: 2021-06-24T10:23:12z
                          model: GX20
                          name: Living Room Gateway
                          productType: appliance
                          serial: Q2UN-A44e-CU4L
                          status: online
                          uplinks:
                            - pppoe:
                                enabled: true
                              vlanId: 0
                        mac: AA:BB:CC:DD:EE:FF
                        type: device
              schema:
                type: object
          description: Successful operation
      summary: List the LLDP and CDP information for all discovered devices and connections in a network.
      tags:
        - networks
        - monitor
        - topology
        - linkLayer
  "/networks/{networkId}/traffic":
    get:
      description: Return the traffic analysis data for this network. Traffic analysis with hostname visibility must be enabled on the network.
      operationId: getNetworkTraffic
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 30 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "Filter the data by device type: 'combined', 'wireless', 'switch' or 'appliance'. Defaults to 'combined'. When using 'combined', for each rule the data will come from the device type with the most usage."
          in: query
          name: deviceType
          schema:
            enum:
              - appliance
              - combined
              - switch
              - wireless
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - activeTime: 77000
                      application: Gmail
                      destination: null
                      flows: 300
                      numClients: 7
                      port: 443
                      protocol: TCP
                      recv: 61
                      sent: 138
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the traffic analysis data for this network
      tags:
        - networks
        - monitor
        - traffic
  "/networks/{networkId}/trafficAnalysis":
    get:
      description: Return the traffic analysis settings for a network
      operationId: getNetworkTrafficAnalysis
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    customPieChartItems:
                      - name: Item from hostname
                        type: host
                        value: example.com
                      - name: Item from port
                        type: port
                        value: "440"
                      - name: Item from IP
                        type: ipRange
                        value: 192.1.0.0
                      - name: Item from IP range (CIDR)
                        type: ipRange
                        value: 192.2.0.0/16
                      - name: Item from IP range with port
                        type: ipRange
                        value: 192.3.0.0/16:80
                    mode: detailed
              schema:
                type: object
          description: Successful operation
      summary: Return the traffic analysis settings for a network
      tags:
        - networks
        - configure
        - trafficAnalysis
    put:
      description: Update the traffic analysis settings for a network
      operationId: updateNetworkTrafficAnalysis
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                customPieChartItems:
                  - name: Item from hostname
                    type: host
                    value: example.com
                  - name: Item from port
                    type: port
                    value: "440"
                  - name: Item from IP
                    type: ipRange
                    value: 192.1.0.0
                  - name: Item from IP range (CIDR)
                    type: ipRange
                    value: 192.2.0.0/16
                  - name: Item from IP range with port
                    type: ipRange
                    value: 192.3.0.0/16:80
                mode: detailed
              properties:
                customPieChartItems:
                  description: The list of items that make up the custom pie chart for traffic reporting.
                  items:
                    properties:
                      name:
                        description: The name of the custom pie chart item.
                        type: string
                      type:
                        description: |2
                              The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.
                        enum:
                          - host
                          - ipRange
                          - port
                        type: string
                      value:
                        description: |2
                              The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item
                              (see sample request/response for more details).
                        type: string
                    required:
                      - name
                      - type
                      - value
                    type: object
                  type: array
                mode:
                  description: |2
                        The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
                        'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
                  enum:
                    - basic
                    - detailed
                    - disabled
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    customPieChartItems:
                      - name: Item from hostname
                        type: host
                        value: example.com
                      - name: Item from port
                        type: port
                        value: "440"
                      - name: Item from IP
                        type: ipRange
                        value: 192.1.0.0
                      - name: Item from IP range (CIDR)
                        type: ipRange
                        value: 192.2.0.0/16
                      - name: Item from IP range with port
                        type: ipRange
                        value: 192.3.0.0/16:80
                    mode: detailed
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic analysis settings for a network
      tags:
        - networks
        - configure
        - trafficAnalysis
  "/networks/{networkId}/trafficShaping/applicationCategories":
    get:
      description: Returns the application categories for traffic shaping rules.
      operationId: getNetworkTrafficShapingApplicationCategories
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    applicationCategories:
                      - applications:
                          - id: meraki:layer7/application/5
                            name: Advertising.com
                          - id: meraki:layer7/application/0
                            name: AppNexus
                          - id: meraki:layer7/application/1
                            name: Brightroll
                        id: meraki:layer7/category/24
                        name: Advertising
              schema:
                type: object
          description: Successful operation
      summary: Returns the application categories for traffic shaping rules.
      tags:
        - networks
        - configure
        - trafficShaping
        - applicationCategories
  "/networks/{networkId}/trafficShaping/dscpTaggingOptions":
    get:
      description: Returns the available DSCP tagging options for your traffic shaping rules.
      operationId: getNetworkTrafficShapingDscpTaggingOptions
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - description: AF11 - High Throughput, Latency Insensitive, Low Drop
                      dscpTagValue: 10
                    - description: AF12 - High Throughput, Latency Insensitive, Medium Drop
                      dscpTagValue: 12
                    - description: AF13 - High Throughput, Latency Insensitive, High Drop
                      dscpTagValue: 14
                    - description: AF21 - Low Latency Data, Low Drop
                      dscpTagValue: 18
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Returns the available DSCP tagging options for your traffic shaping rules.
      tags:
        - networks
        - configure
        - trafficShaping
        - dscpTaggingOptions
  "/networks/{networkId}/unbind":
    post:
      description: Unbind a network from a template.
      operationId: unbindNetwork
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                retainConfigs: true
              properties:
                retainConfigs:
                  description: Optional boolean to retain all the current configs given by the template.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enrollmentString: my-enrollment-string
                    id: N_24329156
                    isBoundToConfigTemplate: false
                    name: Main Office
                    notes: Additional description of the network
                    organizationId: "2930418"
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    tags:
                      - tag1
                      - tag2
                    timeZone: America/Los_Angeles
                    url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                properties:
                  enrollmentString:
                    description: Enrollment string for the network
                    type: string
                  id:
                    description: Network ID
                    type: string
                  isBoundToConfigTemplate:
                    description: If the network is bound to a config template
                    type: boolean
                  name:
                    description: Network name
                    type: string
                  notes:
                    description: Notes for the network
                    type: string
                  organizationId:
                    description: Organization ID
                    type: string
                  productTypes:
                    description: List of the product types that the network supports
                    items:
                      type: string
                    type: array
                  tags:
                    description: Network tags
                    items:
                      type: string
                    type: array
                  timeZone:
                    description: Timezone of the network
                    type: string
                  url:
                    description: URL to the network Dashboard UI
                    type: string
                type: object
          description: Successful operation
      summary: Unbind a network from a template.
      tags:
        - networks
        - configure
  "/networks/{networkId}/webhooks/httpServers":
    get:
      description: List the HTTP servers for a network
      operationId: getNetworkWebhooksHttpServers
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                      name: Example Webhook Server
                      networkId: N_12345678
                      payloadTemplate:
                        name: Meraki (included)
                        payloadTemplateId: wpt_00001
                      url: https://www.example.com/my_custom_webhook
              schema:
                items:
                  properties:
                    id:
                      description: A Base64 encoded ID.
                      format: byte
                      type: string
                    name:
                      description: A name for easy reference to the HTTP server
                      type: string
                    networkId:
                      description: A Meraki network ID.
                      type: string
                    payloadTemplate:
                      description: The payload template to use when posting data to the HTTP server.
                      properties:
                        name:
                          description: The name of the payload template.
                          type: string
                        payloadTemplateId:
                          description: The ID of the payload template.
                          type: string
                      type: object
                    url:
                      description: The URL of the HTTP server.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the HTTP servers for a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
    post:
      description: Add an HTTP server to a network
      operationId: createNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Example Webhook Server
                payloadTemplate:
                  name: Meraki (included)
                  payloadTemplateId: wpt_00001
                sharedSecret: shhh
                url: https://example.com
              properties:
                name:
                  description: A name for easy reference to the HTTP server
                  type: string
                payloadTemplate:
                  description: The payload template to use when posting data to the HTTP server.
                  properties:
                    name:
                      description: The name of the payload template.
                      type: string
                    payloadTemplateId:
                      description: "The ID of the payload template. Defaults to 'wpt_00001' for the Meraki template. For Meraki-included templates: for the Webex (included) template use 'wpt_00002'; for the Slack (included) template use 'wpt_00003'; for the Microsoft Teams (included) template use 'wpt_00004'; for the ServiceNow (included) template use 'wpt_00006'"
                      type: string
                  type: object
                sharedSecret:
                  description: A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
                  type: string
                url:
                  description: The URL of the HTTP server. Once set, cannot be updated.
                  type: string
              required:
                - name
                - url
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                    name: Example Webhook Server
                    networkId: N_12345678
                    payloadTemplate:
                      name: Meraki (included)
                      payloadTemplateId: wpt_00001
                    url: https://www.example.com/my_custom_webhook
              schema:
                properties:
                  id:
                    description: A Base64 encoded ID.
                    format: byte
                    type: string
                  name:
                    description: A name for easy reference to the HTTP server
                    type: string
                  networkId:
                    description: A Meraki network ID.
                    type: string
                  payloadTemplate:
                    description: The payload template to use when posting data to the HTTP server.
                    properties:
                      name:
                        description: The name of the payload template.
                        type: string
                      payloadTemplateId:
                        description: The ID of the payload template.
                        type: string
                    type: object
                  url:
                    description: The URL of the HTTP server.
                    type: string
                type: object
          description: Successful operation
      summary: Add an HTTP server to a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
  "/networks/{networkId}/webhooks/httpServers/{httpServerId}":
    delete:
      description: Delete an HTTP server from a network
      operationId: deleteNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: httpServerId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an HTTP server from a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
    get:
      description: Return an HTTP server for a network
      operationId: getNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: httpServerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                    name: Example Webhook Server
                    networkId: N_12345678
                    payloadTemplate:
                      name: Meraki (included)
                      payloadTemplateId: wpt_00001
                    url: https://www.example.com/my_custom_webhook
              schema:
                properties:
                  id:
                    description: A Base64 encoded ID.
                    format: byte
                    type: string
                  name:
                    description: A name for easy reference to the HTTP server
                    type: string
                  networkId:
                    description: A Meraki network ID.
                    type: string
                  payloadTemplate:
                    description: The payload template to use when posting data to the HTTP server.
                    properties:
                      name:
                        description: The name of the payload template.
                        type: string
                      payloadTemplateId:
                        description: The ID of the payload template.
                        type: string
                    type: object
                  url:
                    description: The URL of the HTTP server.
                    type: string
                type: object
          description: Successful operation
      summary: Return an HTTP server for a network
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
    put:
      description: Update an HTTP server. To change a URL, create a new HTTP server.
      operationId: updateNetworkWebhooksHttpServer
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: httpServerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Example Webhook Server
                payloadTemplate:
                  payloadTemplateId: wpt_00001
                sharedSecret: shhh
              properties:
                name:
                  description: A name for easy reference to the HTTP server
                  type: string
                payloadTemplate:
                  description: The payload template to use when posting data to the HTTP server.
                  properties:
                    payloadTemplateId:
                      description: "The ID of the payload template. Defaults to 'wpt_00001' for the Meraki template. For Meraki-included templates: for the Webex (included) template use 'wpt_00002'; for the Slack (included) template use 'wpt_00003'; for the Microsoft Teams (included) template use 'wpt_00004'; for the ServiceNow (included) template use 'wpt_00006'"
                      type: string
                  type: object
                sharedSecret:
                  description: A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                    name: Example Webhook Server
                    networkId: N_12345678
                    payloadTemplate:
                      name: Meraki (included)
                      payloadTemplateId: wpt_00001
                    url: https://www.example.com/my_custom_webhook
              schema:
                properties:
                  id:
                    description: A Base64 encoded ID.
                    format: byte
                    type: string
                  name:
                    description: A name for easy reference to the HTTP server
                    type: string
                  networkId:
                    description: A Meraki network ID.
                    type: string
                  payloadTemplate:
                    description: The payload template to use when posting data to the HTTP server.
                    properties:
                      name:
                        description: The name of the payload template.
                        type: string
                      payloadTemplateId:
                        description: The ID of the payload template.
                        type: string
                    type: object
                  url:
                    description: The URL of the HTTP server.
                    type: string
                type: object
          description: Successful operation
      summary: Update an HTTP server
      tags:
        - networks
        - configure
        - webhooks
        - httpServers
  "/networks/{networkId}/webhooks/payloadTemplates":
    get:
      description: List the webhook payload templates for a network
      operationId: getNetworkWebhooksPayloadTemplates
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                      headers:
                        - name: Authorization
                          template: Bearer {{sharedSecret}}
                      name: Weeb Hooks
                      payloadTemplateId: wpt_343
                      type: custom
              schema:
                items:
                  properties:
                    body:
                      description: The body of the payload template, in liquid template
                      type: string
                    headers:
                      description: The payload template headers, will be rendered as a key-value pair in the webhook.
                      items:
                        properties:
                          name:
                            description: The name of the header attribute
                            type: string
                          template:
                            description: The value returned in the header attribute, in liquid template
                            type: string
                        type: object
                      type: array
                    name:
                      description: The name of the payload template
                      type: string
                    payloadTemplateId:
                      description: Webhook payload template Id
                      type: string
                    type:
                      description: The type of the payload template
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the webhook payload templates for a network
      tags:
        - networks
        - configure
        - webhooks
        - payloadTemplates
    post:
      description: Create a webhook payload template for a network
      operationId: createNetworkWebhooksPayloadTemplate
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                bodyFile: Qm9keSBGaWxl
                headers:
                  - name: Authorization
                    template: Bearer {{sharedSecret}}
                headersFile: SGVhZGVycyBGaWxl
                name: Weeb Hooks
              properties:
                body:
                  description: The liquid template used for the body of the webhook message. Either `body` or `bodyFile` must be specified.
                  type: string
                bodyFile:
                  description: A file containing liquid template used for the body of the webhook message. Either `body` or `bodyFile` must be specified.
                  format: byte
                  type: string
                headers:
                  description: The liquid template used with the webhook headers.
                  items:
                    properties:
                      name:
                        description: The name of the header template
                        type: string
                      template:
                        description: The liquid template for the headers
                        type: string
                    type: object
                  type: array
                headersFile:
                  description: A file containing the liquid template used with the webhook headers.
                  format: byte
                  type: string
                name:
                  description: The name of the new template
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                    headers:
                      - name: Authorization
                        template: Bearer {{sharedSecret}}
                    name: Weeb Hooks
                    payloadTemplateId: wpt_343
                    type: custom
              schema:
                properties:
                  body:
                    description: The body of the payload template, in liquid template
                    type: string
                  headers:
                    description: The payload template headers, will be rendered as a key-value pair in the webhook.
                    items:
                      properties:
                        name:
                          description: The name of the header attribute
                          type: string
                        template:
                          description: The value returned in the header attribute, in liquid template
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the payload template
                    type: string
                  payloadTemplateId:
                    description: Webhook payload template Id
                    type: string
                  type:
                    description: The type of the payload template
                    type: string
                type: object
          description: Successful operation
      summary: Create a webhook payload template for a network
      tags:
        - networks
        - configure
        - webhooks
        - payloadTemplates
  "/networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}":
    delete:
      description: Destroy a webhook payload template for a network. Does not work for included templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004', 'wpt_00005' or 'wpt_00006')
      operationId: deleteNetworkWebhooksPayloadTemplate
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: payloadTemplateId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Destroy a webhook payload template for a network
      tags:
        - networks
        - configure
        - webhooks
        - payloadTemplates
    get:
      description: Get the webhook payload template for a network
      operationId: getNetworkWebhooksPayloadTemplate
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: payloadTemplateId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                    headers:
                      - name: Authorization
                        template: Bearer {{sharedSecret}}
                    name: Weeb Hooks
                    payloadTemplateId: wpt_343
                    type: custom
              schema:
                properties:
                  body:
                    description: The body of the payload template, in liquid template
                    type: string
                  headers:
                    description: The payload template headers, will be rendered as a key-value pair in the webhook.
                    items:
                      properties:
                        name:
                          description: The name of the header attribute
                          type: string
                        template:
                          description: The value returned in the header attribute, in liquid template
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the payload template
                    type: string
                  payloadTemplateId:
                    description: Webhook payload template Id
                    type: string
                  type:
                    description: The type of the payload template
                    type: string
                type: object
          description: Successful operation
      summary: Get the webhook payload template for a network
      tags:
        - networks
        - configure
        - webhooks
        - payloadTemplates
    put:
      description: Update a webhook payload template for a network
      operationId: updateNetworkWebhooksPayloadTemplate
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: payloadTemplateId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                bodyFile: Qm9keSBGaWxl
                headers:
                  - name: Authorization
                    template: Bearer {{sharedSecret}}
                headersFile: SGVhZGVycyBGaWxl
                name: Weeb Hooks
              properties:
                body:
                  description: The liquid template used for the body of the webhook message.
                  type: string
                bodyFile:
                  description: A file containing liquid template used for the body of the webhook message.
                  format: byte
                  type: string
                headers:
                  description: The liquid template used with the webhook headers.
                  items:
                    properties:
                      name:
                        description: The name of the header template
                        type: string
                      template:
                        description: The liquid template for the headers
                        type: string
                    type: object
                  type: array
                headersFile:
                  description: A file containing the liquid template used with the webhook headers.
                  format: byte
                  type: string
                name:
                  description: The name of the template
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                    headers:
                      - name: Authorization
                        template: Bearer {{sharedSecret}}
                    name: Weeb Hooks
                    payloadTemplateId: wpt_343
                    type: custom
              schema:
                properties:
                  body:
                    description: The body of the payload template, in liquid template
                    type: string
                  headers:
                    description: The payload template headers, will be rendered as a key-value pair in the webhook.
                    items:
                      properties:
                        name:
                          description: The name of the header attribute
                          type: string
                        template:
                          description: The value returned in the header attribute, in liquid template
                          type: string
                      type: object
                    type: array
                  name:
                    description: The name of the payload template
                    type: string
                  payloadTemplateId:
                    description: Webhook payload template Id
                    type: string
                  type:
                    description: The type of the payload template
                    type: string
                type: object
          description: Successful operation
      summary: Update a webhook payload template for a network
      tags:
        - networks
        - configure
        - webhooks
        - payloadTemplates
  "/networks/{networkId}/webhooks/webhookTests":
    post:
      description: Send a test webhook for a network
      operationId: createNetworkWebhooksWebhookTest
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                alertTypeId: power_supply_down
                payloadTemplateId: wpt_00001
                payloadTemplateName: Payload Template
                sharedSecret: shhh
                url: https://www.example.com/path
              properties:
                alertTypeId:
                  default: power_supply_down
                  description: The type of alert which the test webhook will send. Optional. Defaults to power_supply_down.
                  type: string
                payloadTemplateId:
                  description: The ID of the payload template of the test webhook. Defaults to the HTTP server's template ID if one exists for the given URL, or Generic template ID otherwise
                  type: string
                payloadTemplateName:
                  description: The name of the payload template.
                  type: string
                sharedSecret:
                  default: ""
                  description: The shared secret the test webhook will send. Optional. Defaults to an empty string.
                  type: string
                url:
                  description: The URL where the test webhook will be sent
                  type: string
              required:
                - url
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1234"
                    status: enqueued
                    url: https://www.example.com/path
              schema:
                properties:
                  id:
                    description: Webhook delivery identifier
                    type: string
                  status:
                    description: Current status of the webhook delivery
                    enum:
                      - abandoned
                      - delivered
                      - enqueued
                      - processing
                      - retrying
                    type: string
                  url:
                    description: URL where the webhook was delivered
                    type: string
                type: object
          description: Successful operation
      summary: Send a test webhook for a network
      tags:
        - networks
        - configure
        - webhooks
        - webhookTests
  "/networks/{networkId}/webhooks/webhookTests/{webhookTestId}":
    get:
      description: Return the status of a webhook test for a network
      operationId: getNetworkWebhooksWebhookTest
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: webhookTestId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1234"
                    status: enqueued
                    url: https://www.example.com/path
              schema:
                properties:
                  id:
                    description: Webhook delivery identifier
                    type: string
                  status:
                    description: Current status of the webhook delivery
                    enum:
                      - abandoned
                      - delivered
                      - enqueued
                      - processing
                      - retrying
                    type: string
                  url:
                    description: URL where the webhook was delivered
                    type: string
                type: object
          description: Successful operation
      summary: Return the status of a webhook test for a network
      tags:
        - networks
        - configure
        - webhooks
        - webhookTests
  "/networks/{networkId}/wireless/airMarshal":
    get:
      description: List Air Marshal scan results from a network
      operationId: getNetworkWirelessAirMarshal
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - bssids:
                        - bssid: 00:11:22:33:44:55
                          contained: false
                          detectedBy:
                            - device: Q234-ABCD-5678
                              rssi: 17
                      channels:
                        - 36
                        - 40
                      firstSeen: 1518365681
                      lastSeen: 1526087474
                      ssid: linksys
                      wiredLastSeen: 1526087474
                      wiredMacs:
                        - 00:11:22:33:44:55
                      wiredVlans:
                        - 0
                        - 108
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List Air Marshal scan results from a network
      tags:
        - wireless
        - monitor
        - airMarshal
  "/networks/{networkId}/wireless/alternateManagementInterface":
    get:
      description: Return alternate management interface and devices with IP assigned
      operationId: getNetworkWirelessAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPoints:
                      - alternateManagementIp: 1.2.3.4
                        dns1: 8.8.8.8
                        dns2: 8.8.4.4
                        gateway: 1.2.3.5
                        serial: Q234-ABCD-5678
                        subnetMask: 255.255.255.0
                    enabled: true
                    protocols:
                      - radius
                      - snmp
                      - syslog
                      - ldap
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Return alternate management interface and devices with IP assigned
      tags:
        - wireless
        - configure
        - alternateManagementInterface
    put:
      description: Update alternate management interface and device static IP
      operationId: updateNetworkWirelessAlternateManagementInterface
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accessPoints:
                  - alternateManagementIp: 1.2.3.4
                    dns1: 8.8.8.8
                    dns2: 8.8.4.4
                    gateway: 1.2.3.5
                    serial: Q234-ABCD-5678
                    subnetMask: 255.255.255.0
                enabled: true
                protocols:
                  - radius
                  - snmp
                  - syslog
                  - ldap
                vlanId: 100
              properties:
                accessPoints:
                  description: "Array of access point serial number and IP assignment. Note: accessPoints IP assignment is not applicable for template networks, in other words, do not put 'accessPoints' in the body when updating template networks. Also, an empty 'accessPoints' array will remove all previous static IP assignments"
                  items:
                    properties:
                      alternateManagementIp:
                        description: Wireless alternate management interface device IP. Provide an empty string to remove alternate management IP assignment
                        type: string
                      dns1:
                        description: Primary DNS must be in IP format
                        type: string
                      dns2:
                        description: Optional secondary DNS must be in IP format
                        type: string
                      gateway:
                        description: Gateway must be in IP format
                        type: string
                      serial:
                        description: Serial number of access point to be configured with alternate management IP
                        type: string
                      subnetMask:
                        description: Subnet mask must be in IP format
                        type: string
                    required:
                      - serial
                      - alternateManagementIp
                    type: object
                  type: array
                enabled:
                  description: Boolean value to enable or disable alternate management interface
                  type: boolean
                protocols:
                  description: "Can be one or more of the following values: 'radius', 'snmp', 'syslog' or 'ldap'"
                  items:
                    enum:
                      - ldap
                      - radius
                      - snmp
                      - syslog
                    type: string
                  type: array
                vlanId:
                  description: Alternate management interface VLAN, must be between 1 and 4094
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPoints:
                      - alternateManagementIp: 1.2.3.4
                        dns1: 8.8.8.8
                        dns2: 8.8.4.4
                        gateway: 1.2.3.5
                        serial: Q234-ABCD-5678
                        subnetMask: 255.255.255.0
                    enabled: true
                    protocols:
                      - radius
                      - snmp
                      - syslog
                      - ldap
                    vlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Update alternate management interface and device static IP
      tags:
        - wireless
        - configure
        - alternateManagementInterface
  "/networks/{networkId}/wireless/billing":
    get:
      description: Return the billing settings of this network
      operationId: getNetworkWirelessBilling
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    currency: USD
                    plans:
                      - bandwidthLimits:
                          limitDown: 1000
                          limitUp: 1000
                        id: "1"
                        price: 5
                        timeLimit: 1 hour
              schema:
                type: object
          description: Successful operation
      summary: Return the billing settings of this network
      tags:
        - wireless
        - configure
        - billing
    put:
      description: Update the billing settings
      operationId: updateNetworkWirelessBilling
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                currency: USD
                plans:
                  - bandwidthLimits:
                      limitDown: 1000
                      limitUp: 1000
                    id: "1"
                    price: 5
                    timeLimit: 1 hour
              properties:
                currency:
                  description: The currency code of this node group's billing plans
                  type: string
                plans:
                  description: Array of billing plans in the node group. (Can configure a maximum of 5)
                  items:
                    properties:
                      bandwidthLimits:
                        description: The uplink bandwidth settings for the pricing plan.
                        properties:
                          limitDown:
                            description: The maximum download limit (integer, in Kbps). null indicates no limit
                            type: integer
                          limitUp:
                            description: The maximum upload limit (integer, in Kbps). null indicates no limit
                            type: integer
                        type: object
                      id:
                        description: The id of the pricing plan to update.
                        type: string
                      price:
                        description: The price of the billing plan.
                        format: float
                        type: number
                      timeLimit:
                        description: The time limit of the pricing plan in minutes. Can be '1 hour', '1 day', '1 week', or '30 days'.
                        enum:
                          - 1 day
                          - 1 hour
                          - 1 week
                          - 30 days
                        type: string
                    required:
                      - price
                      - bandwidthLimits
                      - timeLimit
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    currency: USD
                    plans:
                      - bandwidthLimits:
                          limitDown: 1000
                          limitUp: 1000
                        id: "1"
                        price: 5
                        timeLimit: 1 hour
              schema:
                type: object
          description: Successful operation
      summary: Update the billing settings
      tags:
        - wireless
        - configure
        - billing
  "/networks/{networkId}/wireless/bluetooth/settings":
    get:
      description: Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.
      operationId: getNetworkWirelessBluetoothSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertisingEnabled: true
                    eslEnabled: true
                    major: 1
                    majorMinorAssignmentMode: Non-unique
                    minor: 1
                    scanningEnabled: true
                    uuid: 00000000-0000-0000-000-000000000000
              schema:
                properties:
                  advertisingEnabled:
                    description: Whether APs will advertise beacons.
                    type: boolean
                  eslEnabled:
                    description: Whether ESL is enabled on this network.
                    type: boolean
                  major:
                    description: The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
                    type: integer
                  majorMinorAssignmentMode:
                    description: The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
                    type: string
                  minor:
                    description: The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
                    type: integer
                  scanningEnabled:
                    description: Whether APs will scan for Bluetooth enabled clients.
                    type: boolean
                  uuid:
                    description: The UUID to be used in the beacon identifier.
                    type: string
                type: object
          description: Successful operation
      summary: Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a> must be enabled on the network.
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
    put:
      description: Update the Bluetooth settings for a network. See the docs page for <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth settings</a>.
      operationId: updateNetworkWirelessBluetoothSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                advertisingEnabled: true
                major: 1
                majorMinorAssignmentMode: Non-unique
                minor: 1
                scanningEnabled: true
                uuid: 00000000-0000-0000-000-000000000000
              properties:
                advertisingEnabled:
                  description: Whether APs will advertise beacons.
                  type: boolean
                major:
                  description: The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
                  type: integer
                majorMinorAssignmentMode:
                  description: The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
                  enum:
                    - Non-unique
                    - Unique
                  type: string
                minor:
                  description: The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
                  type: integer
                scanningEnabled:
                  description: Whether APs will scan for Bluetooth enabled clients.
                  type: boolean
                uuid:
                  description: The UUID to be used in the beacon identifier.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    advertisingEnabled: true
                    eslEnabled: true
                    major: 1
                    majorMinorAssignmentMode: Non-unique
                    minor: 1
                    scanningEnabled: true
                    uuid: 00000000-0000-0000-000-000000000000
              schema:
                properties:
                  advertisingEnabled:
                    description: Whether APs will advertise beacons.
                    type: boolean
                  eslEnabled:
                    description: Whether ESL is enabled on this network.
                    type: boolean
                  major:
                    description: The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
                    type: integer
                  majorMinorAssignmentMode:
                    description: The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
                    type: string
                  minor:
                    description: The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
                    type: integer
                  scanningEnabled:
                    description: Whether APs will scan for Bluetooth enabled clients.
                    type: boolean
                  uuid:
                    description: The UUID to be used in the beacon identifier.
                    type: string
                type: object
          description: Successful operation
      summary: Update the Bluetooth settings for a network
      tags:
        - wireless
        - configure
        - bluetooth
        - settings
  "/networks/{networkId}/wireless/channelUtilizationHistory":
    get:
      description: Return AP channel utilization over time for a device or network client
      operationId: getNetworkWirelessChannelUtilizationHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
        - description: Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
          in: query
          name: autoResolution
          schema:
            type: boolean
        - description: Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history.
          in: query
          name: clientId
          schema:
            type: string
        - description: Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified.
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter results by band (either '2.4', '5' or '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - endTs: 2020-01-01T01:00:00Z
                      startTs: 2020-01-01T00:00:00Z
                      utilization80211: 7.22
                      utilizationNon80211: 2.67
                      utilizationTotal: 9.89
              schema:
                items:
                  properties:
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                    utilization80211:
                      description: Average wifi utilization
                      format: float
                      type: number
                    utilizationNon80211:
                      description: Average signal interference
                      format: float
                      type: number
                    utilizationTotal:
                      description: Total channel utilization
                      format: float
                      type: number
                  type: object
                type: array
          description: Successful operation
      summary: Return AP channel utilization over time for a device or network client
      tags:
        - wireless
        - monitor
        - channelUtilizationHistory
  "/networks/{networkId}/wireless/clientCountHistory":
    get:
      description: Return wireless client counts over time for a network, device, or network client
      operationId: getNetworkWirelessClientCountHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
        - description: Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
          in: query
          name: autoResolution
          schema:
            type: boolean
        - description: Filter results by network client to return per-device client counts over time inner joined by the queried client's connection history.
          in: query
          name: clientId
          schema:
            type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter results by AP tag.
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter results by band (either '2.4', '5' or '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clientCount: 14
                      endTs: 2020-01-01T01:00:00Z
                      startTs: 2020-01-01T00:00:00Z
              schema:
                items:
                  properties:
                    clientCount:
                      description: Number of connected clients
                      type: integer
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return wireless client counts over time for a network, device, or network client
      tags:
        - wireless
        - monitor
        - clientCountHistory
  "/networks/{networkId}/wireless/clients/connectionStats":
    get:
      description: Aggregated connectivity info for this network, grouped by clients
      operationId: getNetworkWirelessClientsConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - connectionStats:
                        assoc: 0
                        auth: 4
                        dhcp: 0
                        dns: 0
                        success: 10
                      mac: 00:61:71:c8:51:27
                    - connectionStats:
                        assoc: 0
                        auth: 1
                        dhcp: 0
                        dns: 0
                        success: 24
                      mac: 1c:4d:70:7f:5e:5e
                    - connectionStats:
                        assoc: 1
                        auth: 0
                        dhcp: 0
                        dns: 0
                        success: 16
                      mac: 1c:4d:70:81:8d:0a
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated connectivity info for this network, grouped by clients
      tags:
        - wireless
        - monitor
        - clients
        - connectionStats
  "/networks/{networkId}/wireless/clients/latencyStats":
    get:
      description: Aggregated latency info for this network, grouped by clients
      operationId: getNetworkWirelessClientsLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
        - description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          in: query
          name: fields
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - latencyStats:
                        backgroundTraffic:
                          avg: 606.52
                          rawDistribution:
                            "0": 1234
                            "1": 2345
                            "2": 3456
                            "4": 4567
                            "8": 5678
                            "16": 6789
                            "32": 7890
                            "64": 8901
                            "128": 9012
                            "256": 83
                            "512": 1234
                            "1024": 2345
                            "2048": 9999
                        bestEffortTraffic: same shape as backgroundTraffic
                        videoTraffic: same shape as backgroundTraffic
                        voiceTraffic: same shape as backgroundTraffic
                      mac: 00:61:71:c8:51:27
                    - latencyStats:
                        backgroundTraffic:
                          avg: 606.52
                          rawDistribution:
                            "0": 1234
                            "1": 2345
                            "2": 3456
                            "4": 4567
                            "8": 5678
                            "16": 6789
                            "32": 7890
                            "64": 8901
                            "128": 9012
                            "256": 83
                            "512": 1234
                            "1024": 2345
                            "2048": 9999
                        bestEffortTraffic: same shape as backgroundTraffic
                        videoTraffic: same shape as backgroundTraffic
                        voiceTraffic: same shape as backgroundTraffic
                      mac: 1c:4d:70:7f:5e:5e
                    - latencyStats:
                        backgroundTraffic:
                          avg: 606.52
                          rawDistribution:
                            "0": 1234
                            "1": 2345
                            "2": 3456
                            "4": 4567
                            "8": 5678
                            "16": 6789
                            "32": 7890
                            "64": 8901
                            "128": 9012
                            "256": 83
                            "512": 1234
                            "1024": 2345
                            "2048": 9999
                        bestEffortTraffic: same shape as backgroundTraffic
                        videoTraffic: same shape as backgroundTraffic
                        voiceTraffic: same shape as backgroundTraffic
                      mac: 1c:4d:70:81:8d:0a
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated latency info for this network, grouped by clients
      tags:
        - wireless
        - monitor
        - clients
        - latencyStats
  "/networks/{networkId}/wireless/clients/{clientId}/connectionStats":
    get:
      description: Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.
      operationId: getNetworkWirelessClientConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    connectionStats:
                      assoc: 0
                      auth: 4
                      dhcp: 0
                      dns: 0
                      success: 10
                    mac: 00:61:71:c8:51:27
              schema:
                type: object
          description: Successful operation
      summary: Aggregated connectivity info for a given client on this network
      tags:
        - wireless
        - monitor
        - clients
        - connectionStats
  "/networks/{networkId}/wireless/clients/{clientId}/connectivityEvents":
    get:
      description: List the wireless connectivity events for a client within a network in the timespan.
      operationId: getNetworkWirelessClientConnectivityEvents
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: A list of event types to include. If not specified, events of all types will be returned. Valid types are 'assoc', 'disassoc', 'auth', 'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.
          explode: false
          in: query
          name: types
          schema:
            items:
              enum:
                - assoc
                - auth
                - connection
                - deauth
                - dhcp
                - disassoc
                - dns
                - roam
                - sticky
              type: string
            type: array
          style: form
        - description: A list of severities to include. If not specified, events of all severities will be returned. Valid severities are 'good', 'info', 'warn' and/or 'bad'.
          explode: false
          in: query
          name: includedSeverities
          schema:
            items:
              enum:
                - bad
                - good
                - info
                - warn
              type: string
            type: array
          style: form
        - description: Filter results by band (either '2.4', '5', '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: An SSID number to include. If not specified, events for all SSIDs will be returned.
          in: query
          name: ssidNumber
          schema:
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
            type: integer
        - description: Filter results by an AP's serial number.
          in: query
          name: deviceSerial
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - band: 5
                      channel: 44
                      deviceSerial: Q234-ABCD-5678
                      durationMs: 100.1
                      eventData:
                        clientIp: 10.1.2.3
                      occurredAt: 1518365681
                      rssi: 80
                      severity: bad
                      ssidNumber: 1
                      subtype: radius
                      type: bad
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the wireless connectivity events for a client within a network in the timespan.
      tags:
        - wireless
        - monitor
        - clients
        - connectivityEvents
  "/networks/{networkId}/wireless/clients/{clientId}/latencyHistory":
    get:
      description: "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds."
      operationId: getNetworkWirelessClientLatencyHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 791 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 791 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - latencyBinsByCategory:
                        backgroundTraffic:
                          "0.5": 41750
                          "1.0": 21552
                          "1024.0": 0
                          "128.0": 0
                          "16.0": 0
                          "2.0": 59940
                          "2048.0": 0
                          "256.0": 1896
                          "32.0": 9954
                          "4.0": 146622
                          "512.0": 0
                          "64.0": 0
                          "8.0": 57354
                        bestEffortTraffic:
                          "0.5": 1840899
                          "1.0": 1644506
                          "1024.0": 4943
                          "128.0": 191977
                          "16.0": 1329568
                          "2.0": 629958
                          "2048.0": 12072
                          "256.0": 30560
                          "32.0": 282168
                          "4.0": 449564
                          "512.0": 26032
                          "64.0": 97573
                          "8.0": 2009658
                        videoTraffic:
                          "0.5": 0
                          "1.0": 0
                          "1024.0": 0
                          "128.0": 0
                          "16.0": 0
                          "2.0": 0
                          "2048.0": 0
                          "256.0": 0
                          "32.0": 0
                          "4.0": 0
                          "512.0": 0
                          "64.0": 0
                          "8.0": 0
                        voiceTraffic:
                          "0.5": 716
                          "1.0": 948
                          "1024.0": 0
                          "128.0": 0
                          "16.0": 0
                          "2.0": 474
                          "2048.0": 0
                          "256.0": 0
                          "32.0": 0
                          "4.0": 78
                          "512.0": 0
                          "64.0": 0
                          "8.0": 0
                      t0: 1550534400
                      t1: 1550620800
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the latency history for a client
      tags:
        - wireless
        - monitor
        - clients
        - latencyHistory
  "/networks/{networkId}/wireless/clients/{clientId}/latencyStats":
    get:
      description: Aggregated latency info for a given client on this network. Clients are identified by their MAC.
      operationId: getNetworkWirelessClientLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
        - description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          in: query
          name: fields
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    latencyStats:
                      backgroundTraffic:
                        avg: 606.52
                        rawDistribution:
                          "0": 1234
                          "1": 2345
                          "2": 3456
                          "4": 4567
                          "8": 5678
                          "16": 6789
                          "32": 7890
                          "64": 8901
                          "128": 9012
                          "256": 83
                          "512": 1234
                          "1024": 2345
                          "2048": 9999
                      bestEffortTraffic: same shape as backgroundTraffic
                      videoTraffic: same shape as backgroundTraffic
                      voiceTraffic: same shape as backgroundTraffic
                    mac: 00:61:71:c8:51:27
              schema:
                type: object
          description: Successful operation
      summary: Aggregated latency info for a given client on this network
      tags:
        - wireless
        - monitor
        - clients
        - latencyStats
  "/networks/{networkId}/wireless/connectionStats":
    get:
      description: Aggregated connectivity info for this network
      operationId: getNetworkWirelessConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    assoc: 1
                    auth: 5
                    dhcp: 0
                    dns: 0
                    success: 51
              schema:
                properties:
                  assoc:
                    description: The number of failed association attempts
                    type: integer
                  auth:
                    description: The number of failed authentication attempts
                    type: integer
                  dhcp:
                    description: The number of failed DHCP attempts
                    type: integer
                  dns:
                    description: The number of failed DNS attempts
                    type: integer
                  success:
                    description: The number of successful connection attempts
                    type: integer
                type: object
          description: Successful operation
      summary: Aggregated connectivity info for this network
      tags:
        - wireless
        - monitor
        - connectionStats
  "/networks/{networkId}/wireless/dataRateHistory":
    get:
      description: Return PHY data rates over time for a network, device, or network client
      operationId: getNetworkWirelessDataRateHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
        - description: Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
          in: query
          name: autoResolution
          schema:
            type: boolean
        - description: Filter results by network client.
          in: query
          name: clientId
          schema:
            type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter results by AP tag.
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter results by band (either '2.4', '5' or '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - averageKbps: 151806
                      downloadKbps: 144839
                      endTs: 2020-01-01T01:00:00Z
                      startTs: 2020-01-01T00:00:00Z
                      uploadKbps: 158837
              schema:
                items:
                  properties:
                    averageKbps:
                      description: Average data rate in kilobytes-per-second
                      type: integer
                    downloadKbps:
                      description: Download rate in kilobytes-per-second
                      type: integer
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                    uploadKbps:
                      description: Upload rate in kilobytes-per-second
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: Return PHY data rates over time for a network, device, or network client
      tags:
        - wireless
        - monitor
        - dataRateHistory
  "/networks/{networkId}/wireless/devices/connectionStats":
    get:
      description: Aggregated connectivity info for this network, grouped by node
      operationId: getNetworkWirelessDevicesConnectionStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - connectionStats:
                        assoc: 0
                        auth: 1
                        dhcp: 0
                        dns: 0
                        success: 43
                      serial: Q234-ABCD-5678
              schema:
                items:
                  properties:
                    connectionStats:
                      description: The connection stats of the device
                      properties:
                        assoc:
                          description: The number of failed association attempts
                          type: integer
                        auth:
                          description: The number of failed authentication attempts
                          type: integer
                        dhcp:
                          description: The number of failed DHCP attempts
                          type: integer
                        dns:
                          description: The number of failed DNS attempts
                          type: integer
                        success:
                          description: The number of successful connection attempts
                          type: integer
                      type: object
                    serial:
                      description: The serial number for the device
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated connectivity info for this network, grouped by node
      tags:
        - wireless
        - monitor
        - devices
        - connectionStats
  "/networks/{networkId}/wireless/devices/latencyStats":
    get:
      description: Aggregated latency info for this network, grouped by node
      operationId: getNetworkWirelessDevicesLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
        - description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          in: query
          name: fields
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - latencyStats:
                        backgroundTraffic:
                          avg: 606.52
                          rawDistribution:
                            "0": 1234
                            "1": 2345
                            "2": 3456
                            "4": 4567
                            "8": 5678
                            "16": 6789
                            "32": 7890
                            "64": 8901
                            "128": 9012
                            "256": 83
                            "512": 1234
                            "1024": 2345
                            "2048": 9999
                        bestEffortTraffic: same shape as backgroundTraffic
                        videoTraffic: same shape as backgroundTraffic
                        voiceTraffic: same shape as backgroundTraffic
                      serial: Q2JC-2MJM-FHRD
                    - latencyStats:
                        backgroundTraffic:
                          avg: 606.52
                          rawDistribution:
                            "0": 1234
                            "1": 2345
                            "2": 3456
                            "4": 4567
                            "8": 5678
                            "16": 6789
                            "32": 7890
                            "64": 8901
                            "128": 9012
                            "256": 83
                            "512": 1234
                            "1024": 2345
                            "2048": 9999
                        bestEffortTraffic: same shape as backgroundTraffic
                        videoTraffic: same shape as backgroundTraffic
                        voiceTraffic: same shape as backgroundTraffic
                      serial: Q2FJ-3SHB-Y2K2
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated latency info for this network, grouped by node
      tags:
        - wireless
        - monitor
        - devices
        - latencyStats
  "/networks/{networkId}/wireless/failedConnections":
    get:
      description: List of all failed client connection events on this network in a given time range
      operationId: getNetworkWirelessFailedConnections
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter by AP
          in: query
          name: serial
          schema:
            type: string
        - description: Filter by client MAC
          in: query
          name: clientId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clientMac: 22:33:44:55:66:77
                      failureStep: dns
                      serial: Q234-ABCD-5678
                      ssidNumber: 1
                      ts: 2018-02-11T00:00:00.090210Z
                      type: 802.1X auth fail
                      vlan: 100
              schema:
                items:
                  properties:
                    clientMac:
                      description: Client Mac
                      type: string
                    failureStep:
                      description: "The failed onboarding step. One of: assoc, auth, dhcp, dns."
                      type: string
                    serial:
                      description: Serial Number
                      type: string
                    ssidNumber:
                      description: SSID Number
                      type: integer
                    ts:
                      description: The timestamp when the client mac failed
                      format: date-time
                      type: string
                    type:
                      description: The failure type in the onboarding step
                      type: string
                    vlan:
                      description: LAN
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: List of all failed client connection events on this network in a given time range
      tags:
        - wireless
        - monitor
        - failedConnections
  "/networks/{networkId}/wireless/latencyHistory":
    get:
      description: Return average wireless latency over time for a network, device, or network client
      operationId: getNetworkWirelessLatencyHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
        - description: Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
          in: query
          name: autoResolution
          schema:
            type: boolean
        - description: Filter results by network client.
          in: query
          name: clientId
          schema:
            type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter results by AP tag.
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter results by band (either '2.4', '5' or '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter by access category.
          in: query
          name: accessCategory
          schema:
            enum:
              - backgroundTraffic
              - bestEffortTraffic
              - videoTraffic
              - voiceTraffic
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - avgLatencyMs: 29
                      endTs: 2020-01-01T01:00:00Z
                      startTs: 2020-01-01T00:00:00Z
              schema:
                items:
                  properties:
                    avgLatencyMs:
                      description: Average latency in milliseconds
                      type: integer
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return average wireless latency over time for a network, device, or network client
      tags:
        - wireless
        - monitor
        - latencyHistory
  "/networks/{networkId}/wireless/latencyStats":
    get:
      description: Aggregated latency info for this network
      operationId: getNetworkWirelessLatencyStats
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 180 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Filter results by band (either '2.4', '5' or '6'). Note that data prior to February 2020 will not have band information.
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID
          in: query
          name: ssid
          schema:
            type: integer
        - description: Filter results by VLAN
          in: query
          name: vlan
          schema:
            type: integer
        - description: Filter results by AP Tag
          in: query
          name: apTag
          schema:
            type: string
        - description: 'Partial selection: If present, this call will return only the selected fields of ["rawDistribution", "avg"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.'
          in: query
          name: fields
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    backgroundTraffic:
                      avg: 606.52
                      rawDistribution:
                        "0": 1234
                        "1": 2345
                        "2": 3456
                        "4": 4567
                        "8": 5678
                        "16": 6789
                        "32": 7890
                        "64": 8901
                        "128": 9012
                        "256": 83
                        "512": 1234
                        "1024": 2345
                        "2048": 9999
                    bestEffortTraffic: same shape as backgroundTraffic
                    videoTraffic: same shape as backgroundTraffic
                    voiceTraffic: same shape as backgroundTraffic
              schema:
                type: object
          description: Successful operation
      summary: Aggregated latency info for this network
      tags:
        - wireless
        - monitor
        - latencyStats
  "/networks/{networkId}/wireless/meshStatuses":
    get:
      description: List wireless mesh statuses for repeaters
      operationId: getNetworkWirelessMeshStatuses
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 500. Default is 50.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    latestMeshPerformance:
                      mbps: 43
                      metric: 12345
                      usagePercentage: 100%
                    meshRoute:
                      - Q234-ABCD-5678
                      - QWEY-SKTD-ST01
                      - QWEY-SKTD-ST02
                    serial: Q234-ABCD-5678
              schema:
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List wireless mesh statuses for repeaters
      tags:
        - wireless
        - monitor
        - meshStatuses
  "/networks/{networkId}/wireless/rfProfiles":
    get:
      description: List the non-basic RF profiles for this network
      operationId: getNetworkWirelessRfProfiles
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.
          in: query
          name: includeTemplateProfiles
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - afcEnabled: true
                      apBandSettings:
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                      bandSelectionType: ap
                      clientBalancingEnabled: true
                      fiveGhzSettings:
                        channelWidth: auto
                        maxPower: 30
                        minBitrate: 12
                        minPower: 8
                        rxsop: null
                        validAutoChannels:
                          - 36
                          - 40
                          - 44
                          - 48
                          - 52
                          - 56
                          - 60
                          - 64
                          - 100
                          - 104
                          - 108
                          - 112
                          - 116
                          - 120
                          - 124
                          - 128
                          - 132
                          - 136
                          - 140
                          - 144
                          - 149
                          - 153
                          - 157
                          - 161
                          - 165
                      id: "1234"
                      minBitrateType: band
                      name: Some Custom RF Profile
                      networkId: N_24329156
                      perSsidSettings:
                        "0":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 0
                        "1":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 1
                        "2":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 2
                        "3":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 3
                        "4":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 4
                        "5":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 5
                        "6":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 6
                        "7":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 7
                        "8":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 8
                        "9":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 9
                        "10":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 10
                        "11":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 11
                        "12":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 12
                        "13":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 13
                        "14":
                          bandOperationMode: dual
                          bandSteeringEnabled: true
                          minBitrate: 11
                          name: SSID 14
                      transmission:
                        enabled: true
                      twoFourGhzSettings:
                        axEnabled: true
                        maxPower: 30
                        minBitrate: 11
                        minPower: 5
                        rxsop: null
                        validAutoChannels:
                          - 1
                          - 6
                          - 11
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the non-basic RF profiles for this network
      tags:
        - wireless
        - configure
        - rfProfiles
    post:
      description: Creates new RF profile for this network
      operationId: createNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                bandSelectionType: ap
                clientBalancingEnabled: true
                fiveGhzSettings:
                  channelWidth: auto
                  maxPower: 30
                  minBitrate: 12
                  minPower: 8
                  rxsop: -95
                  validAutoChannels:
                    - 36
                    - 40
                    - 44
                    - 48
                    - 52
                    - 56
                    - 60
                    - 64
                    - 100
                    - 104
                    - 108
                    - 112
                    - 116
                    - 120
                    - 124
                    - 128
                    - 132
                    - 136
                    - 140
                    - 144
                    - 149
                    - 153
                    - 157
                    - 161
                    - 165
                minBitrateType: band
                name: Main Office
                perSsidSettings:
                  "0":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "1":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "2":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "3":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "4":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "5":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "6":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "7":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "8":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "9":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "10":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "11":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "12":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "13":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "14":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                transmission:
                  enabled: true
                twoFourGhzSettings:
                  axEnabled: true
                  maxPower: 30
                  minBitrate: 11
                  minPower: 5
                  rxsop: -95
                  validAutoChannels:
                    - 1
                    - 6
                    - 11
              properties:
                apBandSettings:
                  description: Settings that will be enabled if selectionType is set to 'ap'.
                  properties:
                    bandOperationMode:
                      description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
                      enum:
                        - 2.4ghz
                        - 5ghz
                        - dual
                      type: string
                    bandSteeringEnabled:
                      description: Steers client to most open band. Can be either true or false. Defaults to true.
                      type: boolean
                  type: object
                bandSelectionType:
                  description: Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
                  enum:
                    - ap
                    - ssid
                  type: string
                clientBalancingEnabled:
                  description: Steers client to best available access point. Can be either true or false. Defaults to true.
                  type: boolean
                fiveGhzSettings:
                  description: Settings related to 5Ghz band
                  properties:
                    channelWidth:
                      description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
                      type: string
                    maxPower:
                      description: Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 30.
                      type: integer
                    minBitrate:
                      description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
                      type: integer
                    minPower:
                      description: Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 8.
                      type: integer
                    rxsop:
                      description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                      type: integer
                    validAutoChannels:
                      description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
                      items:
                        type: integer
                      type: array
                  type: object
                minBitrateType:
                  description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
                  enum:
                    - band
                    - ssid
                  type: string
                name:
                  description: The name of the new profile. Must be unique. This param is required on creation.
                  type: string
                perSsidSettings:
                  description: Per-SSID radio settings by number.
                  properties:
                    "0":
                      description: Settings for SSID 0
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "1":
                      description: Settings for SSID 1
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "2":
                      description: Settings for SSID 2
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "3":
                      description: Settings for SSID 3
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "4":
                      description: Settings for SSID 4
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "5":
                      description: Settings for SSID 5
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "6":
                      description: Settings for SSID 6
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "7":
                      description: Settings for SSID 7
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "8":
                      description: Settings for SSID 8
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "9":
                      description: Settings for SSID 9
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "10":
                      description: Settings for SSID 10
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "11":
                      description: Settings for SSID 11
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "12":
                      description: Settings for SSID 12
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "13":
                      description: Settings for SSID 13
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "14":
                      description: Settings for SSID 14
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                  type: object
                transmission:
                  description: Settings related to radio transmission.
                  properties:
                    enabled:
                      description: Toggle for radio transmission. When false, radios will not transmit at all.
                      type: boolean
                  type: object
                twoFourGhzSettings:
                  description: Settings related to 2.4Ghz band
                  properties:
                    axEnabled:
                      description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
                      type: boolean
                    maxPower:
                      description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
                      type: integer
                    minBitrate:
                      description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
                      format: float
                      type: number
                    minPower:
                      description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
                      type: integer
                    rxsop:
                      description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                      type: integer
                    validAutoChannels:
                      description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
                      items:
                        type: integer
                      type: array
                  type: object
              required:
                - name
                - bandSelectionType
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    apBandSettings:
                      bandOperationMode: dual
                      bandSteeringEnabled: true
                    bandSelectionType: ap
                    clientBalancingEnabled: true
                    fiveGhzSettings:
                      channelWidth: auto
                      maxPower: 30
                      minBitrate: 12
                      minPower: 8
                      rxsop: -95
                      validAutoChannels:
                        - 36
                        - 40
                        - 44
                        - 48
                        - 52
                        - 56
                        - 60
                        - 64
                        - 100
                        - 104
                        - 108
                        - 112
                        - 116
                        - 120
                        - 124
                        - 128
                        - 132
                        - 136
                        - 140
                        - 144
                        - 149
                        - 153
                        - 157
                        - 161
                        - 165
                    id: "1234"
                    minBitrateType: band
                    name: Main Office
                    networkId: N_24329156
                    perSsidSettings:
                      "0":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 0
                      "1":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 1
                      "2":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 2
                      "3":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 3
                      "4":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 4
                      "5":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 5
                      "6":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 6
                      "7":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 7
                      "8":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 8
                      "9":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 9
                      "10":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 10
                      "11":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 11
                      "12":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 12
                      "13":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 13
                      "14":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 14
                    transmission:
                      enabled: true
                    twoFourGhzSettings:
                      axEnabled: true
                      maxPower: 30
                      minBitrate: 11
                      minPower: 5
                      rxsop: -95
                      validAutoChannels:
                        - 1
                        - 6
                        - 11
              schema:
                properties:
                  apBandSettings:
                    description: Settings that will be enabled if selectionType is set to 'ap'.
                    properties:
                      bandOperationMode:
                        description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
                        type: string
                      bandSteeringEnabled:
                        description: Steers client to most open band. Can be either true or false. Defaults to true.
                        type: boolean
                    type: object
                  bandSelectionType:
                    description: Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
                    type: string
                  clientBalancingEnabled:
                    description: Steers client to best available access point. Can be either true or false. Defaults to true.
                    type: boolean
                  fiveGhzSettings:
                    description: Settings related to 5Ghz band
                    properties:
                      channelWidth:
                        description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
                        type: string
                      maxPower:
                        description: Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 30.
                        type: integer
                      minBitrate:
                        description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
                        type: integer
                      minPower:
                        description: Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 8.
                        type: integer
                      rxsop:
                        description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                        type: integer
                      validAutoChannels:
                        description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
                        items:
                          type: integer
                        type: array
                    type: object
                  id:
                    description: The name of the new profile. Must be unique.
                    type: string
                  minBitrateType:
                    description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
                    type: string
                  name:
                    description: The name of the new profile. Must be unique. This param is required on creation.
                    type: string
                  networkId:
                    description: The network ID of the RF Profile
                    type: string
                  perSsidSettings:
                    description: Per-SSID radio settings by number.
                    properties:
                      "0":
                        description: Settings for SSID 0
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "1":
                        description: Settings for SSID 1
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "2":
                        description: Settings for SSID 2
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "3":
                        description: Settings for SSID 3
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "4":
                        description: Settings for SSID 4
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "5":
                        description: Settings for SSID 5
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "6":
                        description: Settings for SSID 6
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "7":
                        description: Settings for SSID 7
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "8":
                        description: Settings for SSID 8
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "9":
                        description: Settings for SSID 9
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "10":
                        description: Settings for SSID 10
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "11":
                        description: Settings for SSID 11
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "12":
                        description: Settings for SSID 12
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "13":
                        description: Settings for SSID 13
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "14":
                        description: Settings for SSID 14
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                    type: object
                  transmission:
                    description: Settings related to radio transmission.
                    properties:
                      enabled:
                        description: Toggle for radio transmission. When false, radios will not transmit at all.
                        type: boolean
                    type: object
                  twoFourGhzSettings:
                    description: Settings related to 2.4Ghz band
                    properties:
                      axEnabled:
                        description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
                        type: boolean
                      maxPower:
                        description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
                        type: integer
                      minBitrate:
                        description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
                        format: float
                        type: number
                      minPower:
                        description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
                        type: integer
                      rxsop:
                        description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                        type: integer
                      validAutoChannels:
                        description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
                        items:
                          type: integer
                        type: array
                    type: object
                type: object
          description: Successful operation
      summary: Creates new RF profile for this network
      tags:
        - wireless
        - configure
        - rfProfiles
  "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}":
    delete:
      description: Delete a RF Profile
      operationId: deleteNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: rfProfileId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a RF Profile
      tags:
        - wireless
        - configure
        - rfProfiles
    get:
      description: Return a RF profile
      operationId: getNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: rfProfileId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    afcEnabled: true
                    apBandSettings:
                      bandOperationMode: dual
                      bandSteeringEnabled: true
                    bandSelectionType: ap
                    clientBalancingEnabled: true
                    fiveGhzSettings:
                      channelWidth: auto
                      maxPower: 30
                      minBitrate: 12
                      minPower: 8
                      rxsop: null
                      validAutoChannels:
                        - 36
                        - 40
                        - 44
                        - 48
                        - 52
                        - 56
                        - 60
                        - 64
                        - 100
                        - 104
                        - 108
                        - 112
                        - 116
                        - 120
                        - 124
                        - 128
                        - 132
                        - 136
                        - 140
                        - 144
                        - 149
                        - 153
                        - 157
                        - 161
                        - 165
                    id: "1234"
                    minBitrateType: band
                    name: Some Custom RF Profile
                    networkId: N_24329156
                    perSsidSettings:
                      "0":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 0
                      "1":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 1
                      "2":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 2
                      "3":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 3
                      "4":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 4
                      "5":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 5
                      "6":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 6
                      "7":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 7
                      "8":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 8
                      "9":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 9
                      "10":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 10
                      "11":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 11
                      "12":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 12
                      "13":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 13
                      "14":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 14
                    transmission:
                      enabled: true
                    twoFourGhzSettings:
                      axEnabled: true
                      maxPower: 30
                      minBitrate: 11
                      minPower: 5
                      rxsop: null
                      validAutoChannels:
                        - 1
                        - 6
                        - 11
              schema:
                type: object
          description: Successful operation
      summary: Return a RF profile
      tags:
        - wireless
        - configure
        - rfProfiles
    put:
      description: Updates specified RF profile for this network
      operationId: updateNetworkWirelessRfProfile
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: rfProfileId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                bandSelectionType: ap
                clientBalancingEnabled: true
                fiveGhzSettings:
                  channelWidth: auto
                  maxPower: 30
                  minBitrate: 12
                  minPower: 8
                  rxsop: -95
                  validAutoChannels:
                    - 36
                    - 40
                    - 44
                    - 48
                    - 52
                    - 56
                    - 60
                    - 64
                    - 100
                    - 104
                    - 108
                    - 112
                    - 116
                    - 120
                    - 124
                    - 128
                    - 132
                    - 136
                    - 140
                    - 144
                    - 149
                    - 153
                    - 157
                    - 161
                    - 165
                minBitrateType: band
                name: "1234"
                perSsidSettings:
                  "0":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "1":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "2":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "3":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "4":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "5":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "6":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "7":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "8":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "9":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "10":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "11":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "12":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "13":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                  "14":
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                    minBitrate: 11
                transmission:
                  enabled: true
                twoFourGhzSettings:
                  axEnabled: true
                  maxPower: 30
                  minBitrate: 11
                  minPower: 5
                  rxsop: -95
                  validAutoChannels:
                    - 1
                    - 6
                    - 11
              properties:
                apBandSettings:
                  description: Settings that will be enabled if selectionType is set to 'ap'.
                  properties:
                    bandOperationMode:
                      description: Choice between 'dual', '2.4ghz' or '5ghz'.
                      enum:
                        - 2.4ghz
                        - 5ghz
                        - dual
                      type: string
                    bandSteeringEnabled:
                      description: Steers client to most open band. Can be either true or false.
                      type: boolean
                  type: object
                bandSelectionType:
                  description: Band selection can be set to either 'ssid' or 'ap'.
                  enum:
                    - ap
                    - ssid
                  type: string
                clientBalancingEnabled:
                  description: Steers client to best available access point. Can be either true or false.
                  type: boolean
                fiveGhzSettings:
                  description: Settings related to 5Ghz band
                  properties:
                    channelWidth:
                      description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'.
                      type: string
                    maxPower:
                      description: Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30.
                      type: integer
                    minBitrate:
                      description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'.
                      type: integer
                    minPower:
                      description: Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30.
                      type: integer
                    rxsop:
                      description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                      type: integer
                    validAutoChannels:
                      description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.
                      items:
                        type: integer
                      type: array
                  type: object
                minBitrateType:
                  description: Minimum bitrate can be set to either 'band' or 'ssid'.
                  enum:
                    - band
                    - ssid
                  type: string
                name:
                  description: The name of the new profile. Must be unique.
                  type: string
                perSsidSettings:
                  description: Per-SSID radio settings by number.
                  properties:
                    "0":
                      description: Settings for SSID 0
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "1":
                      description: Settings for SSID 1
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "2":
                      description: Settings for SSID 2
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "3":
                      description: Settings for SSID 3
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "4":
                      description: Settings for SSID 4
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "5":
                      description: Settings for SSID 5
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "6":
                      description: Settings for SSID 6
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "7":
                      description: Settings for SSID 7
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "8":
                      description: Settings for SSID 8
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "9":
                      description: Settings for SSID 9
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "10":
                      description: Settings for SSID 10
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "11":
                      description: Settings for SSID 11
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "12":
                      description: Settings for SSID 12
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "13":
                      description: Settings for SSID 13
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                    "14":
                      description: Settings for SSID 14
                      properties:
                        bandOperationMode:
                          description: Choice between 'dual', '2.4ghz' or '5ghz'.
                          enum:
                            - 2.4ghz
                            - 5ghz
                            - dual
                          type: string
                        bandSteeringEnabled:
                          description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                          type: boolean
                        minBitrate:
                          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                          format: float
                          type: number
                      type: object
                  type: object
                transmission:
                  description: Settings related to radio transmission.
                  properties:
                    enabled:
                      description: Toggle for radio transmission. When false, radios will not transmit at all.
                      type: boolean
                  type: object
                twoFourGhzSettings:
                  description: Settings related to 2.4Ghz band
                  properties:
                    axEnabled:
                      description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering.
                      type: boolean
                    maxPower:
                      description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30.
                      type: integer
                    minBitrate:
                      description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                      format: float
                      type: number
                    minPower:
                      description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30.
                      type: integer
                    rxsop:
                      description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                      type: integer
                    validAutoChannels:
                      description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'.
                      items:
                        type: integer
                      type: array
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    apBandSettings:
                      bandOperationMode: dual
                      bandSteeringEnabled: true
                    bandSelectionType: ap
                    clientBalancingEnabled: true
                    fiveGhzSettings:
                      channelWidth: auto
                      maxPower: 30
                      minBitrate: 12
                      minPower: 8
                      rxsop: -95
                      validAutoChannels:
                        - 36
                        - 40
                        - 44
                        - 48
                        - 52
                        - 56
                        - 60
                        - 64
                        - 100
                        - 104
                        - 108
                        - 112
                        - 116
                        - 120
                        - 124
                        - 128
                        - 132
                        - 136
                        - 140
                        - 144
                        - 149
                        - 153
                        - 157
                        - 161
                        - 165
                    id: "1234"
                    minBitrateType: band
                    name: Main Office
                    networkId: N_24329156
                    perSsidSettings:
                      "0":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 0
                      "1":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 1
                      "2":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 2
                      "3":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 3
                      "4":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 4
                      "5":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 5
                      "6":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 6
                      "7":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 7
                      "8":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 8
                      "9":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 9
                      "10":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 10
                      "11":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 11
                      "12":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 12
                      "13":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 13
                      "14":
                        bandOperationMode: dual
                        bandSteeringEnabled: true
                        minBitrate: 11
                        name: SSID 14
                    transmission:
                      enabled: true
                    twoFourGhzSettings:
                      axEnabled: true
                      maxPower: 30
                      minBitrate: 11
                      minPower: 5
                      rxsop: -95
                      validAutoChannels:
                        - 1
                        - 6
                        - 11
              schema:
                properties:
                  apBandSettings:
                    description: Settings that will be enabled if selectionType is set to 'ap'.
                    properties:
                      bandOperationMode:
                        description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
                        type: string
                      bandSteeringEnabled:
                        description: Steers client to most open band. Can be either true or false. Defaults to true.
                        type: boolean
                    type: object
                  bandSelectionType:
                    description: Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
                    type: string
                  clientBalancingEnabled:
                    description: Steers client to best available access point. Can be either true or false. Defaults to true.
                    type: boolean
                  fiveGhzSettings:
                    description: Settings related to 5Ghz band
                    properties:
                      channelWidth:
                        description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
                        type: string
                      maxPower:
                        description: Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 30.
                        type: integer
                      minBitrate:
                        description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
                        type: integer
                      minPower:
                        description: Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 8.
                        type: integer
                      rxsop:
                        description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                        type: integer
                      validAutoChannels:
                        description: Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
                        items:
                          type: integer
                        type: array
                    type: object
                  id:
                    description: The name of the new profile. Must be unique.
                    type: string
                  minBitrateType:
                    description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
                    type: string
                  name:
                    description: The name of the new profile. Must be unique. This param is required on creation.
                    type: string
                  networkId:
                    description: The network ID of the RF Profile
                    type: string
                  perSsidSettings:
                    description: Per-SSID radio settings by number.
                    properties:
                      "0":
                        description: Settings for SSID 0
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "1":
                        description: Settings for SSID 1
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "2":
                        description: Settings for SSID 2
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "3":
                        description: Settings for SSID 3
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "4":
                        description: Settings for SSID 4
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "5":
                        description: Settings for SSID 5
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "6":
                        description: Settings for SSID 6
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "7":
                        description: Settings for SSID 7
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "8":
                        description: Settings for SSID 8
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "9":
                        description: Settings for SSID 9
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "10":
                        description: Settings for SSID 10
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "11":
                        description: Settings for SSID 11
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "12":
                        description: Settings for SSID 12
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "13":
                        description: Settings for SSID 13
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                      "14":
                        description: Settings for SSID 14
                        properties:
                          bandOperationMode:
                            description: Choice between 'dual', '2.4ghz' or '5ghz'.
                            enum:
                              - 2.4ghz
                              - 5ghz
                              - dual
                            type: string
                          bandSteeringEnabled:
                            description: Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
                            type: boolean
                          minBitrate:
                            description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
                            type: integer
                          name:
                            description: Name of SSID
                            type: string
                        type: object
                    type: object
                  transmission:
                    description: Settings related to radio transmission.
                    properties:
                      enabled:
                        description: Toggle for radio transmission. When false, radios will not transmit at all.
                        type: boolean
                    type: object
                  twoFourGhzSettings:
                    description: Settings related to 2.4Ghz band
                    properties:
                      axEnabled:
                        description: Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
                        type: boolean
                      maxPower:
                        description: Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
                        type: integer
                      minBitrate:
                        description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
                        format: float
                        type: number
                      minPower:
                        description: Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
                        type: integer
                      rxsop:
                        description: The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
                        type: integer
                      validAutoChannels:
                        description: Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
                        items:
                          type: integer
                        type: array
                    type: object
                type: object
          description: Successful operation
      summary: Updates specified RF profile for this network
      tags:
        - wireless
        - configure
        - rfProfiles
  "/networks/{networkId}/wireless/settings":
    get:
      description: Return the wireless settings for a network
      operationId: getNetworkWirelessSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipv6BridgeEnabled: false
                    ledLightsOn: false
                    locationAnalyticsEnabled: false
                    meshingEnabled: true
                    namedVlans:
                      poolDhcpMonitoring:
                        duration: 5
                        enabled: true
                    upgradeStrategy: minimizeUpgradeTime
              schema:
                properties:
                  ipv6BridgeEnabled:
                    description: "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                    type: boolean
                  ledLightsOn:
                    description: Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
                    type: boolean
                  locationAnalyticsEnabled:
                    description: Toggle for enabling or disabling location analytics for your network
                    type: boolean
                  meshingEnabled:
                    description: Toggle for enabling or disabling meshing in a network
                    type: boolean
                  namedVlans:
                    description: Named VLAN settings for wireless networks.
                    properties:
                      poolDhcpMonitoring:
                        description: Named VLAN Pool DHCP Monitoring settings.
                        properties:
                          duration:
                            description: The duration in minutes that devices will refrain from using dirty VLANs before adding them back to the pool.
                            type: integer
                          enabled:
                            description: Whether or not devices using named VLAN pools should remove dirty VLANs from the pool, thereby preventing clients from being assigned to VLANs where they would be unable to obtain an IP address via DHCP
                            type: boolean
                        type: object
                    type: object
                  upgradeStrategy:
                    description: The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
                    enum:
                      - minimizeClientDowntime
                      - minimizeUpgradeTime
                    type: string
                type: object
          description: Successful operation
      summary: Return the wireless settings for a network
      tags:
        - wireless
        - configure
        - settings
    put:
      description: Update the wireless settings for a network
      operationId: updateNetworkWirelessSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                ipv6BridgeEnabled: false
                ledLightsOn: false
                locationAnalyticsEnabled: false
                meshingEnabled: true
                upgradeStrategy: minimizeUpgradeTime
              properties:
                ipv6BridgeEnabled:
                  description: "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                  type: boolean
                ledLightsOn:
                  description: Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
                  type: boolean
                locationAnalyticsEnabled:
                  description: Toggle for enabling or disabling location analytics for your network
                  type: boolean
                meshingEnabled:
                  description: Toggle for enabling or disabling meshing in a network
                  type: boolean
                upgradeStrategy:
                  description: The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
                  enum:
                    - minimizeClientDowntime
                    - minimizeUpgradeTime
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    ipv6BridgeEnabled: false
                    ledLightsOn: false
                    locationAnalyticsEnabled: false
                    meshingEnabled: true
                    namedVlans:
                      poolDhcpMonitoring:
                        duration: 5
                        enabled: true
                    upgradeStrategy: minimizeUpgradeTime
              schema:
                properties:
                  ipv6BridgeEnabled:
                    description: "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                    type: boolean
                  ledLightsOn:
                    description: Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
                    type: boolean
                  locationAnalyticsEnabled:
                    description: Toggle for enabling or disabling location analytics for your network
                    type: boolean
                  meshingEnabled:
                    description: Toggle for enabling or disabling meshing in a network
                    type: boolean
                  namedVlans:
                    description: Named VLAN settings for wireless networks.
                    properties:
                      poolDhcpMonitoring:
                        description: Named VLAN Pool DHCP Monitoring settings.
                        properties:
                          duration:
                            description: The duration in minutes that devices will refrain from using dirty VLANs before adding them back to the pool.
                            type: integer
                          enabled:
                            description: Whether or not devices using named VLAN pools should remove dirty VLANs from the pool, thereby preventing clients from being assigned to VLANs where they would be unable to obtain an IP address via DHCP
                            type: boolean
                        type: object
                    type: object
                  upgradeStrategy:
                    description: The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
                    enum:
                      - minimizeClientDowntime
                      - minimizeUpgradeTime
                    type: string
                type: object
          description: Successful operation
      summary: Update the wireless settings for a network
      tags:
        - wireless
        - configure
        - settings
  "/networks/{networkId}/wireless/signalQualityHistory":
    get:
      description: Return signal quality (SNR/RSSI) over time for a device or network client
      operationId: getNetworkWirelessSignalQualityHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
        - description: Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
          in: query
          name: autoResolution
          schema:
            type: boolean
        - description: Filter results by network client.
          in: query
          name: clientId
          schema:
            type: string
        - description: Filter results by device.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter results by band (either '2.4', '5' or '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - endTs: 2020-01-01T01:00:00Z
                      rssi: -77
                      snr: 27
                      startTs: 2020-01-01T00:00:00Z
              schema:
                items:
                  properties:
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    rssi:
                      description: Received signal strength indicator
                      type: integer
                    snr:
                      description: Signal to noise ratio
                      type: integer
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return signal quality (SNR/RSSI) over time for a device or network client
      tags:
        - wireless
        - monitor
        - signalQualityHistory
  "/networks/{networkId}/wireless/ssids":
    get:
      description: List the MR SSIDs in a network
      operationId: getNetworkWirelessSsids
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - adminSplashUrl: http://example.com
                      authMode: 8021x-radius
                      availabilityTags:
                        - test-tag
                      availableOnAllAps: false
                      bandSelection: 5 GHz band only
                      enabled: true
                      encryptionMode: wpa-eap
                      ipAssignmentMode: NAT mode
                      mandatoryDhcpEnabled: false
                      minBitrate: 11
                      name: My SSID
                      number: 0
                      perClientBandwidthLimitDown: 0
                      perClientBandwidthLimitUp: 0
                      perSsidBandwidthLimitDown: 0
                      perSsidBandwidthLimitUp: 0
                      radiusAccountingEnabled: false
                      radiusAccountingServers:
                        - caCertificate: |-
                            -----BEGIN CERTIFICATE-----
                            MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                            gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                            YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                            RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                            MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                            YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                            aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                            MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                            uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                            ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                            pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                            KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                            aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                            CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                            USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                            BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                            1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                            jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                            a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                            uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                            UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                            wTw70BVktzJnb0VLeDg=
                            -----END CERTIFICATE-----
                          host: 0.0.0.0
                          openRoamingCertificateId: 2
                          port: 3000
                      radiusAttributeForGroupPolicies: Filter-Id
                      radiusEnabled: true
                      radiusFailoverPolicy: "null"
                      radiusLoadBalancingPolicy: "null"
                      radiusServers:
                        - caCertificate: |-
                            -----BEGIN CERTIFICATE-----
                            MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                            gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                            YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                            RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                            MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                            YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                            aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                            MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                            uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                            ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                            pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                            KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                            aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                            CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                            USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                            BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                            1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                            jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                            a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                            uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                            UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                            wTw70BVktzJnb0VLeDg=
                            -----END CERTIFICATE-----
                          host: 0.0.0.0
                          openRoamingCertificateId: 2
                          port: 3000
                      splashPage: Click-through splash page
                      splashTimeout: 30 minutes
                      ssidAdminAccessible: false
                      visible: true
                      walledGardenEnabled: true
                      walledGardenRanges:
                        - example.com
                        - 1.1.1.1/32
                      wpaEncryptionMode: WPA2 only
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the MR SSIDs in a network
      tags:
        - wireless
        - configure
        - ssids
  "/networks/{networkId}/wireless/ssids/{number}":
    get:
      description: Return a single MR SSID
      operationId: getNetworkWirelessSsid
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    adminSplashUrl: http://example.com
                    authMode: 8021x-radius
                    availabilityTags:
                      - test-tag
                    availableOnAllAps: false
                    bandSelection: 5 GHz band only
                    enabled: true
                    encryptionMode: wpa-eap
                    ipAssignmentMode: NAT mode
                    mandatoryDhcpEnabled: false
                    minBitrate: 11
                    name: My SSID
                    number: 0
                    perClientBandwidthLimitDown: 0
                    perClientBandwidthLimitUp: 0
                    perSsidBandwidthLimitDown: 0
                    perSsidBandwidthLimitUp: 0
                    radiusAccountingEnabled: false
                    radiusAccountingServers:
                      - caCertificate: |-
                          -----BEGIN CERTIFICATE-----
                          MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                          gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                          YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                          RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                          MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                          YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                          aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                          MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                          uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                          ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                          pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                          KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                          aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                          CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                          USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                          BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                          1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                          jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                          a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                          uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                          UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                          wTw70BVktzJnb0VLeDg=
                          -----END CERTIFICATE-----
                        host: 0.0.0.0
                        openRoamingCertificateId: 2
                        port: 3000
                    radiusAttributeForGroupPolicies: Filter-Id
                    radiusEnabled: true
                    radiusFailoverPolicy: "null"
                    radiusLoadBalancingPolicy: "null"
                    radiusServers:
                      - caCertificate: |-
                          -----BEGIN CERTIFICATE-----
                          MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                          gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                          YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                          RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                          MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                          YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                          aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                          MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                          uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                          ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                          pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                          KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                          aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                          CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                          USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                          BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                          1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                          jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                          a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                          uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                          UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                          wTw70BVktzJnb0VLeDg=
                          -----END CERTIFICATE-----
                        host: 0.0.0.0
                        openRoamingCertificateId: 2
                        port: 3000
                    splashPage: Click-through splash page
                    splashTimeout: 30 minutes
                    ssidAdminAccessible: false
                    visible: true
                    walledGardenEnabled: true
                    walledGardenRanges:
                      - example.com
                      - 1.1.1.1/32
                    wpaEncryptionMode: WPA2 only
              schema:
                type: object
          description: Successful operation
      summary: Return a single MR SSID
      tags:
        - wireless
        - configure
        - ssids
    put:
      description: Update the attributes of an MR SSID
      operationId: updateNetworkWirelessSsid
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                name: My SSID
              properties:
                activeDirectory:
                  description: The current setting for Active Directory. Only valid if splashPage is 'Password-protected with Active Directory'
                  properties:
                    credentials:
                      description: (Optional) The credentials of the user account to be used by the AP to bind to your Active Directory server. The Active Directory account should have permissions on all your Active Directory servers. Only valid if the splashPage is 'Password-protected with Active Directory'.
                      properties:
                        logonName:
                          description: The logon name of the Active Directory account.
                          type: string
                        password:
                          description: The password to the Active Directory user account.
                          type: string
                      type: object
                    servers:
                      description: The Active Directory servers to be used for authentication.
                      items:
                        properties:
                          host:
                            description: IP address of your Active Directory server.
                            type: string
                          port:
                            description: (Optional) UDP port the Active Directory server listens on. By default, uses port 3268.
                            type: integer
                        required:
                          - host
                        type: object
                      type: array
                  type: object
                adultContentFilteringEnabled:
                  description: Boolean indicating whether or not adult content will be blocked
                  type: boolean
                apTagsAndVlanIds:
                  description: The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
                  items:
                    properties:
                      tags:
                        description: Array of AP tags
                        items:
                          type: string
                        type: array
                      vlanId:
                        description: Numerical identifier that is assigned to the VLAN
                        type: integer
                    type: object
                  type: array
                authMode:
                  description: The association control method for the SSID ('open', 'open-enhanced', 'psk', 'open-with-radius', 'open-with-nac', '8021x-meraki', '8021x-nac', '8021x-radius', '8021x-google', '8021x-localradius', 'ipsk-with-radius' or 'ipsk-without-radius')
                  enum:
                    - 8021x-google
                    - 8021x-localradius
                    - 8021x-meraki
                    - 8021x-nac
                    - 8021x-radius
                    - ipsk-with-radius
                    - ipsk-without-radius
                    - open
                    - open-enhanced
                    - open-with-nac
                    - open-with-radius
                    - psk
                  type: string
                availabilityTags:
                  description: Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list.
                  items:
                    type: string
                  type: array
                availableOnAllAps:
                  description: Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags.
                  type: boolean
                bandSelection:
                  description: The client-serving radio frequencies of this SSID in the default indoor RF profile. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')
                  type: string
                concentratorNetworkId:
                  description: The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.
                  type: string
                defaultVlanId:
                  description: The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
                  type: integer
                disassociateClientsOnVpnFailover:
                  description: Disassociate clients when 'VPN' concentrator failover occurs in order to trigger clients to re-associate and generate new DHCP requests. This param is only valid if ipAssignmentMode is 'VPN'.
                  type: boolean
                dnsRewrite:
                  description: DNS servers rewrite settings
                  properties:
                    dnsCustomNameservers:
                      description: User specified DNS servers (up to two servers)
                      items:
                        type: string
                      type: array
                    enabled:
                      description: Boolean indicating whether or not DNS server rewrite is enabled. If disabled, upstream DNS will be used
                      type: boolean
                  type: object
                dot11r:
                  description: The current setting for 802.11r
                  properties:
                    adaptive:
                      description: (Optional) Whether 802.11r is adaptive or not.
                      type: boolean
                    enabled:
                      description: Whether 802.11r is enabled or not.
                      type: boolean
                  type: object
                dot11w:
                  description: The current setting for Protected Management Frames (802.11w).
                  properties:
                    enabled:
                      description: Whether 802.11w is enabled or not.
                      type: boolean
                    required:
                      description: (Optional) Whether 802.11w is required or not.
                      type: boolean
                  type: object
                enabled:
                  description: Whether or not the SSID is enabled
                  type: boolean
                encryptionMode:
                  description: The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'
                  enum:
                    - wep
                    - wpa
                  type: string
                enterpriseAdminAccess:
                  description: Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')
                  enum:
                    - access disabled
                    - access enabled
                  type: string
                gre:
                  description: Ethernet over GRE settings
                  properties:
                    concentrator:
                      description: The EoGRE concentrator's settings
                      properties:
                        host:
                          description: The EoGRE concentrator's IP or FQDN. This param is required when ipAssignmentMode is 'Ethernet over GRE'.
                          type: string
                      required:
                        - host
                      type: object
                    key:
                      description: Optional numerical identifier that will add the GRE key field to the GRE header. Used to identify an individual traffic flow within a tunnel.
                      type: integer
                  type: object
                ipAssignmentMode:
                  description: The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Ethernet over GRE', 'Layer 3 roaming with a concentrator' or 'VPN')
                  type: string
                lanIsolationEnabled:
                  description: Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.
                  type: boolean
                ldap:
                  description: The current setting for LDAP. Only valid if splashPage is 'Password-protected with LDAP'.
                  properties:
                    baseDistinguishedName:
                      description: The base distinguished name of users on the LDAP server.
                      type: string
                    credentials:
                      description: (Optional) The credentials of the user account to be used by the AP to bind to your LDAP server. The LDAP account should have permissions on all your LDAP servers.
                      properties:
                        distinguishedName:
                          description: "The distinguished name of the LDAP user account (example: cn=user,dc=meraki,dc=com)."
                          type: string
                        password:
                          description: The password of the LDAP user account.
                          type: string
                      type: object
                    serverCaCertificate:
                      description: The CA certificate used to sign the LDAP server's key.
                      properties:
                        contents:
                          description: The contents of the CA certificate. Must be in PEM or DER format.
                          type: string
                      type: object
                    servers:
                      description: The LDAP servers to be used for authentication.
                      items:
                        properties:
                          host:
                            description: IP address of your LDAP server.
                            type: string
                          port:
                            description: UDP port the LDAP server listens on.
                            type: integer
                        required:
                          - host
                          - port
                        type: object
                      type: array
                  type: object
                localRadius:
                  description: The current setting for Local Authentication, a built-in RADIUS server on the access point. Only valid if authMode is '8021x-localradius'.
                  properties:
                    cacheTimeout:
                      description: The duration (in seconds) for which LDAP and OCSP lookups are cached.
                      type: integer
                    certificateAuthentication:
                      description: The current setting for certificate verification.
                      properties:
                        clientRootCaCertificate:
                          description: The Client CA Certificate used to sign the client certificate.
                          properties:
                            contents:
                              description: The contents of the Client CA Certificate. Must be in PEM or DER format.
                              type: string
                          type: object
                        enabled:
                          description: Whether or not to use EAP-TLS certificate-based authentication to validate wireless clients.
                          type: boolean
                        ocspResponderUrl:
                          description: (Optional) The URL of the OCSP responder to verify client certificate status.
                          type: string
                        useLdap:
                          description: Whether or not to verify the certificate with LDAP.
                          type: boolean
                        useOcsp:
                          description: Whether or not to verify the certificate with OCSP.
                          type: boolean
                      type: object
                    passwordAuthentication:
                      description: The current setting for password-based authentication.
                      properties:
                        enabled:
                          description: Whether or not to use EAP-TTLS/PAP or PEAP-GTC password-based authentication via LDAP lookup.
                          type: boolean
                      type: object
                  type: object
                mandatoryDhcpEnabled:
                  description: If true, Mandatory DHCP will enforce that clients connecting to this SSID must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate.
                  type: boolean
                minBitrate:
                  description: The minimum bitrate in Mbps of this SSID in the default indoor RF profile. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')
                  format: float
                  type: number
                name:
                  description: The name of the SSID
                  type: string
                oauth:
                  description: The OAuth settings of this SSID. Only valid if splashPage is 'Google OAuth'.
                  properties:
                    allowedDomains:
                      description: (Optional) The list of domains allowed access to the network.
                      items:
                        type: string
                      type: array
                  type: object
                perClientBandwidthLimitDown:
                  description: The download bandwidth limit in Kbps. (0 represents no limit.)
                  type: integer
                perClientBandwidthLimitUp:
                  description: The upload bandwidth limit in Kbps. (0 represents no limit.)
                  type: integer
                perSsidBandwidthLimitDown:
                  description: The total download bandwidth limit in Kbps. (0 represents no limit.)
                  type: integer
                perSsidBandwidthLimitUp:
                  description: The total upload bandwidth limit in Kbps. (0 represents no limit.)
                  type: integer
                psk:
                  description: The passkey for the SSID. This param is only valid if the authMode is 'psk'
                  type: string
                radiusAccountingEnabled:
                  description: Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'
                  type: boolean
                radiusAccountingInterimInterval:
                  description: The interval (in seconds) in which accounting information is updated and sent to the RADIUS accounting server.
                  type: integer
                radiusAccountingServers:
                  description: The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'
                  items:
                    properties:
                      caCertificate:
                        description: Certificate used for authorization for the RADSEC Server
                        type: string
                      host:
                        description: IP address to which the APs will send RADIUS accounting messages
                        type: string
                      port:
                        description: Port on the RADIUS server that is listening for accounting messages
                        type: integer
                      radsecEnabled:
                        description: Use RADSEC (TLS over TCP) to connect to this RADIUS accounting server. Requires radiusProxyEnabled.
                        type: boolean
                      secret:
                        description: Shared key used to authenticate messages between the APs and RADIUS server
                        type: string
                    required:
                      - host
                    type: object
                  type: array
                radiusAttributeForGroupPolicies:
                  description: Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message
                  enum:
                    - Airespace-ACL-Name
                    - Aruba-User-Role
                    - Filter-Id
                    - Reply-Message
                  type: string
                radiusAuthenticationNasId:
                  description: The template of the NAS identifier to be used for RADIUS authentication (ex. $NODE_MAC$:$VAP_NUM$).
                  type: string
                radiusCalledStationId:
                  description: The template of the called station identifier to be used for RADIUS (ex. $NODE_MAC$:$VAP_NUM$).
                  type: string
                radiusCoaEnabled:
                  description: If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.
                  type: boolean
                radiusFailoverPolicy:
                  description: This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')
                  enum:
                    - Allow access
                    - Deny access
                  type: string
                radiusFallbackEnabled:
                  description: Whether or not higher priority RADIUS servers should be retried after 60 seconds.
                  type: boolean
                radiusGuestVlanEnabled:
                  description: Whether or not RADIUS Guest VLAN is enabled. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode
                  type: boolean
                radiusGuestVlanId:
                  description: VLAN ID of the RADIUS Guest VLAN. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode
                  type: integer
                radiusLoadBalancingPolicy:
                  description: This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')
                  enum:
                    - Round robin
                    - Strict priority order
                  type: string
                radiusOverride:
                  description: If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'.
                  type: boolean
                radiusProxyEnabled:
                  description: If true, Meraki devices will proxy RADIUS messages through the Meraki cloud to the configured RADIUS auth and accounting servers.
                  type: boolean
                radiusServerAttemptsLimit:
                  description: The maximum number of transmit attempts after which a RADIUS server is failed over (must be between 1-5).
                  type: integer
                radiusServerTimeout:
                  description: The amount of time for which a RADIUS client waits for a reply from the RADIUS server (must be between 1-10 seconds).
                  type: integer
                radiusServers:
                  description: The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'
                  items:
                    properties:
                      caCertificate:
                        description: Certificate used for authorization for the RADSEC Server
                        type: string
                      host:
                        description: IP address of your RADIUS server
                        type: string
                      openRoamingCertificateId:
                        description: The ID of the Openroaming Certificate attached to radius server.
                        type: integer
                      port:
                        description: UDP port the RADIUS server listens on for Access-requests
                        type: integer
                      radsecEnabled:
                        description: Use RADSEC (TLS over TCP) to connect to this RADIUS server. Requires radiusProxyEnabled.
                        type: boolean
                      secret:
                        description: RADIUS client shared secret
                        type: string
                    required:
                      - host
                    type: object
                  type: array
                radiusTestingEnabled:
                  description: If true, Meraki devices will periodically send Access-Request messages to configured RADIUS servers using identity 'meraki_8021x_test' to ensure that the RADIUS servers are reachable.
                  type: boolean
                secondaryConcentratorNetworkId:
                  description: The secondary concentrator to use when the ipAssignmentMode is 'VPN'. If configured, the APs will switch to using this concentrator if the primary concentrator is unreachable. This param is optional. ('disabled' represents no secondary concentrator.)
                  type: string
                speedBurst:
                  description: The SpeedBurst setting for this SSID'
                  properties:
                    enabled:
                      description: Boolean indicating whether or not to allow users to temporarily exceed the bandwidth limit for short periods while still keeping them under the bandwidth limit over time.
                      type: boolean
                  type: object
                splashGuestSponsorDomains:
                  description: Array of valid sponsor email domains for sponsored guest splash type.
                  items:
                    type: string
                  type: array
                splashPage:
                  description: The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest', 'Cisco ISE' or 'Google Apps domain'). This attribute is not supported for template children.
                  enum:
                    - Billing
                    - Cisco ISE
                    - Click-through splash page
                    - Facebook Wi-Fi
                    - Google Apps domain
                    - Google OAuth
                    - None
                    - Password-protected with Active Directory
                    - Password-protected with LDAP
                    - Password-protected with Meraki RADIUS
                    - Password-protected with custom RADIUS
                    - SMS authentication
                    - Sponsored guest
                    - Systems Manager Sentry
                  type: string
                useVlanTagging:
                  description: Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
                  type: boolean
                visible:
                  description: Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true
                  type: boolean
                vlanId:
                  description: The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'
                  type: integer
                walledGardenEnabled:
                  description: Allow access to a configurable list of IP ranges, which users may access prior to sign-on.
                  type: boolean
                walledGardenRanges:
                  description: Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden.
                  items:
                    type: string
                  type: array
                wpaEncryptionMode:
                  description: The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode', 'WPA3 only' or 'WPA3 192-bit Security')
                  enum:
                    - WPA1 and WPA2
                    - WPA1 only
                    - WPA2 only
                    - WPA3 192-bit Security
                    - WPA3 Transition Mode
                    - WPA3 only
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    adminSplashUrl: http://example.com
                    authMode: 8021x-radius
                    availabilityTags:
                      - test-tag
                    availableOnAllAps: false
                    bandSelection: 5 GHz band only
                    enabled: true
                    encryptionMode: wpa-eap
                    ipAssignmentMode: NAT mode
                    mandatoryDhcpEnabled: false
                    minBitrate: 11
                    name: My SSID
                    number: 0
                    perClientBandwidthLimitDown: 0
                    perClientBandwidthLimitUp: 0
                    perSsidBandwidthLimitDown: 0
                    perSsidBandwidthLimitUp: 0
                    radiusAccountingEnabled: false
                    radiusAccountingServers:
                      - caCertificate: |-
                          -----BEGIN CERTIFICATE-----
                          MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                          gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                          YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                          RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                          MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                          YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                          aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                          MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                          uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                          ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                          pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                          KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                          aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                          CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                          USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                          BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                          1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                          jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                          a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                          uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                          UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                          wTw70BVktzJnb0VLeDg=
                          -----END CERTIFICATE-----
                        host: 0.0.0.0
                        openRoamingCertificateId: 2
                        port: 3000
                    radiusAttributeForGroupPolicies: Filter-Id
                    radiusEnabled: true
                    radiusFailoverPolicy: "null"
                    radiusLoadBalancingPolicy: "null"
                    radiusServers:
                      - caCertificate: |-
                          -----BEGIN CERTIFICATE-----
                          MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                          gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                          YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                          RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                          MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                          YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                          aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                          MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                          uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                          ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                          pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                          KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                          aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                          CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                          USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                          BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                          1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                          jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                          a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                          uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                          UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                          wTw70BVktzJnb0VLeDg=
                          -----END CERTIFICATE-----
                        host: 0.0.0.0
                        openRoamingCertificateId: 2
                        port: 3000
                    splashPage: Click-through splash page
                    splashTimeout: 30 minutes
                    ssidAdminAccessible: false
                    visible: true
                    walledGardenEnabled: true
                    walledGardenRanges:
                      - example.com
                      - 1.1.1.1/32
                    wpaEncryptionMode: WPA2 only
              schema:
                type: object
          description: Successful operation
      summary: Update the attributes of an MR SSID
      tags:
        - wireless
        - configure
        - ssids
  "/networks/{networkId}/wireless/ssids/{number}/bonjourForwarding":
    get:
      description: List the Bonjour forwarding setting and rules for the SSID
      operationId: getNetworkWirelessSsidBonjourForwarding
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    rules:
                      - description: A simple bonjour rule
                        services:
                          - All Services
                        vlanId: "1"
              schema:
                type: object
          description: Successful operation
      summary: List the Bonjour forwarding setting and rules for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - bonjourForwarding
    put:
      description: Update the bonjour forwarding setting and rules for the SSID
      operationId: updateNetworkWirelessSsidBonjourForwarding
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                rules:
                  - description: A simple bonjour rule
                    services:
                      - All Services
                    vlanId: "1"
              properties:
                enabled:
                  description: If true, Bonjour forwarding is enabled on this SSID.
                  type: boolean
                rules:
                  description: List of bonjour forwarding rules.
                  items:
                    properties:
                      description:
                        description: A description for your Bonjour forwarding rule. Optional.
                        type: string
                      services:
                        description: A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
                        items:
                          enum:
                            - AFP
                            - AirPlay
                            - All Services
                            - BitTorrent
                            - FTP
                            - Printers
                            - SSH
                            - Samba
                            - Scanners
                            - iChat
                            - iTunes
                          type: string
                        type: array
                      vlanId:
                        description: The ID of the service VLAN. Required.
                        type: string
                    required:
                      - vlanId
                      - services
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    rules:
                      - description: A simple bonjour rule
                        services:
                          - All Services
                        vlanId: "1"
              schema:
                type: object
          description: Successful operation
      summary: Update the bonjour forwarding setting and rules for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - bonjourForwarding
  "/networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies":
    get:
      description: List the device type group policies for the SSID
      operationId: getNetworkWirelessSsidDeviceTypeGroupPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    deviceTypePolicies:
                      - devicePolicy: Allowed
                        deviceType: Android
                      - devicePolicy: Group policy
                        deviceType: iPhone
                        groupPolicyId: 101
                    enabled: true
              schema:
                type: object
          description: Successful operation
      summary: List the device type group policies for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - deviceTypeGroupPolicies
    put:
      description: Update the device type group policies for the SSID
      operationId: updateNetworkWirelessSsidDeviceTypeGroupPolicies
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                deviceTypePolicies:
                  - devicePolicy: Allowed
                    deviceType: Android
                  - devicePolicy: Group policy
                    deviceType: iPhone
                    groupPolicyId: 101
                enabled: true
              properties:
                deviceTypePolicies:
                  description: List of device type policies.
                  items:
                    properties:
                      devicePolicy:
                        description: The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'
                        enum:
                          - Allowed
                          - Blocked
                          - Group policy
                        type: string
                      deviceType:
                        description: The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'
                        enum:
                          - Android
                          - B&N Nook
                          - BlackBerry
                          - Chrome OS
                          - Mac OS X
                          - Other OS
                          - Windows
                          - Windows Phone
                          - iPad
                          - iPhone
                          - iPod
                        type: string
                      groupPolicyId:
                        description: ID of the group policy object.
                        type: integer
                    required:
                      - deviceType
                      - devicePolicy
                    type: object
                  type: array
                enabled:
                  description: If true, the SSID device type group policies are enabled.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    deviceTypePolicies:
                      - devicePolicy: Allowed
                        deviceType: Android
                      - devicePolicy: Group policy
                        deviceType: iPhone
                        groupPolicyId: 101
                    enabled: true
              schema:
                type: object
          description: Successful operation
      summary: Update the device type group policies for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - deviceTypeGroupPolicies
  "/networks/{networkId}/wireless/ssids/{number}/eapOverride":
    get:
      description: Return the EAP overridden parameters for an SSID
      operationId: getNetworkWirelessSsidEapOverride
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    eapolKey:
                      retries: 50
                      timeoutInMs: 5000
                    identity:
                      retries: 5
                      timeout: 50
                    maxRetries: 5
                    timeout: 50
              schema:
                properties:
                  eapolKey:
                    description: EAPOL Key settings.
                    properties:
                      retries:
                        description: Maximum number of EAPOL key retries.
                        type: integer
                      timeoutInMs:
                        description: EAPOL Key timeout in milliseconds.
                        type: integer
                    type: object
                  identity:
                    description: EAP settings for identity requests.
                    properties:
                      retries:
                        description: Maximum number of EAP retries.
                        type: integer
                      timeout:
                        description: EAP timeout in seconds.
                        type: integer
                    type: object
                  maxRetries:
                    description: Maximum number of general EAP retries.
                    type: integer
                  timeout:
                    description: General EAP timeout in seconds.
                    type: integer
                type: object
          description: Successful operation
      summary: Return the EAP overridden parameters for an SSID
      tags:
        - wireless
        - configure
        - ssids
        - eapOverride
    put:
      description: Update the EAP overridden parameters for an SSID.
      operationId: updateNetworkWirelessSsidEapOverride
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                eapolKey:
                  retries: 5
                  timeoutInMs: 5000
                identity:
                  retries: 5
                  timeout: 5
                maxRetries: 5
                timeout: 5
              properties:
                eapolKey:
                  description: EAPOL Key settings.
                  properties:
                    retries:
                      description: Maximum number of EAPOL key retries.
                      type: integer
                    timeoutInMs:
                      description: EAPOL Key timeout in milliseconds.
                      type: integer
                  type: object
                identity:
                  description: EAP settings for identity requests.
                  properties:
                    retries:
                      description: Maximum number of EAP retries.
                      type: integer
                    timeout:
                      description: EAP timeout in seconds.
                      type: integer
                  type: object
                maxRetries:
                  description: Maximum number of general EAP retries.
                  type: integer
                timeout:
                  description: General EAP timeout in seconds.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    eapolKey:
                      retries: 50
                      timeoutInMs: 5000
                    identity:
                      retries: 5
                      timeout: 50
                    maxRetries: 5
                    timeout: 50
              schema:
                properties:
                  eapolKey:
                    description: EAPOL Key settings.
                    properties:
                      retries:
                        description: Maximum number of EAPOL key retries.
                        type: integer
                      timeoutInMs:
                        description: EAPOL Key timeout in milliseconds.
                        type: integer
                    type: object
                  identity:
                    description: EAP settings for identity requests.
                    properties:
                      retries:
                        description: Maximum number of EAP retries.
                        type: integer
                      timeout:
                        description: EAP timeout in seconds.
                        type: integer
                    type: object
                  maxRetries:
                    description: Maximum number of general EAP retries.
                    type: integer
                  timeout:
                    description: General EAP timeout in seconds.
                    type: integer
                type: object
          description: Successful operation
      summary: Update the EAP overridden parameters for an SSID.
      tags:
        - wireless
        - configure
        - ssids
        - eapOverride
  "/networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules":
    get:
      description: Return the L3 firewall rules for an SSID on an MR network
      operationId: getNetworkWirelessSsidFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
              schema:
                type: object
          description: Successful operation
      summary: Return the L3 firewall rules for an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l3FirewallRules
    put:
      description: Update the L3 firewall rules of an SSID on an MR network
      operationId: updateNetworkWirelessSsidFirewallL3FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    destCidr: 192.168.1.0/24
                    destPort: "443"
                    policy: allow
                    protocol: tcp
              properties:
                allowLanAccess:
                  description: Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)
                  type: boolean
                rules:
                  description: An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)
                  items:
                    properties:
                      comment:
                        description: Description of the rule (optional)
                        type: string
                      destCidr:
                        description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
                        type: string
                      destPort:
                        description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
                        type: string
                      policy:
                        description: "'allow' or 'deny' traffic specified by this rule"
                        enum:
                          - allow
                          - deny
                        type: string
                      protocol:
                        description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
                        enum:
                          - any
                          - icmp
                          - icmp6
                          - tcp
                          - udp
                        type: string
                    required:
                      - policy
                      - protocol
                      - destCidr
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
              schema:
                type: object
          description: Successful operation
      summary: Update the L3 firewall rules of an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l3FirewallRules
  "/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules":
    get:
      description: Return the L7 firewall rules for an SSID on an MR network
      operationId: getNetworkWirelessSsidFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - policy: deny
                        type: host
                        value: google.com
                      - policy: deny
                        type: port
                        value: "23"
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: Return the L7 firewall rules for an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l7FirewallRules
    put:
      description: Update the L7 firewall rules of an SSID on an MR network
      operationId: updateNetworkWirelessSsidFirewallL7FirewallRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
              properties:
                rules:
                  description: An array of L7 firewall rules for this SSID. Rules will get applied in the same order user has specified in request. Empty array will clear the L7 firewall rule configuration.
                  items:
                    properties:
                      policy:
                        description: "'Deny' traffic specified by this rule"
                        enum:
                          - deny
                        type: string
                      type:
                        description: "Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"
                        enum:
                          - application
                          - applicationCategory
                          - host
                          - ipRange
                          - port
                        type: string
                      value:
                        description: The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
                        type: string
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - policy: deny
                        type: host
                        value: google.com
                      - policy: deny
                        type: port
                        value: "23"
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: Update the L7 firewall rules of an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - firewall
        - l7FirewallRules
  "/networks/{networkId}/wireless/ssids/{number}/hotspot20":
    get:
      description: Return the Hotspot 2.0 settings for an SSID
      operationId: getNetworkWirelessSsidHotspot20
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    domains:
                      - meraki.local
                      - domain2.com
                    enabled: true
                    mccMncs:
                      - mcc: "123"
                        mnc: "456"
                      - mcc: "563"
                        mnc: "232"
                    naiRealms:
                      - format: "1"
                        methods:
                          - authenticationTypes:
                              credentials: []
                              eapInnerAuthentication:
                                - EAP-TTLS with MSCHAPv2
                              nonEapInnerAuthentication:
                                - MSCHAP
                              tunneledEapMethodCredentials: []
                            id: "1"
                        name: Realm 1
                    networkAccessType: Private network
                    operator:
                      name: Meraki Product Management
                    roamConsortOis:
                      - ABC123
                      - 456EFG
                    venue:
                      name: SF Branch
                      type: Unspecified Assembly
              schema:
                type: object
          description: Successful operation
      summary: Return the Hotspot 2.0 settings for an SSID
      tags:
        - wireless
        - configure
        - ssids
        - hotspot20
    put:
      description: Update the Hotspot 2.0 settings of an SSID
      operationId: updateNetworkWirelessSsidHotspot20
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                domains:
                  - meraki.local
                  - domain2.com
                enabled: true
                mccMncs:
                  - mcc: "123"
                    mnc: "456"
                  - mcc: "563"
                    mnc: "232"
                naiRealms:
                  - format: "1"
                    methods:
                      - authenticationTypes:
                          credentials: []
                          eapInnerAuthentication:
                            - EAP-TTLS with MSCHAPv2
                          nonEapInnerAuthentication:
                            - MSCHAP
                          tunneledEapMethodCredentials: []
                        id: "1"
                    name: Realm 1
                networkAccessType: Private network
                operator:
                  name: Meraki Product Management
                roamConsortOis:
                  - ABC123
                  - 456EFG
                venue:
                  name: SF Branch
                  type: Unspecified Assembly
              properties:
                domains:
                  description: An array of domain names
                  items:
                    type: string
                  type: array
                enabled:
                  description: Whether or not Hotspot 2.0 for this SSID is enabled
                  type: boolean
                mccMncs:
                  description: An array of MCC/MNC pairs
                  items:
                    properties:
                      mcc:
                        description: MCC value
                        type: string
                      mnc:
                        description: MNC value
                        type: string
                    type: object
                  type: array
                naiRealms:
                  description: An array of NAI realms
                  items:
                    properties:
                      format:
                        description: The format for the realm ('1' or '0')
                        enum:
                          - "0"
                          - "1"
                        type: string
                      methods:
                        description: An array of EAP methods for the realm.
                        items:
                          properties:
                            authenticationTypes:
                              description: "The authentication types for the method. These should be formatted as an object with the EAP method category in camelcase as the key and the list of types as the value (nonEapInnerAuthentication: Reserved, PAP, CHAP, MSCHAP, MSCHAPV2; eapInnerAuthentication: EAP-TLS, EAP-SIM, EAP-AKA, EAP-TTLS with MSCHAPv2; credentials: SIM, USIM, NFC Secure Element, Hardware Token, Softoken, Certificate, username/password, none, Reserved, Vendor Specific; tunneledEapMethodCredentials: SIM, USIM, NFC Secure Element, Hardware Token, Softoken, Certificate, username/password, Reserved, Anonymous, Vendor Specific)"
                              properties: {}
                              type: object
                            id:
                              description: ID of method
                              type: string
                          type: object
                        type: array
                      realm:
                        description: The name of the realm
                        type: string
                    type: object
                  type: array
                networkAccessType:
                  description: The network type of this SSID ('Private network', 'Private network with guest access', 'Chargeable public network', 'Free public network', 'Personal device network', 'Emergency services only network', 'Test or experimental', 'Wildcard')
                  enum:
                    - Chargeable public network
                    - Emergency services only network
                    - Free public network
                    - Personal device network
                    - Private network
                    - Private network with guest access
                    - Test or experimental
                    - Wildcard
                  type: string
                operator:
                  description: Operator settings for this SSID
                  properties:
                    name:
                      description: Operator name
                      type: string
                  type: object
                roamConsortOis:
                  description: An array of roaming consortium OIs (hexadecimal number 3-5 octets in length)
                  items:
                    type: string
                  type: array
                venue:
                  description: Venue settings for this SSID
                  properties:
                    name:
                      description: Venue name
                      type: string
                    type:
                      description: Venue type ('Unspecified', 'Unspecified Assembly', 'Arena', 'Stadium', 'Passenger Terminal', 'Amphitheater', 'Amusement Park', 'Place of Worship', 'Convention Center', 'Library', 'Museum', 'Restaurant', 'Theater', 'Bar', 'Coffee Shop', 'Zoo or Aquarium', 'Emergency Coordination Center', 'Unspecified Business', 'Doctor or Dentist office', 'Bank', 'Fire Station', 'Police Station', 'Post Office', 'Professional Office', 'Research and Development Facility', 'Attorney Office', 'Unspecified Educational', 'School, Primary', 'School, Secondary', 'University or College', 'Unspecified Factory and Industrial', 'Factory', 'Unspecified Institutional', 'Hospital', 'Long-Term Care Facility', 'Alcohol and Drug Rehabilitation Center', 'Group Home', 'Prison or Jail', 'Unspecified Mercantile', 'Retail Store', 'Grocery Market', 'Automotive Service Station', 'Shopping Mall', 'Gas Station', 'Unspecified Residential', 'Private Residence', 'Hotel or Motel', 'Dormitory', 'Boarding House', 'Unspecified Storage', 'Unspecified Utility and Miscellaneous', 'Unspecified Vehicular', 'Automobile or Truck', 'Airplane', 'Bus', 'Ferry', 'Ship or Boat', 'Train', 'Motor Bike', 'Unspecified Outdoor', 'Muni-mesh Network', 'City Park', 'Rest Area', 'Traffic Control', 'Bus Stop', 'Kiosk')
                      enum:
                        - Airplane
                        - Alcohol and Drug Rehabilitation Center
                        - Amphitheater
                        - Amusement Park
                        - Arena
                        - Attorney Office
                        - Automobile or Truck
                        - Automotive Service Station
                        - Bank
                        - Bar
                        - Boarding House
                        - Bus
                        - Bus Stop
                        - City Park
                        - Coffee Shop
                        - Convention Center
                        - Doctor or Dentist office
                        - Dormitory
                        - Emergency Coordination Center
                        - Factory
                        - Ferry
                        - Fire Station
                        - Gas Station
                        - Grocery Market
                        - Group Home
                        - Hospital
                        - Hotel or Motel
                        - Kiosk
                        - Library
                        - Long-Term Care Facility
                        - Motor Bike
                        - Muni-mesh Network
                        - Museum
                        - Passenger Terminal
                        - Place of Worship
                        - Police Station
                        - Post Office
                        - Prison or Jail
                        - Private Residence
                        - Professional Office
                        - Research and Development Facility
                        - Rest Area
                        - Restaurant
                        - Retail Store
                        - School, Primary
                        - School, Secondary
                        - Ship or Boat
                        - Shopping Mall
                        - Stadium
                        - Theater
                        - Traffic Control
                        - Train
                        - University or College
                        - Unspecified
                        - Unspecified Assembly
                        - Unspecified Business
                        - Unspecified Educational
                        - Unspecified Factory and Industrial
                        - Unspecified Institutional
                        - Unspecified Mercantile
                        - Unspecified Outdoor
                        - Unspecified Residential
                        - Unspecified Storage
                        - Unspecified Utility and Miscellaneous
                        - Unspecified Vehicular
                        - Zoo or Aquarium
                      type: string
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    domains:
                      - meraki.local
                      - domain2.com
                    enabled: true
                    mccMncs:
                      - mcc: "123"
                        mnc: "456"
                      - mcc: "563"
                        mnc: "232"
                    naiRealms:
                      - format: "1"
                        methods:
                          - authenticationTypes:
                              credentials: []
                              eapInnerAuthentication:
                                - EAP-TTLS with MSCHAPv2
                              nonEapInnerAuthentication:
                                - MSCHAP
                              tunneledEapMethodCredentials: []
                            id: "1"
                        name: Realm 1
                    networkAccessType: Private network
                    operator:
                      name: Meraki Product Management
                    roamConsortOis:
                      - ABC123
                      - 456EFG
                    venue:
                      name: SF Branch
                      type: Unspecified Assembly
              schema:
                type: object
          description: Successful operation
      summary: Update the Hotspot 2.0 settings of an SSID
      tags:
        - wireless
        - configure
        - ssids
        - hotspot20
  "/networks/{networkId}/wireless/ssids/{number}/identityPsks":
    get:
      description: List all Identity PSKs in a wireless network
      operationId: getNetworkWirelessSsidIdentityPsks
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - email: miles@meraki.com
                      expiresAt: ""
                      groupPolicyId: "1284392014819"
                      id: "1284392014819"
                      name: Identity PSK Name
                      passphrase: secret
                      wifiPersonalNetworkId: "1284392014819"
              schema:
                items:
                  properties:
                    email:
                      description: The email associated with the System's Manager User
                      type: string
                    expiresAt:
                      description: Timestamp for when the Identity PSK expires, or 'null' to never expire
                      type: string
                    groupPolicyId:
                      description: The group policy to be applied to clients
                      type: string
                    id:
                      description: The unique identifier of the Identity PSK
                      type: string
                    name:
                      description: The name of the Identity PSK
                      type: string
                    passphrase:
                      description: The passphrase for client authentication
                      type: string
                    wifiPersonalNetworkId:
                      description: The WiFi Personal Network unique identifier
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List all Identity PSKs in a wireless network
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
    post:
      description: Create an Identity PSK
      operationId: createNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                expiresAt: 2018-02-11T00:00:00Z
                groupPolicyId: "101"
                id: "1284392014819"
                name: Sample Identity PSK
                passphrase: NIalareK
              properties:
                groupPolicyId:
                  description: The group policy to be applied to clients
                  type: string
                name:
                  description: The name of the Identity PSK
                  type: string
                passphrase:
                  description: The passphrase for client authentication. If left blank, one will be auto-generated.
                  type: string
              required:
                - name
                - groupPolicyId
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    expiresAt: 2018-02-11T00:00:00Z
                    groupPolicyId: "101"
                    id: "1284392014819"
                    name: Sample Identity PSK
                    passphrase: NIalareK
              schema:
                type: object
          description: Successful operation
      summary: Create an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
  "/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}":
    delete:
      description: Delete an Identity PSK
      operationId: deleteNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
        - in: path
          name: identityPskId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
    get:
      description: Return an Identity PSK
      operationId: getNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
        - in: path
          name: identityPskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    email: miles@meraki.com
                    expiresAt: ""
                    groupPolicyId: "1284392014819"
                    id: "1284392014819"
                    name: Identity PSK Name
                    passphrase: secret
                    wifiPersonalNetworkId: "1284392014819"
              schema:
                properties:
                  email:
                    description: The email associated with the System's Manager User
                    type: string
                  expiresAt:
                    description: Timestamp for when the Identity PSK expires, or 'null' to never expire
                    type: string
                  groupPolicyId:
                    description: The group policy to be applied to clients
                    type: string
                  id:
                    description: The unique identifier of the Identity PSK
                    type: string
                  name:
                    description: The name of the Identity PSK
                    type: string
                  passphrase:
                    description: The passphrase for client authentication
                    type: string
                  wifiPersonalNetworkId:
                    description: The WiFi Personal Network unique identifier
                    type: string
                type: object
          description: Successful operation
      summary: Return an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
    put:
      description: Update an Identity PSK
      operationId: updateNetworkWirelessSsidIdentityPsk
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
        - in: path
          name: identityPskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                expiresAt: 2018-02-11T00:00:00Z
                groupPolicyId: "101"
                id: "1284392014819"
                name: Sample Identity PSK
                passphrase: NIalareK
              properties:
                groupPolicyId:
                  description: The group policy to be applied to clients
                  type: string
                name:
                  description: The name of the Identity PSK
                  type: string
                passphrase:
                  description: The passphrase for client authentication
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    expiresAt: 2018-02-11T00:00:00Z
                    groupPolicyId: "101"
                    id: "1284392014819"
                    name: Sample Identity PSK
                    passphrase: NIalareK
              schema:
                type: object
          description: Successful operation
      summary: Update an Identity PSK
      tags:
        - wireless
        - configure
        - ssids
        - identityPsks
  "/networks/{networkId}/wireless/ssids/{number}/schedules":
    get:
      description: List the outage schedule for the SSID
      operationId: getNetworkWirelessSsidSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    ranges:
                      - endDay: Tuesday
                        endTime: 05:00
                        startDay: Tuesday
                        startTime: 01:00
                      - endDay: monday
                        endTime: 05:00
                        startDay: Fri
                        startTime: 19:00
              schema:
                type: object
          description: Successful operation
      summary: List the outage schedule for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - schedules
    put:
      description: Update the outage schedule for the SSID
      operationId: updateNetworkWirelessSsidSchedules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
                ranges:
                  - endDay: Tuesday
                    endTime: 05:00
                    startDay: Tuesday
                    startTime: 01:00
                  - endDay: monday
                    endTime: 05:00
                    startDay: Fri
                    startTime: 19:00
              properties:
                enabled:
                  description: If true, the SSID outage schedule is enabled.
                  type: boolean
                ranges:
                  description: List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
                  items:
                    properties:
                      endDay:
                        description: Day of when the outage ends. Can be either full day name, or three letter abbreviation
                        type: string
                      endTime:
                        description: 24 hour time when the outage ends.
                        type: string
                      startDay:
                        description: Day of when the outage starts. Can be either full day name, or three letter abbreviation.
                        type: string
                      startTime:
                        description: 24 hour time when the outage starts.
                        type: string
                    required:
                      - startDay
                      - startTime
                      - endDay
                      - endTime
                    type: object
                  type: array
                rangesInSeconds:
                  description: List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
                  items:
                    properties:
                      end:
                        description: Seconds since Sunday at midnight when that outage range ends.
                        type: integer
                      start:
                        description: Seconds since Sunday at midnight when the outage range starts.
                        type: integer
                    required:
                      - start
                      - end
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
                    ranges:
                      - endDay: Tuesday
                        endTime: 05:00
                        startDay: Tuesday
                        startTime: 01:00
                      - endDay: monday
                        endTime: 05:00
                        startDay: Fri
                        startTime: 19:00
              schema:
                type: object
          description: Successful operation
      summary: Update the outage schedule for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - schedules
  "/networks/{networkId}/wireless/ssids/{number}/splash/settings":
    get:
      description: Display the splash page settings for the given SSID
      operationId: getNetworkWirelessSsidSplashSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowSimultaneousLogins: false
                    billing:
                      freeAccess:
                        durationInMinutes: 120
                        enabled: true
                      prepaidAccessFastLoginEnabled: true
                      replyToEmailAddress: user@email.com
                    blockAllTrafficBeforeSignOn: false
                    controllerDisconnectionBehavior: default
                    guestSponsorship:
                      durationInMinutes: 30
                      guestCanRequestTimeframe: false
                    redirectUrl: https://example.com
                    selfRegistration:
                      authorizationType: admin
                      enabled: true
                    sentryEnrollment:
                      enforcedSystems:
                        - iOS
                      strength: focused
                      systemsManagerNetwork:
                        id: N_1234
                    splashImage:
                      extension: jpg
                      md5: 542cccac8d7dedee0f185311d154d194
                    splashLogo:
                      extension: jpg
                      md5: abcd1234
                    splashPage: Click-through splash page
                    splashPrepaidFront:
                      extension: jpg
                      md5: 542cccac8d7dedee0f185311d154d194
                    splashTimeout: 1440
                    splashUrl: https://www.custom_splash_url.com
                    ssidNumber: 0
                    useRedirectUrl: true
                    useSplashUrl: true
                    welcomeMessage: Welcome!
              schema:
                properties:
                  allowSimultaneousLogins:
                    description: Whether or not to allow simultaneous logins from different devices.
                    type: boolean
                  billing:
                    description: Details associated with billing splash
                    properties:
                      freeAccess:
                        description: Details associated with a free access plan with limits
                        properties:
                          durationInMinutes:
                            description: How long a device can use a network for free.
                            type: integer
                          enabled:
                            description: Whether or not free access is enabled.
                            type: boolean
                        type: object
                      prepaidAccessFastLoginEnabled:
                        description: Whether or not billing uses the fast login prepaid access option.
                        type: boolean
                      replyToEmailAddress:
                        description: The email address that reeceives replies from clients
                        type: string
                    type: object
                  blockAllTrafficBeforeSignOn:
                    description: How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
                    type: boolean
                  controllerDisconnectionBehavior:
                    description: How login attempts should be handled when the controller is unreachable.
                    type: string
                  guestSponsorship:
                    description: Details associated with guest sponsored splash
                    properties:
                      durationInMinutes:
                        description: Duration in minutes of sponsored guest authorization.
                        type: integer
                      guestCanRequestTimeframe:
                        description: Whether or not guests can specify how much time they are requesting.
                        type: boolean
                    type: object
                  redirectUrl:
                    description: The custom redirect URL where the users will go after the splash page.
                    type: string
                  selfRegistration:
                    description: Self-registration for splash with Meraki authentication.
                    properties:
                      authorizationType:
                        description: How created user accounts should be authorized.
                        enum:
                          - admin
                          - auto
                          - self_email
                        type: string
                      enabled:
                        description: Whether or not to allow users to create their own account on the network.
                        type: boolean
                    type: object
                  sentryEnrollment:
                    description: Systems Manager sentry enrollment splash settings.
                    properties:
                      enforcedSystems:
                        description: The system types that the Sentry enforces.
                        items:
                          type: string
                        type: array
                      strength:
                        description: The strength of the enforcement of selected system types.
                        enum:
                          - click-through
                          - focused
                          - strict
                        type: string
                      systemsManagerNetwork:
                        description: Systems Manager network targeted for sentry enrollment.
                        properties:
                          id:
                            description: The network ID of the Systems Manager network.
                            type: string
                        type: object
                    type: object
                  splashImage:
                    description: The image used in the splash page.
                    properties:
                      extension:
                        description: The extension of the image file.
                        type: string
                      md5:
                        description: The MD5 value of the image file.
                        type: string
                    type: object
                  splashLogo:
                    description: The logo used in the splash page.
                    properties:
                      extension:
                        description: The extension of the logo file.
                        type: string
                      md5:
                        description: The MD5 value of the logo file.
                        type: string
                    type: object
                  splashPage:
                    description: The type of splash page for this SSID
                    type: string
                  splashPrepaidFront:
                    description: The prepaid front image used in the splash page.
                    properties:
                      extension:
                        description: The extension of the prepaid front image file.
                        type: string
                      md5:
                        description: The MD5 value of the prepaid front image file.
                        type: string
                    type: object
                  splashTimeout:
                    description: Splash timeout in minutes.
                    type: integer
                  splashUrl:
                    description: The custom splash URL of the click-through splash page.
                    type: string
                  ssidNumber:
                    description: SSID number
                    type: integer
                  useRedirectUrl:
                    description: The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.
                    type: boolean
                  useSplashUrl:
                    description: Boolean indicating whether the users will be redirected to the custom splash url
                    type: boolean
                  welcomeMessage:
                    description: The welcome message for the users on the splash page.
                    type: string
                type: object
          description: Successful operation
      summary: Display the splash page settings for the given SSID
      tags:
        - wireless
        - configure
        - ssids
        - splash
        - settings
    put:
      description: Modify the splash page settings for the given SSID
      operationId: updateNetworkWirelessSsidSplashSettings
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                allowSimultaneousLogins: false
                billing:
                  freeAccess:
                    durationInMinutes: 120
                    enabled: true
                  prepaidAccessFastLoginEnabled: true
                  replyToEmailAddress: user@email.com
                blockAllTrafficBeforeSignOn: false
                controllerDisconnectionBehavior: default
                guestSponsorship:
                  durationInMinutes: 30
                  guestCanRequestTimeframe: false
                redirectUrl: https://example.com
                sentryEnrollment:
                  enforcedSystems:
                    - iOS
                  strength: focused
                  systemsManagerNetwork:
                    id: N_1234
                splashImage:
                  extension: jpg
                  image:
                    contents: Q2lzY28gTWVyYWtp
                    format: jpg
                  md5: 542cccac8d7dedee0f185311d154d194
                splashLogo:
                  extension: jpg
                  image:
                    contents: Q2lzY28gTWVyYWtp
                    format: jpg
                  md5: abcd1234
                splashPrepaidFront:
                  extension: jpg
                  image:
                    contents: Q2lzY28gTWVyYWtp
                    format: jpg
                  md5: 542cccac8d7dedee0f185311d154d194
                splashTimeout: 1440
                splashUrl: https://www.custom_splash_url.com
                useRedirectUrl: true
                useSplashUrl: true
                welcomeMessage: Welcome!
              properties:
                allowSimultaneousLogins:
                  description: Whether or not to allow simultaneous logins from different devices.
                  type: boolean
                billing:
                  description: Details associated with billing splash.
                  properties:
                    freeAccess:
                      description: Details associated with a free access plan with limits.
                      properties:
                        durationInMinutes:
                          description: How long a device can use a network for free.
                          type: integer
                        enabled:
                          description: Whether or not free access is enabled.
                          type: boolean
                      type: object
                    prepaidAccessFastLoginEnabled:
                      description: Whether or not billing uses the fast login prepaid access option.
                      type: boolean
                    replyToEmailAddress:
                      description: The email address that receives replies from clients.
                      type: string
                  type: object
                blockAllTrafficBeforeSignOn:
                  description: How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
                  type: boolean
                controllerDisconnectionBehavior:
                  description: How login attempts should be handled when the controller is unreachable. Can be either 'open', 'restricted', or 'default'.
                  enum:
                    - default
                    - open
                    - restricted
                  type: string
                guestSponsorship:
                  description: Details associated with guest sponsored splash.
                  properties:
                    durationInMinutes:
                      description: Duration in minutes of sponsored guest authorization. Must be between 1 and 60480 (6 weeks)
                      type: integer
                    guestCanRequestTimeframe:
                      description: Whether or not guests can specify how much time they are requesting.
                      type: boolean
                  type: object
                redirectUrl:
                  description: The custom redirect URL where the users will go after the splash page.
                  type: string
                sentryEnrollment:
                  description: Systems Manager sentry enrollment splash settings.
                  properties:
                    enforcedSystems:
                      description: "The system types that the Sentry enforces. Must be included in: 'iOS, 'Android', 'macOS', and 'Windows'."
                      items:
                        type: string
                      type: array
                    strength:
                      description: "The strength of the enforcement of selected system types. Must be one of: 'focused', 'click-through', and 'strict'."
                      enum:
                        - click-through
                        - focused
                        - strict
                      type: string
                    systemsManagerNetwork:
                      description: Systems Manager network targeted for sentry enrollment.
                      properties:
                        id:
                          description: The network ID of the Systems Manager network.
                          type: string
                      required:
                        - id
                      type: object
                  type: object
                splashImage:
                  description: The image used in the splash page.
                  properties:
                    extension:
                      description: The extension of the image file.
                      type: string
                    image:
                      description: Properties for setting a new image.
                      properties:
                        contents:
                          description: The file contents (a base 64 encoded string) of your new image.
                          format: byte
                          type: string
                        format:
                          description: The format of the encoded contents. Supported formats are 'png', 'gif', and jpg'.
                          enum:
                            - gif
                            - jpg
                            - png
                          type: string
                      type: object
                    md5:
                      description: The MD5 value of the image file. Setting this to null will remove the image from the splash page.
                      type: string
                  type: object
                splashLogo:
                  description: The logo used in the splash page.
                  properties:
                    extension:
                      description: The extension of the logo file.
                      type: string
                    image:
                      description: Properties for setting a new image.
                      properties:
                        contents:
                          description: The file contents (a base 64 encoded string) of your new logo.
                          format: byte
                          type: string
                        format:
                          description: The format of the encoded contents. Supported formats are 'png', 'gif', and jpg'.
                          enum:
                            - gif
                            - jpg
                            - png
                          type: string
                      type: object
                    md5:
                      description: The MD5 value of the logo file. Setting this to null will remove the logo from the splash page.
                      type: string
                  type: object
                splashPrepaidFront:
                  description: The prepaid front image used in the splash page.
                  properties:
                    extension:
                      description: The extension of the prepaid front image file.
                      type: string
                    image:
                      description: Properties for setting a new image.
                      properties:
                        contents:
                          description: The file contents (a base 64 encoded string) of your new prepaid front.
                          format: byte
                          type: string
                        format:
                          description: The format of the encoded contents. Supported formats are 'png', 'gif', and jpg'.
                          enum:
                            - gif
                            - jpg
                            - png
                          type: string
                      type: object
                    md5:
                      description: The MD5 value of the prepaid front image file. Setting this to null will remove the prepaid front from the splash page.
                      type: string
                  type: object
                splashTimeout:
                  description: Splash timeout in minutes. This will determine how often users will see the splash page.
                  type: integer
                splashUrl:
                  description: "[optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'"
                  type: string
                useRedirectUrl:
                  description: The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page. A custom redirect URL must be set if this is true.
                  type: boolean
                useSplashUrl:
                  description: "[optional] Boolean indicating whether the users will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL."
                  type: boolean
                welcomeMessage:
                  description: The welcome message for the users on the splash page.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowSimultaneousLogins: false
                    billing:
                      freeAccess:
                        durationInMinutes: 120
                        enabled: true
                      prepaidAccessFastLoginEnabled: true
                      replyToEmailAddress: user@email.com
                    blockAllTrafficBeforeSignOn: false
                    controllerDisconnectionBehavior: default
                    guestSponsorship:
                      durationInMinutes: 30
                      guestCanRequestTimeframe: false
                    redirectUrl: https://example.com
                    selfRegistration:
                      authorizationType: admin
                      enabled: true
                    sentryEnrollment:
                      enforcedSystems:
                        - iOS
                      strength: focused
                      systemsManagerNetwork:
                        id: N_1234
                    splashImage:
                      extension: jpg
                      md5: 542cccac8d7dedee0f185311d154d194
                    splashLogo:
                      extension: jpg
                      md5: abcd1234
                    splashPage: Click-through splash page
                    splashPrepaidFront:
                      extension: jpg
                      md5: 542cccac8d7dedee0f185311d154d194
                    splashTimeout: 1440
                    splashUrl: https://www.custom_splash_url.com
                    ssidNumber: 0
                    useRedirectUrl: true
                    useSplashUrl: true
                    welcomeMessage: Welcome!
              schema:
                properties:
                  allowSimultaneousLogins:
                    description: Whether or not to allow simultaneous logins from different devices.
                    type: boolean
                  billing:
                    description: Details associated with billing splash
                    properties:
                      freeAccess:
                        description: Details associated with a free access plan with limits
                        properties:
                          durationInMinutes:
                            description: How long a device can use a network for free.
                            type: integer
                          enabled:
                            description: Whether or not free access is enabled.
                            type: boolean
                        type: object
                      prepaidAccessFastLoginEnabled:
                        description: Whether or not billing uses the fast login prepaid access option.
                        type: boolean
                      replyToEmailAddress:
                        description: The email address that reeceives replies from clients
                        type: string
                    type: object
                  blockAllTrafficBeforeSignOn:
                    description: How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
                    type: boolean
                  controllerDisconnectionBehavior:
                    description: How login attempts should be handled when the controller is unreachable.
                    type: string
                  guestSponsorship:
                    description: Details associated with guest sponsored splash
                    properties:
                      durationInMinutes:
                        description: Duration in minutes of sponsored guest authorization.
                        type: integer
                      guestCanRequestTimeframe:
                        description: Whether or not guests can specify how much time they are requesting.
                        type: boolean
                    type: object
                  redirectUrl:
                    description: The custom redirect URL where the users will go after the splash page.
                    type: string
                  selfRegistration:
                    description: Self-registration for splash with Meraki authentication.
                    properties:
                      authorizationType:
                        description: How created user accounts should be authorized.
                        enum:
                          - admin
                          - auto
                          - self_email
                        type: string
                      enabled:
                        description: Whether or not to allow users to create their own account on the network.
                        type: boolean
                    type: object
                  sentryEnrollment:
                    description: Systems Manager sentry enrollment splash settings.
                    properties:
                      enforcedSystems:
                        description: The system types that the Sentry enforces.
                        items:
                          type: string
                        type: array
                      strength:
                        description: The strength of the enforcement of selected system types.
                        enum:
                          - click-through
                          - focused
                          - strict
                        type: string
                      systemsManagerNetwork:
                        description: Systems Manager network targeted for sentry enrollment.
                        properties:
                          id:
                            description: The network ID of the Systems Manager network.
                            type: string
                        type: object
                    type: object
                  splashImage:
                    description: The image used in the splash page.
                    properties:
                      extension:
                        description: The extension of the image file.
                        type: string
                      md5:
                        description: The MD5 value of the image file.
                        type: string
                    type: object
                  splashLogo:
                    description: The logo used in the splash page.
                    properties:
                      extension:
                        description: The extension of the logo file.
                        type: string
                      md5:
                        description: The MD5 value of the logo file.
                        type: string
                    type: object
                  splashPage:
                    description: The type of splash page for this SSID
                    type: string
                  splashPrepaidFront:
                    description: The prepaid front image used in the splash page.
                    properties:
                      extension:
                        description: The extension of the prepaid front image file.
                        type: string
                      md5:
                        description: The MD5 value of the prepaid front image file.
                        type: string
                    type: object
                  splashTimeout:
                    description: Splash timeout in minutes.
                    type: integer
                  splashUrl:
                    description: The custom splash URL of the click-through splash page.
                    type: string
                  ssidNumber:
                    description: SSID number
                    type: integer
                  useRedirectUrl:
                    description: The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.
                    type: boolean
                  useSplashUrl:
                    description: Boolean indicating whether the users will be redirected to the custom splash url
                    type: boolean
                  welcomeMessage:
                    description: The welcome message for the users on the splash page.
                    type: string
                type: object
          description: Successful operation
      summary: Modify the splash page settings for the given SSID
      tags:
        - wireless
        - configure
        - ssids
        - splash
        - settings
  "/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules":
    get:
      description: Display the traffic shaping settings for a SSID on an MR network
      operationId: getNetworkWirelessSsidTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultRulesEnabled: true
                    rules:
                      - definitions:
                          - type: host
                            value: google.com
                          - type: port
                            value: "9090"
                          - type: ipRange
                            value: 192.1.0.0
                          - type: ipRange
                            value: 192.1.0.0/16
                          - type: ipRange
                            value: 10.1.0.0/16:80
                          - type: localNet
                            value: 192.168.0.0/16
                        dscpTagValue: 0
                        pcpTagValue: 0
                        perClientBandwidthLimits:
                          bandwidthLimits:
                            limitDown: 1000000
                            limitUp: 1000000
                          settings: custom
                    trafficShapingEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Display the traffic shaping settings for a SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - trafficShaping
        - rules
    put:
      description: Update the traffic shaping settings for an SSID on an MR network
      operationId: updateNetworkWirelessSsidTrafficShapingRules
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                defaultRulesEnabled: true
                rules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: "9090"
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: 10.1.0.0/16:80
                      - type: localNet
                        value: 192.168.0.0/16
                    dscpTagValue: 0
                    pcpTagValue: 0
                    perClientBandwidthLimits:
                      bandwidthLimits:
                        limitDown: 1000000
                        limitUp: 1000000
                      settings: custom
                trafficShapingEnabled: true
              properties:
                defaultRulesEnabled:
                  description: Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
                  type: boolean
                rules:
                  description: |2
                        An array of traffic shaping rules. Rules are applied in the order that
                        they are specified in. An empty list (or null) means no rules. Note that
                        you are allowed a maximum of 8 rules.
                  items:
                    properties:
                      definitions:
                        description: |2
                              A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
                        items:
                          properties:
                            type:
                              description: The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.
                              enum:
                                - application
                                - applicationCategory
                                - host
                                - ipRange
                                - localNet
                                - port
                              type: string
                            value:
                              description: |2
                                    If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                                    a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                                    "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                                    custom ports.
                                     If "type" is 'application' or 'applicationCategory', then "value" must be an object
                                    with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                                    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                                    endpoint).
                              type: string
                          required:
                            - type
                            - value
                          type: object
                        type: array
                      dscpTagValue:
                        description: |2
                              The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                              For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
                        type: integer
                      pcpTagValue:
                        description: |2
                              The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                              null means 'Do not set PCP tag'.
                        type: integer
                      perClientBandwidthLimits:
                        description: |2
                              An object describing the bandwidth settings for your rule.
                        properties:
                          bandwidthLimits:
                            description: The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.
                            properties:
                              limitDown:
                                description: The maximum download limit (integer, in Kbps).
                                type: integer
                              limitUp:
                                description: The maximum upload limit (integer, in Kbps).
                                type: integer
                            type: object
                          settings:
                            description: How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.
                            type: string
                        type: object
                    required:
                      - definitions
                    type: object
                  type: array
                trafficShapingEnabled:
                  description: Whether traffic shaping rules are applied to clients on your SSID.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    defaultRulesEnabled: true
                    rules:
                      - definitions:
                          - type: host
                            value: google.com
                          - type: port
                            value: "9090"
                          - type: ipRange
                            value: 192.1.0.0
                          - type: ipRange
                            value: 192.1.0.0/16
                          - type: ipRange
                            value: 10.1.0.0/16:80
                          - type: localNet
                            value: 192.168.0.0/16
                        dscpTagValue: 0
                        pcpTagValue: 0
                        perClientBandwidthLimits:
                          bandwidthLimits:
                            limitDown: 1000000
                            limitUp: 1000000
                          settings: custom
                    trafficShapingEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic shaping settings for an SSID on an MR network
      tags:
        - wireless
        - configure
        - ssids
        - trafficShaping
        - rules
  "/networks/{networkId}/wireless/ssids/{number}/vpn":
    get:
      description: List the VPN settings for the SSID.
      operationId: getNetworkWirelessSsidVpn
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    concentrator:
                      name: some concentrator name
                      networkId: N_123
                      vlanId: 44
                    failover:
                      heartbeatInterval: 10
                      idleTimeout: 30
                      requestIp: 1.1.1.1
                    splitTunnel:
                      enabled: true
                      rules:
                        - comment: split tunnel rule 1
                          destCidr: 1.1.1.1/32
                          destPort: any
                          policy: allow
                          protocol: Any
                        - comment: split tunnel rule 2
                          destCidr: foo.com
                          destPort: any
                          policy: deny
              schema:
                type: object
          description: Successful operation
      summary: List the VPN settings for the SSID.
      tags:
        - wireless
        - configure
        - ssids
        - vpn
    put:
      description: Update the VPN settings for the SSID
      operationId: updateNetworkWirelessSsidVpn
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - in: path
          name: number
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                concentrator:
                  name: some concentrator name
                  networkId: N_123
                  vlanId: 44
                failover:
                  heartbeatInterval: 10
                  idleTimeout: 30
                  requestIp: 1.1.1.1
                splitTunnel:
                  enabled: true
                  rules:
                    - comment: split tunnel rule 1
                      destCidr: 1.1.1.1/32
                      destPort: any
                      policy: allow
                      protocol: Any
                    - comment: split tunnel rule 2
                      destCidr: foo.com
                      destPort: any
                      policy: deny
              properties:
                concentrator:
                  description: The VPN concentrator settings for this SSID.
                  properties:
                    networkId:
                      description: The NAT ID of the concentrator that should be set.
                      type: string
                    vlanId:
                      description: The VLAN that should be tagged for the concentrator.
                      type: integer
                  type: object
                failover:
                  description: Secondary VPN concentrator settings. This is only used when two VPN concentrators are configured on the SSID.
                  properties:
                    heartbeatInterval:
                      description: Idle timer interval in seconds.
                      type: integer
                    idleTimeout:
                      description: Idle timer timeout in seconds.
                      type: integer
                    requestIp:
                      description: IP addressed reserved on DHCP server where SSID will terminate.
                      type: string
                  type: object
                splitTunnel:
                  description: The VPN split tunnel settings for this SSID.
                  properties:
                    enabled:
                      description: If true, VPN split tunnel is enabled.
                      type: boolean
                    rules:
                      description: List of VPN split tunnel rules.
                      items:
                        properties:
                          comment:
                            description: Description for this split tunnel rule (optional).
                            type: string
                          destCidr:
                            description: Destination for this split tunnel rule. IP address, fully-qualified domain names (FQDN) or 'any'.
                            type: string
                          destPort:
                            description: Destination port for this split tunnel rule, (integer in the range 1-65535), or 'any'.
                            type: string
                          policy:
                            description: Traffic policy specified for this split tunnel rule, 'allow' or 'deny'.
                            type: string
                          protocol:
                            description: Protocol for this split tunnel rule.
                            enum:
                              - Any
                              - TCP
                              - UDP
                            type: string
                        required:
                          - destCidr
                          - policy
                        type: object
                      type: array
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    concentrator:
                      name: some concentrator name
                      networkId: N_123
                      vlanId: 44
                    failover:
                      heartbeatInterval: 10
                      idleTimeout: 30
                      requestIp: 1.1.1.1
                    splitTunnel:
                      enabled: true
                      rules:
                        - comment: split tunnel rule 1
                          destCidr: 1.1.1.1/32
                          destPort: any
                          policy: allow
                          protocol: Any
                        - comment: split tunnel rule 2
                          destCidr: foo.com
                          destPort: any
                          policy: deny
              schema:
                type: object
          description: Successful operation
      summary: Update the VPN settings for the SSID
      tags:
        - wireless
        - configure
        - ssids
        - vpn
  "/networks/{networkId}/wireless/usageHistory":
    get:
      description: Return AP usage over time for a device or network client
      operationId: getNetworkWirelessUsageHistory
      parameters:
        - in: path
          name: networkId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time resolution in seconds for returned data. The valid resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400."
          in: query
          name: resolution
          schema:
            type: integer
        - description: Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
          in: query
          name: autoResolution
          schema:
            type: boolean
        - description: Filter results by network client to return per-device AP usage over time inner joined by the queried client's connection history.
          in: query
          name: clientId
          schema:
            type: string
        - description: Filter results by device. Requires :band.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter results by AP tag; either :clientId or :deviceSerial must be jointly specified.
          in: query
          name: apTag
          schema:
            type: string
        - description: Filter results by band (either '2.4', '5' or '6').
          in: query
          name: band
          schema:
            enum:
              - "2.4"
              - "5"
              - "6"
            type: string
        - description: Filter results by SSID number.
          in: query
          name: ssid
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - endTs: 2020-01-01T01:00:00Z
                      receivedKbps: 2431
                      sentKbps: 159
                      startTs: 2020-01-01T00:00:00Z
                      totalKbps: 2590
              schema:
                items:
                  properties:
                    endTs:
                      description: The end time of the query range
                      format: date-time
                      type: string
                    receivedKbps:
                      description: Received kilobytes-per-second
                      type: integer
                    sentKbps:
                      description: Sent kilobytes-per-second
                      type: integer
                    startTs:
                      description: The start time of the query range
                      format: date-time
                      type: string
                    totalKbps:
                      description: Total usage in kilobytes-per-second
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: Return AP usage over time for a device or network client
      tags:
        - wireless
        - monitor
        - usageHistory
  /organizations:
    get:
      description: List the organizations that the user has privileges on
      operationId: getOrganizations
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - api:
                        enabled: true
                      cloud:
                        region:
                          name: North America
                      id: "2930418"
                      licensing:
                        model: co-term
                      management:
                        details:
                          - name: MSP ID
                            value: "123456"
                      name: My organization
                      url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
              schema:
                items:
                  properties:
                    api:
                      description: API related settings
                      properties:
                        enabled:
                          description: Enable API access
                          type: boolean
                      type: object
                    cloud:
                      description: Data for this organization
                      properties:
                        region:
                          description: Region info
                          properties:
                            name:
                              description: Name of region
                              type: string
                          type: object
                      type: object
                    id:
                      description: Organization ID
                      type: string
                    licensing:
                      description: Licensing related settings
                      properties:
                        model:
                          description: Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
                          enum:
                            - co-term
                            - per-device
                            - subscription
                          type: string
                      type: object
                    management:
                      description: Information about the organization's management system
                      properties:
                        details:
                          description: Details related to organization management, possibly empty
                          items:
                            properties:
                              name:
                                description: Name of management data
                                type: string
                              value:
                                description: Value of management data
                                type: string
                            type: object
                          type: array
                      type: object
                    name:
                      description: Organization name
                      type: string
                    url:
                      description: Organization URL
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the organizations that the user has privileges on
      tags:
        - organizations
        - configure
    post:
      description: Create a new organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              example:
                management:
                  details:
                    - name: MSP ID
                      value: "123456"
                name: My organization
              properties:
                management:
                  description: Information about the organization's management system
                  properties:
                    details:
                      description: Details related to organization management, possibly empty
                      items:
                        properties:
                          name:
                            description: Name of management data
                            type: string
                          value:
                            description: Value of management data
                            type: string
                        type: object
                      type: array
                  type: object
                name:
                  description: The name of the organization
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    api:
                      enabled: true
                    cloud:
                      region:
                        name: North America
                    id: "2930418"
                    licensing:
                      model: co-term
                    management:
                      details:
                        - name: MSP ID
                          value: "123456"
                    name: My organization
                    url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
              schema:
                properties:
                  api:
                    description: API related settings
                    properties:
                      enabled:
                        description: Enable API access
                        type: boolean
                    type: object
                  cloud:
                    description: Data for this organization
                    properties:
                      region:
                        description: Region info
                        properties:
                          name:
                            description: Name of region
                            type: string
                        type: object
                    type: object
                  id:
                    description: Organization ID
                    type: string
                  licensing:
                    description: Licensing related settings
                    properties:
                      model:
                        description: Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
                        enum:
                          - co-term
                          - per-device
                          - subscription
                        type: string
                    type: object
                  management:
                    description: Information about the organization's management system
                    properties:
                      details:
                        description: Details related to organization management, possibly empty
                        items:
                          properties:
                            name:
                              description: Name of management data
                              type: string
                            value:
                              description: Value of management data
                              type: string
                          type: object
                        type: array
                    type: object
                  name:
                    description: Organization name
                    type: string
                  url:
                    description: Organization URL
                    type: string
                type: object
          description: Successful operation
      summary: Create a new organization
      tags:
        - organizations
        - configure
  "/organizations/{organizationId}":
    delete:
      description: Delete an organization
      operationId: deleteOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an organization
      tags:
        - organizations
        - configure
    get:
      description: Return an organization
      operationId: getOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    api:
                      enabled: true
                    cloud:
                      region:
                        name: North America
                    id: "2930418"
                    licensing:
                      model: co-term
                    management:
                      details:
                        - name: MSP ID
                          value: "123456"
                    name: My organization
                    url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
              schema:
                properties:
                  api:
                    description: API related settings
                    properties:
                      enabled:
                        description: Enable API access
                        type: boolean
                    type: object
                  cloud:
                    description: Data for this organization
                    properties:
                      region:
                        description: Region info
                        properties:
                          name:
                            description: Name of region
                            type: string
                        type: object
                    type: object
                  id:
                    description: Organization ID
                    type: string
                  licensing:
                    description: Licensing related settings
                    properties:
                      model:
                        description: Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
                        enum:
                          - co-term
                          - per-device
                          - subscription
                        type: string
                    type: object
                  management:
                    description: Information about the organization's management system
                    properties:
                      details:
                        description: Details related to organization management, possibly empty
                        items:
                          properties:
                            name:
                              description: Name of management data
                              type: string
                            value:
                              description: Value of management data
                              type: string
                          type: object
                        type: array
                    type: object
                  name:
                    description: Organization name
                    type: string
                  url:
                    description: Organization URL
                    type: string
                type: object
          description: Successful operation
      summary: Return an organization
      tags:
        - organizations
        - configure
    put:
      description: Update an organization
      operationId: updateOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                api:
                  enabled: true
                management:
                  details:
                    - name: MSP ID
                      value: "123456"
                name: My organization
              properties:
                api:
                  description: API-specific settings
                  properties:
                    enabled:
                      description: If true, enable the access to the Cisco Meraki Dashboard API
                      type: boolean
                  type: object
                management:
                  description: Information about the organization's management system
                  properties:
                    details:
                      description: Details related to organization management, possibly empty
                      items:
                        properties:
                          name:
                            description: Name of management data
                            type: string
                          value:
                            description: Value of management data
                            type: string
                        type: object
                      type: array
                  type: object
                name:
                  description: The name of the organization
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    api:
                      enabled: true
                    cloud:
                      region:
                        name: North America
                    id: "2930418"
                    licensing:
                      model: co-term
                    management:
                      details:
                        - name: MSP ID
                          value: "123456"
                    name: My organization
                    url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
              schema:
                properties:
                  api:
                    description: API related settings
                    properties:
                      enabled:
                        description: Enable API access
                        type: boolean
                    type: object
                  cloud:
                    description: Data for this organization
                    properties:
                      region:
                        description: Region info
                        properties:
                          name:
                            description: Name of region
                            type: string
                        type: object
                    type: object
                  id:
                    description: Organization ID
                    type: string
                  licensing:
                    description: Licensing related settings
                    properties:
                      model:
                        description: Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
                        enum:
                          - co-term
                          - per-device
                          - subscription
                        type: string
                    type: object
                  management:
                    description: Information about the organization's management system
                    properties:
                      details:
                        description: Details related to organization management, possibly empty
                        items:
                          properties:
                            name:
                              description: Name of management data
                              type: string
                            value:
                              description: Value of management data
                              type: string
                          type: object
                        type: array
                    type: object
                  name:
                    description: Organization name
                    type: string
                  url:
                    description: Organization URL
                    type: string
                type: object
          description: Successful operation
      summary: Update an organization
      tags:
        - organizations
        - configure
  "/organizations/{organizationId}/actionBatches":
    get:
      description: Return the list of action batches in the organization
      operationId: getOrganizationActionBatches
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: Filter batches by status. Valid types are pending, completed, and failed.
          in: query
          name: status
          schema:
            enum:
              - completed
              - failed
              - pending
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - actions:
                        - body:
                            enabled: false
                          operation: update
                          resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                        - body:
                            name: Group 1
                          operation: create
                          resource: /networks/L_XXXXX/groupPolicies
                      confirmed: true
                      id: "123"
                      organizationId: "2930418"
                      status:
                        completed: true
                        createdResources:
                          - id: 100
                            uri: /networks/L_XXXXX/groupPolicies/100
                        errors: []
                        failed: false
                      synchronous: false
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return the list of action batches in the organization
      tags:
        - organizations
        - configure
        - actionBatches
    post:
      description: Create an action batch
      operationId: createOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                actions:
                  - operation: create
                    resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                confirmed: true
                synchronous: true
              properties:
                actions:
                  description: A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
                  items:
                    properties:
                      body:
                        default: {}
                        description: The body of the action
                        properties: {}
                        type: object
                      operation:
                        description: The operation to be used
                        type: string
                      resource:
                        description: Unique identifier for the resource to be acted on
                        type: string
                    required:
                      - resource
                      - operation
                    type: object
                  type: array
                confirmed:
                  description: Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.
                  type: boolean
                synchronous:
                  description: Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.
                  type: boolean
              required:
                - actions
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    actions:
                      - operation: update
                        resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                    confirmed: true
                    id: "1234"
                    organizationId: "2930418"
                    status:
                      completed: true
                      createdResources:
                        - id: "1284392014819"
                          uri: /networks/L_XXXXX/groupPolicies/100
                      errors: []
                      failed: false
                    synchronous: false
              schema:
                properties:
                  actions:
                    description: A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
                    items:
                      properties:
                        operation:
                          description: The operation to be used by this action
                          type: string
                        resource:
                          description: Unique identifier for the resource to be acted on
                          type: string
                      required:
                        - resource
                        - operation
                      type: object
                    type: array
                  confirmed:
                    description: Flag describing whether the action should be previewed before executing or not
                    type: boolean
                  id:
                    description: ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
                    type: string
                  organizationId:
                    description: ID of the organization this action batch belongs to
                    type: string
                  status:
                    description: Status of action batch
                    properties:
                      completed:
                        description: Flag describing whether all actions in the action batch have completed
                        type: boolean
                      createdResources:
                        description: Resources created as a result of this action batch
                        items:
                          properties:
                            id:
                              description: ID of the created resource
                              type: string
                            uri:
                              description: URI, not including base, of the created resource
                              type: string
                          type: object
                        type: array
                      errors:
                        description: List of errors encountered when running actions in the action batch
                        items:
                          type: string
                        type: array
                      failed:
                        description: Flag describing whether any actions in the action batch failed
                        type: boolean
                    required:
                      - createdResources
                    type: object
                  synchronous:
                    description: Flag describing whether actions should run synchronously or asynchronously
                    type: boolean
                required:
                  - actions
                type: object
          description: Successful operation
      summary: Create an action batch
      tags:
        - organizations
        - configure
        - actionBatches
  "/organizations/{organizationId}/actionBatches/{actionBatchId}":
    delete:
      description: Delete an action batch
      operationId: deleteOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: actionBatchId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an action batch
      tags:
        - organizations
        - configure
        - actionBatches
    get:
      description: Return an action batch
      operationId: getOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: actionBatchId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    actions:
                      - operation: update
                        resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                    confirmed: true
                    id: "1234"
                    organizationId: "2930418"
                    status:
                      completed: true
                      createdResources:
                        - id: "1284392014819"
                          uri: /networks/L_XXXXX/groupPolicies/100
                      errors: []
                      failed: false
                    synchronous: false
              schema:
                properties:
                  actions:
                    description: A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
                    items:
                      properties:
                        operation:
                          description: The operation to be used by this action
                          type: string
                        resource:
                          description: Unique identifier for the resource to be acted on
                          type: string
                      required:
                        - resource
                        - operation
                      type: object
                    type: array
                  confirmed:
                    description: Flag describing whether the action should be previewed before executing or not
                    type: boolean
                  id:
                    description: ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
                    type: string
                  organizationId:
                    description: ID of the organization this action batch belongs to
                    type: string
                  status:
                    description: Status of action batch
                    properties:
                      completed:
                        description: Flag describing whether all actions in the action batch have completed
                        type: boolean
                      createdResources:
                        description: Resources created as a result of this action batch
                        items:
                          properties:
                            id:
                              description: ID of the created resource
                              type: string
                            uri:
                              description: URI, not including base, of the created resource
                              type: string
                          type: object
                        type: array
                      errors:
                        description: List of errors encountered when running actions in the action batch
                        items:
                          type: string
                        type: array
                      failed:
                        description: Flag describing whether any actions in the action batch failed
                        type: boolean
                    required:
                      - createdResources
                    type: object
                  synchronous:
                    description: Flag describing whether actions should run synchronously or asynchronously
                    type: boolean
                required:
                  - actions
                type: object
          description: Successful operation
      summary: Return an action batch
      tags:
        - organizations
        - configure
        - actionBatches
    put:
      description: Update an action batch
      operationId: updateOrganizationActionBatch
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: actionBatchId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                confirmed: true
                synchronous: false
              properties:
                confirmed:
                  description: A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.
                  type: boolean
                synchronous:
                  description: Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    actions:
                      - body:
                          enabled: false
                        operation: update
                        resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                      - body:
                          name: Group 1
                        operation: create
                        resource: /networks/L_XXXXX/groupPolicies
                    confirmed: true
                    id: "123"
                    organizationId: "2930418"
                    status:
                      completed: false
                      createdResources: []
                      errors: []
                      failed: false
                    synchronous: false
              schema:
                type: object
          description: Successful operation
      summary: Update an action batch
      tags:
        - organizations
        - configure
        - actionBatches
  "/organizations/{organizationId}/adaptivePolicy/acls":
    get:
      description: List adaptive policy ACLs in a organization
      operationId: getOrganizationAdaptivePolicyAcls
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - aclId: "12345678"
                      createdAt: 2021-05-19T17:08:25Z
                      description: Blocks sensitive web traffic
                      ipVersion: ipv6
                      name: Block sensitive web traffic
                      rules:
                        - dstPort: 22-30
                          policy: deny
                          protocol: tcp
                          srcPort: 1,33
                        - dstPort: any
                          policy: allow
                          protocol: any
                          srcPort: any
                      updatedAt: 2021-05-19T17:11:54Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List adaptive policy ACLs in a organization
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
    post:
      description: Creates new adaptive policy ACL
      operationId: createOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Blocks sensitive web traffic
                ipVersion: ipv6
                name: Block sensitive web traffic
                rules:
                  - dstPort: 22-30
                    policy: deny
                    protocol: tcp
                    srcPort: 1,33
                  - dstPort: any
                    policy: allow
                    protocol: any
                    srcPort: any
              properties:
                description:
                  default: ""
                  description: Description of the adaptive policy ACL
                  type: string
                ipVersion:
                  description: "IP version of adpative policy ACL. One of: 'any', 'ipv4' or 'ipv6'"
                  enum:
                    - any
                    - ipv4
                    - ipv6
                  type: string
                name:
                  description: Name of the adaptive policy ACL
                  type: string
                rules:
                  description: An ordered array of the adaptive policy ACL rules.
                  items:
                    properties:
                      dstPort:
                        description: "Destination port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        type: string
                      policy:
                        description: "'allow' or 'deny' traffic specified by this rule."
                        enum:
                          - allow
                          - deny
                        type: string
                      protocol:
                        description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any').
                        enum:
                          - any
                          - icmp
                          - tcp
                          - udp
                        type: string
                      srcPort:
                        description: "Source port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        type: string
                    required:
                      - policy
                      - protocol
                    type: object
                  type: array
              required:
                - name
                - rules
                - ipVersion
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2021-05-19T17:08:25Z
                    description: Blocks sensitive web traffic
                    id: 123
                    ipVersion: ipv6
                    name: Block sensitive web traffic
                    rules:
                      - dstPort: 22-30
                        policy: deny
                        protocol: tcp
                        srcPort: 1,33
                      - dstPort: any
                        policy: allow
                        protocol: any
                        srcPort: any
                    updatedAt: 2021-05-19T17:11:54Z
              schema:
                type: object
          description: Successful operation
      summary: Creates new adaptive policy ACL
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
  "/organizations/{organizationId}/adaptivePolicy/acls/{aclId}":
    delete:
      description: Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.
      operationId: deleteOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: aclId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Deletes the specified adaptive policy ACL
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
    get:
      description: Returns the adaptive policy ACL information
      operationId: getOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: aclId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    aclId: "12345678"
                    createdAt: 2021-05-19T17:08:25Z
                    description: Blocks sensitive web traffic
                    ipVersion: ipv6
                    name: Block sensitive web traffic
                    rules:
                      - dstPort: 22-30
                        policy: deny
                        protocol: tcp
                        srcPort: 1,33
                      - dstPort: any
                        policy: allow
                        protocol: any
                        srcPort: any
                    updatedAt: 2021-05-19T17:11:54Z
              schema:
                type: object
          description: Successful operation
      summary: Returns the adaptive policy ACL information
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
    put:
      description: Updates an adaptive policy ACL
      operationId: updateOrganizationAdaptivePolicyAcl
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: aclId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Blocks sensitive web traffic
                ipVersion: ipv6
                name: Block sensitive web traffic
                rules:
                  - dstPort: 22-30
                    policy: deny
                    protocol: tcp
                    srcPort: 1,33
                  - dstPort: any
                    policy: allow
                    protocol: any
                    srcPort: any
              properties:
                description:
                  description: Description of the adaptive policy ACL
                  type: string
                ipVersion:
                  description: "IP version of adpative policy ACL. One of: 'any', 'ipv4' or 'ipv6'"
                  enum:
                    - any
                    - ipv4
                    - ipv6
                  type: string
                name:
                  description: Name of the adaptive policy ACL
                  type: string
                rules:
                  description: An ordered array of the adaptive policy ACL rules. An empty array will clear the rules.
                  items:
                    properties:
                      dstPort:
                        description: "Destination port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        type: string
                      policy:
                        description: "'allow' or 'deny' traffic specified by this rule."
                        enum:
                          - allow
                          - deny
                        type: string
                      protocol:
                        description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any').
                        enum:
                          - any
                          - icmp
                          - tcp
                          - udp
                        type: string
                      srcPort:
                        description: "Source port. Must be in the format of single port: '1', port list: '1,2' or port range: '1-10', and in the range of 1-65535, or 'any'. Default is 'any'."
                        type: string
                    required:
                      - policy
                      - protocol
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2021-05-19T17:08:25Z
                    description: Blocks sensitive web traffic
                    id: 123
                    ipVersion: ipv6
                    name: Block sensitive web traffic
                    rules:
                      - dstPort: 22-30
                        policy: deny
                        protocol: tcp
                        srcPort: 1,33
                      - dstPort: any
                        policy: allow
                        protocol: any
                        srcPort: any
                    updatedAt: 2021-05-19T17:11:54Z
              schema:
                type: object
          description: Successful operation
      summary: Updates an adaptive policy ACL
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - acls
  "/organizations/{organizationId}/adaptivePolicy/groups":
    get:
      description: List adaptive policy groups in a organization
      operationId: getOrganizationAdaptivePolicyGroups
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - createdAt: 2019-06-27T21:34:25.253480Z
                      description: Group of XYZ Corp Employees
                      groupId: "1234"
                      isDefaultGroup: false
                      name: Employee Group
                      policyObjects:
                        - id: "2345"
                          name: Example Policy Object
                      requiredIpMappings: []
                      sgt: 1000
                      updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List adaptive policy groups in a organization
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - groups
    post:
      description: Creates a new adaptive policy group
      operationId: createOrganizationAdaptivePolicyGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Group of XYZ Corp Employees
                isDefaultGroup: false
                name: Employee Group
                policyObjects:
                  - id: "2345"
                    name: Example Policy Object
                requiredIpMappings: []
                sgt: 1000
              properties:
                description:
                  description: 'Description of the group (default: "")'
                  type: string
                name:
                  description: Name of the group
                  type: string
                policyObjects:
                  description: "The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group's SGT value if no other tagging scheme is being used (each requires one unique attribute) (default: [])"
                  items:
                    properties:
                      id:
                        description: The ID of the policy object
                        type: string
                      name:
                        description: The name of the policy object
                        type: string
                    type: object
                  type: array
                sgt:
                  description: SGT value of the group
                  type: integer
              required:
                - name
                - sgt
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2019-06-27T21:34:25.253480Z
                    description: Group of XYZ Corp Employees
                    groupId: "1234"
                    isDefaultGroup: false
                    name: Employee Group
                    policyObjects:
                      - id: "2345"
                        name: Example Policy Object
                    requiredIpMappings: []
                    sgt: 1000
                    updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Creates a new adaptive policy group
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - groups
  "/organizations/{organizationId}/adaptivePolicy/groups/{id}":
    delete:
      description: Deletes the specified adaptive policy group and any associated policies and references
      operationId: deleteOrganizationAdaptivePolicyGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Deletes the specified adaptive policy group and any associated policies and references
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - groups
    get:
      description: Returns an adaptive policy group
      operationId: getOrganizationAdaptivePolicyGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2019-06-27T21:34:25.253480Z
                    description: Group of XYZ Corp Employees
                    groupId: "1234"
                    isDefaultGroup: false
                    name: Employee Group
                    policyObjects:
                      - id: "2345"
                        name: Example Policy Object
                    requiredIpMappings: []
                    sgt: 1000
                    updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Returns an adaptive policy group
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - groups
    put:
      description: Updates an adaptive policy group. If updating "Infrastructure", only the SGT is allowed. Cannot update "Unknown".
      operationId: updateOrganizationAdaptivePolicyGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Group of XYZ Corp Employees
                isDefaultGroup: false
                name: Employee Group
                policyObjects:
                  - id: "2345"
                    name: Example Policy Object
                requiredIpMappings: []
                sgt: 1000
              properties:
                description:
                  description: Description of the group
                  type: string
                name:
                  description: Name of the group
                  type: string
                policyObjects:
                  description: The policy objects that belong to this group; traffic from addresses specified by these policy objects will be tagged with this group's SGT value if no other tagging scheme is being used (each requires one unique attribute)
                  items:
                    properties:
                      id:
                        description: The ID of the policy object
                        type: string
                      name:
                        description: The name of the policy object
                        type: string
                    type: object
                  type: array
                sgt:
                  description: SGT value of the group
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2019-06-27T21:34:25.253480Z
                    description: Group of XYZ Corp Employees
                    groupId: "1234"
                    isDefaultGroup: false
                    name: Employee Group
                    policyObjects:
                      - id: "2345"
                        name: Example Policy Object
                    requiredIpMappings: []
                    sgt: 1000
                    updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Updates an adaptive policy group
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - groups
  "/organizations/{organizationId}/adaptivePolicy/overview":
    get:
      description: Returns adaptive policy aggregate statistics for an organization
      operationId: getOrganizationAdaptivePolicyOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    counts:
                      allowPolicies: 70
                      customAcls: 12
                      customGroups: 8
                      denyPolicies: 30
                      groups: 10
                      policies: 100
                      policyObjects: 13
                    limits:
                      aclsInAPolicy: 7
                      customGroups: 60
                      policyObjects: 8000
                      rulesInAnAcl: 16
              schema:
                properties:
                  counts:
                    description: The current amount of various adaptive policy objects.
                    properties:
                      allowPolicies:
                        description: Number of adaptive policies currently in the organization that allow all traffic.
                        type: integer
                      customAcls:
                        description: Number of user-created adaptive policy ACLs currently in the organization.
                        type: integer
                      customGroups:
                        description: Number of user-created adaptive policy groups currently in the organization.
                        type: integer
                      denyPolicies:
                        description: Number of adaptive policies currently in the organization that deny all traffic.
                        type: integer
                      groups:
                        description: Number of adaptive policy groups currently in the organization.
                        type: integer
                      policies:
                        description: Number of adaptive policies currently in the organization.
                        type: integer
                      policyObjects:
                        description: Number of policy objects (with the adaptive policy type) currently in the organization.
                        type: integer
                    type: object
                  limits:
                    description: The current limits of various adaptive policy objects.
                    properties:
                      aclsInAPolicy:
                        description: Maximum number of adaptive policy ACLs that can be assigned to an adaptive policy in the organization.
                        type: integer
                      customGroups:
                        description: Maximum number of user-created adaptive policy groups allowed in the organization.
                        type: integer
                      policyObjects:
                        description: Maximum number of policy objects (with the adaptive policy type) allowed in the organization.
                        type: integer
                      rulesInAnAcl:
                        description: Maximum number of rules allowed in an adaptive policy ACL in the organization.
                        type: integer
                    type: object
                type: object
          description: Successful operation
      summary: Returns adaptive policy aggregate statistics for an organization
      tags:
        - organizations
        - monitor
        - adaptivePolicy
        - overview
  "/organizations/{organizationId}/adaptivePolicy/policies":
    get:
      description: List adaptive policies in an organization
      operationId: getOrganizationAdaptivePolicyPolicies
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - acls:
                        - id: "444"
                          name: Block web
                      adaptivePolicyId: "111"
                      createdAt: 2019-06-27T21:34:25.253480Z
                      destinationGroup:
                        id: "333"
                        name: IoT Servers
                        sgt: 51
                      lastEntryRule: allow
                      sourceGroup:
                        id: "222"
                        name: IoT Devices
                        sgt: 50
                      updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List adaptive policies in an organization
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - policies
    post:
      description: Add an Adaptive Policy
      operationId: createOrganizationAdaptivePolicyPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                acls:
                  - id: "444"
                    name: Block web
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                lastEntryRule: allow
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
              properties:
                acls:
                  description: "An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])"
                  items:
                    properties:
                      id:
                        description: The ID of the adaptive policy ACL
                        type: string
                      name:
                        description: The name of the adaptive policy ACL
                        type: string
                    type: object
                  type: array
                destinationGroup:
                  description: The destination adaptive policy group (requires one unique attribute)
                  properties:
                    id:
                      description: The ID of the destination adaptive policy group
                      type: string
                    name:
                      description: The name of the destination adaptive policy group
                      type: string
                    sgt:
                      description: The SGT of the destination adaptive policy group
                      type: integer
                  type: object
                lastEntryRule:
                  description: 'The rule to apply if there is no matching ACL (default: "default")'
                  enum:
                    - allow
                    - default
                    - deny
                  type: string
                sourceGroup:
                  description: The source adaptive policy group (requires one unique attribute)
                  properties:
                    id:
                      description: The ID of the source adaptive policy group
                      type: string
                    name:
                      description: The name of the source adaptive policy group
                      type: string
                    sgt:
                      description: The SGT of the source adaptive policy group
                      type: integer
                  type: object
              required:
                - sourceGroup
                - destinationGroup
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    acls:
                      - id: "444"
                        name: Block web
                    adaptivePolicyId: "111"
                    createdAt: 2019-06-27T21:34:25.253480Z
                    destinationGroup:
                      id: "333"
                      name: IoT Servers
                      sgt: 51
                    lastEntryRule: allow
                    sourceGroup:
                      id: "222"
                      name: IoT Devices
                      sgt: 50
                    updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Add an Adaptive Policy
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - policies
  "/organizations/{organizationId}/adaptivePolicy/policies/{id}":
    delete:
      description: Delete an Adaptive Policy
      operationId: deleteOrganizationAdaptivePolicyPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an Adaptive Policy
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - policies
    get:
      description: Return an adaptive policy
      operationId: getOrganizationAdaptivePolicyPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    acls:
                      - id: "444"
                        name: Block web
                    adaptivePolicyId: "111"
                    createdAt: 2019-06-27T21:34:25.253480Z
                    destinationGroup:
                      id: "333"
                      name: IoT Servers
                      sgt: 51
                    lastEntryRule: allow
                    sourceGroup:
                      id: "222"
                      name: IoT Devices
                      sgt: 50
                    updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Return an adaptive policy
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - policies
    put:
      description: Update an Adaptive Policy
      operationId: updateOrganizationAdaptivePolicyPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                acls:
                  - id: "444"
                    name: Block web
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                lastEntryRule: allow
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
              properties:
                acls:
                  description: An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy
                  items:
                    properties:
                      id:
                        description: The ID of the adaptive policy ACL
                        type: string
                      name:
                        description: The name of the adaptive policy ACL
                        type: string
                    type: object
                  type: array
                destinationGroup:
                  description: The destination adaptive policy group (requires one unique attribute)
                  properties:
                    id:
                      description: The ID of the destination adaptive policy group
                      type: string
                    name:
                      description: The name of the destination adaptive policy group
                      type: string
                    sgt:
                      description: The SGT of the destination adaptive policy group
                      type: integer
                  type: object
                lastEntryRule:
                  description: The rule to apply if there is no matching ACL
                  enum:
                    - allow
                    - default
                    - deny
                  type: string
                sourceGroup:
                  description: The source adaptive policy group (requires one unique attribute)
                  properties:
                    id:
                      description: The ID of the source adaptive policy group
                      type: string
                    name:
                      description: The name of the source adaptive policy group
                      type: string
                    sgt:
                      description: The SGT of the source adaptive policy group
                      type: integer
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    acls:
                      - id: "444"
                        name: Block web
                    adaptivePolicyId: "111"
                    createdAt: 2019-06-27T21:34:25.253480Z
                    destinationGroup:
                      id: "333"
                      name: IoT Servers
                      sgt: 51
                    lastEntryRule: allow
                    sourceGroup:
                      id: "222"
                      name: IoT Devices
                      sgt: 50
                    updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Update an Adaptive Policy
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - policies
  "/organizations/{organizationId}/adaptivePolicy/settings":
    get:
      description: Returns global adaptive policy settings in an organization
      operationId: getOrganizationAdaptivePolicySettings
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabledNetworks:
                      - L_11111111
                      - L_22222222
                      - N_33333333
                      - L_44444444
              schema:
                type: object
          description: Successful operation
      summary: Returns global adaptive policy settings in an organization
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - settings
    put:
      description: Update global adaptive policy settings
      operationId: updateOrganizationAdaptivePolicySettings
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabledNetworks:
                  - L_11111111
                  - L_22222222
                  - N_33333333
                  - L_44444444
              properties:
                enabledNetworks:
                  description: List of network IDs with adaptive policy enabled
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabledNetworks:
                      - L_11111111
                      - L_22222222
                      - N_33333333
                      - L_44444444
              schema:
                type: object
          description: Successful operation
      summary: Update global adaptive policy settings
      tags:
        - organizations
        - configure
        - adaptivePolicy
        - settings
  "/organizations/{organizationId}/admins":
    get:
      description: List the dashboard administrators in this organization
      operationId: getOrganizationAdmins
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accountStatus: ok
                      authenticationMethod: Email
                      email: miles@meraki.com
                      hasApiKey: true
                      id: "212406"
                      lastActive: 2018-02-11T00:00:00Z
                      name: Miles Meraki
                      networks:
                        - access: full
                          id: N_24329156
                      orgAccess: none
                      tags:
                        - access: read-only
                          tag: west
                      twoFactorAuthEnabled: false
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the dashboard administrators in this organization
      tags:
        - organizations
        - configure
        - admins
    post:
      description: Create a new dashboard administrator
      operationId: createOrganizationAdmin
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                email: miles@meraki.com
                name: Miles Meraki
                orgAccess: none
                tags:
                  - access: read-only
                    tag: west
              properties:
                authenticationMethod:
                  description: The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
                  enum:
                    - Cisco SecureX Sign-On
                    - Email
                  type: string
                email:
                  description: The email of the dashboard administrator. This attribute can not be updated.
                  type: string
                name:
                  description: The name of the dashboard administrator
                  type: string
                networks:
                  description: The list of networks that the dashboard administrator has privileges on
                  items:
                    properties:
                      access:
                        description: The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
                        type: string
                      id:
                        description: The network ID
                        type: string
                    required:
                      - id
                      - access
                    type: object
                  type: array
                orgAccess:
                  description: The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
                  enum:
                    - enterprise
                    - full
                    - none
                    - read-only
                  type: string
                tags:
                  description: The list of tags that the dashboard administrator has privileges on
                  items:
                    properties:
                      access:
                        description: The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
                        enum:
                          - full
                          - guest-ambassador
                          - monitor-only
                          - read-only
                        type: string
                      tag:
                        description: The name of the tag
                        type: string
                    required:
                      - tag
                      - access
                    type: object
                  type: array
              required:
                - email
                - name
                - orgAccess
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountStatus: ok
                    authenticationMethod: Email
                    email: miles@meraki.com
                    hasApiKey: true
                    id: "212406"
                    lastActive: 2018-02-11T00:00:00Z
                    name: Miles Meraki
                    networks:
                      - access: full
                        id: N_24329156
                    orgAccess: none
                    tags:
                      - access: read-only
                        tag: west
                    twoFactorAuthEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Create a new dashboard administrator
      tags:
        - organizations
        - configure
        - admins
  "/organizations/{organizationId}/admins/{adminId}":
    delete:
      description: Revoke all access for a dashboard administrator within this organization
      operationId: deleteOrganizationAdmin
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: adminId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Revoke all access for a dashboard administrator within this organization
      tags:
        - organizations
        - configure
        - admins
    put:
      description: Update an administrator
      operationId: updateOrganizationAdmin
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: adminId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Miles Meraki
                orgAccess: none
                tags:
                  - access: read-only
                    tag: west
              properties:
                name:
                  description: The name of the dashboard administrator
                  type: string
                networks:
                  description: The list of networks that the dashboard administrator has privileges on
                  items:
                    properties:
                      access:
                        description: The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
                        type: string
                      id:
                        description: The network ID
                        type: string
                    required:
                      - id
                      - access
                    type: object
                  type: array
                orgAccess:
                  description: The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
                  enum:
                    - enterprise
                    - full
                    - none
                    - read-only
                  type: string
                tags:
                  description: The list of tags that the dashboard administrator has privileges on
                  items:
                    properties:
                      access:
                        description: The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
                        enum:
                          - full
                          - guest-ambassador
                          - monitor-only
                          - read-only
                        type: string
                      tag:
                        description: The name of the tag
                        type: string
                    required:
                      - tag
                      - access
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountStatus: ok
                    authenticationMethod: Email
                    email: miles@meraki.com
                    hasApiKey: true
                    id: "212406"
                    lastActive: 2018-02-11T00:00:00Z
                    name: Miles Meraki
                    networks:
                      - access: full
                        id: N_24329156
                    orgAccess: none
                    tags:
                      - access: read-only
                        tag: west
                    twoFactorAuthEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update an administrator
      tags:
        - organizations
        - configure
        - admins
  "/organizations/{organizationId}/alerts/profiles":
    get:
      description: List all organization-wide alert configurations
      operationId: getOrganizationAlertsProfiles
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - alertCondition:
                        bit_rate_bps: 10000
                        duration: 60
                        interface: wan1
                        window: 600
                      description: WAN 1 high utilization
                      enabled: true
                      id: "1284392014819"
                      networkTags:
                        - tag1
                        - tag2
                      recipients:
                        emails:
                          - admin@example.org
                        httpServerIds:
                          - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                      type: wanUtilization
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List all organization-wide alert configurations
      tags:
        - organizations
        - configure
        - alerts
        - profiles
    post:
      description: Create an organization-wide alert configuration
      operationId: createOrganizationAlertsProfile
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                alertCondition:
                  bit_rate_bps: 10000
                  duration: 60
                  interface: wan1
                  window: 600
                description: WAN 1 high utilization
                enabled: true
                networkTags:
                  - tag1
                  - tag2
                recipients:
                  emails:
                    - admin@example.org
                  httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                type: wanUtilization
              properties:
                alertCondition:
                  description: The conditions that determine if the alert triggers
                  properties:
                    bit_rate_bps:
                      description: The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
                      type: integer
                    duration:
                      description: The total duration in seconds that the threshold should be crossed before alerting
                      type: integer
                    interface:
                      description: "The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular"
                      enum:
                        - cellular
                        - wan1
                        - wan2
                      type: string
                    jitter_ms:
                      description: The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
                      type: integer
                    latency_ms:
                      description: The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
                      type: integer
                    loss_ratio:
                      description: The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
                      format: float
                      type: number
                    mos:
                      description: The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
                      format: float
                      type: number
                    window:
                      description: The look back period in seconds for sensing the alert
                      type: integer
                  type: object
                description:
                  description: User supplied description of the alert
                  type: string
                networkTags:
                  description: Networks with these tags will be monitored for the alert
                  items:
                    type: string
                  type: array
                recipients:
                  description: List of recipients that will recieve the alert.
                  properties:
                    emails:
                      description: A list of emails that will receive information about the alert
                      items:
                        type: string
                      type: array
                    httpServerIds:
                      description: A list base64 encoded urls of webhook endpoints that will receive information about the alert
                      items:
                        type: string
                      type: array
                  type: object
                type:
                  description: The alert type
                  enum:
                    - appOutage
                    - voipJitter
                    - voipMos
                    - voipPacketLoss
                    - wanLatency
                    - wanPacketLoss
                    - wanStatus
                    - wanUtilization
                  type: string
              required:
                - type
                - alertCondition
                - recipients
                - networkTags
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    alertCondition:
                      bit_rate_bps: 10000
                      duration: 60
                      interface: wan1
                      window: 600
                    description: WAN 1 high utilization
                    enabled: true
                    id: "1284392014819"
                    networkTags:
                      - tag1
                      - tag2
                    recipients:
                      emails:
                        - admin@example.org
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                    type: wanUtilization
              schema:
                type: object
          description: Successful operation
      summary: Create an organization-wide alert configuration
      tags:
        - organizations
        - configure
        - alerts
        - profiles
  "/organizations/{organizationId}/alerts/profiles/{alertConfigId}":
    delete:
      description: Removes an organization-wide alert config
      operationId: deleteOrganizationAlertsProfile
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: alertConfigId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Removes an organization-wide alert config
      tags:
        - organizations
        - configure
        - alerts
        - profiles
    put:
      description: Update an organization-wide alert config
      operationId: updateOrganizationAlertsProfile
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: alertConfigId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
              properties:
                alertCondition:
                  description: The conditions that determine if the alert triggers
                  properties:
                    bit_rate_bps:
                      description: The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
                      type: integer
                    duration:
                      description: The total duration in seconds that the threshold should be crossed before alerting
                      type: integer
                    interface:
                      description: "The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular"
                      enum:
                        - cellular
                        - wan1
                        - wan2
                      type: string
                    jitter_ms:
                      description: The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
                      type: integer
                    latency_ms:
                      description: The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
                      type: integer
                    loss_ratio:
                      description: The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
                      format: float
                      type: number
                    mos:
                      description: The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
                      format: float
                      type: number
                    window:
                      description: The look back period in seconds for sensing the alert
                      type: integer
                  type: object
                description:
                  description: User supplied description of the alert
                  type: string
                enabled:
                  description: Is the alert config enabled
                  type: boolean
                networkTags:
                  description: Networks with these tags will be monitored for the alert
                  items:
                    type: string
                  type: array
                recipients:
                  description: List of recipients that will recieve the alert.
                  properties:
                    emails:
                      description: A list of emails that will receive information about the alert
                      items:
                        type: string
                      type: array
                    httpServerIds:
                      description: A list base64 encoded urls of webhook endpoints that will receive information about the alert
                      items:
                        type: string
                      type: array
                  type: object
                type:
                  description: The alert type
                  enum:
                    - appOutage
                    - voipJitter
                    - voipMos
                    - voipPacketLoss
                    - wanLatency
                    - wanPacketLoss
                    - wanStatus
                    - wanUtilization
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    alertCondition:
                      bit_rate_bps: 10000
                      duration: 60
                      interface: wan1
                      window: 600
                    description: WAN 1 high utilization
                    enabled: true
                    id: "1284392014819"
                    networkTags:
                      - tag1
                      - tag2
                    recipients:
                      emails:
                        - admin@example.org
                      httpServerIds:
                        - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                    type: wanUtilization
              schema:
                type: object
          description: Successful operation
      summary: Update an organization-wide alert config
      tags:
        - organizations
        - configure
        - alerts
        - profiles
  "/organizations/{organizationId}/apiRequests":
    get:
      description: List the API requests made by an organization
      operationId: getOrganizationApiRequests
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filter the results by the ID of the admin who made the API requests
          in: query
          name: adminId
          schema:
            type: string
        - description: Filter the results by the path of the API requests
          in: query
          name: path
          schema:
            type: string
        - description: Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')
          in: query
          name: method
          schema:
            enum:
              - DELETE
              - GET
              - POST
              - PUT
            type: string
        - description: Filter the results by the response code of the API requests
          in: query
          name: responseCode
          schema:
            type: integer
        - description: Filter the results by the IP address of the originating API request
          in: query
          name: sourceIp
          schema:
            type: string
        - description: Filter the results by the user agent string of the API request
          in: query
          name: userAgent
          schema:
            type: string
        - description: Filter the results by the API version of the API request
          in: query
          name: version
          schema:
            enum:
              - 0
              - 1
            type: integer
        - description: Filter the results by one or more operation IDs for the API request
          explode: false
          in: query
          name: operationIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - adminId: "212406"
                      host: server.example.com
                      method: GET
                      operationId: getOrganizationApiRequests
                      path: /api/v1/organizations/12345/apiRequests
                      queryString: timespan=604800
                      responseCode: 200
                      sourceIp: 123.123.123.1
                      ts: 2018-02-11T00:00:00.090210Z
                      userAgent: PostmanRuntime/7.6.0
                      version: 1
              schema:
                items:
                  properties:
                    adminId:
                      description: Database ID for the admin user who made the API request.
                      type: string
                    host:
                      description: The host which the API request was directed at.
                      type: string
                    method:
                      description: HTTP method used in the API request.
                      type: string
                    operationId:
                      description: Operation ID for the endpoint.
                      type: string
                    path:
                      description: The API request path.
                      type: string
                    queryString:
                      description: The query string sent with the API request.
                      type: string
                    responseCode:
                      description: API request response code.
                      type: integer
                    sourceIp:
                      description: Public IP address from which the API request was made.
                      type: string
                    ts:
                      description: Timestamp, in iso8601 format, indicating when the API request was made.
                      format: date-time
                      type: string
                    userAgent:
                      description: The API request user agent.
                      type: string
                    version:
                      description: API version of the endpoint.
                      enum:
                        - 0
                        - 1
                      type: integer
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the API requests made by an organization
      tags:
        - organizations
        - monitor
        - apiRequests
  "/organizations/{organizationId}/apiRequests/overview":
    get:
      description: Return an aggregated overview of API requests data
      operationId: getOrganizationApiRequestsOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    responseCodeCounts:
                      "200": 50000
                      "201": 4000
                      "204": 1000
                      "400": 3500
                      "404": 1500
                      "429": 10000
              schema:
                type: object
          description: Successful operation
      summary: Return an aggregated overview of API requests data
      tags:
        - organizations
        - monitor
        - apiRequests
        - overview
  "/organizations/{organizationId}/apiRequests/overview/responseCodes/byInterval":
    get:
      description: Tracks organizations' API requests by response code across a given time period
      operationId: getOrganizationApiRequestsOverviewResponseCodesByInterval
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days. If interval is provided, the timespan will be autocalculated.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: "The time interval in seconds for returned data. The valid intervals are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated if time params are provided."
          in: query
          name: interval
          schema:
            type: integer
        - description: "Filter by API version of the endpoint. Allowable values are: [0, 1]"
          in: query
          name: version
          schema:
            enum:
              - 0
              - 1
            type: integer
        - description: Filter by operation ID of the endpoint
          explode: false
          in: query
          name: operationIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter by source IP that made the API request
          explode: false
          in: query
          name: sourceIps
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter by admin ID of user that made the API request
          explode: false
          in: query
          name: adminIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter by user agent string for API request. This will filter by a complete or partial match.
          in: query
          name: userAgent
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - counts:
                        - code: 200
                          count: 198938
                      endTs: 2018-05-12T00:00:00Z
                      startTs: 2018-02-11T00:00:00Z
              schema:
                items:
                  properties:
                    counts:
                      description: list of response codes and a count of how many requests had that code in the given time period
                      items:
                        properties:
                          code:
                            description: Response status code of the API response
                            type: integer
                          count:
                            description: Number of records that match the status code
                            type: integer
                        type: object
                      type: array
                    endTs:
                      description: The end time of the access period
                      format: date-time
                      type: string
                    startTs:
                      description: The start time of the access period
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Tracks organizations' API requests by response code across a given time period
      tags:
        - organizations
        - monitor
        - apiRequests
        - overview
        - responseCodes
        - byInterval
  "/organizations/{organizationId}/appliance/security/events":
    get:
      description: List the security events for an organization
      operationId: getOrganizationApplianceSecurityEvents
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. Data is gathered after the specified t0 value. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Sorted order of security events based on event detection time. Order options are 'ascending' or 'descending'. Default is ascending order.
          in: query
          name: sortOrder
          schema:
            enum:
              - ascending
              - descending
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - action: Blocked
                      canonicalName: PUA.Win.Dropper.Kraddare::1201
                      clientIp: 192.168.128.2
                      clientMac: 10:dd:b1:eb:88:f8
                      clientName: COMPUTER-M-V78J
                      destIp: 119.192.233.48
                      destinationPort: 80
                      disposition: Malicious
                      eventType: File Scanned
                      fileHash: 3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                      fileSizeBytes: 193688
                      fileType: MS_EXE
                      protocol: http
                      srcIp: 192.168.128.2
                      ts: 2020-03-20T16:00:10.144989Z
                      uri: http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                    - blocked: true
                      classification: "4"
                      clientMac: A1:B2:C3:D4:E5:F6
                      destIp: 10.20.30.40:80
                      deviceMac: 00:18:0a:01:02:03
                      eventType: IDS Alert
                      message: SERVER-WEBAPP JBoss JMX console access attempt
                      priority: "2"
                      protocol: tcp/ip
                      ruleId: meraki:intrusion/snort/GID/1/SID/26267
                      sigSource: ""
                      signature: 1:21516:9
                      srcIp: 1.2.3.4:34195
                      ts: 2018-02-11T00:00:00.090210Z
                    - blocked: true
                      classification: "33"
                      clientMac: A1:B2:C3:D4:E5:F6
                      destIp: 10.20.30.40:80
                      deviceMac: 00:18:0a:01:02:03
                      eventType: IDS Alert
                      message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                      priority: "1"
                      protocol: tcp/ip
                      ruleId: meraki:intrusion/snort/GID/1/SID/26267
                      sigSource: ""
                      signature: 1:25975:2
                      srcIp: 1.2.3.4:56023
                      ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the security events for an organization
      tags:
        - appliance
        - monitor
        - security
        - events
  "/organizations/{organizationId}/appliance/security/intrusion":
    get:
      description: Returns all supported intrusion settings for an organization
      operationId: getOrganizationApplianceSecurityIntrusion
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowedRules:
                      - message: SQL sa login failed
                        ruleId: meraki:intrusion/snort/GID/01/SID/688
                      - message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines
                        ruleId: meraki:intrusion/snort/GID/01/SID/5805
              schema:
                type: object
          description: Successful operation
      summary: Returns all supported intrusion settings for an organization
      tags:
        - appliance
        - configure
        - security
        - intrusion
    put:
      description: Sets supported intrusion settings for an organization
      operationId: updateOrganizationApplianceSecurityIntrusion
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                allowedRules:
                  - message: SQL sa login failed
                    ruleId: meraki:intrusion/snort/GID/01/SID/688
                  - message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines
                    ruleId: meraki:intrusion/snort/GID/01/SID/5805
              properties:
                allowedRules:
                  description: Sets a list of specific SNORT signatures to allow
                  items:
                    properties:
                      message:
                        description: Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET
                        type: string
                      ruleId:
                        description: A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents
                        type: string
                    required:
                      - ruleId
                    type: object
                  type: array
              required:
                - allowedRules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    allowedRules:
                      - message: SQL sa login failed
                        ruleId: meraki:intrusion/snort/GID/01/SID/688
                      - message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines
                        ruleId: meraki:intrusion/snort/GID/01/SID/5805
              schema:
                type: object
          description: Successful operation
      summary: Sets supported intrusion settings for an organization
      tags:
        - appliance
        - configure
        - security
        - intrusion
  "/organizations/{organizationId}/appliance/uplink/statuses":
    get:
      description: List the uplink status of every Meraki MX and Z series appliances in the organization
      operationId: getOrganizationApplianceUplinkStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: A list of network IDs. The returned devices will be filtered to only include these networks.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of serial numbers. The returned devices will be filtered to only include these serials.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
          explode: false
          in: query
          name: iccids
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - highAvailability:
                        enabled: true
                        role: primary
                      lastReportedAt: 2018-02-11T00:00:00Z
                      model: MX68C
                      networkId: N_24329156
                      serial: Q234-ABCD-5678
                      uplinks:
                        - gateway: 1.2.3.5
                          interface: wan1
                          ip: 1.2.3.4
                          ipAssignedBy: static
                          primaryDns: 8.8.8.8
                          publicIp: 123.123.123.1
                          secondaryDns: 8.8.4.4
                          status: active
                        - apn: internet
                          connectionType: 4g
                          dns1: 111.111.111.111
                          dns2: 222.222.222.222
                          gateway: 100.100.100.100
                          iccid: "123456789"
                          interface: cellular
                          ip: 1.2.3.4
                          model: integrated
                          provider: at&t
                          publicIp: 123.123.123.1
                          signalStat:
                            rsrp: "-120"
                            rsrq: "-13"
                          signalType: 4G
                          status: ready
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the uplink status of every Meraki MX and Z series appliances in the organization
      tags:
        - appliance
        - monitor
        - uplinks
        - statuses
  "/organizations/{organizationId}/appliance/vpn/stats":
    get:
      description: Show VPN history stat for networks in an organization
      operationId: getOrganizationApplianceVpnStats
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - merakiVpnPeers:
                        - jitterSummaries:
                            - avgJitter: 0.01
                              maxJitter: 0.25
                              minJitter: 0
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgJitter: 0.01
                              maxJitter: 0.25
                              minJitter: 0
                              receiverUplink: wan1
                              senderUplink: wan2
                          latencySummaries:
                            - avgLatencyMs: 15
                              maxLatencyMs: 30
                              minLatencyMs: 10
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgLatencyMs: 15
                              maxLatencyMs: 30
                              minLatencyMs: 10
                              receiverUplink: wan1
                              senderUplink: wan2
                          lossPercentageSummaries:
                            - avgLossPercentage: 0
                              maxLossPercentage: 0.1
                              minLossPercentage: 0
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgLossPercentage: 0
                              maxLossPercentage: 0.1
                              minLossPercentage: 0
                              receiverUplink: wan1
                              senderUplink: wan2
                          mosSummaries:
                            - avgMos: 4.1
                              maxMos: 4.2
                              minMos: 4
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgMos: 4.1
                              maxMos: 4.2
                              minMos: 4
                              receiverUplink: wan1
                              senderUplink: wan2
                          networkId: L_23456789
                          networkName: New York Office
                          usageSummary:
                            receivedInKilobytes: 1234567
                            sentInKilobytes: 2345678
                      networkId: N_12345678
                      networkName: San Francisco Office
                    - merakiVpnPeers:
                        - jitterSummaries:
                            - avgJitter: 0.01
                              maxJitter: 0.25
                              minJitter: 0
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgJitter: 0.01
                              maxJitter: 0.25
                              minJitter: 0
                              receiverUplink: wan2
                              senderUplink: wan1
                          latencySummaries:
                            - avgLatencyMs: 15
                              maxLatencyMs: 30
                              minLatencyMs: 10
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgLatencyMs: 15
                              maxLatencyMs: 30
                              minLatencyMs: 10
                              receiverUplink: wan2
                              senderUplink: wan1
                          lossPercentageSummaries:
                            - avgLossPercentage: 0
                              maxLossPercentage: 0.1
                              minLossPercentage: 0
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgLossPercentage: 0
                              maxLossPercentage: 0.1
                              minLossPercentage: 0
                              receiverUplink: wan2
                              senderUplink: wan1
                          mosSummaries:
                            - avgMos: 4.1
                              maxMos: 4.2
                              minMos: 4
                              receiverUplink: wan1
                              senderUplink: wan1
                            - avgMos: 4.1
                              maxMos: 4.2
                              minMos: 4
                              receiverUplink: wan2
                              senderUplink: wan1
                          networkId: N_12345678
                          networkName: San Francisco Office
                          usageSummary:
                            receivedInKilobytes: 2345678
                            sentInKilobytes: 1234567
                      networkId: L_23456789
                      networkName: New York Office
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Show VPN history stat for networks in an organization
      tags:
        - appliance
        - monitor
        - vpn
        - stats
  "/organizations/{organizationId}/appliance/vpn/statuses":
    get:
      description: Show VPN status for networks in an organization
      operationId: getOrganizationApplianceVpnStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 300. Default is 300.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - deviceSerial: Q234-ABCD-1234
                      deviceStatus: online
                      exportedSubnets:
                        - name: sales-vlan
                          subnet: 192.168.0.0/24
                        - name: engineering-vlan
                          subnet: 172.16.0.0/24
                      merakiVpnPeers:
                        - networkId: L_1234
                          networkName: New York Office
                          reachability: reachable
                      networkId: N_12345678
                      networkName: San Francisco Office
                      thirdPartyVpnPeers:
                        - name: London Office
                          publicIp: 111.222.333.444
                          reachability: reachable
                      uplinks:
                        - interface: wan1
                          publicIp: 1.2.3.4
                        - interface: wan2
                          publicIp: 2.3.4.5
                      vpnMode: hub
                    - deviceSerial: Q234-EFGH-5678
                      deviceStatus: online
                      exportedSubnets:
                        - name: sales-vlan
                          subnet: 192.168.1.0/24
                        - name: engineering-vlan
                          subnet: 172.16.1.0/24
                      merakiVpnPeers:
                        - networkId: N_12345678
                          networkName: San Francisco Office
                          reachability: reachable
                      networkId: L_1234
                      networkName: New York Office
                      thirdPartyVpnPeers:
                        - name: Tokyo Office
                          publicIp: 222.333.444.555
                          reachability: reachable
                      uplinks:
                        - interface: wan1
                          publicIp: 3.4.5.6
                      vpnMode: spoke
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Show VPN status for networks in an organization
      tags:
        - appliance
        - monitor
        - vpn
        - statuses
  "/organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers":
    get:
      description: Return the third party VPN peers for an organization
      operationId: getOrganizationApplianceVpnThirdPartyVPNPeers
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    peers:
                      - ikeVersion: "1"
                        ipsecPolicies:
                          childAuthAlgo:
                            - sha1
                          childCipherAlgo:
                            - aes128
                          childLifetime: 28800
                          childPfsGroup:
                            - disabled
                          ikeAuthAlgo:
                            - sha1
                          ikeCipherAlgo:
                            - tripledes
                          ikeDiffieHellmanGroup:
                            - group2
                          ikeLifetime: 28800
                          ikePrfAlgo:
                            - prfsha1
                        ipsecPoliciesPreset: custom
                        localId: myMXId@meraki.com
                        name: Peer Name
                        networkTags:
                          - all
                        privateSubnets:
                          - 192.168.1.0/24
                          - 192.168.128.0/24
                        publicIp: 123.123.123.1
                        remoteId: miles@meraki.com
                        secret: secret
              schema:
                properties:
                  peers:
                    description: The list of VPN peers
                    items:
                      properties:
                        ikeVersion:
                          default: "1"
                          description: "[optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted."
                          enum:
                            - "1"
                            - "2"
                          type: string
                        ipsecPolicies:
                          description: Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
                          properties:
                            childAuthAlgo:
                              description: "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                              items:
                                enum:
                                  - md5
                                  - sha1
                                  - sha256
                                type: string
                              type: array
                            childCipherAlgo:
                              description: "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
                              items:
                                enum:
                                  - aes128
                                  - aes192
                                  - aes256
                                  - des
                                  - "null"
                                  - tripledes
                                type: string
                              type: array
                            childLifetime:
                              description: The lifetime of the Phase 2 SA in seconds.
                              type: integer
                            childPfsGroup:
                              description: "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'"
                              items:
                                type: string
                              type: array
                            ikeAuthAlgo:
                              description: "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                              items:
                                enum:
                                  - md5
                                  - sha1
                                  - sha256
                                type: string
                              type: array
                            ikeCipherAlgo:
                              description: "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
                              items:
                                enum:
                                  - aes128
                                  - aes192
                                  - aes256
                                  - des
                                  - tripledes
                                type: string
                              type: array
                            ikeDiffieHellmanGroup:
                              description: "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'"
                              items:
                                type: string
                              type: array
                            ikeLifetime:
                              description: The lifetime of the Phase 1 SA in seconds.
                              type: integer
                            ikePrfAlgo:
                              description: "[optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm."
                              items:
                                enum:
                                  - default
                                  - prfmd5
                                  - prfsha1
                                  - prfsha256
                                type: string
                              type: array
                          type: object
                        ipsecPoliciesPreset:
                          description: "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
                          type: string
                        localId:
                          description: "[optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to."
                          type: string
                        name:
                          description: The name of the VPN peer
                          type: string
                        networkTags:
                          description: A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
                          items:
                            type: string
                          type: array
                        privateSubnets:
                          description: The list of the private subnets of the VPN peer
                          items:
                            type: string
                          type: array
                        publicIp:
                          description: "[optional] The public IP of the VPN peer"
                          type: string
                        remoteId:
                          description: "[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN."
                          type: string
                        secret:
                          description: The shared secret with the VPN peer
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Return the third party VPN peers for an organization
      tags:
        - appliance
        - configure
        - vpn
        - thirdPartyVPNPeers
    put:
      description: Update the third party VPN peers for an organization
      operationId: updateOrganizationApplianceVpnThirdPartyVPNPeers
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                peers:
                  - ikeVersion: "2"
                    ipsecPolicies:
                      childAuthAlgo:
                        - sha1
                      childCipherAlgo:
                        - aes128
                      childLifetime: 28800
                      childPfsGroup:
                        - disabled
                      ikeAuthAlgo:
                        - sha1
                      ikeCipherAlgo:
                        - tripledes
                      ikeDiffieHellmanGroup:
                        - group2
                      ikeLifetime: 28800
                      ikePrfAlgo:
                        - prfsha1
                    ipsecPoliciesPreset: default
                    localId: myMXId@meraki.com
                    name: Peer Name
                    networkTags:
                      - none
                    privateSubnets:
                      - 192.168.1.0/24
                      - 192.168.128.0/24
                    publicIp: 123.123.123.1
                    remoteId: miles@meraki.com
                    secret: Sample Password
              properties:
                peers:
                  description: The list of VPN peers
                  items:
                    properties:
                      ikeVersion:
                        default: "1"
                        description: "[optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted."
                        enum:
                          - "1"
                          - "2"
                        type: string
                      ipsecPolicies:
                        description: Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
                        properties:
                          childAuthAlgo:
                            description: "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                            items:
                              enum:
                                - md5
                                - sha1
                                - sha256
                              type: string
                            type: array
                          childCipherAlgo:
                            description: "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
                            items:
                              enum:
                                - aes128
                                - aes192
                                - aes256
                                - des
                                - "null"
                                - tripledes
                              type: string
                            type: array
                          childLifetime:
                            description: The lifetime of the Phase 2 SA in seconds.
                            type: integer
                          childPfsGroup:
                            description: "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'"
                            items:
                              type: string
                            type: array
                          ikeAuthAlgo:
                            description: "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                            items:
                              enum:
                                - md5
                                - sha1
                                - sha256
                              type: string
                            type: array
                          ikeCipherAlgo:
                            description: "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
                            items:
                              enum:
                                - aes128
                                - aes192
                                - aes256
                                - des
                                - tripledes
                              type: string
                            type: array
                          ikeDiffieHellmanGroup:
                            description: "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'"
                            items:
                              type: string
                            type: array
                          ikeLifetime:
                            description: The lifetime of the Phase 1 SA in seconds.
                            type: integer
                          ikePrfAlgo:
                            description: "[optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm."
                            items:
                              enum:
                                - default
                                - prfmd5
                                - prfsha1
                                - prfsha256
                              type: string
                            type: array
                        type: object
                      ipsecPoliciesPreset:
                        description: "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
                        type: string
                      localId:
                        description: "[optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to."
                        type: string
                      name:
                        description: The name of the VPN peer
                        type: string
                      networkTags:
                        description: A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
                        items:
                          type: string
                        type: array
                      privateSubnets:
                        description: The list of the private subnets of the VPN peer
                        items:
                          type: string
                        type: array
                      publicIp:
                        description: "[optional] The public IP of the VPN peer"
                        type: string
                      remoteId:
                        description: "[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN."
                        type: string
                      secret:
                        description: The shared secret with the VPN peer
                        type: string
                    required:
                      - name
                      - privateSubnets
                      - secret
                    type: object
                  type: array
              required:
                - peers
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    peers:
                      - ikeVersion: "1"
                        ipsecPolicies:
                          childAuthAlgo:
                            - sha1
                          childCipherAlgo:
                            - aes128
                          childLifetime: 28800
                          childPfsGroup:
                            - disabled
                          ikeAuthAlgo:
                            - sha1
                          ikeCipherAlgo:
                            - tripledes
                          ikeDiffieHellmanGroup:
                            - group2
                          ikeLifetime: 28800
                          ikePrfAlgo:
                            - prfsha1
                        ipsecPoliciesPreset: custom
                        localId: myMXId@meraki.com
                        name: Peer Name
                        networkTags:
                          - all
                        privateSubnets:
                          - 192.168.1.0/24
                          - 192.168.128.0/24
                        publicIp: 123.123.123.1
                        remoteId: miles@meraki.com
                        secret: secret
              schema:
                properties:
                  peers:
                    description: The list of VPN peers
                    items:
                      properties:
                        ikeVersion:
                          default: "1"
                          description: "[optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted."
                          enum:
                            - "1"
                            - "2"
                          type: string
                        ipsecPolicies:
                          description: Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
                          properties:
                            childAuthAlgo:
                              description: "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                              items:
                                enum:
                                  - md5
                                  - sha1
                                  - sha256
                                type: string
                              type: array
                            childCipherAlgo:
                              description: "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'"
                              items:
                                enum:
                                  - aes128
                                  - aes192
                                  - aes256
                                  - des
                                  - "null"
                                  - tripledes
                                type: string
                              type: array
                            childLifetime:
                              description: The lifetime of the Phase 2 SA in seconds.
                              type: integer
                            childPfsGroup:
                              description: "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'"
                              items:
                                type: string
                              type: array
                            ikeAuthAlgo:
                              description: "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'"
                              items:
                                enum:
                                  - md5
                                  - sha1
                                  - sha256
                                type: string
                              type: array
                            ikeCipherAlgo:
                              description: "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'"
                              items:
                                enum:
                                  - aes128
                                  - aes192
                                  - aes256
                                  - des
                                  - tripledes
                                type: string
                              type: array
                            ikeDiffieHellmanGroup:
                              description: "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'"
                              items:
                                type: string
                              type: array
                            ikeLifetime:
                              description: The lifetime of the Phase 1 SA in seconds.
                              type: integer
                            ikePrfAlgo:
                              description: "[optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm."
                              items:
                                enum:
                                  - default
                                  - prfmd5
                                  - prfsha1
                                  - prfsha256
                                type: string
                              type: array
                          type: object
                        ipsecPoliciesPreset:
                          description: "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored."
                          type: string
                        localId:
                          description: "[optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to."
                          type: string
                        name:
                          description: The name of the VPN peer
                          type: string
                        networkTags:
                          description: A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
                          items:
                            type: string
                          type: array
                        privateSubnets:
                          description: The list of the private subnets of the VPN peer
                          items:
                            type: string
                          type: array
                        publicIp:
                          description: "[optional] The public IP of the VPN peer"
                          type: string
                        remoteId:
                          description: "[optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN."
                          type: string
                        secret:
                          description: The shared secret with the VPN peer
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update the third party VPN peers for an organization
      tags:
        - appliance
        - configure
        - vpn
        - thirdPartyVPNPeers
  "/organizations/{organizationId}/appliance/vpn/vpnFirewallRules":
    get:
      description: Return the firewall rules for an organization's site-to-site VPN
      operationId: getOrganizationApplianceVpnVpnFirewallRules
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return the firewall rules for an organization's site-to-site VPN
      tags:
        - appliance
        - configure
        - vpn
        - vpnFirewallRules
    put:
      description: Update the firewall rules of an organization's site-to-site VPN
      operationId: updateOrganizationApplianceVpnVpnFirewallRules
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    destCidr: 192.168.1.0/24
                    destPort: "443"
                    policy: allow
                    protocol: tcp
                    srcCidr: Any
                    srcPort: Any
                    syslogEnabled: false
              properties:
                rules:
                  description: An ordered array of the firewall rules (not including the default rule)
                  items:
                    properties:
                      comment:
                        description: Description of the rule (optional)
                        type: string
                      destCidr:
                        description: Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)
                        type: string
                      destPort:
                        description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
                        type: string
                      policy:
                        description: "'allow' or 'deny' traffic specified by this rule"
                        enum:
                          - allow
                          - deny
                        type: string
                      protocol:
                        description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
                        enum:
                          - any
                          - icmp
                          - icmp6
                          - tcp
                          - udp
                        type: string
                      srcCidr:
                        description: Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)
                        type: string
                      srcPort:
                        description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
                        type: string
                      syslogEnabled:
                        description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
                        type: boolean
                    required:
                      - policy
                      - protocol
                      - srcCidr
                      - destCidr
                    type: object
                  type: array
                syslogDefaultRule:
                  description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    rules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        destCidr: 192.168.1.0/24
                        destPort: "443"
                        policy: allow
                        protocol: tcp
                        srcCidr: Any
                        srcPort: Any
                        syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update the firewall rules of an organization's site-to-site VPN
      tags:
        - appliance
        - configure
        - vpn
        - vpnFirewallRules
  "/organizations/{organizationId}/brandingPolicies":
    get:
      description: List the branding policies of an organization
      operationId: getOrganizationBrandingPolicies
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - adminSettings:
                        appliesTo: All admins of networks...
                        values:
                          - N_1234
                          - L_5678
                      customLogo:
                        enabled: true
                        image:
                          preview:
                            expiresAt: 2022-04-06T06:19:27-07:00
                            url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                      enabled: true
                      helpSettings:
                        apiDocsSubtab: default or inherit
                        casesSubtab: hide
                        ciscoMerakiProductDocumentation: show
                        communitySubtab: show
                        dataProtectionRequestsSubtab: default or inherit
                        firewallInfoSubtab: hide
                        getHelpSubtab: default or inherit
                        getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                        hardwareReplacementsSubtab: hide
                        helpTab: show
                        helpWidget: hide
                        newFeaturesSubtab: show
                        smForums: hide
                        supportContactInfo: show
                        universalSearchKnowledgeBaseSearch: hide
                      name: My Branding Policy
              schema:
                items:
                  properties:
                    adminSettings:
                      description: Settings for describing which kinds of admins this policy applies to.
                      properties:
                        appliesTo:
                          description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
                          enum:
                            - All SAML admins
                            - All admins
                            - All admins of networks tagged...
                            - All admins of networks...
                            - All enterprise admins
                            - All network admins
                            - All organization admins
                            - Specific admins...
                          type: string
                        values:
                          description: |2
                                  If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                                  entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                                  networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                                  specify an array of tag names.
                          items:
                            type: string
                          type: array
                      type: object
                    customLogo:
                      description: Properties describing the custom logo attached to the branding policy.
                      properties:
                        enabled:
                          description: Whether or not there is a custom logo enabled.
                          type: boolean
                        image:
                          description: Properties of the image.
                          properties:
                            preview:
                              description: Preview of the image
                              properties:
                                expiresAt:
                                  description: Timestamp of the preview image
                                  format: date-time
                                  type: string
                                url:
                                  description: Url of the preview image
                                  type: string
                              type: object
                          type: object
                      type: object
                    enabled:
                      description: Boolean indicating whether this policy is enabled.
                      type: boolean
                    helpSettings:
                      description: |2
                              Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                              'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                              the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                              Dashboard; see the documentation for each property to see the allowed values.
                      properties:
                        apiDocsSubtab:
                          description: |2
                                  The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                                  'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        casesSubtab:
                          description: |2
                                  The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                                  of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        ciscoMerakiProductDocumentation:
                          description: |2
                                  The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                          type: string
                        communitySubtab:
                          description: |2
                                  The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        dataProtectionRequestsSubtab:
                          description: |2
                                  The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                                  be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        firewallInfoSubtab:
                          description: |2
                                  The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                                  listed. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        getHelpSubtab:
                          description: |2
                                  The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                                  that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                                  and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        getHelpSubtabKnowledgeBaseSearch:
                          description: |2
                                  The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                          type: string
                        hardwareReplacementsSubtab:
                          description: |2
                                  The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                                  'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        helpTab:
                          description: |2
                                  The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                                  customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        helpWidget:
                          description: |2
                                  The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                                  and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        newFeaturesSubtab:
                          description: |2
                                  The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        smForums:
                          description: |2
                                  The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                                  organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                        supportContactInfo:
                          description: |2
                                  The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                          type: string
                        universalSearchKnowledgeBaseSearch:
                          description: |2
                                  The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                                  whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                          enum:
                            - default or inherit
                            - hide
                            - show
                          type: string
                      type: object
                    name:
                      description: Name of the Dashboard branding policy.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the branding policies of an organization
      tags:
        - organizations
        - configure
        - brandingPolicies
    post:
      description: Add a new branding policy to an organization
      operationId: createOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                    - N_1234
                    - L_5678
                customLogo:
                  enabled: true
                  image:
                    contents: Hyperg26C8F4h8CvcoUqpA==
                    format: jpg
                enabled: true
                helpSettings:
                  apiDocsSubtab: default or inherit
                  casesSubtab: hide
                  ciscoMerakiProductDocumentation: show
                  communitySubtab: show
                  dataProtectionRequestsSubtab: default or inherit
                  firewallInfoSubtab: hide
                  getHelpSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  hardwareReplacementsSubtab: hide
                  helpTab: show
                  helpWidget: hide
                  newFeaturesSubtab: show
                  smForums: hide
                  supportContactInfo: show
                  universalSearchKnowledgeBaseSearch: hide
                name: My Branding Policy
              properties:
                adminSettings:
                  description: Settings for describing which kinds of admins this policy applies to.
                  properties:
                    appliesTo:
                      description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
                      enum:
                        - All SAML admins
                        - All admins
                        - All admins of networks tagged...
                        - All admins of networks...
                        - All enterprise admins
                        - All network admins
                        - All organization admins
                        - Specific admins...
                      type: string
                    values:
                      description: |2
                              If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                              entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                              networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                              specify an array of tag names.
                      items:
                        type: string
                      type: array
                  type: object
                customLogo:
                  description: Properties describing the custom logo attached to the branding policy.
                  properties:
                    enabled:
                      description: Whether or not there is a custom logo enabled.
                      type: boolean
                    image:
                      description: Properties for setting the image.
                      properties:
                        contents:
                          description: The file contents (a base 64 encoded string) of your new logo.
                          format: byte
                          type: string
                        format:
                          description: The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'.
                          enum:
                            - gif
                            - jpg
                            - png
                          type: string
                      type: object
                  type: object
                enabled:
                  description: Boolean indicating whether this policy is enabled.
                  type: boolean
                helpSettings:
                  description: |2-
                          Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                          'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                          the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                          Dashboard; see the documentation for each property to see the allowed values.
                     Each property defaults to 'default or inherit' when not provided.
                  properties:
                    apiDocsSubtab:
                      description: |2
                              The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                              'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    casesSubtab:
                      description: |2
                              The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                              of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    ciscoMerakiProductDocumentation:
                      description: |2
                              The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                      type: string
                    communitySubtab:
                      description: |2
                              The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    dataProtectionRequestsSubtab:
                      description: |2
                              The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                              be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    firewallInfoSubtab:
                      description: |2
                              The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                              listed. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    getHelpSubtab:
                      description: |2
                              The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                              that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                              and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    getHelpSubtabKnowledgeBaseSearch:
                      description: |2
                              The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                      type: string
                    hardwareReplacementsSubtab:
                      description: |2
                              The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                              'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    helpTab:
                      description: |2
                              The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                              customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    helpWidget:
                      description: |2
                              The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                              and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    newFeaturesSubtab:
                      description: |2
                              The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    smForums:
                      description: |2
                              The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                              organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    supportContactInfo:
                      description: |2
                              The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                      type: string
                    universalSearchKnowledgeBaseSearch:
                      description: |2
                              The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                              whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                  type: object
                name:
                  description: Name of the Dashboard branding policy.
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    adminSettings:
                      appliesTo: All admins of networks...
                      values:
                        - N_1234
                        - L_5678
                    customLogo:
                      enabled: true
                      image:
                        preview:
                          expiresAt: 2022-04-06T06:19:27-07:00
                          url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                    enabled: true
                    helpSettings:
                      apiDocsSubtab: default or inherit
                      casesSubtab: hide
                      ciscoMerakiProductDocumentation: show
                      communitySubtab: show
                      dataProtectionRequestsSubtab: default or inherit
                      firewallInfoSubtab: hide
                      getHelpSubtab: default or inherit
                      getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                      hardwareReplacementsSubtab: hide
                      helpTab: show
                      helpWidget: hide
                      newFeaturesSubtab: show
                      smForums: hide
                      supportContactInfo: show
                      universalSearchKnowledgeBaseSearch: hide
                    name: My Branding Policy
              schema:
                properties:
                  adminSettings:
                    description: Settings for describing which kinds of admins this policy applies to.
                    properties:
                      appliesTo:
                        description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
                        enum:
                          - All SAML admins
                          - All admins
                          - All admins of networks tagged...
                          - All admins of networks...
                          - All enterprise admins
                          - All network admins
                          - All organization admins
                          - Specific admins...
                        type: string
                      values:
                        description: |2
                                If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                                entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                                networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                                specify an array of tag names.
                        items:
                          type: string
                        type: array
                    type: object
                  customLogo:
                    description: Properties describing the custom logo attached to the branding policy.
                    properties:
                      enabled:
                        description: Whether or not there is a custom logo enabled.
                        type: boolean
                      image:
                        description: Properties of the image.
                        properties:
                          preview:
                            description: Preview of the image
                            properties:
                              expiresAt:
                                description: Timestamp of the preview image
                                format: date-time
                                type: string
                              url:
                                description: Url of the preview image
                                type: string
                            type: object
                        type: object
                    type: object
                  enabled:
                    description: Boolean indicating whether this policy is enabled.
                    type: boolean
                  helpSettings:
                    description: |2-
                            Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                            Dashboard; see the documentation for each property to see the allowed values.
                       Each property defaults to 'default or inherit' when not provided.
                    properties:
                      apiDocsSubtab:
                        description: |2
                                The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                                'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      casesSubtab:
                        description: |2
                                The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                                of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      ciscoMerakiProductDocumentation:
                        description: |2
                                The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      communitySubtab:
                        description: |2
                                The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      dataProtectionRequestsSubtab:
                        description: |2
                                The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                                be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      firewallInfoSubtab:
                        description: |2
                                The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                                listed. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      getHelpSubtab:
                        description: |2
                                The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                                that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                                and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      getHelpSubtabKnowledgeBaseSearch:
                        description: |2
                                The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      hardwareReplacementsSubtab:
                        description: |2
                                The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                                'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      helpTab:
                        description: |2
                                The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                                customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      helpWidget:
                        description: |2
                                The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                                and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      newFeaturesSubtab:
                        description: |2
                                The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      smForums:
                        description: |2
                                The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                                organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      supportContactInfo:
                        description: |2
                                The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      universalSearchKnowledgeBaseSearch:
                        description: |2
                                The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                                whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                    type: object
                  name:
                    description: Name of the Dashboard branding policy.
                    type: string
                type: object
          description: Successful operation
      summary: Add a new branding policy to an organization
      tags:
        - organizations
        - configure
        - brandingPolicies
  "/organizations/{organizationId}/brandingPolicies/priorities":
    get:
      description: Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).
      operationId: getOrganizationBrandingPoliciesPriorities
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    brandingPolicyIds:
                      - "123"
                      - "456"
                      - "789"
              schema:
                properties:
                  brandingPolicyIds:
                    description: |2
                            An ordered list of branding policy IDs that determines the priority order of how to apply the policies
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Return the branding policy IDs of an organization in priority order
      tags:
        - organizations
        - configure
        - brandingPolicies
        - priorities
    put:
      description: Update the priority ordering of an organization's branding policies.
      operationId: updateOrganizationBrandingPoliciesPriorities
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                brandingPolicyIds:
                  - "123"
                  - "456"
                  - "789"
              properties:
                brandingPolicyIds:
                  description: |2
                          An ordered list of branding policy IDs that determines the priority order of how to apply the policies
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    brandingPolicyIds:
                      - "123"
                      - "456"
                      - "789"
              schema:
                properties:
                  brandingPolicyIds:
                    description: |2
                            An ordered list of branding policy IDs that determines the priority order of how to apply the policies
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Update the priority ordering of an organization's branding policies.
      tags:
        - organizations
        - configure
        - brandingPolicies
        - priorities
  "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}":
    delete:
      description: Delete a branding policy
      operationId: deleteOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: brandingPolicyId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a branding policy
      tags:
        - organizations
        - configure
        - brandingPolicies
    get:
      description: Return a branding policy
      operationId: getOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: brandingPolicyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    adminSettings:
                      appliesTo: All admins of networks...
                      values:
                        - N_1234
                        - L_5678
                    customLogo:
                      enabled: true
                      image:
                        preview:
                          expiresAt: 2022-04-06T06:19:27-07:00
                          url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                    enabled: true
                    helpSettings:
                      apiDocsSubtab: default or inherit
                      casesSubtab: hide
                      ciscoMerakiProductDocumentation: show
                      communitySubtab: show
                      dataProtectionRequestsSubtab: default or inherit
                      firewallInfoSubtab: hide
                      getHelpSubtab: default or inherit
                      getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                      hardwareReplacementsSubtab: hide
                      helpTab: show
                      helpWidget: hide
                      newFeaturesSubtab: show
                      smForums: hide
                      supportContactInfo: show
                      universalSearchKnowledgeBaseSearch: hide
                    name: My Branding Policy
              schema:
                properties:
                  adminSettings:
                    description: Settings for describing which kinds of admins this policy applies to.
                    properties:
                      appliesTo:
                        description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
                        enum:
                          - All SAML admins
                          - All admins
                          - All admins of networks tagged...
                          - All admins of networks...
                          - All enterprise admins
                          - All network admins
                          - All organization admins
                          - Specific admins...
                        type: string
                      values:
                        description: |2
                                If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                                entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                                networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                                specify an array of tag names.
                        items:
                          type: string
                        type: array
                    type: object
                  customLogo:
                    description: Properties describing the custom logo attached to the branding policy.
                    properties:
                      enabled:
                        description: Whether or not there is a custom logo enabled.
                        type: boolean
                      image:
                        description: Properties of the image.
                        properties:
                          preview:
                            description: Preview of the image
                            properties:
                              expiresAt:
                                description: Timestamp of the preview image
                                format: date-time
                                type: string
                              url:
                                description: Url of the preview image
                                type: string
                            type: object
                        type: object
                    type: object
                  enabled:
                    description: Boolean indicating whether this policy is enabled.
                    type: boolean
                  helpSettings:
                    description: |2
                            Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                            Dashboard; see the documentation for each property to see the allowed values.
                    properties:
                      apiDocsSubtab:
                        description: |2
                                The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                                'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      casesSubtab:
                        description: |2
                                The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                                of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      ciscoMerakiProductDocumentation:
                        description: |2
                                The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      communitySubtab:
                        description: |2
                                The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      dataProtectionRequestsSubtab:
                        description: |2
                                The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                                be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      firewallInfoSubtab:
                        description: |2
                                The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                                listed. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      getHelpSubtab:
                        description: |2
                                The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                                that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                                and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      getHelpSubtabKnowledgeBaseSearch:
                        description: |2
                                The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      hardwareReplacementsSubtab:
                        description: |2
                                The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                                'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      helpTab:
                        description: |2
                                The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                                customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      helpWidget:
                        description: |2
                                The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                                and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      newFeaturesSubtab:
                        description: |2
                                The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      smForums:
                        description: |2
                                The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                                organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      supportContactInfo:
                        description: |2
                                The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      universalSearchKnowledgeBaseSearch:
                        description: |2
                                The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                                whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                    type: object
                  name:
                    description: Name of the Dashboard branding policy.
                    type: string
                type: object
          description: Successful operation
      summary: Return a branding policy
      tags:
        - organizations
        - configure
        - brandingPolicies
    put:
      description: Update a branding policy
      operationId: updateOrganizationBrandingPolicy
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: brandingPolicyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                    - N_1234
                    - L_5678
                customLogo:
                  enabled: true
                  image:
                    contents: Hyperg26C8F4h8CvcoUqpA==
                    format: jpg
                enabled: true
                helpSettings:
                  apiDocsSubtab: default or inherit
                  casesSubtab: hide
                  ciscoMerakiProductDocumentation: show
                  communitySubtab: show
                  dataProtectionRequestsSubtab: default or inherit
                  firewallInfoSubtab: hide
                  getHelpSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  hardwareReplacementsSubtab: hide
                  helpTab: show
                  helpWidget: hide
                  newFeaturesSubtab: show
                  smForums: hide
                  supportContactInfo: show
                  universalSearchKnowledgeBaseSearch: hide
                name: My Branding Policy
              properties:
                adminSettings:
                  description: Settings for describing which kinds of admins this policy applies to.
                  properties:
                    appliesTo:
                      description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
                      enum:
                        - All SAML admins
                        - All admins
                        - All admins of networks tagged...
                        - All admins of networks...
                        - All enterprise admins
                        - All network admins
                        - All organization admins
                        - Specific admins...
                      type: string
                    values:
                      description: |2
                              If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                              entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                              networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                              specify an array of tag names.
                      items:
                        type: string
                      type: array
                  type: object
                customLogo:
                  description: Properties describing the custom logo attached to the branding policy.
                  properties:
                    enabled:
                      description: Whether or not there is a custom logo enabled.
                      type: boolean
                    image:
                      description: Properties for setting the image.
                      properties:
                        contents:
                          description: The file contents (a base 64 encoded string) of your new logo.
                          format: byte
                          type: string
                        format:
                          description: The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'.
                          enum:
                            - gif
                            - jpg
                            - png
                          type: string
                      type: object
                  type: object
                enabled:
                  description: Boolean indicating whether this policy is enabled.
                  type: boolean
                helpSettings:
                  description: |2
                          Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                          'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                          the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                          Dashboard; see the documentation for each property to see the allowed values.
                  properties:
                    apiDocsSubtab:
                      description: |2
                              The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                              'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    casesSubtab:
                      description: |2
                              The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                              of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    ciscoMerakiProductDocumentation:
                      description: |2
                              The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                      type: string
                    communitySubtab:
                      description: |2
                              The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    dataProtectionRequestsSubtab:
                      description: |2
                              The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                              be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    firewallInfoSubtab:
                      description: |2
                              The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                              listed. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    getHelpSubtab:
                      description: |2
                              The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                              that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                              and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    getHelpSubtabKnowledgeBaseSearch:
                      description: |2
                              The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                      type: string
                    hardwareReplacementsSubtab:
                      description: |2
                              The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                              'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    helpTab:
                      description: |2
                              The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                              customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    helpWidget:
                      description: |2
                              The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                              and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    newFeaturesSubtab:
                      description: |2
                              The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    smForums:
                      description: |2
                              The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                              organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                    supportContactInfo:
                      description: |2
                              The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                      type: string
                    universalSearchKnowledgeBaseSearch:
                      description: |2
                              The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                              whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                      enum:
                        - default or inherit
                        - hide
                        - show
                      type: string
                  type: object
                name:
                  description: Name of the Dashboard branding policy.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    adminSettings:
                      appliesTo: All admins of networks...
                      values:
                        - N_1234
                        - L_5678
                    customLogo:
                      enabled: true
                      image:
                        preview:
                          expiresAt: 2022-04-06T06:19:27-07:00
                          url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                    enabled: true
                    helpSettings:
                      apiDocsSubtab: default or inherit
                      casesSubtab: hide
                      ciscoMerakiProductDocumentation: show
                      communitySubtab: show
                      dataProtectionRequestsSubtab: default or inherit
                      firewallInfoSubtab: hide
                      getHelpSubtab: default or inherit
                      getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                      hardwareReplacementsSubtab: hide
                      helpTab: show
                      helpWidget: hide
                      newFeaturesSubtab: show
                      smForums: hide
                      supportContactInfo: show
                      universalSearchKnowledgeBaseSearch: hide
                    name: My Branding Policy
              schema:
                properties:
                  adminSettings:
                    description: Settings for describing which kinds of admins this policy applies to.
                    properties:
                      appliesTo:
                        description: Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'.
                        enum:
                          - All SAML admins
                          - All admins
                          - All admins of networks tagged...
                          - All admins of networks...
                          - All enterprise admins
                          - All network admins
                          - All organization admins
                          - Specific admins...
                        type: string
                      values:
                        description: |2
                                If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                                entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                                networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                                specify an array of tag names.
                        items:
                          type: string
                        type: array
                    type: object
                  customLogo:
                    description: Properties describing the custom logo attached to the branding policy.
                    properties:
                      enabled:
                        description: Whether or not there is a custom logo enabled.
                        type: boolean
                      image:
                        description: Properties of the image.
                        properties:
                          preview:
                            description: Preview of the image
                            properties:
                              expiresAt:
                                description: Timestamp of the preview image
                                format: date-time
                                type: string
                              url:
                                description: Url of the preview image
                                type: string
                            type: object
                        type: object
                    type: object
                  enabled:
                    description: Boolean indicating whether this policy is enabled.
                    type: boolean
                  helpSettings:
                    description: |2
                            Settings for describing the modifications to various Help page features. Each property in this object accepts one of
                            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
                            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
                            Dashboard; see the documentation for each property to see the allowed values.
                    properties:
                      apiDocsSubtab:
                        description: |2
                                The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                                'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      casesSubtab:
                        description: |2
                                The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                                of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      ciscoMerakiProductDocumentation:
                        description: |2
                                The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      communitySubtab:
                        description: |2
                                The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      dataProtectionRequestsSubtab:
                        description: |2
                                The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                                be audited. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      firewallInfoSubtab:
                        description: |2
                                The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                                listed. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      getHelpSubtab:
                        description: |2
                                The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                                that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                                and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      getHelpSubtabKnowledgeBaseSearch:
                        description: |2
                                The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      hardwareReplacementsSubtab:
                        description: |2
                                The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                                'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      helpTab:
                        description: |2
                                The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                                customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      helpWidget:
                        description: |2
                                The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                                and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      newFeaturesSubtab:
                        description: |2
                                The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      smForums:
                        description: |2
                                The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                                organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                      supportContactInfo:
                        description: |2
                                The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
                        type: string
                      universalSearchKnowledgeBaseSearch:
                        description: |2
                                The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                                whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
                        enum:
                          - default or inherit
                          - hide
                          - show
                        type: string
                    type: object
                  name:
                    description: Name of the Dashboard branding policy.
                    type: string
                type: object
          description: Successful operation
      summary: Update a branding policy
      tags:
        - organizations
        - configure
        - brandingPolicies
  "/organizations/{organizationId}/camera/customAnalytics/artifacts":
    get:
      description: List Custom Analytics Artifacts
      operationId: getOrganizationCameraCustomAnalyticsArtifacts
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - artifactId: "1"
                      name: example
                      organizationId: "2"
                      status:
                        message: null
                        type: pending
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List Custom Analytics Artifacts
      tags:
        - camera
        - configure
        - customAnalytics
        - artifacts
    post:
      description: Create custom analytics artifact. Returns an artifact upload URL with expiry time. Upload the artifact file with a put request to the returned upload URL before its expiry.
      operationId: createOrganizationCameraCustomAnalyticsArtifact
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: example
              properties:
                name:
                  description: Unique name of the artifact
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    artifactId: "1"
                    name: example
                    organizationId: "2"
                    status:
                      message: null
                      type: pending
                    uploadId: 00112233445566778899aabbccddeeff
                    uploadUrl: https://meraki_custom_cv_upload_url
                    uploadUrlExpiry: 2022-01-23T01:23:45.123456+00:00
              schema:
                type: object
          description: Successful operation
      summary: Create custom analytics artifact
      tags:
        - camera
        - configure
        - customAnalytics
        - artifacts
  "/organizations/{organizationId}/camera/customAnalytics/artifacts/{artifactId}":
    delete:
      description: Delete Custom Analytics Artifact
      operationId: deleteOrganizationCameraCustomAnalyticsArtifact
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: artifactId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete Custom Analytics Artifact
      tags:
        - camera
        - configure
        - customAnalytics
        - artifacts
    get:
      description: Get Custom Analytics Artifact
      operationId: getOrganizationCameraCustomAnalyticsArtifact
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: artifactId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    artifactId: "1"
                    name: example
                    organizationId: "2"
                    status:
                      message: null
                      type: pending
              schema:
                type: object
          description: Successful operation
      summary: Get Custom Analytics Artifact
      tags:
        - camera
        - configure
        - customAnalytics
        - artifacts
  "/organizations/{organizationId}/camera/onboarding/statuses":
    get:
      description: Fetch onboarding status of cameras
      operationId: getOrganizationCameraOnboardingStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: A list of serial numbers. The returned cameras will be filtered to only include these serials.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of network IDs. The returned cameras will be filtered to only include these networks.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - networkId: N_12345
                      serial: Q2AB-CDEF-GHIJ
                      status: pending onboarding
                      updatedAt: 2021/03/24 15:23:47.101068 -0700
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Fetch onboarding status of cameras
      tags:
        - camera
        - configure
        - onboarding
        - statuses
    put:
      description: Notify that credential handoff to camera has completed
      operationId: updateOrganizationCameraOnboardingStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              properties:
                serial:
                  description: Serial of camera
                  type: string
                wirelessCredentialsSent:
                  description: Note whether credentials were sent successfully
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    success: true
              schema:
                type: object
          description: Successful operation
      summary: Notify that credential handoff to camera has completed
      tags:
        - camera
        - configure
        - onboarding
        - statuses
  "/organizations/{organizationId}/cellularGateway/uplink/statuses":
    get:
      description: List the uplink status of every Meraki MG cellular gateway in the organization
      operationId: getOrganizationCellularGatewayUplinkStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: A list of network IDs. The returned devices will be filtered to only include these networks.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of serial numbers. The returned devices will be filtered to only include these serials.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
          explode: false
          in: query
          name: iccids
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - lastReportedAt: 2018-02-11T00:00:00Z
                      model: MG21
                      networkId: N_24329156
                      serial: Q234-ABCD-5678
                      uplinks:
                        - apn: internet
                          connectionType: 4g
                          dns1: 111.111.111.111
                          dns2: 222.222.222.222
                          gateway: 100.100.100.100
                          iccid: "123456789"
                          interface: cellular
                          ip: 1.2.3.4
                          model: integrated
                          provider: at&t
                          publicIp: 123.123.123.1
                          signalStat:
                            rsrp: "-120"
                            rsrq: "-13"
                          signalType: 4G
                          status: ready
              schema:
                items:
                  properties:
                    lastReportedAt:
                      description: Last reported time for the device
                      format: date-time
                      type: string
                    model:
                      description: Device model
                      type: string
                    networkId:
                      description: Network Id
                      type: string
                    serial:
                      description: Serial number of the device
                      type: string
                    uplinks:
                      description: Uplinks info
                      items:
                        properties:
                          apn:
                            description: Access Point Name
                            type: string
                          connectionType:
                            description: Connection Type
                            type: string
                          dns1:
                            description: Primary DNS IP
                            type: string
                          dns2:
                            description: Secondary DNS IP
                            type: string
                          gateway:
                            description: Gateway IP
                            type: string
                          iccid:
                            description: Integrated Circuit Card Identification Number
                            type: string
                          interface:
                            description: Uplink interface
                            type: string
                          ip:
                            description: Uplink IP
                            type: string
                          model:
                            description: Uplink model
                            type: string
                          provider:
                            description: Network Provider
                            type: string
                          publicIp:
                            description: Public IP
                            type: string
                          signalStat:
                            description: Tower Signal Status
                            properties:
                              rsrp:
                                description: Reference Signal Received Power
                                type: string
                              rsrq:
                                description: Reference Signal Received Quality
                                type: string
                            type: object
                          signalType:
                            description: Signal Type
                            type: string
                          status:
                            description: Uplink status
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the uplink status of every Meraki MG cellular gateway in the organization
      tags:
        - cellularGateway
        - monitor
        - uplink
        - statuses
  "/organizations/{organizationId}/claim":
    post:
      description: Claim a list of devices, licenses, and/or orders into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory.
      operationId: claimIntoOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                licenses:
                  - key: Z2XXXXXXXXXX
                    mode: addDevices
                orders:
                  - 4CXXXXXXX
                serials:
                  - Q234-ABCD-5678
              properties:
                licenses:
                  description: The licenses that should be claimed
                  items:
                    properties:
                      key:
                        description: The key of the license
                        type: string
                      mode:
                        description: Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. This parameter is legacy and does not apply to organizations with per-device licensing enabled.
                        enum:
                          - addDevices
                          - renew
                        type: string
                    required:
                      - key
                    type: object
                  type: array
                orders:
                  description: The numbers of the orders that should be claimed
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices that should be claimed
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    licenses:
                      - key: Z2XXXXXXXXXX
                        mode: addDevices
                    orders:
                      - 4CXXXXXXX
                    serials:
                      - Q234-ABCD-5678
              schema:
                type: object
          description: Successful operation
      summary: Claim a list of devices, licenses, and/or orders into an organization
      tags:
        - organizations
        - configure
  "/organizations/{organizationId}/clients/bandwidthUsageHistory":
    get:
      description: Return data usage (in megabits per second) over time for all clients in the given organization within a given time range.
      operationId: getOrganizationClientsBandwidthUsageHistory
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - downstream: 285
                      total: 345
                      ts: 2021-06-20T01:00:00.000Z
                      upstream: 60
              schema:
                items:
                  properties:
                    downstream:
                      description: Downloaded data, in mbps.
                      type: integer
                    total:
                      description: Total bandwidth usage, in mbps.
                      type: integer
                    ts:
                      description: Timestamp for the bandwidth usage snapshot.
                      format: date-time
                      type: string
                    upstream:
                      description: Uploaded data, in mbps.
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: Return data usage (in megabits per second) over time for all clients in the given organization within a given time range.
      tags:
        - organizations
        - monitor
        - clients
        - bandwidthUsageHistory
  "/organizations/{organizationId}/clients/overview":
    get:
      description: Return summary information around client data usage (in mb) across the given organization.
      operationId: getOrganizationClientsOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    counts:
                      total: 20
                    usage:
                      average: 1.37
                      overall:
                        downstream: 10000
                        total: 18000
                        upstream: 8000
              schema:
                properties:
                  counts:
                    description: Client count information
                    properties:
                      total:
                        description: Total number of clients with data usage in organization
                        type: integer
                    type: object
                  usage:
                    description: Usage information of all clients across organization
                    properties:
                      average:
                        description: Average data usage (in kb) of each client in organization
                        format: float
                        type: number
                      overall:
                        description: Overall data usage of all clients across organization
                        properties:
                          downstream:
                            description: Downstream data usage (in kb) of all clients across organization
                            format: float
                            type: number
                          total:
                            description: Total data usage (in kb) of all clients across organization
                            format: float
                            type: number
                          upstream:
                            description: Upstream data usage (in kb) of all clients across organization
                            format: float
                            type: number
                        type: object
                    type: object
                type: object
          description: Successful operation
      summary: Return summary information around client data usage (in mb) across the given organization.
      tags:
        - organizations
        - monitor
        - clients
        - overview
  "/organizations/{organizationId}/clients/search":
    get:
      description: Return the client details in an organization
      operationId: getOrganizationClientsSearch
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The MAC address of the client. Required.
          in: query
          name: mac
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 5. Default is 5.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    clientId: k74272e
                    mac: 22:33:44:55:66:77
                    manufacturer: Apple
                    records:
                      - cdp: null
                        clientVpnConnections:
                          - connectedAt: 1522613355
                            disconnectedAt: 1522613360
                            remoteIp: 1.2.3.4
                        description: Miles's phone
                        firstSeen: 1518365681
                        ip: 1.2.3.4
                        ip6: 2001:db8:3c4d:15::1
                        lastSeen: 1526087474
                        lldp:
                          - - System name
                            - Some system name
                          - - System description
                            - Some system description
                          - - Port ID
                            - "1"
                          - - Chassis ID
                            - 00:18:0a:00:00:00
                          - - Port description
                            - eth0
                          - - System capabilities
                            - Two-port MAC Relay
                        network:
                          enrollmentString: my-enrollment-string
                          id: N_24329156
                          isBoundToConfigTemplate: false
                          name: Main Office
                          notes: Additional description of the network
                          organizationId: "2930418"
                          productTypes:
                            - appliance
                            - switch
                            - wireless
                          tags:
                            - tag1
                            - tag2
                          timeZone: America/Los_Angeles
                        os: iOS
                        smInstalled: true
                        ssid: My SSID
                        status: Online
                        switchport: null
                        user: milesmeraki
                        vlan: "255"
                        wirelessCapabilities: 802.11ac - 2.4 and 5 GHz
              schema:
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the client details in an organization
      tags:
        - organizations
        - configure
        - clients
        - search
  "/organizations/{organizationId}/clone":
    post:
      description: Create a new organization by cloning the addressed organization
      operationId: cloneOrganization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: My organization
              properties:
                name:
                  description: The name of the new organization
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    api:
                      enabled: true
                    cloud:
                      region:
                        name: North America
                    id: "2930418"
                    licensing:
                      model: co-term
                    management:
                      details:
                        - name: MSP ID
                          value: "123456"
                    name: My organization
                    url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
              schema:
                properties:
                  api:
                    description: API related settings
                    properties:
                      enabled:
                        description: Enable API access
                        type: boolean
                    type: object
                  cloud:
                    description: Data for this organization
                    properties:
                      region:
                        description: Region info
                        properties:
                          name:
                            description: Name of region
                            type: string
                        type: object
                    type: object
                  id:
                    description: Organization ID
                    type: string
                  licensing:
                    description: Licensing related settings
                    properties:
                      model:
                        description: Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
                        enum:
                          - co-term
                          - per-device
                          - subscription
                        type: string
                    type: object
                  management:
                    description: Information about the organization's management system
                    properties:
                      details:
                        description: Details related to organization management, possibly empty
                        items:
                          properties:
                            name:
                              description: Name of management data
                              type: string
                            value:
                              description: Value of management data
                              type: string
                          type: object
                        type: array
                    type: object
                  name:
                    description: Organization name
                    type: string
                  url:
                    description: Organization URL
                    type: string
                type: object
          description: Successful operation
      summary: Create a new organization by cloning the addressed organization
      tags:
        - organizations
        - configure
  "/organizations/{organizationId}/configTemplates":
    get:
      description: List the configuration templates for this organization
      operationId: getOrganizationConfigTemplates
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: N_24329156
                      name: My config template
                      productTypes:
                        - appliance
                        - switch
                        - wireless
                      timeZone: America/Los_Angeles
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the configuration templates for this organization
      tags:
        - organizations
        - configure
        - configTemplates
    post:
      description: Create a new configuration template
      operationId: createOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: My config template
                timeZone: America/Los_Angeles
              properties:
                copyFromNetworkId:
                  description: The ID of the network or config template to copy configuration from
                  type: string
                name:
                  description: The name of the configuration template
                  type: string
                timeZone:
                  description: The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article</a>. Not applicable if copying from existing network or template
                  type: string
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: N_24329156
                    name: My config template
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Create a new configuration template
      tags:
        - organizations
        - configure
        - configTemplates
  "/organizations/{organizationId}/configTemplates/{configTemplateId}":
    delete:
      description: Remove a configuration template
      operationId: deleteOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Remove a configuration template
      tags:
        - organizations
        - configure
        - configTemplates
    get:
      description: Return a single configuration template
      operationId: getOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: N_24329156
                    name: My config template
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Return a single configuration template
      tags:
        - organizations
        - configure
        - configTemplates
    put:
      description: Update a configuration template
      operationId: updateOrganizationConfigTemplate
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: My config template
                timeZone: America/Los_Angeles
              properties:
                name:
                  description: The name of the configuration template
                  type: string
                timeZone:
                  description: The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: N_24329156
                    name: My config template
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Update a configuration template
      tags:
        - organizations
        - configure
        - configTemplates
  "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles":
    get:
      description: List the switch profiles for your switch template configuration
      operationId: getOrganizationConfigTemplateSwitchProfiles
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    model: MS450-24
                    name: A Simple Switch Profile
                    switchProfileId: "1234"
              schema:
                properties:
                  model:
                    description: Switch model
                    type: string
                  name:
                    description: Switch profile name
                    type: string
                  switchProfileId:
                    description: Switch profile id
                    type: string
                type: object
          description: Successful operation
      summary: List the switch profiles for your switch template configuration
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
  "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports":
    get:
      description: Return all the ports of a switch profile
      operationId: getOrganizationConfigTemplateSwitchProfilePorts
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - accessPolicyNumber: 2
                      accessPolicyType: Sticky MAC allow list
                      allowedVlans: 1,3,5-10
                      daiTrusted: false
                      enabled: true
                      flexibleStackingEnabled: true
                      isolationEnabled: false
                      linkNegotiation: Auto negotiate
                      linkNegotiationCapabilities:
                        - Auto negotiate
                        - 1 Gigabit full duplex (auto)
                      macAllowList:
                        - 34:56:fe:ce:8e:b0
                        - 34:56:fe:ce:8e:b1
                      name: My switch port
                      poeEnabled: true
                      portId: "1"
                      portScheduleId: "1234"
                      profile:
                        enabled: false
                        id: "1284392014819"
                        iname: iname
                      rstpEnabled: true
                      stickyMacAllowList:
                        - 34:56:fe:ce:8e:b0
                        - 34:56:fe:ce:8e:b1
                      stickyMacAllowListLimit: 5
                      stormControlEnabled: true
                      stpGuard: disabled
                      tags:
                        - tag1
                        - tag2
                      type: access
                      udld: Alert only
                      vlan: 10
                      voiceVlan: 20
              schema:
                items:
                  properties:
                    accessPolicyNumber:
                      description: The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                      type: integer
                    accessPolicyType:
                      description: The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                      enum:
                        - Custom access policy
                        - MAC allow list
                        - Open
                        - Sticky MAC allow list
                      type: string
                    allowedVlans:
                      description: The VLANs allowed on the switch profile port. Only applicable to trunk ports.
                      type: string
                    daiTrusted:
                      description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                      type: boolean
                    enabled:
                      description: The status of the switch profile port.
                      type: boolean
                    flexibleStackingEnabled:
                      description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                      type: boolean
                    isolationEnabled:
                      description: The isolation status of the switch profile port.
                      type: boolean
                    linkNegotiation:
                      description: The link speed for the switch profile port.
                      type: string
                    linkNegotiationCapabilities:
                      description: Available link speeds for the switch profile port.
                      items:
                        type: string
                      type: array
                    macAllowList:
                      description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the switch profile port.
                      type: string
                    poeEnabled:
                      description: The PoE status of the switch profile port.
                      type: boolean
                    portId:
                      description: The identifier of the switch profile port.
                      type: string
                    portScheduleId:
                      description: The ID of the port schedule. A value of null will clear the port schedule.
                      type: string
                    profile:
                      description: Profile attributes
                      properties:
                        enabled:
                          description: When enabled, override this port's configuration with a port profile.
                          type: boolean
                        id:
                          description: When enabled, the ID of the port profile used to override the port's configuration.
                          type: string
                        iname:
                          description: When enabled, the IName of the profile.
                          type: string
                      type: object
                    rstpEnabled:
                      description: The rapid spanning tree protocol status.
                      type: boolean
                    stickyMacAllowList:
                      description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                      items:
                        type: string
                      type: array
                    stickyMacAllowListLimit:
                      description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                      type: integer
                    stormControlEnabled:
                      description: The storm control status of the switch profile port.
                      type: boolean
                    stpGuard:
                      description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                      enum:
                        - bpdu guard
                        - disabled
                        - loop guard
                        - root guard
                      type: string
                    tags:
                      description: The list of tags of the switch profile port.
                      items:
                        type: string
                      type: array
                    type:
                      description: The type of the switch profile port ('trunk' or 'access').
                      enum:
                        - access
                        - trunk
                      type: string
                    udld:
                      description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                      enum:
                        - Alert only
                        - Enforce
                      type: string
                    vlan:
                      description: The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
                      type: integer
                    voiceVlan:
                      description: The voice VLAN of the switch profile port. Only applicable to access ports.
                      type: integer
                  type: object
                type: array
          description: Successful operation
      summary: Return all the ports of a switch profile
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
        - ports
  "/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}":
    get:
      description: Return a switch profile port
      operationId: getOrganizationConfigTemplateSwitchProfilePort
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: portId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyNumber: 2
                    accessPolicyType: Sticky MAC allow list
                    allowedVlans: 1,3,5-10
                    daiTrusted: false
                    enabled: true
                    flexibleStackingEnabled: true
                    isolationEnabled: false
                    linkNegotiation: Auto negotiate
                    linkNegotiationCapabilities:
                      - Auto negotiate
                      - 1 Gigabit full duplex (auto)
                    macAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    name: My switch port
                    poeEnabled: true
                    portId: "1"
                    portScheduleId: "1234"
                    profile:
                      enabled: false
                      id: "1284392014819"
                      iname: iname
                    rstpEnabled: true
                    stickyMacAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    stickyMacAllowListLimit: 5
                    stormControlEnabled: true
                    stpGuard: disabled
                    tags:
                      - tag1
                      - tag2
                    type: access
                    udld: Alert only
                    vlan: 10
                    voiceVlan: 20
              schema:
                properties:
                  accessPolicyNumber:
                    description: The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                    type: integer
                  accessPolicyType:
                    description: The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                    enum:
                      - Custom access policy
                      - MAC allow list
                      - Open
                      - Sticky MAC allow list
                    type: string
                  allowedVlans:
                    description: The VLANs allowed on the switch profile port. Only applicable to trunk ports.
                    type: string
                  daiTrusted:
                    description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                    type: boolean
                  enabled:
                    description: The status of the switch profile port.
                    type: boolean
                  flexibleStackingEnabled:
                    description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                    type: boolean
                  isolationEnabled:
                    description: The isolation status of the switch profile port.
                    type: boolean
                  linkNegotiation:
                    description: The link speed for the switch profile port.
                    type: string
                  linkNegotiationCapabilities:
                    description: Available link speeds for the switch profile port.
                    items:
                      type: string
                    type: array
                  macAllowList:
                    description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of the switch profile port.
                    type: string
                  poeEnabled:
                    description: The PoE status of the switch profile port.
                    type: boolean
                  portId:
                    description: The identifier of the switch profile port.
                    type: string
                  portScheduleId:
                    description: The ID of the port schedule. A value of null will clear the port schedule.
                    type: string
                  profile:
                    description: Profile attributes
                    properties:
                      enabled:
                        description: When enabled, override this port's configuration with a port profile.
                        type: boolean
                      id:
                        description: When enabled, the ID of the port profile used to override the port's configuration.
                        type: string
                      iname:
                        description: When enabled, the IName of the profile.
                        type: string
                    type: object
                  rstpEnabled:
                    description: The rapid spanning tree protocol status.
                    type: boolean
                  stickyMacAllowList:
                    description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    items:
                      type: string
                    type: array
                  stickyMacAllowListLimit:
                    description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    type: integer
                  stormControlEnabled:
                    description: The storm control status of the switch profile port.
                    type: boolean
                  stpGuard:
                    description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                    enum:
                      - bpdu guard
                      - disabled
                      - loop guard
                      - root guard
                    type: string
                  tags:
                    description: The list of tags of the switch profile port.
                    items:
                      type: string
                    type: array
                  type:
                    description: The type of the switch profile port ('trunk' or 'access').
                    enum:
                      - access
                      - trunk
                    type: string
                  udld:
                    description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                    enum:
                      - Alert only
                      - Enforce
                    type: string
                  vlan:
                    description: The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
                    type: integer
                  voiceVlan:
                    description: The voice VLAN of the switch profile port. Only applicable to access ports.
                    type: integer
                type: object
          description: Successful operation
      summary: Return a switch profile port
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
        - ports
    put:
      description: Update a switch profile port
      operationId: updateOrganizationConfigTemplateSwitchProfilePort
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: configTemplateId
          required: true
          schema:
            type: string
        - in: path
          name: profileId
          required: true
          schema:
            type: string
        - in: path
          name: portId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accessPolicyNumber: 2
                accessPolicyType: Sticky MAC allow list
                allowedVlans: 1,3,5-10
                daiTrusted: false
                enabled: true
                flexibleStackingEnabled: true
                isolationEnabled: false
                linkNegotiation: Auto negotiate
                macAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                name: My switch port
                poeEnabled: true
                portScheduleId: "1234"
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
                rstpEnabled: true
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                stpGuard: disabled
                tags:
                  - tag1
                  - tag2
                type: access
                udld: Alert only
                vlan: 10
                voiceVlan: 20
              properties:
                accessPolicyNumber:
                  description: The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                  type: integer
                accessPolicyType:
                  description: The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                  enum:
                    - Custom access policy
                    - MAC allow list
                    - Open
                    - Sticky MAC allow list
                  type: string
                allowedVlans:
                  description: The VLANs allowed on the switch profile port. Only applicable to trunk ports.
                  type: string
                daiTrusted:
                  description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                  type: boolean
                enabled:
                  description: The status of the switch profile port.
                  type: boolean
                flexibleStackingEnabled:
                  description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                  type: boolean
                isolationEnabled:
                  description: The isolation status of the switch profile port.
                  type: boolean
                linkNegotiation:
                  description: The link speed for the switch profile port.
                  type: string
                macAllowList:
                  description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                  items:
                    type: string
                  type: array
                name:
                  description: The name of the switch profile port.
                  type: string
                poeEnabled:
                  description: The PoE status of the switch profile port.
                  type: boolean
                portScheduleId:
                  description: The ID of the port schedule. A value of null will clear the port schedule.
                  type: string
                profile:
                  description: Profile attributes
                  properties:
                    enabled:
                      description: When enabled, override this port's configuration with a port profile.
                      type: boolean
                    id:
                      description: When enabled, the ID of the port profile used to override the port's configuration.
                      type: string
                    iname:
                      description: When enabled, the IName of the profile.
                      type: string
                  type: object
                rstpEnabled:
                  description: The rapid spanning tree protocol status.
                  type: boolean
                stickyMacAllowList:
                  description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                  items:
                    type: string
                  type: array
                stickyMacAllowListLimit:
                  description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                  type: integer
                stormControlEnabled:
                  description: The storm control status of the switch profile port.
                  type: boolean
                stpGuard:
                  description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                  enum:
                    - bpdu guard
                    - disabled
                    - loop guard
                    - root guard
                  type: string
                tags:
                  description: The list of tags of the switch profile port.
                  items:
                    type: string
                  type: array
                type:
                  description: The type of the switch profile port ('trunk' or 'access').
                  enum:
                    - access
                    - trunk
                  type: string
                udld:
                  description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                  enum:
                    - Alert only
                    - Enforce
                  type: string
                vlan:
                  description: The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
                  type: integer
                voiceVlan:
                  description: The voice VLAN of the switch profile port. Only applicable to access ports.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accessPolicyNumber: 2
                    accessPolicyType: Sticky MAC allow list
                    allowedVlans: 1,3,5-10
                    daiTrusted: false
                    enabled: true
                    flexibleStackingEnabled: true
                    isolationEnabled: false
                    linkNegotiation: Auto negotiate
                    linkNegotiationCapabilities:
                      - Auto negotiate
                      - 1 Gigabit full duplex (auto)
                    macAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    name: My switch port
                    poeEnabled: true
                    portId: "1"
                    portScheduleId: "1234"
                    profile:
                      enabled: false
                      id: "1284392014819"
                      iname: iname
                    rstpEnabled: true
                    stickyMacAllowList:
                      - 34:56:fe:ce:8e:b0
                      - 34:56:fe:ce:8e:b1
                    stickyMacAllowListLimit: 5
                    stormControlEnabled: true
                    stpGuard: disabled
                    tags:
                      - tag1
                      - tag2
                    type: access
                    udld: Alert only
                    vlan: 10
                    voiceVlan: 20
              schema:
                properties:
                  accessPolicyNumber:
                    description: The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
                    type: integer
                  accessPolicyType:
                    description: The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                    enum:
                      - Custom access policy
                      - MAC allow list
                      - Open
                      - Sticky MAC allow list
                    type: string
                  allowedVlans:
                    description: The VLANs allowed on the switch profile port. Only applicable to trunk ports.
                    type: string
                  daiTrusted:
                    description: If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
                    type: boolean
                  enabled:
                    description: The status of the switch profile port.
                    type: boolean
                  flexibleStackingEnabled:
                    description: For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
                    type: boolean
                  isolationEnabled:
                    description: The isolation status of the switch profile port.
                    type: boolean
                  linkNegotiation:
                    description: The link speed for the switch profile port.
                    type: string
                  linkNegotiationCapabilities:
                    description: Available link speeds for the switch profile port.
                    items:
                      type: string
                    type: array
                  macAllowList:
                    description: Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
                    items:
                      type: string
                    type: array
                  name:
                    description: The name of the switch profile port.
                    type: string
                  poeEnabled:
                    description: The PoE status of the switch profile port.
                    type: boolean
                  portId:
                    description: The identifier of the switch profile port.
                    type: string
                  portScheduleId:
                    description: The ID of the port schedule. A value of null will clear the port schedule.
                    type: string
                  profile:
                    description: Profile attributes
                    properties:
                      enabled:
                        description: When enabled, override this port's configuration with a port profile.
                        type: boolean
                      id:
                        description: When enabled, the ID of the port profile used to override the port's configuration.
                        type: string
                      iname:
                        description: When enabled, the IName of the profile.
                        type: string
                    type: object
                  rstpEnabled:
                    description: The rapid spanning tree protocol status.
                    type: boolean
                  stickyMacAllowList:
                    description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    items:
                      type: string
                    type: array
                  stickyMacAllowListLimit:
                    description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                    type: integer
                  stormControlEnabled:
                    description: The storm control status of the switch profile port.
                    type: boolean
                  stpGuard:
                    description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                    enum:
                      - bpdu guard
                      - disabled
                      - loop guard
                      - root guard
                    type: string
                  tags:
                    description: The list of tags of the switch profile port.
                    items:
                      type: string
                    type: array
                  type:
                    description: The type of the switch profile port ('trunk' or 'access').
                    enum:
                      - access
                      - trunk
                    type: string
                  udld:
                    description: The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
                    enum:
                      - Alert only
                      - Enforce
                    type: string
                  vlan:
                    description: The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
                    type: integer
                  voiceVlan:
                    description: The voice VLAN of the switch profile port. Only applicable to access ports.
                    type: integer
                type: object
          description: Successful operation
      summary: Update a switch profile port
      tags:
        - switch
        - configure
        - configTemplates
        - profiles
        - ports
  "/organizations/{organizationId}/configurationChanges":
    get:
      description: View the Change Log for your organization
      operationId: getOrganizationConfigurationChanges
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 365 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 365 days.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 5000. Default is 5000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filters on the given network
          in: query
          name: networkId
          schema:
            type: string
        - description: Filters on the given Admin
          in: query
          name: adminId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - adminEmail: miles@meraki.com
                      adminId: "212406"
                      adminName: Miles Meraki
                      label: PUT /api/v1/organizations/2930418
                      newValue: '{"id":"2930418","name":"My organization changed","url":"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"}'
                      oldValue: '{"id":"2930418","name":"My organization","url":"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"}'
                      page: via API
                      ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: View the Change Log for your organization
      tags:
        - organizations
        - monitor
        - configurationChanges
  "/organizations/{organizationId}/devices":
    get:
      description: List the devices in an organization
      operationId: getOrganizationDevices
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filter results by whether or not the device's configuration has been updated after the given timestamp
          in: query
          name: configurationUpdatedAfter
          schema:
            type: string
        - description: Optional parameter to filter devices by network.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              enum:
                - appliance
                - camera
                - cellularGateway
                - sensor
                - switch
                - systemsManager
                - wireless
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by tags.
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
        - description: Optional parameter to filter devices by name. All returned devices will have a name that contains the search term or is an exact match.
          in: query
          name: name
          schema:
            type: string
        - description: Optional parameter to filter devices by MAC address. All returned devices will have a MAC address that contains the search term or is an exact match.
          in: query
          name: mac
          schema:
            type: string
        - description: Optional parameter to filter devices by serial number. All returned devices will have a serial number that contains the search term or is an exact match.
          in: query
          name: serial
          schema:
            type: string
        - description: Optional parameter to filter devices by model. All returned devices will have a model that contains the search term or is an exact match.
          in: query
          name: model
          schema:
            type: string
        - description: Optional parameter to filter devices by one or more MAC addresses. All returned devices will have a MAC address that is an exact match.
          explode: false
          in: query
          name: macs
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by one or more serial numbers. All returned devices will have a serial number that is an exact match.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by the metrics that they provide. Only applies to sensor devices.
          explode: false
          in: query
          name: sensorMetrics
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by the alert profiles that are bound to them. Only applies to sensor devices.
          explode: false
          in: query
          name: sensorAlertProfileIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by one or more models. All returned devices will have a model that is an exact match.
          explode: false
          in: query
          name: models
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - address: 1600 Pennsylvania Ave
                      firmware: wireless-25-14
                      lanIp: 1.2.3.4
                      lat: 37.4180951010362
                      lng: -122.098531723022
                      mac: 00:11:22:33:44:55
                      model: MR34
                      name: My AP
                      networkId: N_24329156
                      notes: My AP's note
                      productType: wireless
                      serial: Q234-ABCD-5678
                      tags:
                        - recently-added
              schema:
                items:
                  properties:
                    address:
                      description: Physical address of the device
                      type: string
                    firmware:
                      description: Firmware version of the device
                      type: string
                    lanIp:
                      description: LAN IP address of the device
                      type: string
                    lat:
                      description: Latitude of the device
                      format: float
                      type: number
                    lng:
                      description: Longitude of the device
                      format: float
                      type: number
                    mac:
                      description: MAC address of the device
                      type: string
                    model:
                      description: Model of the device
                      type: string
                    name:
                      description: Name of the device
                      type: string
                    networkId:
                      description: ID of the network the device belongs to
                      type: string
                    notes:
                      description: Notes for the device, limited to 255 characters
                      type: string
                    productType:
                      description: Product type of the device
                      type: string
                    serial:
                      description: Serial number of the device
                      type: string
                    tags:
                      description: List of tags assigned to the device
                      items:
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the devices in an organization
      tags:
        - organizations
        - configure
        - devices
  "/organizations/{organizationId}/devices/availabilities":
    get:
      description: List the availability information for devices in an organization. The data returned by this endpoint is updated every 5 minutes.
      operationId: getOrganizationDevicesAvailabilities
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - mac: 00:11:22:33:44:55
                      name: My AP
                      network:
                        id: N_24329156
                      productType: switch
                      serial: Q234-ABCD-5678
                      status: online
                      tags:
                        - tag1
                        - tag2
              schema:
                items:
                  properties:
                    mac:
                      description: The device MAC address.
                      type: string
                    name:
                      description: The device name.
                      type: string
                    network:
                      description: Network info.
                      properties:
                        id:
                          description: ID for the network containing the device.
                          type: string
                      type: object
                    productType:
                      description: Device product type.
                      enum:
                        - appliance
                        - camera
                        - cellularGateway
                        - sensor
                        - switch
                        - systemsManager
                        - wireless
                      type: string
                    serial:
                      description: The device serial number.
                      type: string
                    status:
                      description: "Status of the device. Possible values are: online, alerting, offline, dormant."
                      enum:
                        - alerting
                        - dormant
                        - offline
                        - online
                      type: string
                    tags:
                      description: List of custom tags for the device.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the availability information for devices in an organization
      tags:
        - organizations
        - monitor
        - devices
        - availabilities
  "/organizations/{organizationId}/devices/powerModules/statuses/byDevice":
    get:
      description: List the power status information for devices in an organization. The data returned by this endpoint is updated every 5 minutes.
      operationId: getOrganizationDevicesPowerModulesStatusesByDevice
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter device availabilities by network ID. This filter uses multiple exact matches.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter device availabilities by device product types. This filter uses multiple exact matches.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - mac: 00:11:22:33:44:55
                      name: My AP
                      network:
                        id: N_24329156
                      productType: switch
                      serial: Q234-ABCD-5678
                      slots:
                        - model: PWR-C5-125WAC
                          number: 1
                          serial: Q234-ABCD-5678
                          status: not connected
                      tags:
                        - tag1
                        - tag2
              schema:
                items:
                  properties:
                    mac:
                      description: The device MAC address.
                      type: string
                    name:
                      description: The device name.
                      type: string
                    network:
                      description: Network info.
                      properties:
                        id:
                          description: ID for the network that the device is associated with.
                          type: string
                      type: object
                    productType:
                      description: Device product type.
                      enum:
                        - appliance
                        - camera
                        - cellularGateway
                        - sensor
                        - switch
                        - systemsManager
                        - wireless
                      type: string
                    serial:
                      description: The device serial number.
                      type: string
                    slots:
                      description: Information for the device's AC power supplies.
                      items:
                        properties:
                          model:
                            description: The power supply unit model.
                            type: string
                          number:
                            description: "Which slot the AC power supply occupies. Possible values are: 0, 1, 2."
                            enum:
                              - 0
                              - 1
                              - 2
                            type: integer
                          serial:
                            description: The power supply unit serial number.
                            type: string
                          status:
                            description: "Status of the power supply unit. Possible values are: connected, not connected, powering."
                            enum:
                              - connected
                              - not connected
                              - powering
                            type: string
                        type: object
                      type: array
                    tags:
                      description: List of custom tags for the device.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the power status information for devices in an organization
      tags:
        - organizations
        - monitor
        - devices
        - powerModules
        - statuses
        - byDevice
  "/organizations/{organizationId}/devices/statuses":
    get:
      description: List the status of every Meraki device in the organization
      operationId: getOrganizationDevicesStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter devices by network ids.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by serials.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by statuses. Valid statuses are ["online", "alerting", "offline", "dormant"].
          explode: false
          in: query
          name: statuses
          schema:
            items:
              enum:
                - alerting
                - dormant
                - offline
                - online
              type: string
            type: array
          style: form
        - description: An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              enum:
                - appliance
                - camera
                - cellularGateway
                - sensor
                - switch
                - systemsManager
                - wireless
              type: string
            type: array
          style: form
        - description: Optional parameter to filter devices by models.
          explode: false
          in: query
          name: models
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    components:
                      powerSupplies: []
                    gateway: 1.2.3.5
                    ipType: dhcp
                    lanIp: 1.2.3.4
                    lastReportedAt: 2018-02-11T00:00:00.090210Z
                    mac: 00:11:22:33:44:55
                    model: MR34
                    name: My AP
                    networkId: N_24329156
                    primaryDns: 8.8.8.8
                    productType: wireless
                    publicIp: 123.123.123.1
                    secondaryDns: 8.8.4.4
                    serial: Q234-ABCD-5678
                    status: online
                    tags:
                      - tag1
                      - tag2
              schema:
                properties:
                  components:
                    description: Components
                    properties:
                      powerSupplies:
                        description: Power Supplies
                        items:
                          type: string
                        type: array
                    type: object
                  gateway:
                    description: IP Gateway
                    type: string
                  ipType:
                    description: IP Type
                    type: string
                  lanIp:
                    description: LAN IP Address
                    type: string
                  lastReportedAt:
                    description: Device Last Reported Location
                    type: string
                  mac:
                    description: MAC Address
                    type: string
                  model:
                    description: Model
                    type: string
                  name:
                    description: Device Name
                    type: string
                  networkId:
                    description: Network ID
                    type: string
                  primaryDns:
                    description: Primary DNS
                    type: string
                  productType:
                    description: Product Type
                    type: string
                  publicIp:
                    description: Public IP Address
                    type: string
                  secondaryDns:
                    description: Secondary DNS
                    type: string
                  serial:
                    description: Device Serial Number
                    type: string
                  status:
                    description: Device Status
                    type: string
                  tags:
                    description: Tags
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the status of every Meraki device in the organization
      tags:
        - organizations
        - monitor
        - devices
        - statuses
  "/organizations/{organizationId}/devices/statuses/overview":
    get:
      description: Return an overview of current device statuses
      operationId: getOrganizationDevicesStatusesOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              enum:
                - appliance
                - camera
                - cellularGateway
                - sensor
                - switch
                - systemsManager
                - wireless
              type: string
            type: array
          style: form
        - description: An optional parameter to filter device statuses by network.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    counts:
                      byStatus:
                        alerting: 4
                        dormant: 1
                        offline: 2
                        online: 5
              schema:
                properties:
                  counts:
                    description: counts
                    properties:
                      byStatus:
                        description: byStatus
                        properties:
                          alerting:
                            description: alerting count
                            type: integer
                          dormant:
                            description: dormant count
                            type: integer
                          offline:
                            description: offline count
                            type: integer
                          online:
                            description: online count
                            type: integer
                        type: object
                    type: object
                type: object
          description: Successful operation
      summary: Return an overview of current device statuses
      tags:
        - organizations
        - monitor
        - devices
        - statuses
        - overview
  "/organizations/{organizationId}/devices/uplinks/addresses/byDevice":
    get:
      description: List the current uplink addresses for devices in an organization.
      operationId: getOrganizationDevicesUplinksAddressesByDevice
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter device uplinks by network ID. This filter uses multiple exact matches.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter device uplinks by device product types. This filter uses multiple exact matches.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter device availabilities by device serial numbers. This filter uses multiple exact matches.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below). This filter uses multiple exact matches.
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - mac: 00:11:22:33:44:55
                      name: My AP
                      network:
                        id: N_24329156
                      productType: switch
                      serial: Q234-ABCD-5678
                      tags:
                        - tag1
                        - tag2
                      uplinks:
                        - addresses:
                            - address: 2001:db8:c15:c0:d0c::101:ca75
                              assignmentMode: static
                              gateway: fe80:db8:c15:c0:d0c::10ca:1d02
                              protocol: ipv6
                              public:
                                address: 2001:db8:c15:c0:d0c:15e:15e:bab1
                          interface: wan1
              schema:
                items:
                  properties:
                    mac:
                      description: The device MAC address.
                      type: string
                    name:
                      description: The device name.
                      type: string
                    network:
                      description: Network info.
                      properties:
                        id:
                          description: ID for the network containing the device.
                          type: string
                      type: object
                    productType:
                      description: Device product type.
                      enum:
                        - appliance
                        - camera
                        - cellularGateway
                        - sensor
                        - switch
                        - systemsManager
                        - wireless
                      type: string
                    serial:
                      description: The device serial number.
                      type: string
                    tags:
                      description: List of custom tags for the device.
                      items:
                        type: string
                      type: array
                    uplinks:
                      description: List of device uplink addresses information.
                      items:
                        properties:
                          addresses:
                            description: Available addresses for the interface.
                            items:
                              properties:
                                address:
                                  description: Device uplink address.
                                  type: string
                                assignmentMode:
                                  description: "Indicates how the device uplink address is assigned. Available options are: static, dynamic."
                                  enum:
                                    - dynamic
                                    - static
                                  type: string
                                gateway:
                                  description: Device uplink gateway address.
                                  type: string
                                protocol:
                                  description: "Type of address for the device uplink. Available options are: ipv4, ipv6."
                                  enum:
                                    - ipv4
                                    - ipv6
                                  type: string
                                public:
                                  description: Public interface information.
                                  properties:
                                    address:
                                      description: The device uplink public IP address.
                                      type: string
                                  type: object
                              type: object
                            type: array
                          interface:
                            description: "Interface for the device uplink. Available options are: cellular, man1, man2, wan1, wan2"
                            enum:
                              - cellular
                              - man1
                              - man2
                              - wan1
                              - wan2
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the current uplink addresses for devices in an organization.
      tags:
        - organizations
        - monitor
        - devices
        - uplinks
        - addresses
        - byDevice
  "/organizations/{organizationId}/devices/uplinksLossAndLatency":
    get:
      description: Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago
      operationId: getOrganizationDevicesUplinksLossAndLatency
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
          in: query
          name: uplink
          schema:
            enum:
              - cellular
              - wan1
              - wan2
            type: string
        - description: Optional filter for a specific destination IP. Default will return all destination IPs.
          in: query
          name: ip
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - ip: 1.2.3.4
                      networkId: N_24329156
                      serial: Q234-ABCD-5678
                      timeSeries:
                        - latencyMs: 194.9
                          lossPercent: 5.3
                          ts: 2019-01-31T18:46:13Z
                      uplink: wan1
              schema:
                items:
                  properties:
                    ip:
                      description: IP address of uplink
                      type: string
                    networkId:
                      description: Network ID
                      type: string
                    serial:
                      description: Serial of MX device
                      type: string
                    timeSeries:
                      description: Loss and latency timeseries data
                      items:
                        properties:
                          latencyMs:
                            description: Latency in milliseconds
                            format: float
                            type: number
                          lossPercent:
                            description: Loss percentage
                            format: float
                            type: number
                          ts:
                            description: Timestamp for this data point
                            format: date-time
                            type: string
                        type: object
                      type: array
                    uplink:
                      description: Uplink interface (wan1, wan2, or cellular)
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago
      tags:
        - organizations
        - monitor
        - devices
        - uplinks
        - uplinksLossAndLatency
  "/organizations/{organizationId}/earlyAccess/features":
    get:
      description: List the available early access features for organization
      operationId: getOrganizationEarlyAccessFeatures
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - descriptions:
                        long: New Feature Beta long description. consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                        short: New Feature Beta
                      documentationLink: null
                      isOrgScopedOnly: true
                      name: New Feature Beta
                      shortName: has_new_feature
                      topic: Dashboard
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the available early access features for organization
      tags:
        - organizations
        - configure
        - earlyAccess
        - features
  "/organizations/{organizationId}/earlyAccess/features/optIns":
    get:
      description: List the early access feature opt-ins for an organization
      operationId: getOrganizationEarlyAccessFeaturesOptIns
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - createdAt: 2022-05-01T04:07:15Z
                      id: "1"
                      limitScopeToNetworks:
                        - id: L_1234
                          name: My Network
                      shortName: has_new_feature
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the early access feature opt-ins for an organization
      tags:
        - organizations
        - configure
        - earlyAccess
        - features
        - optIns
    post:
      description: Create a new early access feature opt-in for an organization
      operationId: createOrganizationEarlyAccessFeaturesOptIn
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                limitScopeToNetworks:
                  - N_12345
                shortName: has_magnetic_beta
              properties:
                limitScopeToNetworks:
                  description: A list of network IDs to apply the opt-in to
                  items:
                    type: string
                  type: array
                shortName:
                  description: Short name of the early access feature
                  type: string
              required:
                - shortName
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2022-05-01T04:07:15Z
                    id: "1"
                    limitScopeToNetworks:
                      - id: L_1234
                        name: My Network
                    shortName: has_new_feature
              schema:
                type: object
          description: Successful operation
      summary: Create a new early access feature opt-in for an organization
      tags:
        - organizations
        - configure
        - earlyAccess
        - features
        - optIns
  "/organizations/{organizationId}/earlyAccess/features/optIns/{optInId}":
    delete:
      description: Delete an early access feature opt-in
      operationId: deleteOrganizationEarlyAccessFeaturesOptIn
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: optInId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete an early access feature opt-in
      tags:
        - organizations
        - configure
        - earlyAccess
        - features
        - optIns
    get:
      description: Show an early access feature opt-in for an organization
      operationId: getOrganizationEarlyAccessFeaturesOptIn
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: optInId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2022-05-01T04:07:15Z
                    id: "1"
                    limitScopeToNetworks:
                      - id: L_1234
                        name: My Network
                    shortName: has_new_feature
              schema:
                type: object
          description: Successful operation
      summary: Show an early access feature opt-in for an organization
      tags:
        - organizations
        - configure
        - earlyAccess
        - features
        - optIns
    put:
      description: Update an early access feature opt-in for an organization
      operationId: updateOrganizationEarlyAccessFeaturesOptIn
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: optInId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                limitScopeToNetworks:
                  - N_12345
              properties:
                limitScopeToNetworks:
                  description: A list of network IDs to apply the opt-in to
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    createdAt: 2022-05-01T04:07:15Z
                    id: "1"
                    limitScopeToNetworks:
                      - id: L_1234
                        name: My Network
                    shortName: has_new_feature
              schema:
                type: object
          description: Successful operation
      summary: Update an early access feature opt-in for an organization
      tags:
        - organizations
        - configure
        - earlyAccess
        - features
        - optIns
  "/organizations/{organizationId}/firmware/upgrades":
    get:
      description: Get firmware upgrade information for an organization
      operationId: getOrganizationFirmwareUpgrades
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: "The status of an upgrade "
          explode: false
          in: query
          name: status
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The product type in a given upgrade ID
          explode: false
          in: query
          name: productType
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - completedAt: 2020-11-05 15:50:05 UTC
                      fromVersion:
                        id: "2887"
                        releaseDate: 2022-03-17T17:22:52Z
                        releaseType: stable
                        shortName: MR 11.2.1
                      network:
                        id: L_1738
                        name: Minions
                      productType: wireless
                      status: Completed
                      time: 2022-11-01T00:00:00Z
                      toVersion:
                        id: "2888"
                        releaseDate: 2022-03-17T17:22:52Z
                        releaseType: stable
                        shortName: MR 11.2.1
                      upgradeBatchId: Batch ID Number
                      upgradeId: Event ID Number
              schema:
                items:
                  properties:
                    completedAt:
                      description: Timestamp when upgrade completed. Null if status pending.
                      type: string
                    fromVersion:
                      description: ID of the upgrade's starting version
                      properties:
                        id:
                          description: Firmware version ID
                          type: string
                        releaseDate:
                          description: Release date of the firmware version
                          format: date-time
                          type: string
                        releaseType:
                          description: Release type of the firmware version
                          type: string
                        shortName:
                          description: Firmware version short name
                          type: string
                      type: object
                    network:
                      description: Network of the upgrade
                      properties:
                        id:
                          description: ID of network
                          type: string
                        name:
                          description: The network
                          type: string
                      type: object
                    productType:
                      description: product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]
                      type: string
                    status:
                      description: "Status of upgrade event: [Cancelled, Completed]"
                      type: string
                    time:
                      description: Scheduled start time
                      format: date-time
                      type: string
                    toVersion:
                      description: ID of the upgrade's target version
                      properties:
                        id:
                          description: Firmware version ID
                          type: string
                        releaseDate:
                          description: Release date of the firmware version
                          format: date-time
                          type: string
                        releaseType:
                          description: Release type of the firmware version
                          type: string
                        shortName:
                          description: Firmware version short name
                          type: string
                      type: object
                    upgradeBatchId:
                      description: The upgrade batch
                      type: string
                    upgradeId:
                      description: The upgrade
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Get firmware upgrade information for an organization
      tags:
        - organizations
        - configure
        - firmware
        - upgrades
  "/organizations/{organizationId}/firmware/upgrades/byDevice":
    get:
      description: Get firmware upgrade status for the filtered devices
      operationId: getOrganizationFirmwareUpgradesByDevice
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 50. Default is 50.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter by network
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.
          explode: false
          in: query
          name: macs
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter by firmware upgrade ids.
          explode: false
          in: query
          name: firmwareUpgradeIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter by firmware upgrade batch ids.
          explode: false
          in: query
          name: firmwareUpgradeBatchIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - deviceStatus: completed
                      name: My AP
                      serial: Q234-ABCD-5678
                      upgrade:
                        fromVersion:
                          id: "1234"
                          releaseDate: 2018-02-11T00:00:00.090210Z
                          releaseType: stable
                          shortName: MV 10.8.1
                        id: "1234"
                        staged:
                          group:
                            id: "1234"
                        status: completed
                        time: 2018-02-11T00:00:00.090210Z
                        toVersion:
                          id: "1234"
                          releaseDate: 2018-02-11T00:00:00.090210Z
                          releaseType: stable
                          shortName: MV 11.2.1
                        upgradeBatchId: "1234"
              schema:
                items:
                  properties:
                    deviceStatus:
                      description: Status of the device upgrade
                      type: string
                    name:
                      description: Name assigned to the device
                      type: string
                    serial:
                      description: Serial of the device
                      type: string
                    upgrade:
                      description: The devices upgrade details and status
                      properties:
                        fromVersion:
                          description: The initial version of the device
                          properties:
                            id:
                              description: ID of the initial firmware version
                              type: string
                            releaseDate:
                              description: Release date of the firmware version
                              type: string
                            releaseType:
                              description: Release type of the firmware version
                              type: string
                            shortName:
                              description: Firmware version short name
                              type: string
                          type: object
                        id:
                          description: ID of the upgrade
                          type: string
                        staged:
                          description: Staged upgrade
                          properties:
                            group:
                              description: The staged upgrade group
                              properties:
                                id:
                                  description: Id of the staged upgrade group
                                  type: string
                              type: object
                          type: object
                        status:
                          description: Status of the upgrade
                          type: string
                        time:
                          description: Start time of the upgrade
                          type: string
                        toVersion:
                          description: Version the device is upgrading to
                          properties:
                            id:
                              description: ID of the initial firmware version
                              type: string
                            releaseDate:
                              description: Release date of the firmware version
                              type: string
                            releaseType:
                              description: Release type of the firmware version
                              type: string
                            shortName:
                              description: Firmware version short name
                              type: string
                          type: object
                        upgradeBatchId:
                          description: ID of the upgrade batch
                          type: string
                      type: object
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Get firmware upgrade status for the filtered devices
      tags:
        - organizations
        - configure
        - firmware
        - upgrades
        - byDevice
  "/organizations/{organizationId}/insight/applications":
    get:
      description: List all Insight tracked applications
      operationId: getOrganizationInsightApplications
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - applicationId: "19.12"
                      name: Meraki HTTPS
                      thresholds:
                        byNetwork:
                          - goodput: 50000
                            networkId: N_12345678
                            responseDuration: 1000
                        type: smart
              schema:
                items:
                  properties:
                    applicationId:
                      description: Application identifier
                      type: string
                    name:
                      description: Application name
                      type: string
                    thresholds:
                      description: Thresholds defined by a user or Meraki models for each application
                      properties:
                        byNetwork:
                          description: Threshold for each network
                          items:
                            properties:
                              goodput:
                                description: Number of useful information bits delivered over a network per unit of time
                                type: integer
                              networkId:
                                description: Network identifier
                                type: string
                              responseDuration:
                                description: Duration of the response, in milliseconds
                                type: integer
                            type: object
                          type: array
                        type:
                          description: Threshold type (static or smart)
                          type: string
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: List all Insight tracked applications
      tags:
        - insight
        - configure
        - applications
  "/organizations/{organizationId}/insight/monitoredMediaServers":
    get:
      description: List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServers
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - address: 123.123.123.1
                      bestEffortMonitoringEnabled: true
                      id: "1284392014819"
                      name: Sample VoIP Provider
              schema:
                items:
                  properties:
                    address:
                      description: The IP address (IPv4 only) or hostname of the media server to monitor
                      type: string
                    bestEffortMonitoringEnabled:
                      description: Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead
                      type: boolean
                    id:
                      description: Monitored media server id
                      type: string
                    name:
                      description: The name of the VoIP provider
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the monitored media servers for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
    post:
      description: Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.
      operationId: createOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
                name: Sample VoIP Provider
              properties:
                address:
                  description: The IP address (IPv4 only) or hostname of the media server to monitor
                  type: string
                bestEffortMonitoringEnabled:
                  description: Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead.
                  type: boolean
                name:
                  description: The name of the VoIP provider
                  type: string
              required:
                - name
                - address
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: 123.123.123.1
                    bestEffortMonitoringEnabled: true
                    id: "1284392014819"
                    name: Sample VoIP Provider
              schema:
                type: object
          description: Successful operation
      summary: Add a media server to be monitored for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
  "/organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}":
    delete:
      description: Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.
      operationId: deleteOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: monitoredMediaServerId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a monitored media server from this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
    get:
      description: Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: monitoredMediaServerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: 123.123.123.1
                    bestEffortMonitoringEnabled: true
                    id: "1284392014819"
                    name: Sample VoIP Provider
              schema:
                type: object
          description: Successful operation
      summary: Return a monitored media server for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
    put:
      description: Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.
      operationId: updateOrganizationInsightMonitoredMediaServer
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: monitoredMediaServerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
                name: Sample VoIP Provider
              properties:
                address:
                  description: The IP address (IPv4 only) or hostname of the media server to monitor
                  type: string
                bestEffortMonitoringEnabled:
                  description: Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead.
                  type: boolean
                name:
                  description: The name of the VoIP provider
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    address: 123.123.123.1
                    bestEffortMonitoringEnabled: true
                    id: "1284392014819"
                    name: Sample VoIP Provider
              schema:
                type: object
          description: Successful operation
      summary: Update a monitored media server for this organization
      tags:
        - insight
        - configure
        - monitoredMediaServers
  "/organizations/{organizationId}/inventory/claim":
    post:
      description: Claim a list of devices, licenses, and/or orders into an organization inventory. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. Use /organizations/{organizationId}/inventory/release to release devices from an organization.
      operationId: claimIntoOrganizationInventory
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                licenses:
                  - key: Z2XXXXXXXXXX
                    mode: addDevices
                orders:
                  - 4CXXXXXXX
                serials:
                  - Q234-ABCD-5678
              properties:
                licenses:
                  description: The licenses that should be claimed
                  items:
                    properties:
                      key:
                        description: The key of the license
                        type: string
                      mode:
                        description: "Co-term licensing only: either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. Does not apply to organizations using per-device licensing model."
                        enum:
                          - addDevices
                          - renew
                        type: string
                    required:
                      - key
                    type: object
                  type: array
                orders:
                  description: The numbers of the orders that should be claimed
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices that should be claimed
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    licenses:
                      - key: Z2XXXXXXXXXX
                        mode: addDevices
                    orders:
                      - 4CXXXXXXX
                    serials:
                      - Q234-ABCD-5678
              schema:
                type: object
          description: Successful operation
      summary: Claim a list of devices, licenses, and/or orders into an organization inventory
      tags:
        - organizations
        - configure
        - inventory
  "/organizations/{organizationId}/inventory/devices":
    get:
      description: Return the device inventory for an organization
      operationId: getOrganizationInventoryDevices
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
          in: query
          name: usedState
          schema:
            enum:
              - unused
              - used
            type: string
        - description: Search for devices in inventory based on serial number, mac address, or model.
          in: query
          name: search
          schema:
            type: string
        - description: Search for devices in inventory based on mac addresses.
          explode: false
          in: query
          name: macs
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Search for devices in inventory based on network ids.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Search for devices in inventory based on serials.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Search for devices in inventory based on model.
          explode: false
          in: query
          name: models
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Search for devices in inventory based on order numbers.
          explode: false
          in: query
          name: orderNumbers
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
        - description: Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
          explode: false
          in: query
          name: productTypes
          schema:
            items:
              enum:
                - appliance
                - camera
                - cellularGateway
                - sensor
                - switch
                - systemsManager
                - wireless
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - claimedAt: 2018-02-11T00:00:00.090210Z
                      licenseExpirationDate: 2020-05-02T10:52:44.012345Z
                      mac: 00:11:22:33:44:55
                      model: MR34
                      name: My AP
                      networkId: N_24329156
                      orderNumber: 4C1234567
                      productType: wireless
                      serial: Q234-ABCD-5678
                      tags:
                        - tag1
                        - tag2
              schema:
                items:
                  properties:
                    claimedAt:
                      description: Claimed time of the device
                      format: date-time
                      type: string
                    licenseExpirationDate:
                      description: License expiration date of the device
                      format: date-time
                      type: string
                    mac:
                      description: MAC address of the device
                      type: string
                    model:
                      description: Model type of the device
                      type: string
                    name:
                      description: Name of the device
                      type: string
                    networkId:
                      description: Network Id of the device
                      type: string
                    orderNumber:
                      description: Order number of the device
                      type: string
                    productType:
                      description: Product type of the device
                      type: string
                    serial:
                      description: Serial number of the device
                      type: string
                    tags:
                      description: Device tags
                      items:
                        type: string
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the device inventory for an organization
      tags:
        - organizations
        - configure
        - inventory
        - devices
  "/organizations/{organizationId}/inventory/devices/{serial}":
    get:
      description: Return a single device from the inventory of an organization
      operationId: getOrganizationInventoryDevice
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: serial
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    claimedAt: 2018-02-11T00:00:00.090210Z
                    licenseExpirationDate: 2020-05-02T10:52:44.012345Z
                    mac: 00:11:22:33:44:55
                    model: MR34
                    name: My AP
                    networkId: N_24329156
                    orderNumber: 4C1234567
                    productType: wireless
                    serial: Q234-ABCD-5678
                    tags:
                      - tag1
                      - tag2
              schema:
                properties:
                  claimedAt:
                    description: Claimed time of the device
                    format: date-time
                    type: string
                  licenseExpirationDate:
                    description: License expiration date of the device
                    format: date-time
                    type: string
                  mac:
                    description: MAC address of the device
                    type: string
                  model:
                    description: Model type of the device
                    type: string
                  name:
                    description: Name of the device
                    type: string
                  networkId:
                    description: Network Id of the device
                    type: string
                  orderNumber:
                    description: Order number of the device
                    type: string
                  productType:
                    description: Product type of the device
                    type: string
                  serial:
                    description: Serial number of the device
                    type: string
                  tags:
                    description: Device tags
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Return a single device from the inventory of an organization
      tags:
        - organizations
        - configure
        - inventory
        - devices
  "/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/exportEvents":
    post:
      description: Imports event logs related to the onboarding app into elastisearch
      operationId: createOrganizationInventoryOnboardingCloudMonitoringExportEvent
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                logEvent: download
                request: r=cb
                targetOS: mac
                timestamp: 1526087474
              properties:
                logEvent:
                  description: The type of log event this is recording, e.g. download or opening a banner
                  type: string
                request:
                  description: Used to describe if this event was the result of a redirect. E.g. a query param if an info banner is being used
                  type: string
                targetOS:
                  description: The name of the onboarding distro being downloaded
                  type: string
                timestamp:
                  description: A JavaScript UTC datetime stamp for when the even occurred
                  type: integer
              required:
                - logEvent
                - timestamp
              type: object
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                response:
                  value: {}
              schema:
                properties: {}
                type: object
          description: Successful operation
      summary: Imports event logs related to the onboarding app into elastisearch
      tags:
        - organizations
        - configure
        - inventory
        - onboarding
        - cloudMonitoring
        - exportEvents
  "/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/imports":
    get:
      description: Check the status of a committed Import operation
      operationId: getOrganizationInventoryOnboardingCloudMonitoringImports
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: import ids from an imports
          explode: false
          in: query
          name: importIds
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - device:
                        created: true
                        status: SUCCESS
                        url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                      importId: "0000000000000000"
              schema:
                items:
                  properties:
                    device:
                      description: Represents the details of an imported device.
                      properties:
                        created:
                          description: Whether or not the device was successfully created in dashboard.
                          type: boolean
                        status:
                          description: Represents the current state of importing the device.
                          type: string
                        url:
                          description: The url to the device details page within dashboard.
                          type: string
                      type: object
                    importId:
                      description: Database ID for the new entity entry.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Check the status of a committed Import operation
      tags:
        - organizations
        - configure
        - inventory
        - onboarding
        - cloudMonitoring
        - imports
    post:
      description: Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
      operationId: createOrganizationInventoryOnboardingCloudMonitoringImport
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                devices:
                  - deviceId: 161b2602-a713-4aac-b1eb-d9b55205353d
                    networkId: "1338481"
                    udi: PID:C9200L-24P-4G SN:JAE25220R2K
              properties:
                devices:
                  description: A set of device imports to commit
                  items:
                    properties:
                      deviceId:
                        description: Import ID from the Import operation
                        type: string
                      networkId:
                        description: Network Id
                        type: string
                      udi:
                        description: Device UDI certificate
                        type: string
                    required:
                      - deviceId
                      - udi
                      - networkId
                    type: object
                  type: array
              required:
                - devices
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    - importId: "1234"
                      message: Import Started
                      status: IMPORT JOB SUCCESS
              schema:
                items:
                  properties:
                    importId:
                      description: Unique id associated with the import of the device
                      type: string
                    message:
                      description: Response method
                      type: string
                    status:
                      description: Cloud monitor import status
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Commits the import operation to complete the onboarding of a device into Dashboard for monitoring.
      tags:
        - organizations
        - configure
        - inventory
        - onboarding
        - cloudMonitoring
        - imports
  "/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/networks":
    get:
      description: Returns list of networks eligible for adding cloud monitored device
      operationId: getOrganizationInventoryOnboardingCloudMonitoringNetworks
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: Device Type switch or wireless controller
          in: query
          name: deviceType
          required: true
          schema:
            enum:
              - switch
              - wireless_controller
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "202":
          content:
            application/json:
              examples:
                response:
                  value:
                    - enrollmentString: my-enrollment-string
                      id: N_24329156
                      isBoundToConfigTemplate: false
                      name: Main Office
                      notes: Additional description of the network
                      organizationId: "2930418"
                      productTypes:
                        - appliance
                        - switch
                        - wireless
                      tags:
                        - tag1
                        - tag2
                      timeZone: America/Los_Angeles
                      url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                items:
                  properties:
                    enrollmentString:
                      description: Enrollment string for the network
                      type: string
                    id:
                      description: Network ID
                      type: string
                    isBoundToConfigTemplate:
                      description: If the network is bound to a config template
                      type: boolean
                    name:
                      description: Network name
                      type: string
                    notes:
                      description: Notes for the network
                      type: string
                    organizationId:
                      description: Organization ID
                      type: string
                    productTypes:
                      description: List of the product types that the network supports
                      items:
                        type: string
                      type: array
                    tags:
                      description: Network tags
                      items:
                        type: string
                      type: array
                    timeZone:
                      description: Timezone of the network
                      type: string
                    url:
                      description: URL to the network Dashboard UI
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Returns list of networks eligible for adding cloud monitored device
      tags:
        - organizations
        - configure
        - inventory
        - onboarding
        - cloudMonitoring
        - networks
  "/organizations/{organizationId}/inventory/onboarding/cloudMonitoring/prepare":
    post:
      description: Initiates or updates an import session. An import ID will be generated and used when you are ready to commit the import.
      operationId: createOrganizationInventoryOnboardingCloudMonitoringPrepare
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                devices:
                  - sudi: "-----BEGIN CERTIFICATE-----

                      \        MIIDyTCCArGgAwIBAgIKBBNXOVCGU1YztjANBgkqhkiG9w0BAQsFADAnMQ4wDAYD

                      \        VQQKEwVDaXNjbzEVMBMGA1UEAxMMQUNUMiBTVURJIENBMB4XDTIxMDUzMTEzNTUx

                      \        NVoXDTI5MDUxNDIwMjU0MVowbTEpMCcGA1UEBRMgUElEOkM5MjAwTC0yNFAtNEcg

                      \        U046SkFFMjUyMjBSMksxDjAMBgNVBAoTBUNpc2NvMRgwFgYDVQQLEw9BQ1QtMiBM

                      \        aXRlIFNVREkxFjAUBgNVBAMTDUM5MjAwTC0yNFAtNEcwggEiMA0GCSqGSIb3DQEB

                      \        AQUAA4IBDwAwggEKAoIBAQDaUPxW76gT5MdoEAt+UrDFiYA9RYh2iHicDViBEyow

                      \        TR1TuP36bHh13X3vtGiDsCD88Ci2TZIqd/EDkkc7v9ipUUYVVH+YDrPt2Aukb1PH

                      \        D6K0R+KhgEzRo5x54TlU6oWvjUpwNZUwwdhMWIQaUVkMyZBYNy0jGPLO8jwZhyBg

                      \        1Fneybr9pwedGbLrAaz+gdEikB8B4a/fvPjVfL5Ngb4QRjFqWuE+X3nLc0kHedep

                      \        6nfgpUNXMlStVm5nIXKP6OjmzfCHPYh9L2Ehs1TrSk1ser9Ofx0ZMVL/jBZR2EIj

                      \        OZ8tH6KlX2/B2pbSPIO6kD5c4UA8Cf1SbDJCwJ/kI9ihAgMBAAGjgbAwga0wDgYD

                      \        VR0PAQH/BAQDAgXgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUSNjx8cJw1Vu7

                      \        fHMJk6+4uDAD+H8wTQYDVR0RBEYwRKBCBgkrBgEEAQkVAgOgNRMzQ2hpcElEPVVV

                      \        VUNNaElGcUVFMklFUUVBQWNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE9MB0GA1Ud

                      \        DgQWBBRdhMkFD/z5hokaQeLbaRsp4hkvbzANBgkqhkiG9w0BAQsFAAOCAQEAMtuh

                      \        YpBz4xEZ7YdJsLpw67Q0TTJGnTBRpzAeY1urYDoDz8TSx556XG7z3IRzuED5KVSp

                      \        OwmH/iZ+tDfYQ3W3ElWTW93871DkuW4WQIfbnoHg/F7bF0DKYVkD3rpZjyz3NhzH

                      \        d7cjTdJXQ85bTAOXDuxKH3qewrXxxOGXgh3I6NUq0UwMTWh84lND7Jl+ZAQkYNS2

                      \        iHanTZFQBk3ML0NUb7fKDYGRTZRqwQ/upIO4S6LV1cxH/6V0qbMy3sCSHZoMLrW3

                      \        0m3M6yKpe5+VZzHZwmWdUf3Ot+zKjhveK5/YNsMIASdvtvymxUizq2Hr1hvR/kPc

                      \        p1vuyWxipU8JfzOh/A==

                      \        -----END CERTIFICATE-----

                      \        "
                    tunnel:
                      certificateName: DeviceSUDI
                      localInterface: 1
                      loopbackNumber: 1000
                      name: MERAKI
                    user:
                      username: Meraki
                    vty:
                      accessList:
                        vtyIn:
                          name: MERAKI_IN
                        vtyOut:
                          name: MERAKI_OUT
                      authentication:
                        group:
                          name: ""
                      authorization:
                        group:
                          name: MERAKI
                      endLineNumber: 17
                      rotaryNumber: 50
                      startLineNumber: 16
              properties:
                devices:
                  description: A set of devices to import (or update)
                  items:
                    properties:
                      sudi:
                        description: Device SUDI certificate
                        type: string
                      tunnel:
                        description: TLS Related Parameters
                        properties:
                          certificateName:
                            description: Name of the configured TLS certificate
                            type: string
                          localInterface:
                            description: Number of the vlan expected to be used to connect to the cloud
                            type: integer
                          loopbackNumber:
                            description: Number of the configured Loopback Interface used for TLS overlay
                            type: integer
                          name:
                            description: Name of the configured TLS tunnel
                            type: string
                        type: object
                      user:
                        description: User parameters
                        properties:
                          username:
                            description: The name of the device user for Meraki monitoring
                            type: string
                        type: object
                      vty:
                        description: VTY Related Parameters
                        properties:
                          accessList:
                            description: AccessList details
                            properties:
                              vtyIn:
                                description: VTY in ACL
                                properties:
                                  name:
                                    description: Name
                                    type: string
                                type: object
                              vtyOut:
                                description: VTY out ACL
                                properties:
                                  name:
                                    description: Name
                                    type: string
                                type: object
                            type: object
                          authentication:
                            description: VTY AAA authentication
                            properties:
                              group:
                                description: Group Details
                                properties:
                                  name:
                                    description: Group Name
                                    type: string
                                type: object
                            type: object
                          authorization:
                            description: VTY AAA authorization
                            properties:
                              group:
                                description: Group Details
                                properties:
                                  name:
                                    description: Group Name
                                    type: string
                                type: object
                            type: object
                          endLineNumber:
                            description: Ending line VTY number
                            type: integer
                          rotaryNumber:
                            description: SSH rotary number
                            type: integer
                          startLineNumber:
                            description: Starting line VTY number
                            type: integer
                        type: object
                    required:
                      - sudi
                    type: object
                  type: array
              required:
                - devices
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    - configParams:
                        cloudStaticIp: 1.2.3.4
                        tunnel:
                          host: secgw-int3.ciscocloudoffer.com
                          mode: "443"
                          name: MERAKI-PRIMARY
                          port: "443"
                          rootCertificate:
                            content: ""
                            name: MERAKI_TLSGW_CA
                        user:
                          publicKey: ""
                          secret:
                            hash: ""
                          username: MERAKI_USER
                      deviceId: 161b2602-a713-4aac-b1eb-d9b55205353d
                      message: Existing import found
                      status: SUCCESS
                      udi: PID:C9200L-24P-4G SN:JAE25220R2K
              schema:
                items:
                  properties:
                    configParams:
                      description: Params used in order to connect to the device
                      properties:
                        cloudStaticIp:
                          description: Static IP Address used to connect to the device
                          type: string
                        tunnel:
                          description: Configuration options used to connect to the device
                          properties:
                            host:
                              description: SSH tunnel URL used to connect to the device
                              type: string
                            mode:
                              description: ""
                              type: string
                            name:
                              description: The name of the tunnel we are attempting to connect to
                              type: string
                            port:
                              description: The port used for the ssh tunnel.
                              type: string
                            rootCertificate:
                              description: Root certificate information
                              properties:
                                content:
                                  description: Public certificate value
                                  type: string
                                name:
                                  description: The name of the server protected by the certificate
                                  type: string
                              type: object
                          type: object
                        user:
                          description: User credentials used to connect to the device
                          properties:
                            publicKey:
                              description: The public key for the registered user
                              type: string
                            secret:
                              description: Stores the user secret hash
                              properties:
                                hash:
                                  description: The hashed secret
                                  type: string
                              type: object
                            username:
                              description: The username added to Catalyst device
                              type: string
                          type: object
                      type: object
                    deviceId:
                      description: Import ID from the Import operation
                      type: string
                    message:
                      description: Message related to whether or not the device was found and can be imported.
                      type: string
                    status:
                      description: The import status of the device
                      type: string
                    udi:
                      description: Device UDI certificate
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Initiates or updates an import session
      tags:
        - organizations
        - configure
        - inventory
        - onboarding
        - cloudMonitoring
        - prepare
  "/organizations/{organizationId}/inventory/release":
    post:
      description: Release a list of claimed devices from an organization.
      operationId: releaseFromOrganizationInventory
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                serials:
                  - Q234-ABCD-5678
              properties:
                serials:
                  description: Serials of the devices that should be released
                  items:
                    type: string
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    serials:
                      - Q234-ABCD-5678
              schema:
                type: object
          description: Successful operation
      summary: Release a list of claimed devices from an organization.
      tags:
        - organizations
        - configure
        - inventory
  "/organizations/{organizationId}/licenses":
    get:
      description: List the licenses for an organization
      operationId: getOrganizationLicenses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filter the licenses to those assigned to a particular device. Returned in the same order that they are queued to the device.
          in: query
          name: deviceSerial
          schema:
            type: string
        - description: Filter the licenses to those assigned in a particular network
          in: query
          name: networkId
          schema:
            type: string
        - description: Filter the licenses to those in a particular state. Can be one of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'
          in: query
          name: state
          schema:
            enum:
              - active
              - expired
              - expiring
              - recentlyQueued
              - unused
              - unusedActive
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - activationDate: 2019-09-01T15:01:46Z
                      claimDate: 2019-08-29T12:40:10Z
                      deviceSerial: Q234-ABCD-5678
                      durationInDays: 365
                      expirationDate: 2020-10-30T15:01:46Z
                      headLicenseId: "1234"
                      id: "1234"
                      licenseKey: Z21234567890
                      licenseType: MX64-ENT
                      networkId: N_24329156
                      orderNumber: 4C1234567
                      permanentlyQueuedLicenses:
                        - durationInDays: 60
                          id: "1234"
                          licenseKey: Z21234567890
                          licenseType: MX64-ENT
                          orderNumber: 4C1234567
                      seatCount: 25
                      state: active
                      totalDurationInDays: 425
              schema:
                items:
                  properties:
                    activationDate:
                      description: The date the license started burning
                      type: string
                    claimDate:
                      description: The date the license was claimed into the organization
                      type: string
                    deviceSerial:
                      description: Serial number of the device the license is assigned to
                      type: string
                    durationInDays:
                      description: The duration of the individual license
                      type: integer
                    expirationDate:
                      description: The date the license will expire
                      type: string
                    headLicenseId:
                      description: The id of the head license this license is queued behind. If there is no head license, it returns nil.
                      type: string
                    id:
                      description: License ID
                      type: string
                    licenseKey:
                      description: License key
                      type: string
                    licenseType:
                      description: License type
                      type: string
                    networkId:
                      description: ID of the network the license is assigned to
                      type: string
                    orderNumber:
                      description: Order number
                      type: string
                    permanentlyQueuedLicenses:
                      description: DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
                      items:
                        properties:
                          durationInDays:
                            description: The duration of the individual license
                            type: integer
                          id:
                            description: Permanently queued license ID
                            type: string
                          licenseKey:
                            description: License key
                            type: string
                          licenseType:
                            description: License type
                            type: string
                          orderNumber:
                            description: Order number
                            type: string
                        type: object
                      type: array
                    seatCount:
                      description: The number of seats of the license. Only applicable to SM licenses.
                      type: integer
                    state:
                      description: The state of the license. All queued licenses have a status of `recentlyQueued`.
                      enum:
                        - active
                        - expired
                        - expiring
                        - recentlyQueued
                        - unused
                        - unusedActive
                      type: string
                    totalDurationInDays:
                      description: The duration of the license plus all permanently queued licenses associated with it
                      type: integer
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the licenses for an organization
      tags:
        - organizations
        - configure
        - licenses
  "/organizations/{organizationId}/licenses/assignSeats":
    post:
      description: Assign SM seats to a network. This will increase the managed SM device limit of the network
      operationId: assignOrganizationLicensesSeats
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                licenseId: "1234"
                networkId: N_24329156
                seatCount: 20
              properties:
                licenseId:
                  description: The ID of the SM license to assign seats from
                  type: string
                networkId:
                  description: The ID of the SM network to assign the seats to
                  type: string
                seatCount:
                  description: The number of seats to assign to the SM network. Must be less than or equal to the total number of seats of the license
                  type: integer
              required:
                - licenseId
                - networkId
                - seatCount
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    resultingLicenses:
                      - activationDate: 2019-09-01T15:01:46Z
                        claimDate: 2019-08-29T12:40:10Z
                        deviceSerial: Q234-ABCD-5678
                        durationInDays: 365
                        expirationDate: 2020-10-30T15:01:46Z
                        headLicenseId: "1234"
                        id: "1234"
                        licenseKey: Z21234567890
                        licenseType: SME
                        networkId: N_24329156
                        orderNumber: 4C1234567
                        permanentlyQueuedLicenses:
                          - durationInDays: 60
                            id: "1234"
                            licenseKey: Z21234567890
                            licenseType: SME
                            orderNumber: 4C1234567
                        seatCount: 25
                        state: active
                        totalDurationInDays: 425
              schema:
                properties:
                  resultingLicenses:
                    description: Resulting licenses from the move
                    items:
                      properties:
                        activationDate:
                          description: The date the license started burning
                          type: string
                        claimDate:
                          description: The date the license was claimed into the organization
                          type: string
                        deviceSerial:
                          description: Serial number of the device the license is assigned to
                          type: string
                        durationInDays:
                          description: The duration of the individual license
                          type: integer
                        expirationDate:
                          description: The date the license will expire
                          type: string
                        headLicenseId:
                          description: The id of the head license this license is queued behind. If there is no head license, it returns nil.
                          type: string
                        id:
                          description: License ID
                          type: string
                        licenseKey:
                          description: License key
                          type: string
                        licenseType:
                          description: License type
                          type: string
                        networkId:
                          description: ID of the network the license is assigned to
                          type: string
                        orderNumber:
                          description: Order number
                          type: string
                        permanentlyQueuedLicenses:
                          description: DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
                          items:
                            properties:
                              durationInDays:
                                description: The duration of the individual license
                                type: integer
                              id:
                                description: Permanently queued license ID
                                type: string
                              licenseKey:
                                description: License key
                                type: string
                              licenseType:
                                description: License type
                                type: string
                              orderNumber:
                                description: Order number
                                type: string
                            type: object
                          type: array
                        seatCount:
                          description: The number of seats of the license. Only applicable to SM licenses.
                          type: integer
                        state:
                          description: The state of the license. All queued licenses have a status of `recentlyQueued`.
                          enum:
                            - active
                            - expired
                            - expiring
                            - recentlyQueued
                            - unused
                            - unusedActive
                          type: string
                        totalDurationInDays:
                          description: The duration of the license plus all permanently queued licenses associated with it
                          type: integer
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Assign SM seats to a network
      tags:
        - organizations
        - configure
        - licenses
  "/organizations/{organizationId}/licenses/move":
    post:
      description: Move licenses to another organization. This will also move any devices that the licenses are assigned to
      operationId: moveOrganizationLicenses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                destOrganizationId: "2930418"
                licenseIds:
                  - "123"
                  - "456"
              properties:
                destOrganizationId:
                  description: The ID of the organization to move the licenses to
                  type: string
                licenseIds:
                  description: A list of IDs of licenses to move to the new organization
                  items:
                    type: string
                  type: array
              required:
                - destOrganizationId
                - licenseIds
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    destOrganizationId: "2930418"
                    licenseIds:
                      - "123"
                      - "456"
              schema:
                properties:
                  destOrganizationId:
                    description: The ID of the organization to move the licenses to
                    type: string
                  licenseIds:
                    description: A list of IDs of licenses to move to the new organization
                    items:
                      type: string
                    type: array
                type: object
          description: Successful operation
      summary: Move licenses to another organization
      tags:
        - organizations
        - configure
        - licenses
  "/organizations/{organizationId}/licenses/moveSeats":
    post:
      description: Move SM seats to another organization
      operationId: moveOrganizationLicensesSeats
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                destOrganizationId: "2930418"
                licenseId: "1234"
                seatCount: 20
              properties:
                destOrganizationId:
                  description: The ID of the organization to move the SM seats to
                  type: string
                licenseId:
                  description: The ID of the SM license to move the seats from
                  type: string
                seatCount:
                  description: The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
                  type: integer
              required:
                - destOrganizationId
                - licenseId
                - seatCount
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    destOrganizationId: "2930418"
                    licenseId: "1234"
                    seatCount: 20
              schema:
                properties:
                  destOrganizationId:
                    description: The ID of the organization to move the SM seats to
                    type: string
                  licenseId:
                    description: The ID of the SM license to move the seats from
                    type: string
                  seatCount:
                    description: The number of seats to move to the new organization. Must be less than or equal to the total number of seats of the license
                    type: integer
                type: object
          description: Successful operation
      summary: Move SM seats to another organization
      tags:
        - organizations
        - configure
        - licenses
  "/organizations/{organizationId}/licenses/overview":
    get:
      description: Return an overview of the license state for an organization
      operationId: getOrganizationLicensesOverview
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    expirationDate: Feb 8, 2020 UTC
                    licensedDeviceCounts:
                      MS: 100
                    status: OK
              schema:
                type: object
          description: Successful operation
      summary: Return an overview of the license state for an organization
      tags:
        - organizations
        - monitor
        - licenses
        - overview
  "/organizations/{organizationId}/licenses/renewSeats":
    post:
      description: Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license
      operationId: renewOrganizationLicensesSeats
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                licenseIdToRenew: "123"
                unusedLicenseId: "1234"
              properties:
                licenseIdToRenew:
                  description: The ID of the SM license to renew. This license must already be assigned to an SM network
                  type: string
                unusedLicenseId:
                  description: The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
                  type: string
              required:
                - licenseIdToRenew
                - unusedLicenseId
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    resultingLicenses:
                      - activationDate: 2019-09-01T15:01:46Z
                        claimDate: 2019-08-29T12:40:10Z
                        deviceSerial: Q234-ABCD-5678
                        durationInDays: 365
                        expirationDate: 2020-10-30T15:01:46Z
                        headLicenseId: "1234"
                        id: "1234"
                        licenseKey: Z21234567890
                        licenseType: SME
                        networkId: N_24329156
                        orderNumber: 4C1234567
                        permanentlyQueuedLicenses:
                          - durationInDays: 60
                            id: "1234"
                            licenseKey: Z21234567890
                            licenseType: SME
                            orderNumber: 4C1234567
                        seatCount: 25
                        state: active
                        totalDurationInDays: 425
              schema:
                properties:
                  resultingLicenses:
                    description: Resulting licenses from the move
                    items:
                      properties:
                        activationDate:
                          description: The date the license started burning
                          type: string
                        claimDate:
                          description: The date the license was claimed into the organization
                          type: string
                        deviceSerial:
                          description: Serial number of the device the license is assigned to
                          type: string
                        durationInDays:
                          description: The duration of the individual license
                          type: integer
                        expirationDate:
                          description: The date the license will expire
                          type: string
                        headLicenseId:
                          description: The id of the head license this license is queued behind. If there is no head license, it returns nil.
                          type: string
                        id:
                          description: License ID
                          type: string
                        licenseKey:
                          description: License key
                          type: string
                        licenseType:
                          description: License type
                          type: string
                        networkId:
                          description: ID of the network the license is assigned to
                          type: string
                        orderNumber:
                          description: Order number
                          type: string
                        permanentlyQueuedLicenses:
                          description: DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
                          items:
                            properties:
                              durationInDays:
                                description: The duration of the individual license
                                type: integer
                              id:
                                description: Permanently queued license ID
                                type: string
                              licenseKey:
                                description: License key
                                type: string
                              licenseType:
                                description: License type
                                type: string
                              orderNumber:
                                description: Order number
                                type: string
                            type: object
                          type: array
                        seatCount:
                          description: The number of seats of the license. Only applicable to SM licenses.
                          type: integer
                        state:
                          description: The state of the license. All queued licenses have a status of `recentlyQueued`.
                          enum:
                            - active
                            - expired
                            - expiring
                            - recentlyQueued
                            - unused
                            - unusedActive
                          type: string
                        totalDurationInDays:
                          description: The duration of the license plus all permanently queued licenses associated with it
                          type: integer
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Renew SM seats of a license
      tags:
        - organizations
        - configure
        - licenses
  "/organizations/{organizationId}/licenses/{licenseId}":
    get:
      description: Display a license
      operationId: getOrganizationLicense
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: licenseId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    activationDate: 2019-09-01T15:01:46Z
                    claimDate: 2019-08-29T12:40:10Z
                    deviceSerial: Q234-ABCD-5678
                    durationInDays: 365
                    expirationDate: 2020-10-30T15:01:46Z
                    headLicenseId: "1234"
                    id: "1234"
                    licenseKey: Z21234567890
                    licenseType: MX64-ENT
                    networkId: N_24329156
                    orderNumber: 4C1234567
                    permanentlyQueuedLicenses:
                      - durationInDays: 60
                        id: "1234"
                        licenseKey: Z21234567890
                        licenseType: MX64-ENT
                        orderNumber: 4C1234567
                    seatCount: 25
                    state: active
                    totalDurationInDays: 425
              schema:
                properties:
                  activationDate:
                    description: The date the license started burning
                    type: string
                  claimDate:
                    description: The date the license was claimed into the organization
                    type: string
                  deviceSerial:
                    description: Serial number of the device the license is assigned to
                    type: string
                  durationInDays:
                    description: The duration of the individual license
                    type: integer
                  expirationDate:
                    description: The date the license will expire
                    type: string
                  headLicenseId:
                    description: The id of the head license this license is queued behind. If there is no head license, it returns nil.
                    type: string
                  id:
                    description: License ID
                    type: string
                  licenseKey:
                    description: License key
                    type: string
                  licenseType:
                    description: License type
                    type: string
                  networkId:
                    description: ID of the network the license is assigned to
                    type: string
                  orderNumber:
                    description: Order number
                    type: string
                  permanentlyQueuedLicenses:
                    description: DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
                    items:
                      properties:
                        durationInDays:
                          description: The duration of the individual license
                          type: integer
                        id:
                          description: Permanently queued license ID
                          type: string
                        licenseKey:
                          description: License key
                          type: string
                        licenseType:
                          description: License type
                          type: string
                        orderNumber:
                          description: Order number
                          type: string
                      type: object
                    type: array
                  seatCount:
                    description: The number of seats of the license. Only applicable to SM licenses.
                    type: integer
                  state:
                    description: The state of the license. All queued licenses have a status of `recentlyQueued`.
                    enum:
                      - active
                      - expired
                      - expiring
                      - recentlyQueued
                      - unused
                      - unusedActive
                    type: string
                  totalDurationInDays:
                    description: The duration of the license plus all permanently queued licenses associated with it
                    type: integer
                type: object
          description: Successful operation
      summary: Display a license
      tags:
        - organizations
        - configure
        - licenses
    put:
      description: Update a license
      operationId: updateOrganizationLicense
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: licenseId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                deviceSerial: Q234-ABCD-5678
              properties:
                deviceSerial:
                  description: The serial number of the device to assign this license to. Set this to  null to unassign the license. If a different license is already active on the device, this parameter will control queueing/dequeuing this license.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    activationDate: 2019-09-01T15:01:46Z
                    claimDate: 2019-08-29T12:40:10Z
                    deviceSerial: Q234-ABCD-5678
                    durationInDays: 365
                    expirationDate: 2020-10-30T15:01:46Z
                    headLicenseId: "1234"
                    id: "1234"
                    licenseKey: Z21234567890
                    licenseType: MX64-ENT
                    networkId: N_24329156
                    orderNumber: 4C1234567
                    permanentlyQueuedLicenses:
                      - durationInDays: 60
                        id: "1234"
                        licenseKey: Z21234567890
                        licenseType: MX64-ENT
                        orderNumber: 4C1234567
                    seatCount: 25
                    state: active
                    totalDurationInDays: 425
              schema:
                properties:
                  activationDate:
                    description: The date the license started burning
                    type: string
                  claimDate:
                    description: The date the license was claimed into the organization
                    type: string
                  deviceSerial:
                    description: Serial number of the device the license is assigned to
                    type: string
                  durationInDays:
                    description: The duration of the individual license
                    type: integer
                  expirationDate:
                    description: The date the license will expire
                    type: string
                  headLicenseId:
                    description: The id of the head license this license is queued behind. If there is no head license, it returns nil.
                    type: string
                  id:
                    description: License ID
                    type: string
                  licenseKey:
                    description: License key
                    type: string
                  licenseType:
                    description: License type
                    type: string
                  networkId:
                    description: ID of the network the license is assigned to
                    type: string
                  orderNumber:
                    description: Order number
                    type: string
                  permanentlyQueuedLicenses:
                    description: DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
                    items:
                      properties:
                        durationInDays:
                          description: The duration of the individual license
                          type: integer
                        id:
                          description: Permanently queued license ID
                          type: string
                        licenseKey:
                          description: License key
                          type: string
                        licenseType:
                          description: License type
                          type: string
                        orderNumber:
                          description: Order number
                          type: string
                      type: object
                    type: array
                  seatCount:
                    description: The number of seats of the license. Only applicable to SM licenses.
                    type: integer
                  state:
                    description: The state of the license. All queued licenses have a status of `recentlyQueued`.
                    enum:
                      - active
                      - expired
                      - expiring
                      - recentlyQueued
                      - unused
                      - unusedActive
                    type: string
                  totalDurationInDays:
                    description: The duration of the license plus all permanently queued licenses associated with it
                    type: integer
                type: object
          description: Successful operation
      summary: Update a license
      tags:
        - organizations
        - configure
        - licenses
  "/organizations/{organizationId}/licensing/coterm/licenses":
    get:
      description: List the licenses in a coterm organization
      operationId: getOrganizationLicensingCotermLicenses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Filter for licenses that are invalidated
          in: query
          name: invalidated
          schema:
            type: boolean
        - description: Filter for licenses that are expired
          in: query
          name: expired
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - claimedAt: 2022-07-04T16:23:00Z
                      counts:
                        - count: 2
                          model: MR Enterprise
                      duration: 365
                      editions:
                        - edition: Enterprise
                          productType: appliance
                      expired: false
                      invalidated: true
                      invalidatedAt: 2022-07-04T16:23:00Z
                      key: Z2AA-BBBB-CCCC
                      mode: addDevices
                      organizationId: "123456"
                      startedAt: 2022-05-02T10:52:00Z
              schema:
                items:
                  properties:
                    claimedAt:
                      description: When the license was claimed into the organization
                      format: date-time
                      type: string
                    counts:
                      description: The counts of the license by model type
                      items:
                        properties:
                          count:
                            description: The number of counts the license contains of this model
                            type: integer
                          model:
                            description: The license model type
                            type: string
                        type: object
                      type: array
                    duration:
                      description: The duration (term length) of the license, measured in days
                      type: integer
                    editions:
                      description: The editions of the license for each relevant product type
                      items:
                        properties:
                          edition:
                            description: The name of the license edition
                            type: string
                          productType:
                            description: The product type of the license edition
                            type: string
                        type: object
                      type: array
                    expired:
                      description: Flag to indicate if the license is expired
                      type: boolean
                    invalidated:
                      description: Flag to indicated that the license is invalidated
                      type: boolean
                    invalidatedAt:
                      description: When the license was invalidated. Will be null for active licenses
                      format: date-time
                      type: string
                    key:
                      description: The key of the license
                      type: string
                    mode:
                      description: The operation mode of the license when it was claimed
                      enum:
                        - addDevices
                        - renew
                      type: string
                    organizationId:
                      description: The ID of the organization that the license is claimed in
                      type: string
                    startedAt:
                      description: When the license's term began (approximately the date when the license was created)
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the licenses in a coterm organization
      tags:
        - licensing
        - configure
        - coterm
        - licenses
  "/organizations/{organizationId}/licensing/coterm/licenses/move":
    post:
      description: Moves a license to a different organization (coterm only)
      operationId: moveOrganizationLicensingCotermLicenses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                destination:
                  mode: addDevices
                  organizationId: "123"
                licenses:
                  - counts:
                      - count: 5
                        model: MR Enterprise
                    key: Z2AA-BBBB-CCCC
              properties:
                destination:
                  description: Destination data for the license move
                  properties:
                    mode:
                      description: The claim mode of the moved license
                      enum:
                        - addDevices
                        - renew
                      type: string
                    organizationId:
                      description: The organization to move the license to
                      type: string
                  type: object
                licenses:
                  description: The list of licenses to move
                  items:
                    properties:
                      counts:
                        description: The counts to move from the license by model type
                        items:
                          properties:
                            count:
                              description: The number of counts to move
                              type: integer
                            model:
                              description: The license model type to move counts of
                              type: string
                          required:
                            - model
                            - count
                          type: object
                        type: array
                      key:
                        description: The license key to move counts from
                        type: string
                    required:
                      - key
                      - counts
                    type: object
                  type: array
              required:
                - destination
                - licenses
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    movedLicenses:
                      - claimedAt: 2022-07-04T16:23:00Z
                        counts:
                          - count: 2
                            model: MR Enterprise
                        duration: 365
                        editions:
                          - edition: Enterprise
                            productType: appliance
                        expired: false
                        invalidated: true
                        invalidatedAt: 2022-07-04T16:23:00Z
                        key: Z2AA-BBBB-CCCC
                        mode: addDevices
                        organizationId: "123456"
                        startedAt: 2022-05-02T10:52:00Z
                    remainderLicenses:
                      - claimedAt: 2022-07-04T16:23:00Z
                        counts:
                          - count: 2
                            model: MR Enterprise
                        duration: 365
                        editions:
                          - edition: Enterprise
                            productType: appliance
                        expired: false
                        invalidated: true
                        invalidatedAt: 2022-07-04T16:23:00Z
                        key: Z2AA-BBBB-CCCC
                        mode: addDevices
                        organizationId: "123456"
                        startedAt: 2022-05-02T10:52:00Z
              schema:
                properties:
                  movedLicenses:
                    description: Newly moved licenses created in the destination organization of the license move operation
                    items:
                      properties:
                        claimedAt:
                          description: When the license was claimed into the organization
                          format: date-time
                          type: string
                        counts:
                          description: The counts of the license by model type
                          items:
                            properties:
                              count:
                                description: The number of counts the license contains of this model
                                type: integer
                              model:
                                description: The license model type
                                type: string
                            type: object
                          type: array
                        duration:
                          description: The duration (term length) of the license, measured in days
                          type: integer
                        editions:
                          description: The editions of the license for each relevant product type
                          items:
                            properties:
                              edition:
                                description: The name of the license edition
                                type: string
                              productType:
                                description: The product type of the license edition
                                type: string
                            type: object
                          type: array
                        expired:
                          description: Flag to indicate if the license is expired
                          type: boolean
                        invalidated:
                          description: Flag to indicated that the license is invalidated
                          type: boolean
                        invalidatedAt:
                          description: When the license was invalidated. Will be null for active licenses
                          format: date-time
                          type: string
                        key:
                          description: The key of the license
                          type: string
                        mode:
                          description: The operation mode of the license when it was claimed
                          enum:
                            - addDevices
                            - renew
                          type: string
                        organizationId:
                          description: The ID of the organization that the license is claimed in
                          type: string
                        startedAt:
                          description: When the license's term began (approximately the date when the license was created)
                          format: date-time
                          type: string
                      type: object
                    type: array
                  remainderLicenses:
                    description: Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
                    items:
                      properties:
                        claimedAt:
                          description: When the license was claimed into the organization
                          format: date-time
                          type: string
                        counts:
                          description: The counts of the license by model type
                          items:
                            properties:
                              count:
                                description: The number of counts the license contains of this model
                                type: integer
                              model:
                                description: The license model type
                                type: string
                            type: object
                          type: array
                        duration:
                          description: The duration (term length) of the license, measured in days
                          type: integer
                        editions:
                          description: The editions of the license for each relevant product type
                          items:
                            properties:
                              edition:
                                description: The name of the license edition
                                type: string
                              productType:
                                description: The product type of the license edition
                                type: string
                            type: object
                          type: array
                        expired:
                          description: Flag to indicate if the license is expired
                          type: boolean
                        invalidated:
                          description: Flag to indicated that the license is invalidated
                          type: boolean
                        invalidatedAt:
                          description: When the license was invalidated. Will be null for active licenses
                          format: date-time
                          type: string
                        key:
                          description: The key of the license
                          type: string
                        mode:
                          description: The operation mode of the license when it was claimed
                          enum:
                            - addDevices
                            - renew
                          type: string
                        organizationId:
                          description: The ID of the organization that the license is claimed in
                          type: string
                        startedAt:
                          description: When the license's term began (approximately the date when the license was created)
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Moves a license to a different organization (coterm only)
      tags:
        - licensing
        - configure
        - coterm
        - licenses
  "/organizations/{organizationId}/loginSecurity":
    get:
      description: Returns the login security settings for an organization.
      operationId: getOrganizationLoginSecurity
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountLockoutAttempts: 3
                    apiAuthentication:
                      ipRestrictionsForKeys:
                        enabled: true
                        ranges:
                          - 192.195.83.1
                          - 192.168.33.33
                    enforceAccountLockout: true
                    enforceDifferentPasswords: true
                    enforceIdleTimeout: true
                    enforceLoginIpRanges: true
                    enforcePasswordExpiration: true
                    enforceStrongPasswords: true
                    enforceTwoFactorAuth: true
                    idleTimeoutMinutes: 30
                    loginIpRanges:
                      - 192.195.83.1
                      - 192.195.83.255
                    numDifferentPasswords: 3
                    passwordExpirationDays: 90
              schema:
                properties:
                  accountLockoutAttempts:
                    description: Number of consecutive failed login attempts after which users' accounts will be locked.
                    type: integer
                  apiAuthentication:
                    description: Details for indicating whether organization will restrict access to API (but not Dashboard) to certain IP addresses.
                    properties:
                      ipRestrictionsForKeys:
                        description: Details for API-only IP restrictions.
                        properties:
                          enabled:
                            description: Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
                            type: boolean
                          ranges:
                            description: List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  enforceAccountLockout:
                    description: Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts.
                    type: boolean
                  enforceDifferentPasswords:
                    description: Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords.
                    type: boolean
                  enforceIdleTimeout:
                    description: Boolean indicating whether users will be logged out after being idle for the specified number of minutes.
                    type: boolean
                  enforceLoginIpRanges:
                    description: Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses.
                    type: boolean
                  enforcePasswordExpiration:
                    description: Boolean indicating whether users are forced to change their password every X number of days.
                    type: boolean
                  enforceStrongPasswords:
                    description: "Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol"
                    type: boolean
                  enforceTwoFactorAuth:
                    description: Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the authenticator application.
                    type: boolean
                  idleTimeoutMinutes:
                    description: Number of minutes users can remain idle before being logged out of their accounts.
                    type: integer
                  loginIpRanges:
                    description: List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
                    items:
                      type: string
                    type: array
                  numDifferentPasswords:
                    description: Number of recent passwords that new password must be distinct from.
                    type: integer
                  passwordExpirationDays:
                    description: Number of days after which users will be forced to change their password.
                    type: integer
                type: object
          description: Successful operation
      summary: Returns the login security settings for an organization.
      tags:
        - organizations
        - configure
        - loginSecurity
    put:
      description: Update the login security settings for an organization
      operationId: updateOrganizationLoginSecurity
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                accountLockoutAttempts: 3
                apiAuthentication:
                  ipRestrictionsForKeys:
                    enabled: true
                    ranges:
                      - 192.195.83.1
                      - 192.168.33.33
                enforceAccountLockout: true
                enforceDifferentPasswords: true
                enforceIdleTimeout: true
                enforceLoginIpRanges: true
                enforcePasswordExpiration: true
                enforceStrongPasswords: true
                enforceTwoFactorAuth: true
                idleTimeoutMinutes: 30
                loginIpRanges:
                  - 192.195.83.1
                  - 192.195.83.255
                numDifferentPasswords: 3
                passwordExpirationDays: 90
              properties:
                accountLockoutAttempts:
                  description: Number of consecutive failed login attempts after which users' accounts will be locked.
                  type: integer
                apiAuthentication:
                  description: Details for indicating whether organization will restrict access to API (but not Dashboard) to certain IP addresses.
                  properties:
                    ipRestrictionsForKeys:
                      description: Details for API-only IP restrictions.
                      properties:
                        enabled:
                          description: Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
                          type: boolean
                        ranges:
                          description: List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                enforceAccountLockout:
                  description: Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts.
                  type: boolean
                enforceDifferentPasswords:
                  description: Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords.
                  type: boolean
                enforceIdleTimeout:
                  description: Boolean indicating whether users will be logged out after being idle for the specified number of minutes.
                  type: boolean
                enforceLoginIpRanges:
                  description: Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses.
                  type: boolean
                enforcePasswordExpiration:
                  description: Boolean indicating whether users are forced to change their password every X number of days.
                  type: boolean
                enforceStrongPasswords:
                  description: "Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol"
                  type: boolean
                enforceTwoFactorAuth:
                  description: Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the authenticator application.
                  type: boolean
                idleTimeoutMinutes:
                  description: Number of minutes users can remain idle before being logged out of their accounts.
                  type: integer
                loginIpRanges:
                  description: List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
                  items:
                    type: string
                  type: array
                numDifferentPasswords:
                  description: Number of recent passwords that new password must be distinct from.
                  type: integer
                passwordExpirationDays:
                  description: Number of days after which users will be forced to change their password.
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    accountLockoutAttempts: 3
                    apiAuthentication:
                      ipRestrictionsForKeys:
                        enabled: true
                        ranges:
                          - 192.195.83.1
                          - 192.168.33.33
                    enforceAccountLockout: true
                    enforceDifferentPasswords: true
                    enforceIdleTimeout: true
                    enforceLoginIpRanges: true
                    enforcePasswordExpiration: true
                    enforceStrongPasswords: true
                    enforceTwoFactorAuth: true
                    idleTimeoutMinutes: 30
                    loginIpRanges:
                      - 192.195.83.1
                      - 192.195.83.255
                    numDifferentPasswords: 3
                    passwordExpirationDays: 90
              schema:
                properties:
                  accountLockoutAttempts:
                    description: Number of consecutive failed login attempts after which users' accounts will be locked.
                    type: integer
                  apiAuthentication:
                    description: Details for indicating whether organization will restrict access to API (but not Dashboard) to certain IP addresses.
                    properties:
                      ipRestrictionsForKeys:
                        description: Details for API-only IP restrictions.
                        properties:
                          enabled:
                            description: Boolean indicating whether the organization will restrict API key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR ranges.
                            type: boolean
                          ranges:
                            description: List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  enforceAccountLockout:
                    description: Boolean indicating whether users' Dashboard accounts will be locked out after a specified number of consecutive failed login attempts.
                    type: boolean
                  enforceDifferentPasswords:
                    description: Boolean indicating whether users, when setting a new password, are forced to choose a new password that is different from any past passwords.
                    type: boolean
                  enforceIdleTimeout:
                    description: Boolean indicating whether users will be logged out after being idle for the specified number of minutes.
                    type: boolean
                  enforceLoginIpRanges:
                    description: Boolean indicating whether organization will restrict access to Dashboard (including the API) from certain IP addresses.
                    type: boolean
                  enforcePasswordExpiration:
                    description: Boolean indicating whether users are forced to change their password every X number of days.
                    type: boolean
                  enforceStrongPasswords:
                    description: "Boolean indicating whether users will be forced to choose strong passwords for their accounts. Strong passwords are at least 8 characters that contain 3 of the following: number, uppercase letter, lowercase letter, and symbol"
                    type: boolean
                  enforceTwoFactorAuth:
                    description: Boolean indicating whether users in this organization will be required to use an extra verification code when logging in to Dashboard. This code will be sent to their mobile phone via SMS, or can be generated by the authenticator application.
                    type: boolean
                  idleTimeoutMinutes:
                    description: Number of minutes users can remain idle before being logged out of their accounts.
                    type: integer
                  loginIpRanges:
                    description: List of acceptable IP ranges. Entries can be single IP addresses, IP address ranges, and CIDR subnets.
                    items:
                      type: string
                    type: array
                  numDifferentPasswords:
                    description: Number of recent passwords that new password must be distinct from.
                    type: integer
                  passwordExpirationDays:
                    description: Number of days after which users will be forced to change their password.
                    type: integer
                type: object
          description: Successful operation
      summary: Update the login security settings for an organization
      tags:
        - organizations
        - configure
        - loginSecurity
  "/organizations/{organizationId}/networks":
    get:
      description: List the networks that the user has privileges on in an organization
      operationId: getOrganizationNetworks
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: An optional parameter that is the ID of a config template. Will return all networks bound to that template.
          in: query
          name: configTemplateId
          schema:
            type: string
        - description: An optional parameter to filter config template bound networks. If configTemplateId is set, this cannot be false.
          in: query
          name: isBoundToConfigTemplate
          schema:
            type: boolean
        - description: An optional parameter to filter networks by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
          explode: false
          in: query
          name: tags
          schema:
            items:
              type: string
            type: array
          style: form
        - description: An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return networks which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
          in: query
          name: tagsFilterType
          schema:
            enum:
              - withAllTags
              - withAnyTags
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - enrollmentString: my-enrollment-string
                      id: N_24329156
                      isBoundToConfigTemplate: false
                      name: Main Office
                      notes: Additional description of the network
                      organizationId: "2930418"
                      productTypes:
                        - appliance
                        - switch
                        - wireless
                      tags:
                        - tag1
                        - tag2
                      timeZone: America/Los_Angeles
                      url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                items:
                  properties:
                    enrollmentString:
                      description: Enrollment string for the network
                      type: string
                    id:
                      description: Network ID
                      type: string
                    isBoundToConfigTemplate:
                      description: If the network is bound to a config template
                      type: boolean
                    name:
                      description: Network name
                      type: string
                    notes:
                      description: Notes for the network
                      type: string
                    organizationId:
                      description: Organization ID
                      type: string
                    productTypes:
                      description: List of the product types that the network supports
                      items:
                        type: string
                      type: array
                    tags:
                      description: Network tags
                      items:
                        type: string
                      type: array
                    timeZone:
                      description: Timezone of the network
                      type: string
                    url:
                      description: URL to the network Dashboard UI
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the networks that the user has privileges on in an organization
      tags:
        - organizations
        - configure
        - networks
    post:
      description: Create a network
      operationId: createOrganizationNetwork
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                copyFromNetworkId: N_24329156
                name: Main Office
                notes: Additional description of the network
                productTypes:
                  - appliance
                  - switch
                  - wireless
                tags:
                  - tag1
                  - tag2
                timeZone: America/Los_Angeles
              properties:
                copyFromNetworkId:
                  description: The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.
                  type: string
                name:
                  description: The name of the new network
                  type: string
                notes:
                  description: Add any notes or additional information about this network here.
                  type: string
                productTypes:
                  description: The product type(s) of the new network. If more than one type is included, the network will be a combined network.
                  items:
                    enum:
                      - appliance
                      - camera
                      - cellularGateway
                      - sensor
                      - switch
                      - systemsManager
                      - wireless
                    type: string
                  type: array
                tags:
                  description: A list of tags to be applied to the network
                  items:
                    type: string
                  type: array
                timeZone:
                  description: The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>
                  type: string
              required:
                - name
                - productTypes
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    enrollmentString: my-enrollment-string
                    id: N_24329156
                    isBoundToConfigTemplate: false
                    name: Main Office
                    notes: Additional description of the network
                    organizationId: "2930418"
                    productTypes:
                      - appliance
                      - switch
                      - wireless
                    tags:
                      - tag1
                      - tag2
                    timeZone: America/Los_Angeles
                    url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                properties:
                  enrollmentString:
                    description: Enrollment string for the network
                    type: string
                  id:
                    description: Network ID
                    type: string
                  isBoundToConfigTemplate:
                    description: If the network is bound to a config template
                    type: boolean
                  name:
                    description: Network name
                    type: string
                  notes:
                    description: Notes for the network
                    type: string
                  organizationId:
                    description: Organization ID
                    type: string
                  productTypes:
                    description: List of the product types that the network supports
                    items:
                      type: string
                    type: array
                  tags:
                    description: Network tags
                    items:
                      type: string
                    type: array
                  timeZone:
                    description: Timezone of the network
                    type: string
                  url:
                    description: URL to the network Dashboard UI
                    type: string
                type: object
          description: Successful operation
      summary: Create a network
      tags:
        - organizations
        - configure
        - networks
  "/organizations/{organizationId}/networks/combine":
    post:
      description: Combine multiple networks into a single network
      operationId: combineOrganizationNetworks
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enrollmentString: my-enrollment-string
                name: Long Island Office
                networkIds:
                  - N_1234
                  - N_5678
              properties:
                enrollmentString:
                  description: A unique identifier which can be used for device enrollment or easy access through the Meraki SM Registration page or the Self Service Portal. Please note that changing this field may cause existing bookmarks to break. All networks that are part of this combined network will have their enrollment string appended by '-network_type'. If left empty, all exisitng enrollment strings will be deleted.
                  type: string
                name:
                  description: The name of the combined network
                  type: string
                networkIds:
                  description: A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network
                  items:
                    type: string
                  type: array
              required:
                - name
                - networkIds
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    resultingNetwork:
                      enrollmentString: my-enrollment-string
                      id: N_24329156
                      isBoundToConfigTemplate: false
                      name: Main Office
                      notes: Additional description of the network
                      organizationId: "2930418"
                      productTypes:
                        - appliance
                        - switch
                        - wireless
                      tags:
                        - tag1
                        - tag2
                      timeZone: America/Los_Angeles
                      url: https://n1.meraki.com//n//manage/nodes/list
              schema:
                properties:
                  resultingNetwork:
                    description: Network after the combination
                    properties:
                      enrollmentString:
                        description: Enrollment string for the network
                        type: string
                      id:
                        description: Network ID
                        type: string
                      isBoundToConfigTemplate:
                        description: If the network is bound to a config template
                        type: boolean
                      name:
                        description: Network name
                        type: string
                      notes:
                        description: Notes for the network
                        type: string
                      organizationId:
                        description: Organization ID
                        type: string
                      productTypes:
                        description: List of the product types that the network supports
                        items:
                          type: string
                        type: array
                      tags:
                        description: Network tags
                        items:
                          type: string
                        type: array
                      timeZone:
                        description: Timezone of the network
                        type: string
                      url:
                        description: URL to the network Dashboard UI
                        type: string
                    type: object
                type: object
          description: Successful operation
      summary: Combine multiple networks into a single network
      tags:
        - organizations
        - configure
        - networks
  "/organizations/{organizationId}/openapiSpec":
    get:
      description: Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON
      operationId: getOrganizationOpenapiSpec
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    info:
                      description: This collection of API calls provides an easy way to manage and monitor Cisco Meraki networks at scale
                      title: Meraki Dashboard API
                      version: v1
                    openapi: 3.0.1
                    paths:
                      /organizations:
                        get:
                          description: List the organizations that the user has privileges on
                          operationId: getOrganizations
                          responses:
                            "200":
                              description: Successful operation
                              examples:
                                application/json:
                                  - id: "2930418"
                                    name: My organization
              schema:
                type: object
          description: Successful operation
      summary: Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON
      tags:
        - organizations
        - monitor
        - openapiSpec
  "/organizations/{organizationId}/policyObjects":
    get:
      description: Lists Policy Objects belonging to the organization.
      operationId: getOrganizationPolicyObjects
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 10 - 5000. Default is 5000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - category: network
                      cidr: 10.0.0.0/24
                      created_at: 2018-05-12T00:00:00Z
                      groupIds: []
                      id: "1234"
                      name: Web Servers - Datacenter 10
                      networkIds: []
                      type: cidr
                      updated_at: 2018-05-12T00:00:00Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Lists Policy Objects belonging to the organization.
      tags:
        - organizations
        - configure
        - policyObjects
    post:
      description: Creates a new Policy Object.
      operationId: createOrganizationPolicyObject
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                category: network
                groupIds: []
                name: Web Servers - Datacenter 10
                type: cidr
              properties:
                category:
                  description: "Category of a policy object (one of: adaptivePolicy, network)"
                  type: string
                cidr:
                  description: CIDR Value of a policy object (e.g. 10.11.12.1/24")
                  type: string
                fqdn:
                  description: Fully qualified domain name of policy object (e.g. "example.com")
                  type: string
                groupIds:
                  description: The IDs of policy object groups the policy object belongs to
                  items:
                    type: integer
                  type: array
                ip:
                  description: IP Address of a policy object (e.g. "1.2.3.4")
                  type: string
                mask:
                  description: Mask of a policy object (e.g. "255.255.0.0")
                  type: string
                name:
                  description: Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
                  type: string
                type:
                  description: "Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr, fqdn, ipAndMask)"
                  type: string
              required:
                - name
                - category
                - type
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    category: network
                    cidr: 10.0.0.0/24
                    created_at: 2018-05-12T00:00:00Z
                    groupIds: []
                    id: "1234"
                    name: Web Servers - Datacenter 10
                    networkIds: []
                    type: cidr
                    updated_at: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Creates a new Policy Object.
      tags:
        - organizations
        - configure
        - policyObjects
  "/organizations/{organizationId}/policyObjects/groups":
    get:
      description: Lists Policy Object Groups belonging to the organization.
      operationId: getOrganizationPolicyObjectsGroups
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 10 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - category: NetworkObjectGroup
                      created_at: 2018-05-12T00:00:00Z
                      id: "1234"
                      name: Web Servers - Datacenter 10
                      networkIds: []
                      objectIds: []
                      updated_at: 2018-05-12T00:00:00Z
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Lists Policy Object Groups belonging to the organization.
      tags:
        - organizations
        - configure
        - policyObjects
        - groups
    post:
      description: Creates a new Policy Object Group.
      operationId: createOrganizationPolicyObjectsGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Web Servers - Datacenter 10
                objectIds: []
              properties:
                category:
                  description: "Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)"
                  type: string
                name:
                  description: A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
                  type: string
                objectIds:
                  description: "A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)"
                  items:
                    type: integer
                  type: array
              required:
                - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    category: NetworkObjectGroup
                    created_at: 2018-05-12T00:00:00Z
                    id: "1234"
                    name: Web Servers - Datacenter 10
                    networkIds: []
                    objectIds: []
                    updated_at: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Creates a new Policy Object Group.
      tags:
        - organizations
        - configure
        - policyObjects
        - groups
  "/organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}":
    delete:
      description: Deletes a Policy Object Group.
      operationId: deleteOrganizationPolicyObjectsGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: policyObjectGroupId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Deletes a Policy Object Group.
      tags:
        - organizations
        - configure
        - policyObjects
        - groups
    get:
      description: Shows details of a Policy Object Group.
      operationId: getOrganizationPolicyObjectsGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: policyObjectGroupId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    category: NetworkObjectGroup
                    created_at: 2018-05-12T00:00:00Z
                    id: "1234"
                    name: Web Servers - Datacenter 10
                    networkIds: []
                    objectIds: []
                    updated_at: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Shows details of a Policy Object Group.
      tags:
        - organizations
        - configure
        - policyObjects
        - groups
    put:
      description: Updates a Policy Object Group.
      operationId: updateOrganizationPolicyObjectsGroup
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: policyObjectGroupId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: Web Servers - Datacenter 10
                objectIds: []
              properties:
                name:
                  description: A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
                  type: string
                objectIds:
                  description: "A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)"
                  items:
                    type: integer
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    category: NetworkObjectGroup
                    created_at: 2018-05-12T00:00:00Z
                    id: "1234"
                    name: Web Servers - Datacenter 10
                    networkIds: []
                    objectIds: []
                    updated_at: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Updates a Policy Object Group.
      tags:
        - organizations
        - configure
        - policyObjects
        - groups
  "/organizations/{organizationId}/policyObjects/{policyObjectId}":
    delete:
      description: Deletes a Policy Object.
      operationId: deleteOrganizationPolicyObject
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: policyObjectId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Deletes a Policy Object.
      tags:
        - organizations
        - configure
        - policyObjects
    get:
      description: Shows details of a Policy Object.
      operationId: getOrganizationPolicyObject
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: policyObjectId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    category: network
                    cidr: 10.0.0.0/24
                    created_at: 2018-05-12T00:00:00Z
                    groupIds: []
                    id: "1234"
                    name: Web Servers - Datacenter 10
                    networkIds: []
                    type: cidr
                    updated_at: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Shows details of a Policy Object.
      tags:
        - organizations
        - configure
        - policyObjects
    put:
      description: Updates a Policy Object.
      operationId: updateOrganizationPolicyObject
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: policyObjectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                groupIds: []
                name: Web Servers - Datacenter 10
                type: cidr
              properties:
                cidr:
                  description: CIDR Value of a policy object (e.g. 10.11.12.1/24")
                  type: string
                fqdn:
                  description: Fully qualified domain name of policy object (e.g. "example.com")
                  type: string
                groupIds:
                  description: The IDs of policy object groups the policy object belongs to
                  items:
                    type: integer
                  type: array
                ip:
                  description: IP Address of a policy object (e.g. "1.2.3.4")
                  type: string
                mask:
                  description: Mask of a policy object (e.g. "255.255.0.0")
                  type: string
                name:
                  description: Name of a policy object, unique within the organization (alphanumeric, space, dash, or underscore characters only)
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    category: network
                    cidr: 10.0.0.0/24
                    created_at: 2018-05-12T00:00:00Z
                    groupIds: []
                    id: "1234"
                    name: Web Servers - Datacenter 10
                    networkIds: []
                    type: cidr
                    updated_at: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Updates a Policy Object.
      tags:
        - organizations
        - configure
        - policyObjects
  "/organizations/{organizationId}/saml":
    get:
      description: Returns the SAML SSO enabled settings for an organization.
      operationId: getOrganizationSaml
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
              schema:
                properties:
                  enabled:
                    description: Toggle depicting if SAML SSO settings are enabled
                    type: boolean
                type: object
          description: Successful operation
      summary: Returns the SAML SSO enabled settings for an organization.
      tags:
        - organizations
        - configure
        - saml
    put:
      description: Updates the SAML SSO enabled settings for an organization.
      operationId: updateOrganizationSaml
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                enabled: true
              properties:
                enabled:
                  description: Boolean for updating SAML SSO enabled settings.
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    enabled: true
              schema:
                properties:
                  enabled:
                    description: Toggle depicting if SAML SSO settings are enabled
                    type: boolean
                type: object
          description: Successful operation
      summary: Updates the SAML SSO enabled settings for an organization.
      tags:
        - organizations
        - configure
        - saml
  "/organizations/{organizationId}/saml/idps":
    get:
      description: List the SAML IdPs in your organization.
      operationId: getOrganizationSamlIdps
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - consumerUrl: https://n7.meraki.com/saml/login/XXX
                      idpId: "1284392014819"
                      sloLogoutUrl: https://somewhere.com
                      x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
              schema:
                items:
                  properties:
                    consumerUrl:
                      description: URL that is consuming SAML Identity Provider (IdP)
                      type: string
                    idpId:
                      description: ID associated with the SAML Identity Provider (IdP)
                      type: string
                    sloLogoutUrl:
                      description: Dashboard will redirect users to this URL when they sign out.
                      type: string
                    x509certSha1Fingerprint:
                      description: Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the SAML IdPs in your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
    post:
      description: Create a SAML IdP for your organization.
      operationId: createOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                sloLogoutUrl: https://somewhere.com
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
              properties:
                sloLogoutUrl:
                  description: Dashboard will redirect users to this URL when they sign out.
                  type: string
                x509certSha1Fingerprint:
                  description: Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
                  type: string
              required:
                - x509certSha1Fingerprint
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    - consumerUrl: https://n7.meraki.com/saml/login/XXX
                      idpId: "1284392014819"
                      sloLogoutUrl: https://somewhere.com
                      x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
              schema:
                items:
                  properties:
                    consumerUrl:
                      description: URL that is consuming SAML Identity Provider (IdP)
                      type: string
                    idpId:
                      description: ID associated with the SAML Identity Provider (IdP)
                      type: string
                    sloLogoutUrl:
                      description: Dashboard will redirect users to this URL when they sign out.
                      type: string
                    x509certSha1Fingerprint:
                      description: Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Create a SAML IdP for your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
  "/organizations/{organizationId}/saml/idps/{idpId}":
    delete:
      description: Remove a SAML IdP in your organization.
      operationId: deleteOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: idpId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Remove a SAML IdP in your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
    get:
      description: Get a SAML IdP from your organization.
      operationId: getOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: idpId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    consumerUrl: https://n7.meraki.com/saml/login/XXX
                    idpId: "1284392014819"
                    sloLogoutUrl: https://somewhere.com
                    x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
              schema:
                properties:
                  consumerUrl:
                    description: URL that is consuming SAML Identity Provider (IdP)
                    type: string
                  idpId:
                    description: ID associated with the SAML Identity Provider (IdP)
                    type: string
                  sloLogoutUrl:
                    description: Dashboard will redirect users to this URL when they sign out.
                    type: string
                  x509certSha1Fingerprint:
                    description: Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
                    type: string
                type: object
          description: Successful operation
      summary: Get a SAML IdP from your organization.
      tags:
        - organizations
        - configure
        - saml
        - idps
    put:
      description: Update a SAML IdP in your organization
      operationId: updateOrganizationSamlIdp
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: idpId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                sloLogoutUrl: https://somewhere.com
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
              properties:
                sloLogoutUrl:
                  description: Dashboard will redirect users to this URL when they sign out.
                  type: string
                x509certSha1Fingerprint:
                  description: Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - consumerUrl: https://n7.meraki.com/saml/login/XXX
                      idpId: "1284392014819"
                      sloLogoutUrl: https://somewhere.com
                      x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
              schema:
                items:
                  properties:
                    consumerUrl:
                      description: URL that is consuming SAML Identity Provider (IdP)
                      type: string
                    idpId:
                      description: ID associated with the SAML Identity Provider (IdP)
                      type: string
                    sloLogoutUrl:
                      description: Dashboard will redirect users to this URL when they sign out.
                      type: string
                    x509certSha1Fingerprint:
                      description: Fingerprint (SHA1) of the SAML certificate provided by your Identity Provider (IdP). This will be used for encryption / validation.
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: Update a SAML IdP in your organization
      tags:
        - organizations
        - configure
        - saml
        - idps
  "/organizations/{organizationId}/samlRoles":
    get:
      description: List the SAML roles for this organization
      operationId: getOrganizationSamlRoles
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "1284392014819"
                      networks:
                        - access: full
                          id: N_24329156
                      orgAccess: none
                      role: myrole
                      tags:
                        - access: read-only
                          tag: west
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: List the SAML roles for this organization
      tags:
        - organizations
        - configure
        - samlRoles
    post:
      description: Create a SAML role
      operationId: createOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                networks:
                  - access: full
                    id: N_24329156
                orgAccess: none
                role: myrole
                tags:
                  - access: read-only
                    tag: west
              properties:
                networks:
                  description: The list of networks that the SAML administrator has privileges on
                  items:
                    properties:
                      access:
                        description: The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'
                        enum:
                          - full
                          - guest-ambassador
                          - monitor-only
                          - read-only
                          - ssid-admin
                        type: string
                      id:
                        description: The network ID
                        type: string
                    required:
                      - id
                      - access
                    type: object
                  type: array
                orgAccess:
                  description: The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
                  enum:
                    - enterprise
                    - full
                    - none
                    - read-only
                  type: string
                role:
                  description: The role of the SAML administrator
                  type: string
                tags:
                  description: The list of tags that the SAML administrator has privleges on
                  items:
                    properties:
                      access:
                        description: The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
                        enum:
                          - full
                          - guest-ambassador
                          - monitor-only
                          - read-only
                        type: string
                      tag:
                        description: The name of the tag
                        type: string
                    required:
                      - tag
                      - access
                    type: object
                  type: array
              required:
                - role
                - orgAccess
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1284392014819"
                    networks:
                      - access: full
                        id: N_24329156
                    orgAccess: none
                    role: myrole
                    tags:
                      - access: read-only
                        tag: west
              schema:
                type: object
          description: Successful operation
      summary: Create a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
  "/organizations/{organizationId}/samlRoles/{samlRoleId}":
    delete:
      description: Remove a SAML role
      operationId: deleteOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: samlRoleId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Remove a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
    get:
      description: Return a SAML role
      operationId: getOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: samlRoleId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1284392014819"
                    networks:
                      - access: full
                        id: N_24329156
                    orgAccess: none
                    role: myrole
                    tags:
                      - access: read-only
                        tag: west
              schema:
                type: object
          description: Successful operation
      summary: Return a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
    put:
      description: Update a SAML role
      operationId: updateOrganizationSamlRole
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: samlRoleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                networks:
                  - access: full
                    id: N_24329156
                orgAccess: none
                role: myrole
                tags:
                  - access: read-only
                    tag: west
              properties:
                networks:
                  description: The list of networks that the SAML administrator has privileges on
                  items:
                    properties:
                      access:
                        description: The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'
                        enum:
                          - full
                          - guest-ambassador
                          - monitor-only
                          - read-only
                          - ssid-admin
                        type: string
                      id:
                        description: The network ID
                        type: string
                    required:
                      - id
                      - access
                    type: object
                  type: array
                orgAccess:
                  description: The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
                  enum:
                    - enterprise
                    - full
                    - none
                    - read-only
                  type: string
                role:
                  description: The role of the SAML administrator
                  type: string
                tags:
                  description: The list of tags that the SAML administrator has privleges on
                  items:
                    properties:
                      access:
                        description: The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
                        enum:
                          - full
                          - guest-ambassador
                          - monitor-only
                          - read-only
                        type: string
                      tag:
                        description: The name of the tag
                        type: string
                    required:
                      - tag
                      - access
                    type: object
                  type: array
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1284392014819"
                    networks:
                      - access: full
                        id: N_24329156
                    orgAccess: none
                    role: myrole
                    tags:
                      - access: read-only
                        tag: west
              schema:
                properties:
                  id:
                    description: ID associated with the SAML role
                    type: string
                  networks:
                    description: The list of networks that the SAML administrator has privileges on
                    items:
                      properties:
                        access:
                          description: The privilege of the SAML administrator on the network
                          type: string
                        id:
                          description: The network ID
                          type: string
                      type: object
                    type: array
                  orgAccess:
                    description: The privilege of the SAML administrator on the organization
                    type: string
                  role:
                    description: The role of the SAML administrator
                    type: string
                  tags:
                    description: The list of tags that the SAML administrator has privleges on
                    items:
                      properties:
                        access:
                          description: The privilege of the SAML administrator on the tag
                          type: string
                        tag:
                          description: The name of the tag
                          type: string
                      type: object
                    type: array
                type: object
          description: Successful operation
      summary: Update a SAML role
      tags:
        - organizations
        - configure
        - samlRoles
  "/organizations/{organizationId}/sensor/readings/history":
    get:
      description: Return all reported readings from sensors in a given timespan, sorted by timestamp
      operationId: getOrganizationSensorReadingsHistory
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 365 days and 6 hours from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 7 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 2 hours.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: Optional parameter to filter readings by network.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter readings by sensor.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
          explode: false
          in: query
          name: metrics
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - battery:
                        percentage: 91
                      button:
                        pressType: short
                      door:
                        open: true
                      humidity:
                        relativePercentage: 34
                      indoorAirQuality:
                        score: 89
                      metric: temperature
                      network:
                        id: N_24329156
                        name: Main Office
                      noise:
                        ambient:
                          level: 45
                      pm25:
                        concentration: 100
                      serial: Q234-ABCD-5678
                      temperature:
                        celsius: 25.45
                        fahrenheit: 77.81
                      ts: 2021-10-18T23:54:48Z
                      tvoc:
                        concentration: 100
                      water:
                        present: true
              schema:
                items:
                  properties:
                    battery:
                      description: Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
                      properties:
                        percentage:
                          description: Remaining battery life.
                          type: integer
                      type: object
                    button:
                      description: Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
                      properties:
                        pressType:
                          description: Type of button press that occurred.
                          enum:
                            - long
                            - short
                          type: string
                      type: object
                    door:
                      description: Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
                      properties:
                        open:
                          description: True if the door is open.
                          type: boolean
                      type: object
                    humidity:
                      description: Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
                      properties:
                        relativePercentage:
                          description: Humidity reading in %RH.
                          type: integer
                      type: object
                    indoorAirQuality:
                      description: Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
                      properties:
                        score:
                          description: Indoor air quality score between 0 and 100.
                          type: integer
                      type: object
                    metric:
                      description: Type of sensor reading.
                      enum:
                        - battery
                        - button
                        - door
                        - humidity
                        - indoorAirQuality
                        - noise
                        - pm25
                        - temperature
                        - tvoc
                        - water
                      type: string
                    network:
                      description: Network to which the sensor belongs.
                      properties:
                        id:
                          description: ID of the network.
                          type: string
                        name:
                          description: Name of the network.
                          type: string
                      type: object
                    noise:
                      description: Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
                      properties:
                        ambient:
                          description: Ambient noise reading.
                          properties:
                            level:
                              description: Ambient noise reading in adjusted decibels.
                              type: integer
                          type: object
                      type: object
                    pm25:
                      description: Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
                      properties:
                        concentration:
                          description: PM2.5 reading in micrograms per cubic meter.
                          type: integer
                      type: object
                    serial:
                      description: Serial number of the sensor that took the reading.
                      type: string
                    temperature:
                      description: Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
                      properties:
                        celsius:
                          description: Temperature reading in degrees Celsius.
                          format: float
                          type: number
                        fahrenheit:
                          description: Temperature reading in degrees Fahrenheit.
                          format: float
                          type: number
                      type: object
                    ts:
                      description: Time at which the reading occurred, in ISO8601 format.
                      type: string
                    tvoc:
                      description: Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
                      properties:
                        concentration:
                          description: TVOC reading in micrograms per cubic meter.
                          type: integer
                      type: object
                    water:
                      description: Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
                      properties:
                        present:
                          description: True if water is detected.
                          type: boolean
                      type: object
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return all reported readings from sensors in a given timespan, sorted by timestamp
      tags:
        - sensor
        - monitor
        - readings
        - history
  "/organizations/{organizationId}/sensor/readings/latest":
    get:
      description: Return the latest available reading for each metric from each sensor, sorted by sensor serial
      operationId: getOrganizationSensorReadingsLatest
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 100. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter readings by network.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter readings by sensor.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
          explode: false
          in: query
          name: metrics
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - network:
                        id: N_24329156
                        name: Main Office
                      readings:
                        - battery:
                            percentage: 91
                          button:
                            pressType: short
                          door:
                            open: true
                          humidity:
                            relativePercentage: 34
                          indoorAirQuality:
                            score: 89
                          metric: temperature
                          noise:
                            ambient:
                              level: 45
                          pm25:
                            concentration: 100
                          temperature:
                            celsius: 25.45
                            fahrenheit: 77.81
                          ts: 2021-10-18T23:54:48Z
                          tvoc:
                            concentration: 100
                          water:
                            present: true
                      serial: Q234-ABCD-5678
              schema:
                items:
                  properties:
                    network:
                      description: Network to which the sensor belongs.
                      properties:
                        id:
                          description: ID of the network.
                          type: string
                        name:
                          description: Name of the network.
                          type: string
                      type: object
                    readings:
                      description: Array of latest readings from the sensor. Each object represents a single reading for a single metric.
                      items:
                        properties:
                          battery:
                            description: Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
                            properties:
                              percentage:
                                description: Remaining battery life.
                                type: integer
                            type: object
                          button:
                            description: Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
                            properties:
                              pressType:
                                description: Type of button press that occurred.
                                enum:
                                  - long
                                  - short
                                type: string
                            type: object
                          door:
                            description: Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
                            properties:
                              open:
                                description: True if the door is open.
                                type: boolean
                            type: object
                          humidity:
                            description: Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
                            properties:
                              relativePercentage:
                                description: Humidity reading in %RH.
                                type: integer
                            type: object
                          indoorAirQuality:
                            description: Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
                            properties:
                              score:
                                description: Indoor air quality score between 0 and 100.
                                type: integer
                            type: object
                          metric:
                            description: Type of sensor reading.
                            enum:
                              - battery
                              - button
                              - door
                              - humidity
                              - indoorAirQuality
                              - noise
                              - pm25
                              - temperature
                              - tvoc
                              - water
                            type: string
                          noise:
                            description: Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
                            properties:
                              ambient:
                                description: Ambient noise reading.
                                properties:
                                  level:
                                    description: Ambient noise reading in adjusted decibels.
                                    type: integer
                                type: object
                            type: object
                          pm25:
                            description: Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
                            properties:
                              concentration:
                                description: PM2.5 reading in micrograms per cubic meter.
                                type: integer
                            type: object
                          temperature:
                            description: Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
                            properties:
                              celsius:
                                description: Temperature reading in degrees Celsius.
                                format: float
                                type: number
                              fahrenheit:
                                description: Temperature reading in degrees Fahrenheit.
                                format: float
                                type: number
                            type: object
                          ts:
                            description: Time at which the reading occurred, in ISO8601 format.
                            type: string
                          tvoc:
                            description: Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
                            properties:
                              concentration:
                                description: TVOC reading in micrograms per cubic meter.
                                type: integer
                            type: object
                          water:
                            description: Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
                            properties:
                              present:
                                description: True if water is detected.
                                type: boolean
                            type: object
                        type: object
                      type: array
                    serial:
                      description: Serial number of the sensor that took the readings.
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the latest available reading for each metric from each sensor, sorted by sensor serial
      tags:
        - sensor
        - monitor
        - readings
        - latest
  "/organizations/{organizationId}/sm/apnsCert":
    get:
      description: Get the organization's APNS certificate
      operationId: getOrganizationSmApnsCert
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    certificate: |2
                                -----BEGIN CERTIFICATE-----
                                MIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV
                                BAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv
                                biBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y
                                aXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx
                                ODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw
                                cGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1
                                MTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj
                                YjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
                                ggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj
                                Qd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY
                                TrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/
                                hbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK
                                I/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA
                                T+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA
                                MB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC
                                AQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug
                                b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh
                                bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv
                                bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj
                                YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93
                                d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG
                                AQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh
                                aTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE
                                AwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh
                                80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z
                                exEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv
                                bA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg
                                fQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr
                                olnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s
                                FjDvo6WUkaqMHA==
                                -----END CERTIFICATE-----
              schema:
                properties:
                  certificate:
                    description: Organization APNS Certificate used by devices to communication with Apple
                    type: string
                type: object
          description: Successful operation
      summary: Get the organization's APNS certificate
      tags:
        - sm
        - configure
        - apnsCert
  "/organizations/{organizationId}/sm/vppAccounts":
    get:
      description: List the VPP accounts in the organization
      operationId: getOrganizationSmVppAccounts
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: "1284392014819"
                      vppServiceToken: eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=
              schema:
                items:
                  properties:
                    id:
                      description: The id of the VPP Account
                      type: string
                    vppServiceToken:
                      description: The VPP Account's Service Token
                      type: string
                  type: object
                type: array
          description: Successful operation
      summary: List the VPP accounts in the organization
      tags:
        - sm
        - configure
        - vppAccounts
  "/organizations/{organizationId}/sm/vppAccounts/{vppAccountId}":
    get:
      description: Get a hash containing the unparsed token of the VPP account with the given ID
      operationId: getOrganizationSmVppAccount
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: vppAccountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    id: "1284392014819"
                    vppServiceToken: eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=
              schema:
                properties:
                  id:
                    description: The id of the VPP Account
                    type: string
                  vppServiceToken:
                    description: The VPP Account's Service Token
                    type: string
                type: object
          description: Successful operation
      summary: Get a hash containing the unparsed token of the VPP account with the given ID
      tags:
        - sm
        - configure
        - vppAccounts
  "/organizations/{organizationId}/snmp":
    get:
      description: Return the SNMP settings for an organization
      operationId: getOrganizationSnmp
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    hostname: snmp.meraki.com
                    peerIps:
                      - 123.123.123.1
                    port: 443
                    v2cEnabled: false
                    v3AuthMode: SHA
                    v3Enabled: true
                    v3PrivMode: AES128
              schema:
                type: object
          description: Successful operation
      summary: Return the SNMP settings for an organization
      tags:
        - organizations
        - configure
        - snmp
    put:
      description: Update the SNMP settings for an organization
      operationId: updateOrganizationSnmp
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                peerIps:
                  - 123.123.123.1
                v2cEnabled: false
                v3AuthMode: SHA
                v3Enabled: true
                v3PrivMode: AES128
              properties:
                peerIps:
                  description: The list of IPv4 addresses that are allowed to access the SNMP server.
                  items:
                    type: string
                  type: array
                v2cEnabled:
                  description: Boolean indicating whether SNMP version 2c is enabled for the organization.
                  type: boolean
                v3AuthMode:
                  description: The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
                  enum:
                    - MD5
                    - SHA
                  type: string
                v3AuthPass:
                  description: The SNMP version 3 authentication password. Must be at least 8 characters if specified.
                  type: string
                v3Enabled:
                  description: Boolean indicating whether SNMP version 3 is enabled for the organization.
                  type: boolean
                v3PrivMode:
                  description: The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
                  enum:
                    - AES128
                    - DES
                  type: string
                v3PrivPass:
                  description: The SNMP version 3 privacy password. Must be at least 8 characters if specified.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    hostname: snmp.meraki.com
                    peerIps:
                      - 123.123.123.1
                    port: 443
                    v2cEnabled: false
                    v3AuthMode: SHA
                    v3Enabled: true
                    v3PrivMode: AES128
              schema:
                type: object
          description: Successful operation
      summary: Update the SNMP settings for an organization
      tags:
        - organizations
        - configure
        - snmp
  "/organizations/{organizationId}/summary/top/appliances/byUtilization":
    get:
      description: Return the top 10 appliances sorted by utilization over given time range.
      operationId: getOrganizationSummaryTopAppliancesByUtilization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - mac: 00:11:22:33:44:55
                      model: MX
                      name: My appliance
                      network:
                        id: N_24329156
                        name: Main Office
                      serial: Q234-ABCD-5678
                      utilization:
                        average:
                          percentage: 7.3
              schema:
                items:
                  properties:
                    mac:
                      description: Mac address of the appliance
                      type: string
                    model:
                      description: Model of the appliance
                      type: string
                    name:
                      description: Name of the appliance
                      type: string
                    network:
                      description: Network info
                      properties:
                        id:
                          description: Network id
                          type: string
                        name:
                          description: Network name
                          type: string
                      type: object
                    serial:
                      description: Serial number of the appliance
                      type: string
                    utilization:
                      description: Utilization of the appliance
                      properties:
                        average:
                          description: Average utilization of the appliance
                          properties:
                            percentage:
                              description: Average percentage utilization of the appliance
                              format: float
                              type: number
                          type: object
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return the top 10 appliances sorted by utilization over given time range.
      tags:
        - organizations
        - monitor
        - summary
        - top
        - appliances
        - byUtilization
  "/organizations/{organizationId}/summary/top/clients/byUsage":
    get:
      description: Return metrics for organization's top 10 clients by data usage (in mb) over given time range.
      operationId: getOrganizationSummaryTopClientsByUsage
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - id: k74272e
                      mac: 22:33:44:55:66:77
                      name: Office Switch
                      network:
                        id: N_24329156
                        name: Main Office
                      usage:
                        downstream: 10000
                        percentage: 80.2
                        total: 18000
                        upstream: 8000
              schema:
                items:
                  properties:
                    id:
                      description: ID of client
                      type: string
                    mac:
                      description: MAC address of client
                      type: string
                    name:
                      description: Name of client
                      type: string
                    network:
                      description: ""
                      properties:
                        id:
                          description: ID of network
                          type: string
                        name:
                          description: Name of network
                          type: string
                      type: object
                    usage:
                      description: Data usage information
                      properties:
                        downstream:
                          description: Downstream data usage by client
                          format: float
                          type: number
                        percentage:
                          description: Percentage of total data usage by client
                          format: float
                          type: number
                        total:
                          description: Total data usage by client
                          format: float
                          type: number
                        upstream:
                          description: Upstream data usage by client
                          format: float
                          type: number
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 clients by data usage (in mb) over given time range.
      tags:
        - organizations
        - monitor
        - summary
        - top
        - clients
        - byUsage
  "/organizations/{organizationId}/summary/top/clients/manufacturers/byUsage":
    get:
      description: Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer.
      operationId: getOrganizationSummaryTopClientsManufacturersByUsage
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clients:
                        counts:
                          total: 3
                      name: Manufacturer Name
                      usage:
                        downstream: 8000
                        total: 9000
                        upstream: 1000
              schema:
                items:
                  properties:
                    clients:
                      description: Clients info
                      properties:
                        counts:
                          description: Counts of clients
                          properties:
                            total:
                              description: Total counts of clients
                              type: integer
                          type: object
                      type: object
                    name:
                      description: Name of the manufacturer
                      type: string
                    usage:
                      description: Clients usage
                      properties:
                        downstream:
                          description: Downstream data usage by client
                          format: float
                          type: number
                        total:
                          description: Total data usage by client
                          format: float
                          type: number
                        upstream:
                          description: Upstream data usage by client
                          format: float
                          type: number
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer.
      tags:
        - organizations
        - monitor
        - summary
        - top
        - clients
        - manufacturers
        - byUsage
  "/organizations/{organizationId}/summary/top/devices/byUsage":
    get:
      description: Return metrics for organization's top 10 devices sorted by data usage over given time range. Default unit is megabytes.
      operationId: getOrganizationSummaryTopDevicesByUsage
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clients:
                        counts:
                          total: 4
                      mac: 00:11:22:33:44:55
                      model: MR34
                      name: My AP
                      network:
                        id: N_24329156
                        name: Main Office
                      productType: switch
                      serial: Q234-ABCD-5678
                      usage:
                        percentage: 80.223456789
                        total: 18000.111
              schema:
                items:
                  properties:
                    clients:
                      description: Clients
                      properties:
                        counts:
                          description: Counts of clients
                          properties:
                            total:
                              description: Total counts of clients
                              type: integer
                          type: object
                      type: object
                    mac:
                      description: Mac address of the device
                      type: string
                    model:
                      description: Model of the device
                      type: string
                    name:
                      description: Name of the device
                      type: string
                    network:
                      description: Network info
                      properties:
                        id:
                          description: Network id
                          type: string
                        name:
                          description: Network name
                          type: string
                      type: object
                    productType:
                      description: Product type of the device
                      type: string
                    serial:
                      description: Serial number of the device
                      type: string
                    usage:
                      description: Data usage of the device
                      properties:
                        percentage:
                          description: Data usage of the device by percentage
                          format: float
                          type: number
                        total:
                          description: Total data usage of the device
                          format: float
                          type: number
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 devices sorted by data usage over given time range
      tags:
        - organizations
        - monitor
        - summary
        - top
        - devices
        - byUsage
  "/organizations/{organizationId}/summary/top/devices/models/byUsage":
    get:
      description: Return metrics for organization's top 10 device models sorted by data usage over given time range. Default unit is megabytes.
      operationId: getOrganizationSummaryTopDevicesModelsByUsage
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - count: 2
                      model: MR34
                      usage:
                        average: 1000
                        total: 2000
              schema:
                items:
                  properties:
                    count:
                      description: Total number of devices per model
                      type: integer
                    model:
                      description: The device model
                      type: string
                    usage:
                      description: Usage info in megabytes
                      properties:
                        average:
                          description: Average usage in megabytes
                          format: float
                          type: number
                        total:
                          description: Total usage in megabytes
                          format: float
                          type: number
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 device models sorted by data usage over given time range
      tags:
        - organizations
        - monitor
        - summary
        - top
        - devices
        - models
        - byUsage
  "/organizations/{organizationId}/summary/top/ssids/byUsage":
    get:
      description: Return metrics for organization's top 10 ssids by data usage over given time range. Default unit is megabytes.
      operationId: getOrganizationSummaryTopSsidsByUsage
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - clients:
                        counts:
                          total: 4
                      name: My SSID
                      usage:
                        downstream: 10000
                        percentage: 80.223456789
                        total: 18000
                        upstream: 8000
              schema:
                items:
                  properties:
                    clients:
                      description: Clients info of the SSID
                      properties:
                        counts:
                          description: Counts of the clients
                          properties:
                            total:
                              description: Total counts of the clients
                              type: integer
                          type: object
                      type: object
                    name:
                      description: Name of the SSID
                      type: string
                    usage:
                      description: Date usage of the SSID, in megabytes
                      properties:
                        downstream:
                          description: Downstream usage of the SSID
                          format: float
                          type: number
                        percentage:
                          description: Percentage usage of the SSID
                          format: float
                          type: number
                        total:
                          description: Total usage of the SSID
                          format: float
                          type: number
                        upstream:
                          description: Upstream usage of the SSID
                          format: float
                          type: number
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 ssids by data usage over given time range
      tags:
        - organizations
        - monitor
        - summary
        - top
        - ssids
        - byUsage
  "/organizations/{organizationId}/summary/top/switches/byEnergyUsage":
    get:
      description: Return metrics for organization's top 10 switches by energy usage over given time range. Default unit is joules.
      operationId: getOrganizationSummaryTopSwitchesByEnergyUsage
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - mac: 00:11:22:33:44:55
                      model: MS
                      name: My switch
                      network:
                        id: N_24329156
                        name: Main Office
                      usage:
                        total: 800.021
              schema:
                items:
                  properties:
                    mac:
                      description: Mac address of the switch
                      type: string
                    model:
                      description: Model of the switch
                      type: string
                    name:
                      description: Name of the switch
                      type: string
                    network:
                      description: Network info
                      properties:
                        id:
                          description: Network id
                          type: string
                        name:
                          description: Network name
                          type: string
                      type: object
                    usage:
                      description: Energy usage of the switch
                      properties:
                        total:
                          description: Total energy usage of the switch
                          format: float
                          type: number
                      type: object
                  type: object
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 switches by energy usage over given time range
      tags:
        - organizations
        - monitor
        - summary
        - top
        - switches
        - byEnergyUsage
  "/organizations/{organizationId}/switch/devices/clone":
    post:
      description: "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches. Cloned settings include: Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port Mirroring"
      operationId: cloneOrganizationSwitchDevices
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                sourceSerial: Q234-ABCD-5678
                targetSerials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
              properties:
                sourceSerial:
                  description: Serial number of the source switch (must be on a network not bound to a template)
                  type: string
                targetSerials:
                  description: Array of serial numbers of one or more target switches (must be on a network not bound to a template)
                  items:
                    type: string
                  type: array
              required:
                - sourceSerial
                - targetSerials
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    sourceSerial: Q234-ABCD-5678
                    targetSerials:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
              schema:
                type: object
          description: Successful operation
      summary: Clone port-level and some switch-level configuration settings from a source switch to one or more target switches
      tags:
        - switch
        - configure
        - devices
  "/organizations/{organizationId}/switch/ports/bySwitch":
    get:
      description: List the switchports in an organization by switch
      operationId: getOrganizationSwitchPortsBySwitch
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 50. Default is 50.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: Optional parameter to filter switchports by network.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter switchports belonging to the specified switchport profiles.
          explode: false
          in: query
          name: portProfileIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter switchports belonging to switches by name. All returned switches will have a name that contains the search term or is an exact match.
          in: query
          name: name
          schema:
            type: string
        - description: Optional parameter to filter switchports belonging to switches by MAC address. All returned switches will have a MAC address that contains the search term or is an exact match.
          in: query
          name: mac
          schema:
            type: string
        - description: Optional parameter to filter switchports by one or more MAC addresses belonging to devices. All switchports returned belong to MAC addresses of switches that are an exact match.
          explode: false
          in: query
          name: macs
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter switchports belonging to switches by serial number. All returned switches will have a serial number that contains the search term or is an exact match.
          in: query
          name: serial
          schema:
            type: string
        - description: Optional parameter to filter switchports belonging to switches with one or more serial numbers. All switchports returned belong to serial numbers of switches that are an exact match.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Optional parameter to filter results by switches where the configuration has been updated after the given timestamp.
          in: query
          name: configurationUpdatedAfter
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - mac: 00:11:22:33:44:55
                      model: MS
                      name: My switch
                      network:
                        id: N_24329156
                        name: Main Office
                      ports:
                        - accessPolicyType: Sticky MAC allow list
                          allowedVlans: 1,3,5-10
                          enabled: true
                          linkNegotiation: Auto negotiate
                          name: My switch port
                          poeEnabled: true
                          portId: "1"
                          rstpEnabled: true
                          stickyMacAllowList:
                            - 34:56:fe:ce:8e:b0
                            - 34:56:fe:ce:8e:b1
                          stickyMacAllowListLimit: 5
                          stpGuard: disabled
                          tags:
                            - tag1
                            - tag2
                          type: access
                          vlan: 10
                          voiceVlan: 20
                      serial: Q234-ABCD-5678
              schema:
                items:
                  properties:
                    mac:
                      description: MAC address of the switch
                      type: string
                    model:
                      description: Model of the switch
                      type: string
                    name:
                      description: Name of the switch
                      type: string
                    network:
                      description: The network that the switch belongs to
                      properties:
                        id:
                          description: ID of the network
                          type: string
                        name:
                          description: Name of the network
                          type: string
                      type: object
                    ports:
                      description: Ports belonging to the switch
                      items:
                        properties:
                          accessPolicyType:
                            description: The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                            enum:
                              - Custom access policy
                              - MAC allow list
                              - Open
                              - Sticky MAC allow list
                            type: string
                          allowedVlans:
                            description: The VLANs allowed on the switch port. Only applicable to trunk ports.
                            type: string
                          enabled:
                            description: The status of the switch port.
                            type: boolean
                          linkNegotiation:
                            description: The link speed for the switch port.
                            type: string
                          name:
                            description: The name of the switch port.
                            type: string
                          poeEnabled:
                            description: The PoE status of the switch port.
                            type: boolean
                          portId:
                            description: The identifier of the switch port.
                            type: string
                          rstpEnabled:
                            description: The rapid spanning tree protocol status.
                            type: boolean
                          stickyMacAllowList:
                            description: The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                            items:
                              type: string
                            type: array
                          stickyMacAllowListLimit:
                            description: The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
                            type: integer
                          stpGuard:
                            description: The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
                            enum:
                              - bpdu guard
                              - disabled
                              - loop guard
                              - root guard
                            type: string
                          tags:
                            description: The list of tags of the switch port.
                            items:
                              type: string
                            type: array
                          type:
                            description: The type of the switch port ('trunk' or 'access').
                            enum:
                              - access
                              - trunk
                            type: string
                          vlan:
                            description: The VLAN of the switch port. A null value will clear the value set for trunk ports.
                            type: integer
                          voiceVlan:
                            description: The voice VLAN of the switch port. Only applicable to access ports.
                            type: integer
                        type: object
                      type: array
                    serial:
                      description: Serial of the switch
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the switchports in an organization by switch
      tags:
        - switch
        - configure
        - ports
        - bySwitch
  "/organizations/{organizationId}/uplinks/statuses":
    get:
      description: List the uplink status of every Meraki MX, MG and Z series devices in the organization
      operationId: getOrganizationUplinksStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: A list of network IDs. The returned devices will be filtered to only include these networks.
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of serial numbers. The returned devices will be filtered to only include these serials.
          explode: false
          in: query
          name: serials
          schema:
            items:
              type: string
            type: array
          style: form
        - description: A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
          explode: false
          in: query
          name: iccids
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - lastReportedAt: 2018-02-11T00:00:00Z
                      model: MX68C
                      networkId: N_24329156
                      serial: Q234-ABCD-5678
                      uplinks:
                        - apn: internet
                          connectionType: 4g
                          dns1: 111.111.111.111
                          dns2: 222.222.222.222
                          gateway: 1.2.3.5
                          iccid: "123456789"
                          interface: wan1
                          ip: 1.2.3.4
                          ipAssignedBy: static
                          primaryDns: 8.8.8.8
                          provider: at&t
                          publicIp: 123.123.123.1
                          secondaryDns: 8.8.4.4
                          signalStat:
                            rsrp: "-120"
                            rsrq: "-13"
                          signalType: 4G
                          status: active
              schema:
                items:
                  properties:
                    lastReportedAt:
                      description: Last reported time for the device
                      format: date-time
                      type: string
                    model:
                      description: The uplink model
                      type: string
                    networkId:
                      description: Network identifier
                      type: string
                    serial:
                      description: The uplink serial
                      type: string
                    uplinks:
                      description: Uplinks
                      items:
                        properties:
                          apn:
                            description: Access Point Name
                            type: string
                          connectionType:
                            description: Connection Type
                            type: string
                          dns1:
                            description: Primary DNS IP
                            type: string
                          dns2:
                            description: Secondary DNS IP
                            type: string
                          gateway:
                            description: Gateway IP
                            type: string
                          iccid:
                            description: Integrated Circuit Card Identification Number
                            type: string
                          interface:
                            description: Uplink interface
                            enum:
                              - cellular
                              - wan1
                              - wan2
                            type: string
                          ip:
                            description: Uplink IP
                            type: string
                          ipAssignedBy:
                            description: The way in which the IP is assigned
                            type: string
                          primaryDns:
                            description: Primary DNS IP
                            type: string
                          provider:
                            description: Network Provider
                            type: string
                          publicIp:
                            description: Public IP
                            type: string
                          secondaryDns:
                            description: Secondary DNS IP
                            type: string
                          signalStat:
                            description: Tower Signal Status
                            properties:
                              rsrp:
                                description: Reference Signal Received Power
                                type: string
                              rsrq:
                                description: Reference Signal Received Quality
                                type: string
                            type: object
                          signalType:
                            description: Signal Type
                            type: string
                          status:
                            description: Uplink status
                            enum:
                              - active
                              - connecting
                              - failed
                              - not connected
                              - ready
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the uplink status of every Meraki MX, MG and Z series devices in the organization
      tags:
        - organizations
        - monitor
        - uplinks
        - statuses
  "/organizations/{organizationId}/users/{userId}":
    delete:
      description: Delete a user and all of its authentication methods.
      operationId: deleteOrganizationUser
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful operation
      summary: Delete a user and all of its authentication methods.
      tags:
        - organizations
        - configure
        - users
  "/organizations/{organizationId}/webhooks/alertTypes":
    get:
      description: Return a list of alert types to be used with managing webhook alerts
      operationId: getOrganizationWebhooksAlertTypes
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: Filter sample alerts to a specific product type
          in: query
          name: productType
          schema:
            enum:
              - appliance
              - camera
              - cellularGateway
              - health
              - platform
              - sensor
              - sm
              - switch
              - wireless
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - alertData: {}
                      alertId: "0000000000000000"
                      alertLevel: warning
                      alertType: APs went down
                      alertTypeId: stopped_reporting
                      deviceMac: 00:11:22:33:44:55
                      deviceModel: MR34
                      deviceName: My AP
                      deviceSerial: Q234-ABCD-5678
                      deviceTags:
                        - tag1
                        - tag2
                      deviceUrl: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                      enrollmentString: my-enrollment-string
                      networkId: N_24329156
                      networkName: Main Office
                      networkUrl: https://n1.meraki.com//n//manage/nodes/list
                      notes: Additional description of the network
                      occurredAt: 2018-02-11T00:00:00.123450Z
                      organizationId: "2930418"
                      organizationName: My organization
                      organizationUrl: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                      productTypes:
                        - appliance
                        - switch
                        - wireless
                      sentAt: 2020-07-11T00:03:12.331789Z
                      sharedSecret: secret
                      version: "0.1"
              schema:
                items:
                  type: object
                type: array
          description: Successful operation
      summary: Return a list of alert types to be used with managing webhook alerts
      tags:
        - organizations
        - monitor
        - webhooks
        - alertTypes
  "/organizations/{organizationId}/webhooks/logs":
    get:
      description: Return the log of webhook POSTs sent
      operationId: getOrganizationWebhooksLogs
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The beginning of the timespan for the data. The maximum lookback period is 90 days from today.
          in: query
          name: t0
          schema:
            type: string
        - description: The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
          in: query
          name: t1
          schema:
            type: string
        - description: The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
          in: query
          name: timespan
          schema:
            format: float
            type: number
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: The URL the webhook was sent to
          in: query
          name: url
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - alertType: Settings changed
                      loggedAt: 2019-01-01T13:37:28.423456Z
                      networkId: N_24329156
                      organizationId: "2930418"
                      responseCode: 200
                      responseDuration: 244
                      sentAt: 2019-01-01T13:37:28.123456Z
                      url: https://www.example.com/path
              schema:
                items:
                  properties:
                    alertType:
                      description: Type of alert that the webhook is delivering
                      type: string
                    loggedAt:
                      description: When the webhook log was created, in ISO8601 format
                      format: date-time
                      type: string
                    networkId:
                      description: Network ID for the webhook log
                      type: string
                    organizationId:
                      description: ID for the webhook log's organization
                      type: string
                    responseCode:
                      description: Response code from the webhook
                      type: integer
                    responseDuration:
                      description: Duration of the response, in milliseconds
                      type: integer
                    sentAt:
                      description: When the webhook was sent, in ISO8601 format
                      format: date-time
                      type: string
                    url:
                      description: URL where the webhook was sent
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the log of webhook POSTs sent
      tags:
        - organizations
        - monitor
        - webhooks
        - logs
  "/organizations/{organizationId}/wireless/devices/ethernet/statuses":
    get:
      description: Endpoint to see power status for wireless devices
      operationId: getOrganizationWirelessDevicesEthernetStatuses
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
        - description: The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
          in: query
          name: perPage
          schema:
            type: integer
        - description: A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: startingAfter
          schema:
            type: string
        - description: A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
          in: query
          name: endingBefore
          schema:
            type: string
        - description: "A list of Meraki network IDs to filter results to contain only specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456"
          explode: false
          in: query
          name: networkIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    - aggregation:
                        enabled: true
                        speed: 10000
                      name: My appliance
                      network:
                        id: N_24329156
                      ports:
                        - linkNegotiation:
                            duplex: full
                            speed: 5000
                          name: Ethernet 0
                          poe:
                            standard: 802.3at
                      power:
                        ac:
                          isConnected: false
                        mode: full
                        poe:
                          isConnected: true
                      serial: Q234-ABCD-5678
              schema:
                items:
                  properties:
                    aggregation:
                      description: Aggregation details object
                      properties:
                        enabled:
                          description: Link Aggregation enabled flag
                          type: boolean
                        speed:
                          description: Link Aggregation speed
                          type: integer
                      type: object
                    name:
                      description: The name of the AP
                      type: string
                    network:
                      description: Network details object
                      properties:
                        id:
                          description: The network ID the AP is associated to
                          type: string
                      type: object
                    ports:
                      description: List of port details
                      items:
                        properties:
                          linkNegotiation:
                            description: Link negotiation details object for the port
                            properties:
                              duplex:
                                description: The duplex mode of the port. Can be 'full' or 'half'
                                type: string
                              speed:
                                description: The speed of the port
                                type: integer
                            type: object
                          name:
                            description: Label of the port
                            type: string
                          poe:
                            description: PoE details object for the port
                            properties:
                              standard:
                                description: The PoE Standard for the port. Can be '802.3at', '802.3af', '802.3bt', or null
                                type: string
                            type: object
                        type: object
                      type: array
                    power:
                      description: Power details object
                      properties:
                        ac:
                          description: AC power details object
                          properties:
                            isConnected:
                              description: AC power connected
                              type: boolean
                          type: object
                        mode:
                          description: The PoE power mode for the AP. Can be 'full' or 'low'
                          type: string
                        poe:
                          description: PoE power details object
                          properties:
                            isConnected:
                              description: PoE power connected
                              type: boolean
                          type: object
                      type: object
                    serial:
                      description: The serial number of the AP
                      type: string
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests.
              schema:
                type: string
      summary: Endpoint to see power status for wireless devices
      tags:
        - wireless
        - configure
        - devices
        - ethernet
        - statuses
components:
  requestBodies:
    createDeviceSwitchRoutingInterfaceCreatedeviceswitchroutinginterface:
      content:
        application/json:
          schema:
            example:
              defaultGateway: 192.168.1.1
              interfaceIp: 192.168.1.2
              ipv6:
                address: 1:2:3:4::1
                assignmentMode: static
                gateway: 1:2:3:4::2
                prefix: 1:2:3:4::/48
              multicastRouting: disabled
              name: L3 interface
              ospfSettings:
                area: "0"
                cost: 1
                isPassiveEnabled: true
              ospfV3:
                area: "1"
                cost: 2
                isPassiveEnabled: true
              subnet: 192.168.1.0/24
              vlanId: 100
            properties:
              defaultGateway:
                description: The next hop for any traffic that isn't going to a directly connected subnet or over a static route.         This IP address must exist in a subnet with a routed interface. Required if this is the first IPv4 interface.
                type: string
              interfaceIp:
                description: The IP address this switch will use for layer 3 routing on this VLAN or subnet. This cannot be the same         as the switch's management IP.
                type: string
              ipv6:
                description: The IPv6 settings of the interface.
                properties:
                  address:
                    description: The IPv6 address of the interface. Required if assignmentMode is 'static'. Must not be included if           assignmentMode is 'eui-64'.
                    type: string
                  assignmentMode:
                    description: The IPv6 assignment mode for the interface. Can be either 'eui-64' or 'static'.
                    type: string
                  gateway:
                    description: The IPv6 default gateway of the interface. Required if prefix is defined and this is the first           interface with IPv6 configured for the switch.
                    type: string
                  prefix:
                    description: The IPv6 prefix of the interface. Required if IPv6 object is included.
                    type: string
                type: object
              multicastRouting:
                description: "Enable multicast support if, multicast routing between VLANs is required. Options are:         'disabled', 'enabled' or 'IGMP snooping querier'. Default is 'disabled'."
                enum:
                  - IGMP snooping querier
                  - disabled
                  - enabled
                type: string
              name:
                description: A friendly name or description for the interface or VLAN.
                type: string
              ospfSettings:
                description: The OSPF routing settings of the interface.
                properties:
                  area:
                    description: The OSPF area to which this interface should belong. Can be either 'disabled' or the identifier of an           existing OSPF area. Defaults to 'disabled'.
                    type: string
                  cost:
                    description: The path cost for this interface. Defaults to 1, but can be increased up to 65535           to give lower priority.
                    type: integer
                  isPassiveEnabled:
                    description: When enabled, OSPF will not run on the interface, but the subnet will still be advertised.
                    type: boolean
                type: object
              ospfV3:
                description: The OSPFv3 routing settings of the interface.
                properties:
                  area:
                    description: The OSPFv3 area to which this interface should belong. Can be either 'disabled' or the identifier of an           existing OSPFv3 area. Defaults to 'disabled'.
                    type: string
                  cost:
                    description: The path cost for this interface. Defaults to 1, but can be increased up to 65535           to give lower priority.
                    type: integer
                  isPassiveEnabled:
                    description: When enabled, OSPFv3 will not run on the interface, but the subnet will still be advertised.
                    type: boolean
                type: object
              subnet:
                description: The network that this routed interface is on, in CIDR notation (ex. 10.1.1.0/24).
                type: string
              vlanId:
                description: The VLAN this routed interface is on. VLAN must be between 1 and 4094.
                type: integer
            type: object
    createDeviceSwitchRoutingStaticRouteCreatedeviceswitchroutingstaticroute:
      content:
        application/json:
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: IP address of the next hop device to which the device sends its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            required:
              - subnet
              - nextHopIp
            type: object
      required: true
    createNetworkFirmwareUpgradesStagedGroupCreatenetworkfirmwareupgradesstagedgroup:
      content:
        application/json:
          schema:
            example:
              assignedDevices:
                devices:
                  - name: Device Name
                    serial: Q234-ABCD-5678
                switchStacks:
                  - id: "1234"
                    name: Stack Name
              description: The description of the group
              isDefault: false
              name: My Staged Upgrade Group
            properties:
              assignedDevices:
                description: The devices and Switch Stacks assigned to the Group
                properties:
                  devices:
                    description: Data Array of Devices containing the name and serial
                    items:
                      properties:
                        name:
                          description: Name of the device
                          type: string
                        serial:
                          description: Serial of the device
                          type: string
                      required:
                        - serial
                      type: object
                    type: array
                  switchStacks:
                    description: Data Array of Switch Stacks containing the name and id
                    items:
                      properties:
                        id:
                          description: ID of the Switch Stack
                          type: string
                        name:
                          description: Name of the Switch Stack
                          type: string
                      required:
                        - id
                      type: object
                    type: array
                type: object
              description:
                description: Description of the Staged Upgrade Group. Length must be 1 to 255 characters
                type: string
              isDefault:
                description: Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
                type: boolean
              name:
                description: Name of the Staged Upgrade Group. Length must be 1 to 255 characters
                type: string
            required:
              - name
              - isDefault
            type: object
      required: true
    createNetworkSmTargetGroupCreatenetworksmtargetgroup:
      content:
        application/json:
          schema:
            example:
              name: My target group
              scope: none
              tags: "[]"
              type: devices
            properties:
              name:
                description: The name of this target group
                type: string
              scope:
                description: The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.
                type: string
            type: object
    updateDeviceSwitchRoutingStaticRouteUpdatedeviceswitchroutingstaticroute:
      content:
        application/json:
          schema:
            example:
              advertiseViaOspfEnabled: false
              name: My route
              nextHopIp: 1.2.3.4
              preferOverOspfRoutesEnabled: false
              subnet: 192.168.1.0/24
            properties:
              advertiseViaOspfEnabled:
                description: Option to advertise static route via OSPF
                type: boolean
              name:
                description: Name or description for layer 3 static route
                type: string
              nextHopIp:
                description: IP address of the next hop device to which the device sends its traffic for the subnet
                type: string
              preferOverOspfRoutesEnabled:
                description: Option to prefer static route over OSPF routes
                type: boolean
              subnet:
                description: The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)
                type: string
            type: object
    updateNetworkApplianceFirewallCellularFirewallRulesUpdatenetworkappliancefirewallcellularfirewallrules:
      content:
        application/json:
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: "443"
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: An ordered array of the firewall rules (not including the default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
                      type: string
                    destPort:
                      description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: "'allow' or 'deny' traffic specified by this rule"
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
                      enum:
                        - any
                        - icmp
                        - icmp6
                        - tcp
                        - udp
                      type: string
                    srcCidr:
                      description: "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                      type: string
                    srcPort:
                      description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
            type: object
    updateNetworkApplianceFirewallInboundFirewallRulesUpdatenetworkappliancefirewallinboundfirewallrules:
      content:
        application/json:
          schema:
            example:
              rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  destCidr: 192.168.1.0/24
                  destPort: "443"
                  policy: allow
                  protocol: tcp
                  srcCidr: Any
                  srcPort: Any
                  syslogEnabled: false
            properties:
              rules:
                description: An ordered array of the firewall rules (not including the default rule)
                items:
                  properties:
                    comment:
                      description: Description of the rule (optional)
                      type: string
                    destCidr:
                      description: Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
                      type: string
                    destPort:
                      description: Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
                      type: string
                    policy:
                      description: "'allow' or 'deny' traffic specified by this rule"
                      enum:
                        - allow
                        - deny
                      type: string
                    protocol:
                      description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
                      enum:
                        - any
                        - icmp
                        - icmp6
                        - tcp
                        - udp
                      type: string
                    srcCidr:
                      description: "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)"
                      type: string
                    srcPort:
                      description: Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
                      type: string
                    syslogEnabled:
                      description: Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
                      type: boolean
                  required:
                    - policy
                    - protocol
                    - srcCidr
                    - destCidr
                  type: object
                type: array
              syslogDefaultRule:
                description: Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)
                type: boolean
            type: object
  securitySchemes:
    meraki_api_key:
      in: header
      name: X-Cisco-Meraki-API-Key
      type: apiKey
x-batchable-actions:
  - group: Adaptive policy
    operation: create
    resource: /organizations/{organizationId}/adaptivePolicy/policies
    summary: Add an Adaptive Policy
  - group: Adaptive policy
    operation: destroy
    resource: /organizations/{organizationId}/adaptivePolicy/policies/{id}
    summary: Delete an Adaptive Policy
  - group: Adaptive policy
    operation: update
    resource: /organizations/{organizationId}/adaptivePolicy/policies/{id}
    summary: Update an Adaptive Policy
  - group: Adaptive policy group
    operation: create
    resource: /organizations/{organizationId}/adaptivePolicy/groups
    summary: Creates a new adaptive policy group
  - group: Adaptive policy group
    operation: destroy
    resource: /organizations/{organizationId}/adaptivePolicy/groups/{id}
    summary: Deletes the specified adaptive policy group and any associated policies and references
  - group: Adaptive policy group
    operation: update
    resource: /organizations/{organizationId}/adaptivePolicy/groups/{id}
    summary: Updates an adaptive policy group. If updating "Infrastructure", only the SGT is allowed. Cannot update "Unknown".
  - group: Adaptive policy settings
    operation: update
    resource: /organizations/{organizationId}/adaptivePolicy/settings
    summary: Update global adaptive policy settings
  - group: Alternate management interface
    operation: update
    resource: /networks/{networkId}/switch/alternateManagementInterface
    summary: Update the switch alternate management interface for the network
  - group: Api/v1/adaptive policy/acls controller/shim adaptive policy acl
    operation: create
    resource: /organizations/{organizationId}/adaptivePolicy/acls
    summary: Creates new adaptive policy ACL
  - group: Api/v1/adaptive policy/acls controller/shim adaptive policy acl
    operation: destroy
    resource: /organizations/{organizationId}/adaptivePolicy/acls/{aclId}
    summary: Deletes the specified adaptive policy ACL. Note this adaptive policy ACL will also be removed from policies using it.
  - group: Api/v1/adaptive policy/acls controller/shim adaptive policy acl
    operation: update
    resource: /organizations/{organizationId}/adaptivePolicy/acls/{aclId}
    summary: Updates an adaptive policy ACL
  - group: Appliance ssid
    operation: update
    resource: /networks/{networkId}/appliance/ssids/{number}
    summary: Update the attributes of an MX SSID
  - group: Bgp setting
    operation: update
    resource: /networks/{networkId}/appliance/vpn/bgp
    summary: Update a Hub BGP Configuration
  - group: Billing
    operation: update
    resource: /networks/{networkId}/wireless/billing
    summary: Update the billing settings
  - group: Bluetooth device setting
    operation: update
    resource: /devices/{serial}/wireless/bluetooth/settings
    summary: Update the bluetooth settings for a wireless device
  - group: Camera custom analytics settings
    operation: update
    resource: /devices/{serial}/camera/customAnalytics
    summary: Update custom analytics settings for a camera
  - group: Camera video settings
    operation: update
    resource: /devices/{serial}/camera/video/settings
    summary: Update video settings for the given camera
  - group: Camera wireless profile settings
    operation: update
    resource: /devices/{serial}/camera/wirelessProfiles
    summary: Assign wireless profiles to the given camera. Incremental updates are not supported, all profile assignment need to be supplied at once.
  - group: Cellular gateway connectivity monitoring destination
    operation: update
    resource: /networks/{networkId}/cellularGateway/connectivityMonitoringDestinations
    summary: Update the connectivity testing destinations for an MG network
  - group: Cellular gateway device lan
    operation: update
    resource: /devices/{serial}/cellularGateway/lan
    summary: Update the LAN Settings for a single MG.
  - group: Cellular gateway dhcp setting
    operation: update
    resource: /networks/{networkId}/cellularGateway/dhcp
    summary: Update common DHCP settings of MGs
  - group: Cellular gateway port forwarding rules
    operation: update
    resource: /devices/{serial}/cellularGateway/portForwardingRules
    summary: Updates the port forwarding rules for a single MG.
  - group: Cellular gateway subnet pool
    operation: update
    resource: /networks/{networkId}/cellularGateway/subnetPool
    summary: Update the subnet pool and mask configuration for MGs in the network.
  - group: Cellular gateway uplink setting
    operation: update
    resource: /networks/{networkId}/cellularGateway/uplink
    summary: Updates the uplink settings for your MG network.
  - group: Client
    operation: provision
    resource: /networks/{networkId}/clients
    summary: Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.
  - group: Config template
    operation: create
    resource: /organizations/{organizationId}/configTemplates
    summary: Create a new configuration template
  - group: Config template
    operation: update
    resource: /organizations/{organizationId}/configTemplates/{configTemplateId}
    summary: Update a configuration template
  - group: Custom performance class
    operation: create
    resource: /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses
    summary: Add a custom performance class for an MX network
  - group: Custom performance class
    operation: destroy
    resource: /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}
    summary: Delete a custom performance class from an MX network
  - group: Custom performance class
    operation: update
    resource: /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}
    summary: Update a custom performance class for an MX network
  - group: Dai trusted server
    operation: create
    resource: /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers
    summary: Add a server to be trusted by Dynamic ARP Inspection on this network
  - group: Dai trusted server
    operation: destroy
    resource: /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}
    summary: Remove a server from being trusted by Dynamic ARP Inspection on this network
  - group: Dai trusted server
    operation: update
    resource: /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}
    summary: Update a server that is trusted by Dynamic ARP Inspection on this network
  - group: Dash xl/dashboard branding policy
    operation: create
    resource: /organizations/{organizationId}/brandingPolicies
    summary: Add a new branding policy to an organization
  - group: Dash xl/dashboard branding policy
    operation: destroy
    resource: /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}
    summary: Delete a branding policy
  - group: Dash xl/dashboard branding policy
    operation: update
    resource: /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}
    summary: Update a branding policy
  - group: Dash xl/dashboard branding policy priorities
    operation: update
    resource: /organizations/{organizationId}/brandingPolicies/priorities
    summary: Update the priority ordering of an organization's branding policies.
  - group: Device
    operation: update
    resource: /devices/{serial}
    summary: Update the attributes of a device
  - group: Device
    operation: claim
    resource: /networks/{networkId}/devices
    summary: "Claim devices into a network. (Note: for recently claimed devices, it may take a few minutes for API requsts against that device to succeed)"
  - group: Device
    operation: remove
    resource: /networks/{networkId}/devices
    summary: Remove a single device
  - group: Dhcp server policy
    operation: update
    resource: /networks/{networkId}/switch/dhcpServerPolicy
    summary: Update the DHCP server settings. Blocked/allowed servers are only applied when default policy is allow/block, respectively
  - group: Dscp cos mapping
    operation: update
    resource: /networks/{networkId}/switch/dscpToCosMappings
    summary: Update the DSCP to CoS mappings
  - group: Eap override
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/eapOverride
    summary: Update the EAP overridden parameters for an SSID.
  - group: End user
    operation: destroy
    resource: /organizations/{organizationId}/users/{userId}
    summary: Delete a user and all of its authentication methods.
  - group: Feature opt in
    operation: update
    resource: /organizations/{organizationId}/earlyAccess/features/optIns/{optInId}
    summary: Update an early access feature opt-in for an organization
  - group: Firmware upgrade rollback
    operation: create
    resource: /networks/{networkId}/firmwareUpgrades/rollbacks
    summary: Rollback a Firmware Upgrade For A Network
  - group: Firmware upgrades update
    operation: update
    resource: /networks/{networkId}/firmwareUpgrades
    summary: Update firmware upgrade information for a network
  - group: Floor plan
    operation: destroy
    resource: /networks/{networkId}/floorPlans/{floorPlanId}
    summary: Destroy a floor plan
  - group: Floor plan
    operation: update
    resource: /networks/{networkId}/floorPlans/{floorPlanId}
    summary: Update a floor plan's geolocation and other meta data
  - group: Group policy
    operation: create
    resource: /networks/{networkId}/groupPolicies
    summary: Create a group policy
  - group: Group policy
    operation: destroy
    resource: /networks/{networkId}/groupPolicies/{groupPolicyId}
    summary: Delete a group policy
  - group: Group policy
    operation: update
    resource: /networks/{networkId}/groupPolicies/{groupPolicyId}
    summary: Update a group policy
  - group: Hotspot20
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/hotspot20
    summary: Update the Hotspot 2.0 settings of an SSID
  - group: L3 firewall
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules
    summary: Update the L3 firewall rules of an SSID on an MR network
  - group: L3 interface
    operation: create
    resource: /devices/{serial}/switch/routing/interfaces
    summary: Create a layer 3 interface for a switch
  - group: L3 interface
    operation: destroy
    resource: /devices/{serial}/switch/routing/interfaces/{interfaceId}
    summary: Delete a layer 3 interface from the switch
  - group: L3 interface
    operation: update
    resource: /devices/{serial}/switch/routing/interfaces/{interfaceId}
    summary: Update a layer 3 interface for a switch
  - group: L3 interface dhcp
    operation: update
    resource: /devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp
    summary: Update a layer 3 interface DHCP configuration for a switch
  - group: L3 static route
    operation: create
    resource: /devices/{serial}/switch/routing/staticRoutes
    summary: Create a layer 3 static route for a switch
  - group: L3 static route
    operation: destroy
    resource: /devices/{serial}/switch/routing/staticRoutes/{staticRouteId}
    summary: Delete a layer 3 static route for a switch
  - group: L3 static route
    operation: update
    resource: /devices/{serial}/switch/routing/staticRoutes/{staticRouteId}
    summary: Update a layer 3 static route for a switch
  - group: License
    operation: assignSeats
    resource: /organizations/{organizationId}/licenses
    summary: Assign SM seats to a network. This will increase the managed SM device limit of the network
  - group: License
    operation: move
    resource: /organizations/{organizationId}/licenses
    summary: Move licenses to another organization. This will also move any devices that the licenses are assigned to
  - group: License
    operation: moveSeats
    resource: /organizations/{organizationId}/licenses
    summary: Move SM seats to another organization
  - group: License
    operation: renewSeats
    resource: /organizations/{organizationId}/licenses
    summary: Renew SM seats of a license. This will extend the license expiration date of managed SM devices covered by this license
  - group: License
    operation: update
    resource: /organizations/{organizationId}/licenses/{licenseId}
    summary: Update a license
  - group: Link aggregation
    operation: create
    resource: /networks/{networkId}/switch/linkAggregations
    summary: Create a link aggregation group
  - group: Link aggregation
    operation: destroy
    resource: /networks/{networkId}/switch/linkAggregations/{linkAggregationId}
    summary: Split a link aggregation group into separate ports
  - group: Link aggregation
    operation: update
    resource: /networks/{networkId}/switch/linkAggregations/{linkAggregationId}
    summary: Update a link aggregation group
  - group: MTU configuration
    operation: update
    resource: /networks/{networkId}/switch/mtu
    summary: Update the MTU configuration
  - group: MX VLAN settings
    operation: update
    resource: /networks/{networkId}/appliance/vlans/settings
    summary: Enable/Disable VLANs for the given network
  - group: MX connectivity monitoring destination
    operation: update
    resource: /networks/{networkId}/appliance/connectivityMonitoringDestinations
    summary: Update the connectivity testing destinations for an MX network
  - group: MX l7 firewall
    operation: update
    resource: /networks/{networkId}/appliance/firewall/l7FirewallRules
    summary: Update the MX L7 firewall rules for an MX network
  - group: MX port
    operation: update
    resource: /networks/{networkId}/appliance/ports/{portId}
    summary: Update the per-port VLAN settings for a single MX port.
  - group: MX uplink setting
    operation: update
    resource: /networks/{networkId}/appliance/trafficShaping/uplinkBandwidth
    summary: Updates the uplink bandwidth settings for your MX network.
  - group: Management interface settings
    operation: update
    resource: /devices/{serial}/managementInterface
    summary: Update the management interface settings for a device
  - group: Meraki auth user
    operation: create
    resource: /networks/{networkId}/merakiAuthUsers
    summary: Authorize a user configured with Meraki Authentication for a network (currently supports 802.1X, splash guest, and client VPN users, and currently, organizations have a 50,000 user cap)
  - group: Meraki auth user
    operation: destroy
    resource: /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}
    summary: Deauthorize a user. To reauthorize a user after deauthorizing them, POST to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN users can be deauthorized.)
  - group: Meraki auth user
    operation: update
    resource: /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}
    summary: Update a user configured with Meraki Authentication (currently, 802.1X RADIUS, splash guest, and client VPN users can be updated)
  - group: Monitored media server
    operation: create
    resource: /organizations/{organizationId}/insight/monitoredMediaServers
    summary: Add a media server to be monitored for this organization. Only valid for organizations with Meraki Insight.
  - group: Monitored media server
    operation: destroy
    resource: /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}
    summary: Delete a monitored media server from this organization. Only valid for organizations with Meraki Insight.
  - group: Monitored media server
    operation: update
    resource: /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}
    summary: Update a monitored media server for this organization. Only valid for organizations with Meraki Insight.
  - group: Mqtt broker
    operation: create
    resource: /networks/{networkId}/mqttBrokers
    summary: Add an MQTT broker
  - group: Mqtt broker
    operation: destroy
    resource: /networks/{networkId}/mqttBrokers/{mqttBrokerId}
    summary: Delete an MQTT broker
  - group: Mqtt broker
    operation: update
    resource: /networks/{networkId}/mqttBrokers/{mqttBrokerId}
    summary: Update an MQTT broker
  - group: Ms/actions/switch
    operation: settings/update
    resource: /networks/{networkId}/switch/settings
    summary: Update switch network settings
  - group: Multicast
    operation: update
    resource: /networks/{networkId}/switch/routing/multicast
    summary: Update multicast settings for a network
  - group: Network
    operation: bind
    resource: /networks/{networkId}
    summary: Bind a network to a template.
  - group: Network
    operation: destroy
    resource: /networks/{networkId}
    summary: Delete a network
  - group: Network
    operation: split
    resource: /networks/{networkId}
    summary: Split a combined network into individual networks for each type of device
  - group: Network
    operation: unbind
    resource: /networks/{networkId}
    summary: Unbind a network from a template.
  - group: Network
    operation: update
    resource: /networks/{networkId}
    summary: Update a network
  - group: Network
    operation: combine
    resource: /organizations/{organizationId}/networks
    summary: Combine multiple networks into a single network
  - group: Network
    operation: create
    resource: /organizations/{organizationId}/networks
    summary: Create a network
  - group: Network appliance settings
    operation: update
    resource: /networks/{networkId}/appliance/settings
    summary: Update the appliance settings for a network
  - group: Network settings
    operation: update
    resource: /networks/{networkId}/settings
    summary: Update the settings for a network
  - group: Org wide alerts/alert config
    operation: create
    resource: /organizations/{organizationId}/alerts/profiles
    summary: Create an organization-wide alert configuration
  - group: Org wide alerts/alert config
    operation: destroy
    resource: /organizations/{organizationId}/alerts/profiles/{alertConfigId}
    summary: Removes an organization-wide alert config
  - group: Org wide alerts/alert config
    operation: update
    resource: /organizations/{organizationId}/alerts/profiles/{alertConfigId}
    summary: Update an organization-wide alert config
  - group: Organization SAML IdP
    operation: create
    resource: /organizations/{organizationId}/saml/idps
    summary: Create a SAML IdP for your organization.
  - group: Organization SAML IdP
    operation: destroy
    resource: /organizations/{organizationId}/saml/idps/{idpId}
    summary: Remove a SAML IdP in your organization.
  - group: Organization SAML IdP
    operation: update
    resource: /organizations/{organizationId}/saml/idps/{idpId}
    summary: Update a SAML IdP in your organization
  - group: Organization login security settings
    operation: update
    resource: /organizations/{organizationId}/loginSecurity
    summary: Update the login security settings for an organization
  - group: Ospf routing
    operation: update
    resource: /networks/{networkId}/switch/routing/ospf
    summary: Update layer 3 OSPF routing configuration
  - group: Policy object
    operation: create
    resource: /organizations/{organizationId}/policyObjects
    summary: Creates a new Policy Object.
  - group: Policy object
    operation: destroy
    resource: /organizations/{organizationId}/policyObjects/{policyObjectId}
    summary: Deletes a Policy Object.
  - group: Policy object
    operation: update
    resource: /organizations/{organizationId}/policyObjects/{policyObjectId}
    summary: Updates a Policy Object.
  - group: Policy object group
    operation: create
    resource: /organizations/{organizationId}/policyObjects/groups
    summary: Creates a new Policy Object Group.
  - group: Policy object group
    operation: destroy
    resource: /organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}
    summary: Deletes a Policy Object Group.
  - group: Policy object group
    operation: update
    resource: /organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}
    summary: Updates a Policy Object Group.
  - group: Psk group
    operation: create
    resource: /networks/{networkId}/wireless/ssids/{number}/identityPsks
    summary: Create an Identity PSK
  - group: Psk group
    operation: destroy
    resource: /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}
    summary: Delete an Identity PSK
  - group: Psk group
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}
    summary: Update an Identity PSK
  - group: Qos rule
    operation: create
    resource: /networks/{networkId}/switch/qosRules
    summary: Add a quality of service rule
  - group: Qos rule
    operation: update_order
    resource: /networks/{networkId}/switch/qosRules/order
    summary: Update the order in which the rules should be processed by the switch
  - group: Qos rule
    operation: destroy
    resource: /networks/{networkId}/switch/qosRules/{qosRuleId}
    summary: Delete a quality of service rule
  - group: Qos rule
    operation: update
    resource: /networks/{networkId}/switch/qosRules/{qosRuleId}
    summary: Update a quality of service rule
  - group: Quality and retention setting
    operation: update
    resource: /devices/{serial}/camera/qualityAndRetention
    summary: Update quality and retention settings for the given camera
  - group: RF profile
    operation: create
    resource: /networks/{networkId}/wireless/rfProfiles
    summary: Creates new RF profile for this network
  - group: RF profile
    operation: destroy
    resource: /networks/{networkId}/wireless/rfProfiles/{rfProfileId}
    summary: Delete a RF Profile
  - group: RF profile
    operation: update
    resource: /networks/{networkId}/wireless/rfProfiles/{rfProfileId}
    summary: Updates specified RF profile for this network
  - group: Radio settings
    operation: update
    resource: /devices/{serial}/wireless/radio/settings
    summary: Update the radio settings of a device
  - group: Rendezvous point
    operation: create
    resource: /networks/{networkId}/switch/routing/multicast/rendezvousPoints
    summary: Create a multicast rendezvous point
  - group: Rendezvous point
    operation: destroy
    resource: /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}
    summary: Delete a multicast rendezvous point
  - group: Rendezvous point
    operation: update
    resource: /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}
    summary: Update a multicast rendezvous point
  - group: STP configuration
    operation: update
    resource: /networks/{networkId}/switch/stp
    summary: Updates STP settings
  - group: Sense setting
    operation: update
    resource: /devices/{serial}/camera/sense
    summary: Update sense settings for the given camera
  - group: Sensor alert profiles
    operation: create
    resource: /networks/{networkId}/sensor/alerts/profiles
    summary: Creates a sensor alert profile for a network.
  - group: Sensor alert profiles
    operation: destroy
    resource: /networks/{networkId}/sensor/alerts/profiles/{id}
    summary: Deletes a sensor alert profile from a network.
  - group: Sensor alert profiles
    operation: update
    resource: /networks/{networkId}/sensor/alerts/profiles/{id}
    summary: Updates a sensor alert profile for a network.
  - group: Sensor gateway role
    operation: update
    resource: /devices/{serial}/sensor/relationships
    summary: Assign one or more sensor roles to a given sensor or camera device.
  - group: Single lan
    operation: update
    resource: /networks/{networkId}/appliance/singleLan
    summary: Update single LAN configuration
  - group: Site to site vpn
    operation: update
    resource: /networks/{networkId}/appliance/vpn/siteToSiteVpn
    summary: Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.
  - group: Ssid
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}
    summary: Update the attributes of an MR SSID
  - group: Ssid bonjour forwarding
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/bonjourForwarding
    summary: Update the bonjour forwarding setting and rules for the SSID
  - group: Ssid device type group policies
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies
    summary: Update the device type group policies for the SSID
  - group: Ssid outage schedule
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/schedules
    summary: Update the outage schedule for the SSID
  - group: Ssid splash settings
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/splash/settings
    summary: Modify the splash page settings for the given SSID
  - group: Ssid vpn
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/vpn
    summary: Update the VPN settings for the SSID
  - group: Staged upgrade/group
    operation: create
    resource: /networks/{networkId}/firmwareUpgrades/staged/groups
    summary: Create a Staged Upgrade Group for a network
  - group: Staged upgrade/group
    operation: destroy
    resource: /networks/{networkId}/firmwareUpgrades/staged/groups/{groupId}
    summary: Delete a Staged Upgrade Group
  - group: Static delegated prefix
    operation: create
    resource: /networks/{networkId}/appliance/prefixes/delegated/statics
    summary: Add a static delegated prefix from a network
  - group: Static delegated prefix
    operation: destroy
    resource: /networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}
    summary: Delete a static delegated prefix from a network
  - group: Static delegated prefix
    operation: update
    resource: /networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}
    summary: Update a static delegated prefix from a network
  - group: Storm control
    operation: update
    resource: /networks/{networkId}/switch/stormControl
    summary: Update the storm control configuration for a switch network
  - group: Switch
    operation: clone
    resource: /organizations/{organizationId}/switch/devices
    summary: "Clone port-level and some switch-level configuration settings from a source switch to one or more target switches. Cloned settings include: Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port Mirroring"
  - group: Switch access policy
    operation: create
    resource: /networks/{networkId}/switch/accessPolicies
    summary: Create an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array.
  - group: Switch access policy
    operation: destroy
    resource: /networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}
    summary: Delete an access policy for a switch network
  - group: Switch access policy
    operation: update
    resource: /networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}
    summary: Update an access policy for a switch network. If you would like to enable Meraki Authentication, set radiusServers to empty array.
  - group: Switch port
    operation: cycle
    resource: /devices/{serial}/switch/ports
    summary: Cycle a set of switch ports
  - group: Switch port
    operation: update
    resource: /devices/{serial}/switch/ports/{portId}
    summary: Update a switch port
  - group: Switch port schedule
    operation: update
    resource: /networks/{networkId}/switch/portSchedules/{portScheduleId}
    summary: Update a switch port schedule
  - group: Switch profile port
    operation: update
    resource: /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}
    summary: Update a switch profile port
  - group: Switch stacks l3 interface
    operation: create
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces
    summary: Create a layer 3 interface for a switch stack
  - group: Switch stacks l3 interface
    operation: destroy
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}
    summary: Delete a layer 3 interface from a switch stack
  - group: Switch stacks l3 interface
    operation: update
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}
    summary: Update a layer 3 interface for a switch stack
  - group: Switch stacks l3 interface dhcp
    operation: update
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp
    summary: Update a layer 3 interface DHCP configuration for a switch stack
  - group: Switch stacks l3 static route
    operation: create
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes
    summary: Create a layer 3 static route for a switch stack
  - group: Switch stacks l3 static route
    operation: destroy
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}
    summary: Delete a layer 3 static route for a switch stack
  - group: Switch stacks l3 static route
    operation: update
    resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}
    summary: Update a layer 3 static route for a switch stack
  - group: Switch warm spare settings
    operation: update
    resource: /devices/{serial}/switch/warmSpare
    summary: Update warm spare configuration for a switch. The spare will use the same L3 configuration as the primary. Note that this will irreversibly destroy any existing L3 configuration on the spare.
  - group: Traffic shaping settings
    operation: update
    resource: /networks/{networkId}/appliance/trafficShaping/rules
    summary: Update the traffic shaping settings rules for an MX network
  - group: Traffic shaping settings
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules
    summary: Update the traffic shaping settings for an SSID on an MR network
  - group: Uplink selection settings
    operation: update
    resource: /networks/{networkId}/appliance/trafficShaping/uplinkSelection
    summary: Update uplink selection settings for an MX network
  - group: User access device
    operation: destroy
    resource: /networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}
    summary: Delete a User Access Device
  - group: VLAN
    operation: create
    resource: /networks/{networkId}/appliance/vlans
    summary: Add a VLAN
  - group: VLAN
    operation: destroy
    resource: /networks/{networkId}/appliance/vlans/{vlanId}
    summary: Delete a VLAN from a network
  - group: VLAN
    operation: update
    resource: /networks/{networkId}/appliance/vlans/{vlanId}
    summary: Update a VLAN
  - group: Vmx
    operation: claim
    resource: /networks/{networkId}/devices/claim
    summary: Claim a vMX into a network
  - group: Vmx token
    operation: create
    resource: /devices/{serial}/appliance/vmx/authenticationToken
    summary: Generate a new vMX authentication token
  - group: Warm spare
    operation: swap
    resource: /networks/{networkId}/appliance/warmSpare
    summary: Swap MX primary and warm spare appliances
  - group: Warm spare
    operation: update
    resource: /networks/{networkId}/appliance/warmSpare
    summary: Update MX warm spare settings
  - group: Webhook template
    operation: create
    resource: /networks/{networkId}/webhooks/payloadTemplates
    summary: Create a webhook payload template for a network
  - group: Webhook template
    operation: destroy
    resource: /networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}
    summary: Destroy a webhook payload template for a network. Does not work for included templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004', 'wpt_00005' or 'wpt_00006')
  - group: Webhook template
    operation: update
    resource: /networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}
    summary: Update a webhook payload template for a network
  - group: Wired/uplinks/settings
    operation: update
    resource: /devices/{serial}/appliance/uplinks/settings
    summary: Update the uplink settings for an MX appliance
  - group: Wired/vpn/third party vpn peers
    operation: update
    resource: /organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers
    summary: Update the third party VPN peers for an organization
  - group: Wireless alternate management interface
    operation: update
    resource: /networks/{networkId}/wireless/alternateManagementInterface
    summary: Update alternate management interface and device static IP
  - group: Wireless l7 firewall
    operation: update
    resource: /networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules
    summary: Update the L7 firewall rules of an SSID on an MR network
  - group: Wireless settings
    operation: update
    resource: /networks/{networkId}/wireless/settings
    summary: Update the wireless settings for a network