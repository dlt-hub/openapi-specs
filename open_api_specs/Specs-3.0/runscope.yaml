openapi: 3.0.1
info:
  title: Runscope API
  description: Manage Runscope programmatically.
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://pbs.twimg.com/profile_images/500425058955689986/zlcbgqTt.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Runscope/runscope-api-examples/master/schemas/runscope-swagger-v2.json
    version: "2.0"
  x-providerName: runscope.com
servers:
- url: https://api.runscope.com/
security:
- runscope_auth:
  - api:read
paths:
  /account:
    get:
      tags:
      - Account
      summary: Account Resource
      description: Information about the authorized account.
      responses:
        "200":
          description: Account owner and team information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Account'
                  meta:
                    $ref: '#/components/schemas/Meta'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - account:email
  /buckets:
    get:
      tags:
      - Buckets
      summary: Returns a list of buckets.
      responses:
        "200":
          description: List of buckets associated with this authenticated account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bucket'
                  meta:
                    $ref: '#/components/schemas/Meta'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
      - runscope_auth:
        - api:read
        - bucket:auth_token
    post:
      tags:
      - Buckets
      summary: Create a new bucket
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewBucket'
        required: true
      responses:
        "200":
          description: Bucket details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - bucket:write
      x-codegen-request-body-name: NewBucket
  /buckets/{bucketKey}:
    get:
      tags:
      - Buckets
      summary: Returns a single bucket resource.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Bucket details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Buckets
      summary: Delete a single bucket resource.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content with no body.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - bucket:write
  /buckets/{bucketKey}/environments:
    get:
      tags:
      - Shared Environments
      summary: Returns list of shared environments for a specified bucket.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of shared environments belonging to this bucket.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:read
    post:
      tags:
      - Shared Environments
      summary: Create new shared environment.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        "201":
          description: Details of the new test environment.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: NewEnvironment
  /buckets/{bucketKey}/environments/{environmentId}:
    put:
      tags:
      - Shared Environments
      summary: Update the details of a shared environment.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: Unique identifier for a test environment
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        "201":
          description: Details of the modified test environment.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: ModifiedEnvironment
  /buckets/{bucketKey}/errors:
    get:
      tags:
      - Messages
      summary: Retrieve a list of error messages in a bucket
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: "Maxiumum number of messages to return. Default 50, max 1000."
        schema:
          type: integer
      - name: since
        in: query
        description: Only return messages after the given Unix timestamp
        schema:
          type: integer
      - name: before
        in: query
        description: Only return messages before the given Unix timestamp
        schema:
          type: integer
      responses:
        "200":
          description: List of error messages in a bucket
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /buckets/{bucketKey}/messages:
    get:
      tags:
      - Messages
      summary: Retrieve a list of messages in a bucket
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: count
        in: query
        description: "Maxiumum number of messages to return. Default 50, max 1000."
        schema:
          type: integer
      - name: since
        in: query
        description: Only return messages after the given Unix timestamp
        schema:
          type: integer
      - name: before
        in: query
        description: Only return messages before the given Unix timestamp
        schema:
          type: integer
      responses:
        "200":
          description: List of messages in a bucket
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Messages
      summary: Create a message
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewMessage'
        required: true
      responses:
        "200":
          description: "The response includes a list of result objects for the message(s)\
            \ submitted. It will always return an array, even if only one message\
            \ was created. The order of the result objects corresponds to the order\
            \ of messages submitted."
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            code:
                              type: integer
                              description: A numeric error code for the specific problem
                                we encountered with this message. (error status only)
                            message:
                              type: string
                              description: A description of the problem we encountered
                                with this message. (error status only)
                            more_info:
                              type: string
                              description: A link to more help about the warning.
                                (error status only)
                          description: "An object representing errors for this item.\
                            \ Only present if status is error, otherwise this will\
                            \ be null."
                        status:
                          type: string
                          description: "One of the following: success, error, or warning."
                        unique_identifier:
                          type: string
                          description: "If the message had a unique_identifier, it\
                            \ will be returned in this field, to help match the responses\
                            \ to the messages that were submitted."
                        uuid:
                          type: string
                          description: This message's Runscope-generated ID.
                        warning:
                          type: object
                          properties:
                            code:
                              type: integer
                              description: A numeric error code for the specific problem
                                we encountered with this message. (warning status
                                only)
                            message:
                              type: string
                              description: A description of the problem we encountered
                                with this message. (warning status only)
                            more_info:
                              type: string
                              description: A link to more help about the warning.
                                (warning status only)
                          description: "An object representing warnings (non-fatal\
                            \ warnings) for this item. Only present if status is warning,\
                            \ otherwise this will be null."
                  meta:
                    type: object
                    properties:
                      error_count:
                        type: integer
                      succcess_count:
                        type: integer
                      warning_count:
                        type: integer
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - message:write
      x-codegen-request-body-name: NewMessage
    delete:
      tags:
      - Messages
      summary: Clear a bucket (remove all messages).
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content with no body.
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - message:write
  /buckets/{bucketKey}/messages/{messageId}:
    get:
      tags:
      - Messages
      summary: Retrieve the details for a single message.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: messageId
        in: path
        description: The unique identifier for this message
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of messages in a bucket
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /buckets/{bucketKey}/tests:
    get:
      tags:
      - Tests
      summary: Returns a list of tests.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of tests for this bucket
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Test'
                  meta:
                    $ref: '#/components/schemas/Meta'
      security:
      - runscope_auth:
        - api:read
        - test:read
    post:
      tags:
      - Tests
      summary: Create a test.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Test'
        required: true
      responses:
        "200":
          description: List of tests for this bucket
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Test'
                  meta:
                    $ref: '#/components/schemas/Meta'
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: NewTest
  /buckets/{bucketKey}/tests/{testId}:
    get:
      tags:
      - Tests
      summary: Retrieve the details of a given test by ID.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Returns an object with the details of the given test.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDetail'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - test:read
    put:
      tags:
      - Tests
      summary: "Modify a test's name, description, default environment and its steps.\
        \ To modify other individual properties of a test, make requests to the steps,\
        \ environments, and schedules subresources of the test."
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Returns 201 and the updated test's JSON description if the
            test is successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDetail'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - test:write
    delete:
      tags:
      - Tests
      summary: "Delete a test, including all steps, schedules, test-specific environments\
        \ and results."
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content with no body.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:write
  /buckets/{bucketKey}/tests/{testId}/environments:
    get:
      tags:
      - Test Environments
      summary: Return details of the test's environments (only those that belong to
        the specified test)
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of environments belonging to this test.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  meta:
                    $ref: '#/components/schemas/Meta'
      security:
      - runscope_auth:
        - api:read
        - test:read
    post:
      tags:
      - Test Environments
      summary: Create new test environment.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        "201":
          description: Details of the new test environment.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: NewEnvironment
  /buckets/{bucketKey}/tests/{testId}/environments/{environmentId}:
    put:
      tags:
      - Test Environments
      summary: Update the details of a test environment.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      - name: environmentId
        in: path
        description: Unique identifier for a test environment
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
      responses:
        "201":
          description: Details of the modified test environment.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: ModifiedEnvironment
  /buckets/{bucketKey}/tests/{testId}/metrics:
    get:
      tags:
      - Tests
      summary: Return details of the test metrics for the specified timeframe.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of average response times and additional performance metrics
            belonging to this test.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics'
      security:
      - runscope_auth:
        - api:read
        - test:read
  /buckets/{bucketKey}/tests/{testId}/steps:
    get:
      tags:
      - Test Steps
      summary: List test steps for a test.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of test steps for a test
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:read
    post:
      tags:
      - Test Steps
      summary: Add new test step.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TestStep'
        required: true
      responses:
        "201":
          description: Details of the new test step.
          content: {}
        "400":
          description: Must send valid JSON object to create a new test step
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: TestStep
  /buckets/{bucketKey}/tests/{testId}/steps/{stepId}:
    put:
      tags:
      - Test Steps
      summary: Update the details of a single test step.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      - name: stepId
        in: path
        description: Unique identifier for a test step
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TestStep'
        required: true
      responses:
        "200":
          description: List of test steps for a test
          content: {}
        "400":
          description: "Unable to update template '{stepId}' for test '{testId}'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      security:
      - runscope_auth:
        - api:read
        - test:write
      x-codegen-request-body-name: TestStep
    delete:
      tags:
      - Test Steps
      summary: Delete a step from a test.
      parameters:
      - name: bucketKey
        in: path
        description: Unique identifier for a bucket
        required: true
        schema:
          type: string
      - name: testId
        in: path
        description: Unique identifier for a test
        required: true
        schema:
          type: string
      - name: stepId
        in: path
        description: Unique identifier for a test step
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content with no body.
          content: {}
      security:
      - runscope_auth:
        - api:read
        - test:write
  /teams/{teamId}/agents:
    get:
      tags:
      - Account
      summary: Team agents list
      description: List currently connected agents associated with a given team.
      parameters:
      - name: teamId
        in: path
        description: Unique identifier for team
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of the team’s currently connected agents.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agent'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - team:read
  /teams/{teamId}/integrations:
    get:
      tags:
      - Account
      summary: Team integrations list
      description: Returns a list of integrations configured for the team.
      parameters:
      - name: teamId
        in: path
        description: Unique identifier for team
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of integrations associated with the team.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Integration'
                  meta:
                    $ref: '#/components/schemas/Meta'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - team:read
  /teams/{teamId}/people:
    get:
      tags:
      - Account
      summary: Teams Resource
      description: List people and integrations associated with a given team.
      parameters:
      - name: teamId
        in: path
        description: Unique identifier for team
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of people associated with the team.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - runscope_auth:
        - api:read
        - account:email
        - team:read
components:
  schemas:
    Account:
      type: object
      properties:
        email:
          type: string
          description: The email address for this account. Only present if authorized
            with the account:email scope.
        id:
          type: string
          description: The unique identifier for this account.
        name:
          type: string
          description: The name of the person for this account.
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    Agent:
      type: object
      properties:
        agent_id:
          type: string
          description: The unique identifier for this agent.
        name:
          type: string
          description: The name of the agent set in the configuration file or with
            the command line flag.
        version:
          type: string
          description: The version for this agent.
    Assertion:
      type: object
      properties:
        comparison:
          type: string
        source:
          type: string
        value:
          type: string
    Bucket:
      type: object
      properties:
        auth_token:
          type: string
          description: "Bucket auth token if set, otherwise this value is null."
        collections_url:
          type: string
        default:
          type: boolean
          description: True if this bucket is the 'default' for a team. Default buckets
            cannot be deleted.
        key:
          type: string
          description: The unique identifier used to address a bucket.
        messages_url:
          type: string
        name:
          type: string
          description: The name of this bucket as displayed in your dashboard.
        team:
          $ref: '#/components/schemas/Team'
        tests_url:
          type: string
        trigger_url:
          type: string
        verify_ssl:
          type: boolean
          description: True if this bucket is configured to verify ssl for requests
            made to it.
    Environment:
      required:
      - name
      type: object
      properties:
        auth:
          type: string
        client_certificate:
          type: string
        emails:
          type: object
          properties: {}
        exported_at:
          type: integer
        headers:
          type: object
          properties: {}
        id:
          type: string
          description: The unique identifier for this environment.
        initial_script_hash:
          type: string
        initial_variables:
          type: object
          properties: {}
        integrations:
          type: array
          description: The list of integrations for this environment.
          items:
            $ref: '#/components/schemas/Integration'
        name:
          type: string
          description: Name of this environment.
        parent_environment_id:
          type: string
        preserve_cookies:
          type: boolean
        regions:
          type: array
          description: An array of the region codes that this environment is using.
          items:
            type: string
        remote_agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        retry_on_failure:
          type: boolean
        script:
          type: string
          description: ""
        script_library:
          type: array
          description: "The list of ids for scripts, part of the script libraries,\
            \ being used for this environment."
          items:
            type: string
        stop_on_failure:
          type: boolean
          description: Stop executing the test after the first failed step.
        test_id:
          type: string
          description: The unique identifier for this test.
        verify_ssl:
          type: boolean
          description: Validate all SSL certificates on any HTTPS connections.
        version:
          type: string
        webhooks:
          type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        fields:
          type: string
        message:
          type: string
    Error400:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        more_info:
          type: string
        status:
          type: integer
          format: int32
    Integration:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        type:
          type: string
        uuid:
          type: string
    Meta:
      type: object
      properties:
        status:
          type: string
          description: Success or failure status of call.
    Metrics:
      type: object
      properties:
        changes_from_last_period:
          type: object
          properties: {}
          description: The changes in average response time compared to the last period.
        environment_uuid:
          type: string
          description: The environment_uuid that filters this request.
        region:
          type: string
          description: The region that filters this request.
        response_times:
          type: array
          description: The list of response times based on the timeframe of the request.
          items:
            type: object
            properties:
              avg_response_time_ms:
                type: integer
                description: The average response time in miliseconds for all the
                  requests for this test in this time interval.
              success_ratio:
                type: integer
                description: "1 if there's a successful request in this time interval,\
                  \ or 0 if there isn't."
              timestamp:
                type: integer
                description: The timestamp in Unix format for the specified timeframe.
        this_time_period:
          type: object
          properties: {}
          description: The average response time for different percentiles for the
            request in the requested timeframe.
        timeframe:
          type: string
          description: The timeframe that filters this request.
    NewBucket:
      required:
      - name
      - team_id
      type: object
      properties:
        name:
          type: string
          description: Name of this bucket
        team_id:
          type: string
          description: Unique identifier for the team to create this bucket for.
    NewMessage:
      type: object
      properties:
        request:
          type: object
          properties:
            body:
              type: string
              description: "HTTP request body (most commonly used for POST and PUT\
                \ requests). If the\nrequest body contains binary data that cannot\
                \ be included directly in the \nJSON, encode the content with Base64\
                \ and include the body_encoding attribute accordingly.\n"
            body_encoding:
              type: string
              description: "If the request body was encoded with Base64, this field\
                \ should be present and set to \n\"base64\". If not specified, defaults\
                \ to \"plaintext\"\n"
            form:
              type: string
              description: "JSON object of set of form fields included in a POST request.\
                \ \nValues can either be represented as a string or as an array of\
                \ strings.\n"
            headers:
              type: string
              description: JSON object of header keys and values -- with values as
                a string or an array of strings.
            method:
              type: string
              description: "HTTP method name (GET, POST, PUT, HEAD, OPTIONS, PATCH,\
                \ DELETE, etc.)"
            timestamp:
              type: number
              description: Unix timestamp indicating when the request was made.
              format: float
            url:
              type: string
              description: "Full URL of the request, including URL querystring parameters."
        response:
          type: object
          properties:
            body:
              type: string
              description: |
                HTTP response body. If the response body contains binary data that cannot be
                included directly in the JSON, you should encode the content with Base64.
            body_encoding:
              type: string
              description: "If the request body was encoded with Base64, this field\
                \ should be present and set to \n\"base64\". If not specified, defaults\
                \ to \"plaintext\"\n"
            headers:
              type: string
              description: JSON object of header keys and values -- with values as
                a string or an array of strings.
            reason:
              type: string
              description: "Textual description of HTTP status code. This will be\
                \ set automatically if not \nprovided in the API call. For example,\
                \ if the status code is 404, this will be \nset to \"Not Found\" unless\
                \ you explicitly specify a different reason.\n"
            response_time:
              type: number
              description: "Length of time it took to receive the response, in seconds."
              format: float
            status:
              type: integer
              description: HTTP status code returned in the response.
            timestamp:
              type: number
              description: Unix timestamp indicating when the request was made.
              format: float
    Schedule:
      type: object
      properties:
        environment_id:
          type: string
        exported_at:
          type: integer
        id:
          type: string
        interval:
          type: string
        note:
          type: string
        version:
          type: string
    StandardError:
      type: object
      properties:
        data:
          type: object
          properties: {}
        error:
          $ref: '#/components/schemas/Error400'
        meta:
          $ref: '#/components/schemas/Meta'
    Team:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this team.
        name:
          type: string
          description: The name of this team.
    Test:
      required:
      - name
      type: object
      properties:
        created_at:
          type: integer
          description: The date the test was created in seconds (Unix time stamp format).
        created_by:
          type: object
          properties:
            email:
              type: string
            id:
              type: string
            name:
              type: string
        default_environment_id:
          type: string
        description:
          type: string
          description: The description for the test.
        id:
          type: string
        last_run:
          type: object
          properties: {}
        name:
          type: string
          description: The name for the test.
        trigger_url:
          type: string
    TestDetail:
      allOf:
      - type: object
        properties:
          environments:
            $ref: '#/components/schemas/Environment'
          exported_at:
            type: integer
          last_run:
            type: object
            properties: {}
          schedules:
            type: array
            items:
              $ref: '#/components/schemas/Schedule'
          steps:
            type: array
            items:
              type: object
              properties: {}
          version:
            type: string
      - $ref: '#/components/schemas/Test'
    TestStep:
      type: object
      properties:
        step_type:
          type: string
          description: "Type of test step -- request, pause, condition, ghost-inspector,\
            \ or subtest."
    TestStepRequest:
      allOf:
      - type: object
        properties:
          assertions:
            type: array
            description: A list of assertions to apply to the HTTP response from this
              request.
            items:
              $ref: '#/components/schemas/Assertion'
          auth:
            type: object
            properties: {}
            description: "An authentication object with either basic, oauth1, or client_certificate\
              \ credentials for authenticating this request."
          before_scripts:
            type: array
            description: A list of pre-request scripts to run before this request.
            items:
              type: string
          body:
            type: string
            description: A string to use as the body of the request.
          form:
            type: object
            properties: {}
            description: An object with keys as form post parameter names matched
              to their values. Values can either be a single string or an array of
              strings.
          headers:
            type: object
            properties: {}
            description: An object with keys as header names matched to their values.
              Values can either be a single string or an array of strings.
          method:
            type: string
            description: "The HTTP method for this request step. E.g. GET, POST, PUT,\
              \ DELETE, etc."
          note:
            type: string
            description: A description or note for this request step.
          scripts:
            type: array
            description: A list of post-response scripts to run after this request.
            items:
              type: string
          url:
            type: string
            description: The URL to make a request to for this step. This may contain
              both query string parameters and variables.
          variables:
            type: array
            description: A list of variables to extract out of the HTTP response from
              this request.
            items:
              $ref: '#/components/schemas/Variable'
      - $ref: '#/components/schemas/TestStep'
    Variable:
      type: object
      properties:
        name:
          type: string
        property:
          type: string
        source:
          type: string
  responses:
    Standard400Response:
      description: Invalid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardError'
    Standard403Response:
      description: Invalid or missing Authorization header
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardError'
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    bucketKey:
      name: bucketKey
      in: path
      description: Unique identifier for a bucket
      required: true
      schema:
        type: string
    environmentId:
      name: environmentId
      in: path
      description: Unique identifier for a test environment
      required: true
      schema:
        type: string
    stepId:
      name: stepId
      in: path
      description: Unique identifier for a test step
      required: true
      schema:
        type: string
    teamId:
      name: teamId
      in: path
      description: Unique identifier for team
      required: true
      schema:
        type: string
    testId:
      name: testId
      in: path
      description: Unique identifier for a test
      required: true
      schema:
        type: string
  securitySchemes:
    runscope_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://www.runscope.com/signin/oauth/authorize
          tokenUrl: https://www.runscope.com/signin/oauth/access_token
          scopes:
            account:email: Allows you to read the email addresses of user accounts.
            api:read: Default read access.
            bucket:auth_token: "Allows you to read all bucket information, including\
              \ Authenticated Buckets."
            bucket:write: Allows you to create new buckets on behalf of the user (up
              to their plan limit).
            message:write: Allows you to create new messages on behalf of the user
              (up to their plan limit).
            team:read: Allows you to read team details such as lists of team members
              and external service integrations.
            test:read: Allows you to read the details of API tests.
            test:write: "Allows you to create, update and delete details of API tests."
x-original-swagger-version: "2.0"
