openapi: 3.0.1
info:
  title: GoToMeeting
  description: "<br>The GoToMeeting API provides seamless integration of GoToMeeting\
    \ provisioning and meeting management into your existing infrastructure or third\
    \ party applications.<br><br>For customers, the ability to add, suspend or delete\
    \ an organizer in your GoToMeeting Corporate account from within your primary\
    \ management systems simplifies and streamlines the entire process of account\
    \ management. The ability to monitor meeting schedules, history and active meeting\
    \ status allows managers to leverage GoToMeeting activities through your primary\
    \ applications.<br><br>For third parties, the ability to create, update or delete\
    \ a meeting from within your application makes real-time collaboration possible\
    \ for your customers. The ability to update meeting schedules, view history and\
    \ scheduled meetings, and view attendees from past meetings allows you to enhance\
    \ your users' experience and the value of your applications."
  termsOfService: https://developer.citrixonline.com/terms-use
  contact:
    name: Developer Support
    url: https://developer.citrixonline.com
    email: developer-support@citrixonline.com
  version: 1.0.0
  x-apisguru-categories:
  - collaboration
  x-logo:
    backgroundColor: '#5F6166'
    url: https://twitter.com/citrix/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://developer.citrixonline.com/sites/default/files/citrix/citrix-apis/gotomeeting.json
    version: "2.0"
  x-providerName: citrixonline.com
  x-serviceName: gotomeeting
externalDocs:
  url: https://developer.citrixonline.com/
servers:
- url: https://api.citrixonline.com/G2M/rest
tags:
- name: Organizers
  description: Operations on organizers. Only available to users with the admin role.
- name: Meetings
  description: Operations on meetings.
- name: Groups
  description: Operations on groups. Only available to users with the admin role.
paths:
  /groups:
    get:
      tags:
      - Groups
      summary: Get groups
      description: List all groups for an account. This API call is only available
        to users with the admin role.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        "403":
          description: Forbidden
          content: {}
  /groups/{groupKey}/attendees:
    get:
      tags:
      - Groups
      summary: Get attendees by group
      description: Returns all attendees for all meetings within specified date range
        held by organizers within the specified group. This API call is only available
        to users with the admin role. This API call can be used only for groups with
        maximum 50 organizers.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: groupKey
        in: path
        description: The key of the group
        required: true
        schema:
          type: integer
          format: int64
      - name: startDate
        in: query
        description: "Start of date range, in ISO8601 UTC format, e.g. 2015-07-01T22:00:00Z"
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "End of date range, in ISO8601 UTC format, e.g. 2015-07-01T23:00:00Z"
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendeeByGroup'
        "400":
          description: Bad Request
          content: {}
  /groups/{groupKey}/historicalMeetings:
    get:
      tags:
      - Groups
      summary: Get historical meetings by group
      description: "Get historical meetings for the specified group that started within\
        \ the specified date/time range. This API call is only available to users\
        \ with the admin role. This API call is restricted to groups with a maximum\
        \ of 50 organizers. Remark: Meetings which are still ongoing at the time of\
        \ the request are NOT contained in the result array."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: groupKey
        in: path
        description: The key of the group
        required: true
        schema:
          type: integer
          format: int64
      - name: startDate
        in: query
        description: "Required start of date range, in ISO8601 UTC format, e.g. 2015-07-01T22:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "Required end of date range, in ISO8601 UTC format, e.g. 2015-07-01T23:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalMeetingByGroup'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /groups/{groupKey}/meetings:
    get:
      tags:
      - Groups
      summary: "DEPRECATED: Get historical meetings by group"
      description: "DEPRECATED: Please use the new API calls 'Get historical meetings\
        \ by group' and 'Get upcoming meetings by group'. Get meetings for a specified\
        \ group. Additional filters can be used to view only meetings within a specified\
        \ date range. This API call is only available to users with the admin role."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: groupKey
        in: path
        description: The key of the group
        required: true
        schema:
          type: integer
          format: int64
      - name: history
        in: query
        description: "When 'true', returns all past meetings within date range"
        required: true
        schema:
          type: boolean
      - name: startDate
        in: query
        description: "If history=true, required start of date range, in ISO8601 UTC\
          \ format, e.g. 2015-07-01T22:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "If history=true, required end of date range, in ISO8601 UTC\
          \ format, e.g. 2015-07-01T23:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryMeetingByGroup'
        "400":
          description: Bad Request
          content: {}
      deprecated: true
  /groups/{groupKey}/organizers:
    get:
      tags:
      - Groups
      summary: Get organizers by group
      description: Returns all the organizers within a specific group. This API call
        is only available to users with the admin role.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: groupKey
        in: path
        description: The key of the group
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerByGroup'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
    post:
      tags:
      - Groups
      summary: Create organizer in group
      description: "Creates a new organizer and sends an email to the email address\
        \ defined in request. This API call is only available to users with the admin\
        \ role. You may also pass 'G2W' or 'G2T' or 'OPENVOICE' as productType variables,\
        \ creating organizers for those products. A G2W or G2T organizer will also\
        \ have access to G2M."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: groupKey
        in: path
        description: The key of the group
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The details of the organizer to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizerReq'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerShort'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Server Error
          content: {}
        "409":
          description: Conflict
          content: {}
      x-codegen-request-body-name: body
  /groups/{groupKey}/upcomingMeetings:
    get:
      tags:
      - Groups
      summary: Get upcoming meetings by group
      description: Get upcoming meetings for a specified group. This API call is only
        available to users with the admin role. This API call can be used only for
        groups with maximum 50 organizers.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: groupKey
        in: path
        description: The key of the group
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpcomingMeetingByGroup'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /historicalMeetings:
    get:
      tags:
      - Meetings
      summary: Get historical meetings
      description: "Get historical meetings for the currently authenticated organizer\
        \ that started within the specified date/time range. Remark: Meetings which\
        \ are still ongoing at the time of the request are NOT contained in the result\
        \ array."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        description: "Required start of date range, in ISO8601 UTC format, e.g. 2015-07-01T22:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "Required end of date range, in ISO8601 UTC format, e.g. 2015-07-01T23:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalMeeting'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /meetings:
    get:
      tags:
      - Meetings
      summary: "DEPRECATED: Get historical meetings"
      description: "DEPRECATED: Please use the new API calls 'Get historical meetings'\
        \ and 'Get upcoming meetings'.  Gets historical meetings for the current authenticated\
        \ organizer. Requires date range for filtering results to only meetings within\
        \ specified dates. History searches will contain the parameter 'meetingInstanceKey'\
        \ which is used in conjunction with the call 'Get Attendees by Meeting' to\
        \ get attendee information for a past meeting."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: history
        in: query
        description: "When 'true', returns all past meetings within date range"
        schema:
          type: boolean
          enum:
          - true
      - name: startDate
        in: query
        description: "If history=true, required start of date range, in ISO8601 UTC\
          \ format, e.g. 2015-07-01T22:00:00Z"
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "If history=true, required end of date range, in ISO8601 UTC\
          \ format, e.g. 2015-07-01T23:00:00Z"
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingHistory'
      deprecated: true
    post:
      tags:
      - Meetings
      summary: Create meeting
      description: Create a new meeting based on the parameters specified.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      requestBody:
        description: The meeting details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingReqCreate'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingCreated'
        "400":
          description: Bad Request
          content: {}
      x-codegen-request-body-name: body
  /meetings/{meetingId}:
    get:
      tags:
      - Meetings
      summary: Get meeting
      description: Returns the meeting details for the specified meeting.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingById'
        "404":
          description: Not found
          content: {}
    put:
      tags:
      - Meetings
      summary: Update meeting
      description: Updates an existing meeting specified by meetingId.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The meeting details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingReqUpdate'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Meetings
      summary: Delete meeting
      description: Deletes the meeting identified by the meetingId.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not found
          content: {}
  /meetings/{meetingId}/attendees:
    get:
      tags:
      - Meetings
      summary: Get attendees by meeting
      description: "List all attendees for specified meetingId of historical meeting.\
        \ The historical meetings can be fetched using 'Get historical meetings',\
        \ 'Get historical meetings by organizer', and 'Get historical meetings by\
        \ group'. For users with the admin role this call returns attendees for any\
        \ meeting. For any other user the call will return attendees for meetings\
        \ on which the user is a valid organizer."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendeeByMeeting'
        "404":
          description: Not found
          content: {}
  /meetings/{meetingId}/start:
    get:
      tags:
      - Meetings
      summary: Start meeting
      description: "Returns a host URL that can be used to start a meeting. When this\
        \ URL is opened in a web browser, the GoToMeeting client will be downloaded\
        \ and launched and the meeting will start. The end user is not required to\
        \ login to a client."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: meetingId
        in: path
        description: The meeting ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartUrl'
  /organizers:
    get:
      tags:
      - Organizers
      summary: Get organizer by email / Get all organizers
      description: "Gets the individual organizer specified by the organizer's email\
        \ address. If an email address is not specified, all organizers are returned.\
        \ This API call is only available to users with the admin role."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: The email address of the organizer
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organizer'
        "404":
          description: Not found
          content: {}
    post:
      tags:
      - Organizers
      summary: Create organizer
      description: "Creates a new organizer and sends an email to the email address\
        \ defined in the request. This API call is only available to users with the\
        \ admin role. You may also pass 'G2W' or 'G2T' or 'OPENVOICE' as productType\
        \ variables, creating organizers for those products. A G2W or G2T organizer\
        \ will also have access to G2M."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      requestBody:
        description: The details of the organizer to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizerReq'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerShort'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Server Error
          content: {}
        "409":
          description: Conflict
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Organizers
      summary: Delete organizer by email
      description: Deletes the individual organizer specified by the email address.
        This API call is only available to users with the admin role.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: The email address of the organizer
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
  /organizers/{organizerKey}:
    get:
      tags:
      - Organizers
      summary: Get organizer
      description: Returns the individual organizer specified by the key. This API
        call is only available to users with the admin role. Non-admin users can only
        make this call for their own organizerKey.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organizer'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
    put:
      tags:
      - Organizers
      summary: Update organizer
      description: "Updates the products of the specified organizer. To add a product\
        \ (G2M, G2W, G2T, OPENVOICE) for the organizer, the call must be sent once\
        \ for each product you want to add. To remove all products for the organizer,\
        \ set status to 'suspended'. The call is limited to users with the admin role."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: The organizer's status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizerStatus'
        required: true
      responses:
        "204":
          description: No Content
          content: {}
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Organizers
      summary: Delete organizer
      description: Deletes the individual organizer specified by the organizer key.
        This API call is only available to users with the admin role.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /organizers/{organizerKey}/attendees:
    get:
      tags:
      - Organizers
      summary: Get attendees by organizer
      description: Lists all attendees for all meetings within a specified date range
        for a specified organizer. This API call is only available to users with the
        admin role.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      - name: startDate
        in: query
        description: "A required start of date range in ISO8601 UTC format, e.g. 2015-07-01T22:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "A required end of date range in ISO8601 UTC format, e.g. 2015-07-01T23:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttendeeByOrganizer'
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not found
          content: {}
  /organizers/{organizerKey}/historicalMeetings:
    get:
      tags:
      - Organizers
      summary: Get historical meetings by organizer
      description: "Get historical meetings for the specified organizer that started\
        \ within the specified date/time range. Remark: Meetings which are still ongoing\
        \ at the time of the request are NOT contained in the result array."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      - name: startDate
        in: query
        description: "Required start of date range, in ISO8601 UTC format, e.g. 2015-07-01T22:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "Required end of date range, in ISO8601 UTC format, e.g. 2015-07-01T23:00:00Z"
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalMeeting'
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /organizers/{organizerKey}/meetings:
    get:
      tags:
      - Organizers
      summary: "DEPRECATED: Get meetings by organizer"
      description: "DEPRECATED: Please use the new API calls 'Get historical meetings\
        \ by organizer' and 'Get upcoming meetings by organizer'. Gets future (scheduled)\
        \ or past (history) meetings for a specified organizer. Include 'history=true'\
        \ and the past start and end dates in the URL to retrieve past meetings. Enter\
        \ 'scheduled=true' (without dates) to get scheduled meetings."
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      - name: scheduled
        in: query
        description: "When 'true', returns all future meetings. Date range not supported."
        schema:
          type: boolean
      - name: history
        in: query
        description: "When 'true', returns all past meetings within date range"
        schema:
          type: boolean
      - name: startDate
        in: query
        description: "If history is 'true', required start of date range, in ISO8601\
          \ UTC format, e.g. 2015-07-01T22:00:00Z"
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: "If history is 'true', required end of date range, in ISO8601\
          \ UTC format, e.g. 2015-07-01T23:00:00Z"
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingByOrganizer'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
      deprecated: true
  /organizers/{organizerKey}/upcomingMeetings:
    get:
      tags:
      - Organizers
      summary: Get upcoming meetings by organizer
      description: Get upcoming meetings for a specified organizer. This API call
        is only available to users with the admin role.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      - name: organizerKey
        in: path
        description: The key of the organizer
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpcomingMeeting'
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not found
          content: {}
  /upcomingMeetings:
    get:
      tags:
      - Meetings
      summary: Get upcoming meetings
      description: Gets upcoming meetings for the current authenticated organizer.
      parameters:
      - name: Authorization
        in: header
        description: Access token
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpcomingMeeting'
        "403":
          description: Forbidden
          content: {}
components:
  schemas:
    AttendeeByGroup:
      required:
      - attendeeEmail
      - attendeeName
      - conferenceCallInfo
      - duration
      - email
      - endTime
      - firstName
      - groupName
      - joinTime
      - lastName
      - leaveTime
      - meetingId
      - meetingInstanceKey
      - meetingType
      - numAttendees
      - organizerKey
      - organizerkey
      - startTime
      - subject
      type: object
      properties:
        attendeeEmail:
          type: string
          description: The attendee's email address
        attendeeName:
          type: string
          description: The full name of the attendee
        conferenceCallInfo:
          type: string
          description: Audio options for the attended meeting
        duration:
          type: integer
          description: The duration of attendance in minutes
          format: int32
        email:
          type: string
          description: The email address of the meeting organizer
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The first name of the organizer of the attended meeting
        groupName:
          type: string
          description: The name of the group
        joinTime:
          type: string
          description: The time the attendee joined the meeting instance
          format: date-time
        lastName:
          type: string
          description: The surname of the meeting organizer
        leaveTime:
          type: string
          description: The time the attendee left the meeting instance
          format: date-time
        meetingId:
          type: string
          description: The meeting ID
        meetingInstanceKey:
          type: integer
          description: The key of the attended meeting instance
          format: int64
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        numAttendees:
          type: integer
          description: The number of attendees at the attended meeting instance
          format: int32
        organizerKey:
          type: string
          description: The key of the meeting organizer
        organizerkey:
          type: integer
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
          format: int64
        startTime:
          type: string
          description: The time the meeting instance started
          format: date-time
        subject:
          type: string
          description: The subject of the attended meeting
      description: Describes an attendee of a meeting instance held by an organizer
        within a specified group.
    AttendeeByMeeting:
      required:
      - attendeeEmail
      - attendeeName
      - conferenceCallInfo
      - duration
      - email
      - endTime
      - firstName
      - groupName
      - joinTime
      - lastName
      - leaveTime
      - meetingId
      - meetingInstanceKey
      - meetingType
      - name
      - numAttendees
      - organizerkey
      - startTime
      - subject
      type: object
      properties:
        attendeeEmail:
          type: string
          description: The attendee's email address
        attendeeName:
          type: string
          description: The attendee's full name
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        duration:
          type: integer
          description: The meeting duration in minutes
          format: int32
        email:
          type: string
          description: The email address of the meeting organizer
        endTime:
          type: string
          description: The ending time of the meeting instance
          format: date-time
        firstName:
          type: string
          description: The first name of the meeting organizer
        groupName:
          type: string
          description: DEPRECATED. Returns 'NA'
        joinTime:
          type: string
          description: The time the attendee joined the meeting instance
          format: date-time
        lastName:
          type: string
          description: The surname of the meeting organizer
        leaveTime:
          type: string
          description: The time the attendee left the meeting instance
          format: date-time
        meetingId:
          type: integer
          description: The meeting ID
          format: int64
        meetingInstanceKey:
          type: integer
          description: The key of the unique meeting instance
          format: int64
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        name:
          type: string
          description: The attendee's full name
        numAttendees:
          type: integer
          description: The number of attendees at the meeting instance
          format: int32
        organizerkey:
          type: integer
          description: The key of the meeting organizer
          format: int64
        startTime:
          type: string
          description: The starting time of the meeting instance
          format: date-time
        subject:
          type: string
          description: The subject of the meeting
      description: Describes an attendee of a specified meeting instance.
    AttendeeByOrganizer:
      required:
      - attendeeEmail
      - attendeeName
      - conferenceCallInfo
      - duration
      - email
      - endTime
      - firstName
      - groupName
      - joinTime
      - lastName
      - leaveTime
      - meetingId
      - meetingInstanceKey
      - meetingType
      - name
      - newMeetingId
      - numAttendees
      - organizerkey
      - startTime
      - subject
      type: object
      properties:
        attendeeEmail:
          type: string
          description: The attendee's email address
        attendeeName:
          type: string
          description: The full name of the attendee
        conferenceCallInfo:
          type: string
          description: Audio options for the attended meeting
        duration:
          type: integer
          description: The duration of attendance in minutes
          format: int32
        email:
          type: string
          description: The email address of the meeting organizer
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The first name of the meeting organizer
        groupName:
          type: string
          description: The name of the group the organizer is assigned to
        joinTime:
          type: string
          description: The time the attendee joined the meeting instance
          format: date-time
        lastName:
          type: string
          description: The surname of the meeting organizer
        leaveTime:
          type: string
          description: The time the attendee left the meeting instance
          format: date-time
        meetingId:
          type: integer
          description: The meeting ID
          format: int64
        meetingInstanceKey:
          type: integer
          description: The key of the attended meeting instance
          format: int64
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        name:
          type: string
          description: The full name of the meeting organizer
        newMeetingId:
          type: string
          description: The formatted meeting ID
        numAttendees:
          type: integer
          description: The number of attendees at the attended meeting instance
          format: int32
        organizerkey:
          type: integer
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
          format: int64
        startTime:
          type: string
          description: The time the meeting instance started
          format: date-time
        subject:
          type: string
          description: The subject of the attended meeting
      description: Describes an attendee of a meeting instance held by a specified
        organizer.
    Group:
      required:
      - groupName
      - groupkey
      - numOrganizers
      - parentKey
      - status
      type: object
      properties:
        groupName:
          type: string
          description: The name of this group
        groupkey:
          type: integer
          description: The key of this group
          format: int64
        numOrganizers:
          type: integer
          description: The number of organizers assigned to this group
          format: int32
        parentKey:
          type: integer
          description: The key of the parent group this group belongs to. Identical
            with the groupkey if this group is not a subgroup
          format: int64
        status:
          $ref: '#/components/schemas/Status'
      description: "Describes a collection of organizers categorized by department\
        \ or job function, for example. Can be a subgroup of a larger group."
    HistoricalMeeting:
      required:
      - accountKey
      - conferenceCallInfo
      - duration
      - email
      - endTime
      - firstName
      - lastName
      - locale
      - meetingId
      - meetingType
      - numAttendees
      - organizerKey
      - sessionId
      - startTime
      - subject
      type: object
      properties:
        accountKey:
          type: string
          description: The key of the company account
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        duration:
          type: string
          description: The duration of the meeting session in minutes
        email:
          type: string
          description: The meeting organizer's email address
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The meeting organizer's first name
        lastName:
          type: string
          description: The surname of the meeting organizer
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        numAttendees:
          type: string
          description: The number of attendees at the meeting instance
        organizerKey:
          type: string
          description: The key of the meeting organizer
        sessionId:
          type: string
          description: The ID of the meeting session
        startTime:
          type: string
          description: The time the meeting instance started
          format: date-time
        subject:
          type: string
          description: The subject of the meeting
      description: Describes a historical meeting within specified dates.
    HistoricalMeetingByGroup:
      required:
      - accountKey
      - duration
      - email
      - endTime
      - firstName
      - groupName
      - lastName
      - locale
      - meetingId
      - meetingType
      - numAttendees
      - organizerKey
      - startTime
      - subject
      type: object
      properties:
        accountKey:
          type: string
          description: The key of the company account
        duration:
          type: string
          description: The duration of the meeting session in minutes
        email:
          type: string
          description: The meeting organizer's email address
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The meeting organizer's first name
        groupName:
          type: string
          description: The name of the group
        lastName:
          type: string
          description: The surname of the meeting organizer
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        numAttendees:
          type: string
          description: The number of attendees at the meeting instance
        organizerKey:
          type: string
          description: The key of the meeting organizer
        startTime:
          type: string
          description: The time the meeting instance started
          format: date-time
        subject:
          type: string
          description: The subject of the meeting
      description: Describes a historical meeting within specified dates for a specified
        group.
    HistoryMeetingByGroup:
      required:
      - conferenceCallInfo
      - duration
      - email
      - endTime
      - firstName
      - groupName
      - lastName
      - meetingId
      - meetingInstanceKey
      - meetingType
      - numAttendees
      - organizerKey
      - organizerkey
      - startTime
      - subject
      type: object
      properties:
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        duration:
          type: string
          description: The duration of this meeting instance in minutes
        email:
          type: string
          description: The email address of the meeting organizer
        endTime:
          type: string
          description: The time this meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The first name of the meeting organizer
        groupName:
          type: string
          description: The name of the group
        lastName:
          type: string
          description: The surname of the meeting organizer
        meetingId:
          type: string
          description: The meeting ID
        meetingInstanceKey:
          type: integer
          description: The key of this meeting instance
          format: int64
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        numAttendees:
          type: integer
          description: The number of attendees at this meeting instance
          format: int32
        organizerKey:
          type: string
          description: The key of the meeting organizer
        organizerkey:
          type: integer
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
          format: int64
        startTime:
          type: string
          description: The time this meeting instance started
          format: date-time
        subject:
          type: string
          description: The subject of the meeting
      description: Describes past meeting instance(s) held by an organizer within
        a specified group.
    MeetingById:
      required:
      - conferenceCallInfo
      - createTime
      - duration
      - endTime
      - maxParticipants
      - meetingId
      - meetingKey
      - meetingType
      - passwordRequired
      - startTime
      - status
      - subject
      - uniqueMeetingId
      type: object
      properties:
        conferenceCallInfo:
          type: string
          description: Audio options of the meeting
        createTime:
          type: string
          description: DEPRECATED. Returns an empty string ''
          format: date-time
        duration:
          type: integer
          description: The duration of the meeting in minutes
          format: int32
        endTime:
          type: string
          description: The ending time of the meeting
          format: date-time
        maxParticipants:
          type: integer
          description: The maximum number of participants allowed at the meeting
          format: int32
        meetingId:
          type: integer
          description: The meeting ID
          format: int64
        meetingKey:
          type: integer
          description: The meeting ID. Field retained for backwards compatibility
            reasons
          format: int64
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting
        startTime:
          type: string
          description: The meeting starting time
          format: date-time
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
        uniqueMeetingId:
          type: integer
          description: The meeting ID. Field retained for backwards compatibility
            reasons
          format: int64
      description: Describes a given meeting.
    MeetingByOrganizer:
      required:
      - conferenceCallInfo
      - createTime
      - endTime
      - maxParticipants
      - meetingType
      - meetingid
      - passwordRequired
      - startTime
      - status
      - subject
      - uniqueMeetingId
      type: object
      properties:
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        createTime:
          type: string
          description: DEPRECATED. Returns an empty string ''
          format: date-time
        endTime:
          type: string
          description: The ending time of the meeting
          format: date-time
        maxParticipants:
          type: integer
          description: The maximum number of participants allowed at the meeting
          format: int32
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        meetingid:
          type: integer
          description: The meeting ID
          format: int64
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting
        startTime:
          type: string
          description: The starting time of the meeting
          format: date-time
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
        uniqueMeetingId:
          type: integer
          description: A unique ID for the meeting
          format: int64
      description: Describes a meeting scheduled by a specified organizer
    MeetingCreated:
      required:
      - conferenceCallInfo
      - joinURL
      - maxParticipants
      - meetingid
      - uniqueMeetingId
      type: object
      properties:
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        joinURL:
          type: string
          description: The URL the meeting participants will use to join the meeting
        maxParticipants:
          type: integer
          description: The maximum number of participants allowed in the meeting
          format: int32
        meetingid:
          type: integer
          description: The meeting ID
          format: int64
        uniqueMeetingId:
          type: integer
          description: The meeting ID. Field retained for backwards compatibility
            reasons
          format: int64
      description: Describes a newly created meeting.
    MeetingHistory:
      required:
      - conferenceCallInfo
      - date
      - duration
      - email
      - endTime
      - firstName
      - groupName
      - lastName
      - meetingId
      - meetingInstanceKey
      - meetingKey
      - meetingType
      - newMeetingId
      - newOrganizerKey
      - numAttendees
      - organizerKey
      - organizerkey
      - passwordRequired
      - sessionId
      - startTime
      - status
      - subject
      - uniqueMeetingId
      type: object
      properties:
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        date:
          type: string
          description: The time the meeting instance started. Field retained for backwards
            compatibility reasons
          format: date-time
        duration:
          type: integer
          description: The duration of the meeting session in minutes
          format: int32
        email:
          type: string
          description: The meeting organizer's email address
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The meeting organizer's first name
        groupName:
          type: string
          description: DEPRECATED. An empty string '' is returned
        lastName:
          type: string
          description: The surname of the meeting organizer
        meetingId:
          type: integer
          description: The meeting ID
          format: int64
        meetingInstanceKey:
          type: integer
          description: The key of the unique meeting instance
          format: int64
        meetingKey:
          type: integer
          description: The meeting ID. Field retained for backwards compatibility
            reasons
          format: int64
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        newMeetingId:
          type: string
          description: Formatted meeting ID
        newOrganizerKey:
          type: string
          description: The key of the meeting organizer. Field introduced for compatibility
            reasons
        numAttendees:
          type: integer
          description: The number of attendees at the meeting instance
          format: int32
        organizerKey:
          type: string
          description: The key of the meeting organizer
        organizerkey:
          type: string
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons
        passwordRequired:
          type: boolean
          description: DEPRECATED. An empty string '' is returned
        sessionId:
          type: integer
          description: The ID of the meeting session
          format: int64
        startTime:
          type: string
          description: The time the meeting instance started
          format: date-time
        status:
          type: string
          description: DEPRECATED. An empty string '' is returned
        subject:
          type: string
          description: The subject of the meeting
        uniqueMeetingId:
          type: integer
          description: The meeting ID. Field retained for backwards compatibility
            reasons
          format: int64
      description: Describes a unique past meeting instance.
    MeetingReqCreate:
      required:
      - conferencecallinfo
      - endtime
      - meetingtype
      - passwordrequired
      - starttime
      - subject
      - timezonekey
      type: object
      properties:
        conferencecallinfo:
          type: string
          description: "A required string. Can be one of the following options: <br>PSTN\
            \ (PSTN only), <br>Free (PSTN and VoIP), <br>Hybrid, (PSTN and VoIP),\
            \ <br>Private (you provide numbers and access code), or <br>VoIP (VoIP\
            \ only). <br>You may also enter plain text for numbers and access codes\
            \ with a limit of 255 characters"
        endtime:
          type: string
          description: "The ending time of the meeting. Required ISO8601 UTC string,\
            \ e.g. 2015-07-01T23:00:00Z"
          format: date-time
        meetingtype:
          $ref: '#/components/schemas/MeetingType'
        passwordrequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
            Required parameter
        starttime:
          type: string
          description: "The starting time of the meeting. Required ISO8601 UTC string,\
            \ e.g. 2015-07-01T22:00:00Z"
          format: date-time
        subject:
          type: string
          description: The subject of the meeting. 100 characters maximum. The characters
            '&gt;' and '&lt;' have to be replaced with the corresponding html character
            code (&amp;gt; for &#39;&gt;&#39; and &amp;lt; for &#39;&lt;&#39;)
        timezonekey:
          type: string
          description: DEPRECATED. Must be provided and set to empty string ''
      description: Describes the information required to create a meeting.
    MeetingReqUpdate:
      required:
      - conferencecallinfo
      - endtime
      - meetingtype
      - passwordrequired
      - starttime
      - subject
      - timezonekey
      type: object
      properties:
        conferencecallinfo:
          type: string
          description: "A required string. Can be one of the following options: <br>PSTN\
            \ (PSTN only), <br>Free (PSTN and VoIP), <br>Hybrid, (PSTN and VoIP),\
            \ <br>Private (you provide numbers and access code), or <br>VoIP (VoIP\
            \ only). <br>You may also enter plain text for numbers and access codes\
            \ with a limit of 255 characters"
        endtime:
          type: string
          description: "The ending time of the meeting. A required ISO8601 UTC string,\
            \ e.g. 2015-07-01T22:00:00Z"
          format: date-time
        meetingtype:
          $ref: '#/components/schemas/MeetingType'
        passwordrequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
            Required parameter
        starttime:
          type: string
          description: "The starting time of the meeting. A required ISO8601 UTC string,\
            \ e.g. 2015-07-01T22:00:00Z"
          format: date-time
        subject:
          type: string
          description: A description of the meeting. 100 characters maximum. The characters
            '&gt;' and '&lt;' have to be replaced with the corresponding html character
            code (&amp;gt; for &#39;&gt;&#39; and &amp;lt; for &#39;&lt;&#39;)
        timezonekey:
          type: string
          description: DEPRECATED. Must be provided and set to empty string ''
      description: Describes the information required to update a meeting.
    MeetingScheduled:
      required:
      - conferenceCallInfo
      - createTime
      - endTime
      - maxParticipants
      - meetingType
      - meetingid
      - passwordRequired
      - startTime
      - status
      - subject
      - uniqueMeetingId
      type: object
      properties:
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting.
        createTime:
          type: string
          description: The time the meeting was created.
          format: date-time
        endTime:
          type: string
          description: The ending time of the meeting.
          format: date-time
        maxParticipants:
          type: integer
          description: The maximum number of participants allowed at the meeting.
          format: int32
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        meetingid:
          type: integer
          description: The meeting ID.
          format: int64
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
        startTime:
          type: string
          description: The starting time of the meeting.
          format: date-time
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting.
        uniqueMeetingId:
          type: integer
          description: The meeting ID. Field retained for backwards compatibility
            reasons.
          format: int64
      description: Describes a scheduled meeting.
    MeetingStatus:
      type: string
      description: "The meeting status, i.e whether the meeting is running or not"
      enum:
      - ACTIVE
      - INACTIVE
    MeetingType:
      type: string
      description: The meeting type
      enum:
      - immediate
      - recurring
      - scheduled
    Organizer:
      required:
      - email
      - firstName
      - groupId
      - groupName
      - lastName
      - maxNumAttendeesAllowed
      - organizerKey
      - products
      - status
      type: object
      properties:
        email:
          type: string
          description: The organizer's email address
        firstName:
          type: string
          description: The organizer's first name
        groupId:
          type: integer
          description: The key of the group this organizer is assigned to
          format: int64
        groupName:
          type: string
          description: The name of the group this organizer is assigned to
        lastName:
          type: string
          description: The organizer's surname
        maxNumAttendeesAllowed:
          type: integer
          description: The maximum number of attendees allowed at sessions hosted
            by this organizer.
          format: int32
        organizerKey:
          type: integer
          description: The key of the organizer
          format: int64
        products:
          type: array
          description: "The products the organizer has access to, can be 'G2M', 'G2W',\
            \ 'G2T' or 'OPENVOICE'"
          items:
            $ref: '#/components/schemas/Product'
        status:
          $ref: '#/components/schemas/Status'
      description: Describes an organizer.
    OrganizerByGroup:
      required:
      - email
      - firstName
      - groupId
      - groupName
      - lastName
      - maxNumAttendeesAllowed
      - organizerKey
      - products
      - status
      type: object
      properties:
        email:
          type: string
          description: The organizer's email address
        firstName:
          type: string
          description: The organizer's first name
        groupId:
          type: integer
          description: The key of the group
          format: int64
        groupName:
          type: string
          description: The name of the group
        lastName:
          type: string
          description: The organizer's surname
        maxNumAttendeesAllowed:
          type: integer
          description: The maximum number of attendees allowed at sessions held by
            this organizer
          format: int32
        organizerKey:
          type: integer
          description: The key of the organizer
          format: int64
        products:
          type: array
          description: "The products the organizer has access to, can be 'G2M', 'G2W',\
            \ 'G2T' or 'OPENVOICE'"
          items:
            $ref: '#/components/schemas/Product'
        status:
          $ref: '#/components/schemas/Status'
      description: Describes an organizer within a specified group.
    OrganizerReq:
      required:
      - firstName
      - lastName
      - organizerEmail
      - productType
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the organizer
        lastName:
          type: string
          description: The surname of the organizer
        organizerEmail:
          type: string
          description: The email address of the organizer
        productType:
          $ref: '#/components/schemas/Product'
      description: "Describes the information required to create an organizer, with\
        \ or without assigning a group."
    OrganizerShort:
      required:
      - email
      - key
      type: object
      properties:
        email:
          type: string
          description: The organizer's email address
        key:
          type: integer
          description: The organizer's key
          format: int64
      description: Describes a newly created organizer.
    OrganizerStatus:
      type: object
      properties:
        productType:
          $ref: '#/components/schemas/Product'
        status:
          type: string
          description: The status of the organizer can be set to. Use 'suspended'
            to remove all products. The formerly used status 'active' is now DEPRECATED
            for this call. To activate the organizer please assign a product. In this
            case do not pass this parameter
          enum:
          - suspended
      description: "Describes the status of an organizer, i.e. whether they are able\
        \ to host meetings."
    Product:
      type: string
      description: "The products the organizer has access to, can be 'G2M', 'G2W',\
        \ 'G2T' or 'OPENVOICE'"
      enum:
      - G2M
      - G2T
      - G2W
      - OPENVOICE
    ScheduledMeetingByGroup:
      required:
      - attendees
      - conferenceCallInfo
      - email
      - firstName
      - groupName
      - lastName
      - meetingId
      - meetingType
      - organizerKey
      - organizerkey
      - passwordRequired
      - subject
      type: object
      properties:
        attendees:
          type: string
          description: Not in use.
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting.
        email:
          type: string
          description: The email address of the meeting organizer.
        firstName:
          type: string
          description: The first name of the meeting organizer.
        groupName:
          type: string
          description: The name of the group.
        lastName:
          type: string
          description: The surname of the meeting organizer.
        meetingId:
          type: string
          description: The meeting ID.
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        organizerKey:
          type: string
          description: The key of the meeting organizer.
        organizerkey:
          type: integer
          description: The key of the meeting organizer. Field retained for backwards
            compatibility reasons.
          format: int64
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting.
        subject:
          type: string
          description: The subject of the meeting.
      description: Describes a meeting scheduled by an organizer within a specified
        group.
    StartUrl:
      required:
      - hostURL
      type: object
      properties:
        hostURL:
          type: string
          description: The host URL that can be used to start a meeting.
      description: Host URL that can be used to start a meeting
    Status:
      type: string
      description: "The status of an organizer (or group), i.e. whether the organizer\
        \ (or the members of the group respectively) are able to host meetings"
      enum:
      - active
      - suspended
    UpcomingMeeting:
      required:
      - accountKey
      - conferenceCallInfo
      - email
      - endTime
      - firstName
      - lastName
      - locale
      - meetingId
      - meetingType
      - organizerKey
      - passwordRequired
      - startTime
      - status
      - subject
      type: object
      properties:
        accountKey:
          type: string
          description: The key of the company account
        conferenceCallInfo:
          type: string
          description: Audio options for the meeting
        email:
          type: string
          description: The meeting organizer's email address
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The meeting organizer's first name
        lastName:
          type: string
          description: The surname of the meeting organizer
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        organizerKey:
          type: string
          description: The key of the meeting organizer
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting
            or not
        startTime:
          type: string
          description: The time the meeting instance will start
          format: date-time
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
      description: Describes an upcoming meeting.
    UpcomingMeetingByGroup:
      required:
      - accountKey
      - email
      - endTime
      - firstName
      - groupName
      - lastName
      - locale
      - meetingId
      - meetingType
      - organizerKey
      - passwordRequired
      - startTime
      - subject
      type: object
      properties:
        accountKey:
          type: string
          description: The key of the company account
        email:
          type: string
          description: The meeting organizer's email address
        endTime:
          type: string
          description: The time the meeting instance ended
          format: date-time
        firstName:
          type: string
          description: The meeting organizer's first name
        groupName:
          type: string
          description: The name of the group the meeting belongs to
        lastName:
          type: string
          description: The surname of the meeting organizer
        locale:
          type: string
          description: The current language setting of the organizer in the web portal
        meetingId:
          type: string
          description: The meeting ID
        meetingType:
          $ref: '#/components/schemas/MeetingType'
        organizerKey:
          type: string
          description: The key of the meeting organizer
        passwordRequired:
          type: boolean
          description: Indicates whether a password is required to join the meeting
            or not
        startTime:
          type: string
          description: The time the meeting instance will start
          format: date-time
        status:
          $ref: '#/components/schemas/MeetingStatus'
        subject:
          type: string
          description: The subject of the meeting
      description: Describes an upcoming meeting of a group.
  parameters:
    Authorization:
      name: Authorization
      in: header
      description: Access token
      required: true
      schema:
        type: string
    groupKey:
      name: groupKey
      in: path
      description: The key of the group
      required: true
      schema:
        type: integer
        format: int64
    meetingId:
      name: meetingId
      in: path
      description: The meeting ID
      required: true
      schema:
        type: integer
        format: int64
    organizerKey:
      name: organizerKey
      in: path
      description: The key of the organizer
      required: true
      schema:
        type: integer
        format: int64
x-original-swagger-version: "2.0"
