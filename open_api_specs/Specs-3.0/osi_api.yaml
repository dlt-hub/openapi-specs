openapi: 3.0.1
info:
  title: OSF APIv2 Documentation
  contact:
    name: OSF
    url: https://osf.io/support
    email: support@osf.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "2.0"
  x-logo:
    url: https://cdn.cos.io/media/images/cos_center_logo_small.original.png
    backgroundColor: transparent
servers:
- url: https://api.test.osf.io/v2
tags:
- name: Introduction
  description: |-
    Welcome to the Open Science Framework API. With this API you can access users, projects, components, logs, and files from the [Open Science Framework](https://osf.io/). The Open Science Framework (OSF) is a free, open-source service maintained by the [Center for Open Science](http://cos.io/).

    The OSF serves as a repository and archive for study designs, materials, data, manuscripts, or anything else associated with your research during the research process. Every project and file on the OSF has a permanent unique identifier, and every registration (a permanent, time-stamped version of your projects and files) can be assigned a DOI. You can use the OSF to measure your impact by monitoring the traffic to projects and files you make public. With the OSF you have full control of what parts of your research are public and what remains private.
  x-traitTag: true
- name: General Usage
  description: |-
    The OSF API generally conforms to the [JSON-API v1.0 spec](http://jsonapi.org/format/1.0/). Where exceptions exist, they will be noted. Each endpoint will have its own documentation, but there are some general principles.
    Note: Assume undocumented routes/features/fields are unstable.
    #### Canonical URLs
    All canonical URLs have trailing slashes.  A request to an endpoint without a trailing slash will result in a **301 Redirect** to the canonical URL.  There are some exceptions when working with the Files API, so if a URL in a response does not have a slash, do not append one.
    #### Plurals
    Endpoints are always pluralized.  `/users/`, not `/user/`, `/nodes/`, not `/node/`.
    The only exception are the node and preprint citation endpoints, which are `/citation/`, not `/citations/`.
    #### Common Actions
    Every endpoint in the OSF API responds to `GET`, `HEAD`, and `OPTION` requests.
    You must have adequate permissions to interact with any endpoint. Unauthorized use will result in **401 Unauthorized** or **403 Forbidden** responses.
    Use `HEAD` to probe an endpoint and make sure your headers are well-formed. A `GET` request will return a representation of the entity or entity collection referenced by the endpoint.
    An `OPTIONS` request will return a JSON object that describes the endpoint, including the name, a description, the acceptable request formats, the allowed response formats, and any actions available via the endpoint.
    ### Testing
    The OSF provides public testing servers to test integrations against.
    #### Testing Server
    The test-* subdomains of the OSF are intended to match, at any given time, the current production environment of the Open Science Framework.
    We have staging servers that will have newer features, including newer API features, that aren't ready for production. However, because those servers are subject to the whims of QA and whichever group needs to do specific testing, they aren't particular stable for API developers. #### Testing Server
    The `test` subdomains of the OSF are intended to match, at any given time, the current production environment of the OSF. The test servers linked below are primarily for developing your API application on a stable system.
    - Test web server: https://test.osf.io/
    - Test API server: https://api.test.osf.io/v2/
    - Test Files server (known as Waterbutler): https://files.us.test.osf.io/
    #### Ephemerality Notice
    Expect the server to be down from time to time while we update software, and don't expect data to persist indefinitely. We periodically run data migrations on the test servers without notice.
  x-traitTag: true
- name: Authentication
  description: |-
    #### Token Auth
    To use a Personal Access Token, make an `Authorization` header with the contents `Bearer <token>` as shown in the example below, replacing `<token>` with your token.

        curl -X "GET" "https://api.osf.io/v2/users/me/" \
        -H "Authorization: Bearer <token>"

    To make a Personal Access Token, visit your OSF settings page (either on the [OSF](https://osf.io/settings/tokens) or our [testing server](https://test.osf.io/settings/tokens)) to create one. You can limit the scope of the token, but remember that it has access to all of the information that you do within the limits of the scope, so be careful with your tokens.
    #### OAuth
    The OSF allows third-party web applications to connect to the OSF on behalf of other users via the OAuth 2.0 web application flow.
    You can add a developer application from the OSF settings page (either on the [OSF](https://osf.io/settings/applications) or our [testing server](https://test.osf.io/settings/applications)).

    We will be adding narrative documentation for handling OAuth flows, but for now, if you're familiar with OAuth, you can check out the [OAuth SSO Guide](https://github.com/CenterForOpenScience/osf-cas/blob/develop/README_OAUTH_SSO_GUIDE.md) for options.
  x-traitTag: true
- name: Pagination
  description: |-
    All entity collection endpoints respond to the `page` query parameter as described in the [JSON-API spec](http://jsonapi.org/format/#fetching-pagination).

    However, links to the first, last, previous, and next pages of results are provided in the `links` key of the response, and you are encouraged to use those rather than adding query parameters by hand.

    If there are only enough results to fill one page, the `first`, `last`, `prev`, and `next` links will be null.
    #### Versioning
    As of version `2.3`, pagination links conform to the JSON API specification. Meta information was pulled out of the `links` object and placed in a top-level `meta` object.

    The `meta` key contains the total number of entities available, as well as the current number of results displayed per page.
  x-traitTag: true
- name: Versioning
  description: |-
    Versioning can be specified in three different ways:

    #### URL Path Versioning
    + `/v2/` is the only documented path, but only refers to the major version
    + A version specified via the URL path is a **required** part of the URL.
    + Only a major version can be specified via the URL path, i.e. `/v2.0.6/` is invalid, additionally, paths such as `/v2.0/` are invalid.
    + If the default version of the API is within the major version specified in the URL path, the default version will be applied (i.e. if the default version is `2.3` and the URL path is `/v2/`, then version returned will be `2.3`).
    + If the default version of the API is not within the major version specified in the URL path, the URL path version will be applied (i.e. if the default version is `3.0` and the URL path is `/v2/`, then the version returned will be `2.0`)

    #### Query Parameter Versioning
    + `/v2/nodes/?version=2.1.6`
    + Pinning to a specific version via a query parameter is **optional**.
    + A specific version (major, minor, or patch) for a single request can be specified via the `version` query parameter, as long as it is an allowed version.
    + If the version specified in the query parameter does not fall within the same major version specified in the URL path, i.e `/v2/nodes/?version=3.1.4` a 409 Conflict response will be returned.

    #### Header Versioning
    + `Accept-Header=application/vnd.api+json;version=3.0.1`
    + Pinning to a specific version via request header is **optional**.
    + A specific version (major, minor, or patch) for a single request can be specified via the `Accept Header` of the request, as long as it is an allowed version.
    + If the version specified in the header does not fall within the same major version specified in the URL path a 409 Conflict response will be returned.
    + If both a header version and query parameter version are specified, the versions must match exactly or a 409 Conflict response will be returned (i.e. one does not take precedence over the other).

    #### CHANGELOG
    `v2.1`
    + Pagination links conform to JSON API specification, i.e. `meta` information was pulled out of the `links` object and placed in a top-level `meta` object.
    + Deprecate the `node_links` field in the **Node** and **Registration** serializers in favor of `linked_nodes` and `linked_registrations`.

    `v2.2`
    + Modify institution nodes list so that affiliated components are also returned from `/v2/institutions/<id>/nodes/`.
    + Ensure all existing date fields are standardized on UTC.

    `v2.3`
    + Handle merged users more correctly on `/v2/users/`.

    `v2.4`
    + Deprecate the `parents` field in the **Taxonomies** serializer.
    + Deprecate the following fields in the **Preprint Provider** serializer:
        + `social_facebook`, `social_instagram`, and `social_twitter`
        + `banner_path`, `logo_path`, and `header_text`
        + `email_contact`
  x-traitTag: true
- name: Filtering
  description: |-
    Entity collections can be filtered by adding a query parameter in the form:

    &nbsp;&nbsp;&nbsp;&nbsp;`filter[<fieldname>]=<matching information>`

    String queries are filtered using substring matching. For example, if you were trying to find [Lise Meitner](http://en.wikipedia.org/wiki/Lise_Meitner):

    &nbsp;&nbsp;&nbsp;&nbsp;`/users/?filter[full_name]=meitn`

    You can filter on multiple fields, or the same field in different ways, by &-ing the query parameters together.

    &nbsp;&nbsp;&nbsp;&nbsp;`/users/?filter[full_name]=lise&filter[family_name]=mei`

    Boolean fields should be queried with `true` or `false`.

    &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?filter[registered]=true`

    You can request multiple resources by filtering on id and placing comma-separated values in your query parameter.

    &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?filter[id]=aegu6,me23a`

    You can filter with case-sensitivity or case-insensitivity by using `contains` and `icontains`, respectively.

    &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?filter[tags][icontains]=help`
  x-traitTag: true
- name: Sparse Fieldsets
  description: |
    All endpoints respond to the `fields` query parameter as described in the [JSON-API spec](http://jsonapi.org/format/#fetching-sparse-fieldsets).


    From the specification:

    <blockquote>
      <p>A client MAY request that an endpoint return only specific fields in the response on a per-type basis by including a fields[TYPE] parameter.</p>
      <p>The value of the fields parameter MUST be a comma-separated (U+002C COMMA, “,”) list that refers to the name(s) of the fields to be returned.</p>
      <p>If a client requests a restricted set of fields for a given resource type, an endpoint MUST NOT include additional fields in resource objects of that type in its response.</p>
    </blockquote>

    #### Basic Usage

    When making a request to an endpoint that returns a serialized object of some `type`, you can specify `fields[<type>]=<comma,separated,list,of,fields>` to receive a subset of the object's fields in the response.


    For example, the request below will serialize only the `title` attribute and `children` relationship for each node in the response.


    https://api.osf.io/v2/nodes/?fields[nodes]=title,children


    Sparse fieldsets can be used to restrict both attribute and relationship fields.
    Note that top-level objects (such as `type`, `id`, `attributes`, `relationships`, and `links`) will always be serialized and cannot be excluded.

    #### Advanced Usage

    Sparse fieldsets can be used to restrict any entity returned in the response.


    For example, the request below will serialize only the `full_name` attribute for each user (auto-embedded by the `embed=contributors` query parameter), and the `title` attribute for each node.


    https://api.osf.io/v2/nodes/?fields[nodes]=title,contributors&embed=contributors&fields[users]=full_name


    Any field specified in another query parameters used by the serializer (e.g. `embed`) must also be included in the sparse fieldset.
    For example, fields that are being embedded on the sparse type (e.g. `nodes`) must also be included in `fields[<type>]` when using embeds, or the embed will be invalid.


    A request to embed contributors and restrict nodes to only return the `title` attribute should have the form:


    https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title,contributors


    **NOT**


    https://api.osf.io/v2/nodes/?embed=contributors&fields[nodes]=title
  x-traitTag: true
- name: Embedding
  description: |-
    All related resources that appear in the `relationships` attribute are embeddable, meaning it is possible to fetch a node and its contributors in a single request by adding a query parameter like:

    &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?embed=contributors`

    The embedded results will have the following structure:

    &nbsp;&nbsp;&nbsp;&nbsp;`{relationship_name}: {full_embedded_response}`

    Where `full_embedded_response` means the full API response resulting from a **GET** request to the `href` link of the corresponding related resource.

    This means if there are no errors in processing the embedded request the response will have the format:

    &nbsp;&nbsp;&nbsp;&nbsp;`data: {response}`

    And if there are errors processing the embedded request the response will have the format:

    &nbsp;&nbsp;&nbsp;&nbsp;`errors: {errors}`

    Multiple embeds can be achieved with multiple query parameters separated by "&".

    &nbsp;&nbsp;&nbsp;&nbsp;`/nodes/?embed=contributors&embed=comments`

    Some endpoints are automatically embedded, such as the [node contributors](#operation/nodes_contributors_list) endpoint, which automatically embeds user information.
  x-traitTag: true
- name: Request Formatting
  description: |-
    ## Attribute Validation
    Endpoints that allow creation or modification of entities generally limit updates to certain attributes of the entity.

    If you attempt to set an attribute that does not permit updates (such as a `date_created` timestamp), the API will silently ignore that attribute.

    This will not affect the response from the API: if the request would have succeeded without the updated attribute, it will still report as successful. Likewise, if the request would have failed without the attribute update, the API will still report a failure.

    Typoed or non-existent attributes will behave the same as non-updatable attributes and will be silently ignored. If a request is not working the way you expect, make sure to double check your spelling.
    ## Create/Update Requests
    #### Formatting POST/PUT/PATCH Request Bodies
    The OSF API follows the JSON-API spec for [create and update requests](http://jsonapi.org/format/1.0/#crud). This means all request bodies must be wrapped with some metadata.

    Each request body must be an object with a `data` key containing at least a `type` member. The value of the `type` member must agree with the `type` of the entities represented by the endpoint. If not, a **409 Conflict** will be returned.

    The request should also contain an `attributes` member with an object containing the key-value pairs to be created/updated.

    **PUT/PATCH** requests must also have an `id` key that matches the ID part of the endpoint you are making a request to. If the `id` key does not match the ID part of the URL path, a **409 Conflict** error will be returned.

    #### Creating a Node via POST Example

        POST /v2/nodes/
        {
          "data": {
            "type": "nodes",
            "attributes": {
              "title" : "A Phylogenetic Tree of Famous Internet Cats",
              "category" : "project",
              "description" : "How closely related are Grumpy Cat and C.H. Cheezburger? Is memefulness inheritable?"
            }
          }
        }


    #### Updating a User via PUT Example

        PUT /v2/users/me/
        {
          "data": {
            "id": "3rqxc",
            "type": "users",
            "attributes": {
              "full_name" : "Henrietta Swan Leavitt",
              "given_name" : "Henrietta",
              "middle_names" : "Swan",
              "family_name" : "Leavitt"
            }
          }
        }

    **Note:** If you PUT/PATCH to the `/users/me/` endpoint, you must still provide your full user id in the `id` field of the request.  We do not support using the `me` alias in request bodies at this time.

    #### PUT vs. PATCH
    For most endpoints that support updates via **PUT** requests, we also allow **PATCH** updates.

    **PUT** requests require all mandatory attributes to be set, even if their value is unchanged. **PATCH** requests may omit mandatory attributes, whose value will be unchanged.
  x-traitTag: true
- name: Errors & Error Codes
  description: |-
    ## Errors
    When a request fails for any reason, the OSF API will return an appropriate HTTP response code and include a descriptive error in the body of the response.

    The response body will be a JSON object with a key, `errors`, pointing to an array of error objects.

    In general, these error objects will consist of a `detail` key with a detailed error message and a `source` object that may contain a field `pointer` that is a [JSON Pointer](https://tools.ietf.org/html/rfc6901) to the error-causing attribute.

    The `error` objects may include additional information in accordance with the [JSON-API error spec](http://jsonapi.org/format/1.0/#error-objects).

    #### Example
    An error response from an incorrect create node request:

        {
          "errors": [
            {
              "source": {
                "pointer": "/data/attributes/category"
              },
              "detail": "This field is required."
            },
            {
              "source": {
                "pointer": "/data/type"
              },
              "detail": "This field may not be null."
            },
            {
              "source": {
                "pointer": "/data/attributes/title"
              },
              "detail": "This field is required."
            }
          ]
        }

    ## Error Codes
    The OSF API uses conventional HTTP response codes to indicate the success or failure of an API request.

    In general, codes in the `2xx` range indicate success, codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted, invalid authentication credentials were provided, etc.), and codes in the `5xx` range indicate an error with our API servers (these are rare, and if they occur consistently, should be [reported](mailto:support@osf.io)).

    `200` **OK**

    The request was successful and everything worked as expected.

    `201` **Created**

    The request was successful and a new resource was created. The newly created resource can be referenced by the ID returned in the response.

    `204` **No Content**

    The request was sucessful but does not need to return an entity-body.

    `400` **Bad Request**

    The request was unacceptable, often due to a missing required parameter or malformed data.

    `401` **Unauthorized**

    The request requires user authentication, which was not provided.

    `403` **Forbidden**

    The request was understood but not fulfilled, most likely due to invalid permissions.

    `404` **Not Found**

    The requested resource does not exist.

    `405` **Method Not Allowed**

    The method specified in the request is not allowed for the resource.

    `409` **Conflict**

    The request could not be completed due to a conflict with the current state of the resource or within the request data.

    `410` **Gone**

    The requested resource is no longer available, most likely because it was deleted.

    `429` **Too Many Requests**

    The user has sent too many requests in a given amount of time.

    Wait at least the amount of time specified in the `Retry-After` header of the response before sending another request.

    Authenticated requests have a rate limit of 10,000/day.

    Unauthenticated requests have a rate limit of 100/hour.

    `5xx` **Server Errors**

    The API server encountered an unexpected error.
  x-traitTag: true
- name: Entities & Entity Collections
  description: |-
    ## Entities
    An entity is a single resource that has been retrieved from the API, usually from an endpoint with the entity's ID as the final path part. A successful response from an entity request will be a JSON object with a top level `data` key pointing to a sub-object with the following members:
    #### ID
    The identifier for the entity.  This **MUST** be included with all PUT and PATCH requests.
    #### Type
    The type identifier of this entity.  This **MUST** be included with all create and update requests.
    #### Attributes
    The properties of the entity.  Names, descriptions, etc.
    #### Relationships
    Relationships are URLs to other entities or entity collections that have a relationship to the entity.

    For example, the node entity provides a `contributors` relationship that points to the endpoint to retrieve all contributors to that node. It is recommended to use these links rather than to filter general entity collection endpoints by IDs. They'll be faster, easier, and less error-prone.

    Generally a relationship will have the following structure:


        {relationship_name}: {
          "links": {
            "related": {
              "href": {url_to_related_entity_or_entity_collection},
              "meta": {}
            }
          }
        }


    If there are no related entities, `href` will be null.
    #### Embeds
    Please see the [embedding](#tag/Embedding) documentation.
    #### Links
    Links are urls to alternative representations of the entity or actions that may be performed on the entity.

    Most entities will provide a `self` link that is the canonical endpoint for the entity where update and delete requests should be sent. Most entities will also provide an `html` link that directs to the entity's page on the Open Science Framework.
    ## Entity Collections
    Entity collection endpoints return a list of entities and an additional data structure with pagination links, such as `next`, `prev`, `first`, and `last`.

    The OSF API limits all entity collection responses to a maximum of 10 entities.

    The response object has two keys:
    #### Data
    The `data` key is an array of entities that match the query.

    Each entity in the array is the same representation that is returned from that entity's `self` link, meaning that refetching the entity is unnecessary.
    #### Links
    The `links` key contains pagination information, including links to the previous, next, first, and last pages of results.

    The `meta` key contains the total number of entities available, as well as the current number of results displayed per page.
    If there are only enough results to fill one page, the `first`, `last`, `prev`, and `next` values will be null.
  x-traitTag: true
- name: Addons
  description: "Addons represent a user connection to an external service, some addons\
    \ allow for additional storage, some modify user authentication or add a redirect\
    \ link to a project."
- name: Base
  description: This is the "home page" of the API you can get important autentication
    information for the user making the request and get links to other resources.
- name: Registration Schemas
  description: A Registration Schemas defines the range of valid responses to a registration.
    Each Registration Schema is composed of <a href="#tag/Registration-Schema-Blocks">"blocks"</a>
    that define the individual questions a user responds to. Registration Schemas
    are created by the Center for Open Science or an affiliated institution and periodically
    migrated into the system. Registration Schemas are updated and deactivated using
    an internal versioning system.
- name: Registration Schema Blocks
  description: "Registration Schema Blocks are read-only entities, they represent\
    \ question prompts and form inputs known as \"blocks\" that make up a Registration\
    \ Schemas. Each block has a designated `block_type` that determines what type\
    \ of information that Schema Block's corresponding block in the Schema Response."
- name: Schema Responses
  description: |-
    Schema Responses contain user supplied responses to a Registration Schema. A Schema Response aggregates all of the the responses for a given version of a Registration's Registration Schema. Schema Responses are created when a Registration is completed. Once a Registration is completed the Schema Responses for a Registration can be revisied and updated by using it's associated action endpoints.

    There are a few states for Schema Responses:

      - `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you
      must create a Schema Response Action that triggers a new submission.

      - `in_progess` is the state of a Schema Response where the response is editable and still private, Schema
      Responses are editted via a PATCH request as specified below.

      - `unapproved` is the state of a Schema Response where edits have been made and "locked-in", now contributors
      have the ability to reject the changes, however if they are not rejected changes are automatically approved
      after 48 hours. If `unapproved` Schema Responses are rejected, they are returned to the `in_progress` state. If
      `unapproved` Schema Responses are approved they either enter an `approved` state or go into a
      `pending_moderation` to be accepted or denied by a moderator.

      - `pending_moderation` is the state of a Schema Response where moderators have an opportunity to reject or
      approve a Schema Response that has been approved by it's contributors. This state is only reachable for Schema
      Responses that are associated with a Registration that has Registration Provider a moderated workflow.

      - `approved` is the state of a Schema Response where it is public and immutable, in order to update an approved
      Schema Response a new one must be created.
- name: Schema Response Actions
  description: |-
    Schema Response Actions are objects that when created cause state transitions for Schema Responses. Users use state transitions to submit, approve, and revise new Schema Responses.

    Schema Response Actions have a few different triggers to cause state transitions:

      - `submit` is a trigger to transition a Schema Response from an `in_progress` state to an `unapproved` state,
      this freezes edits for the Schema Response and allows all admin contributors to the Schema Response's
      Registration to either approved or reject the Schema Response.

      - `approve` is a trigger to transition a Schema Response from an `unapproved` state to an `approved` state, this
      makes the Schema Response changes public completing the update of the Schema Response. On Schema Responses that
      are associated with a Registration that has Registration Provider a moderated workflow the `approve` trigger
      will transition the Schema Response to `pending_moderation`.

      - `accept` is a trigger to transition a Schema Response from an `pending_moderation` state to an `approved`
      state. This trigger is only valid for Schema Responses that are associated with a Registration that has
      Registration Provider a moderated workflow and only possible for a user designated as moderator of a
      Registration Provider.

      - `admin_reject` is a trigger to transition a Schema Response from an `unapproved` state to an
      `in_progress`  state. This trigger allows users to reject purposed changes to a Schema Response.

      - `moderator_reject` is a trigger to transition a Schema Response from an `pending_moderation` state to an
      `in_progress`  state. This trigger is only valid for Schema Responses that are associated with a Registration
      that has Registration Provider a moderated workflow and only possible for a user designated as moderator of a
      Registration Provider.
- name: Draft Registrations
  description: |2-

    A Draft Registration is a object that allows a user to edit and revise a registration before it is registered. Draft Registrations allow contributors to coordinate on a single registration, so they can upload files and change Registration metadata before the Registration is archived.
- name: Collection Submissions
  description: |2-

    A Collection Submission is an object that allows a user to add a resource, either a project, preprint, or registration to a collection. Once created, a Collection Submission may be automatically accepted or await moderation. Once a Collection Submission is in a moderation state, an assigned moderator may accept or reject the submission.
    There are a few states for Collection Submissions:

      - `in_progress` is the initial state of a Collection Submission where the resource is editable and still private.

      - `pending` is the state where the Collection Submission is awaiting moderation.

      - `accepted` means the Collection Submission has been approved and added to the collection.

      - `rejected` means the Collection Submission has been declined by the moderator.

      - `removed` means the Collection Submission has been removed from the collection, after initial acceptance.
- name: Collection Submissions Actions
  description: |-
    A Collection Submission Action is an object that triggers a change in the moderation state of a Collection Submission and works as a record to log all previous transitions for a Collection Submission.
    Collection Submission Actions have a few different triggers to cause state transitions:

      - `submit` is used to move a Collection Submission from the `in_progress` to the `pending` state, indicating the
        submission is in a `pending` state, ready for moderation.

      - `accept` is used by moderators to approve a Collection Submission, changing its state to `accepted`.

      - `reject` is used by moderators to reject a Collection Submission, changing its state to `rejected`.

      - `remove` is used to permanently remove a Collection Submission from the moderation queue,
        changing its state to `removed`.

      - `resubmit` is used to resubmit a previously rejected or removed Collection Submission, moving it back to the
        `pending` state from the `rejected` or `removed` state.

      - `cancel` is used to cancel a Collection Submission in a `pending` state, reverting it back to the
        `in_progress`.
- name: Collection Submissions Provider
  description: |-
    A Collection Submissions Provider represents the data for moderators and admins for a group of collections. It acts as a central hub for managing all collection submissions within various collections, ensuring that the moderation process is handled efficiently and consistently across different collections.
    The Collection Submissions Provider holds important information, such as the list of moderators and admins, and the moderation rules for all collections under its umbrella. Historical data about past collection submissions and their states is saved via Collection Submission Actions.
    Through the Collection Submissions Provider, moderators can oversee the state of all submissions in collections they manage, ensuring that each submission follows the appropriate state transitions and adheres to the standards set for collection submissions. It aids in providing transparency and order to the process of managing collections and ensures that moderators and admins have the tools and information they need to effectively manage collection submissions.
paths:
  /addons/:
    get:
      tags:
      - Addons
      summary: List all addons
      description: |2-

        A paginated list of addons configurable with the OSF, for read purposes only.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 addons. Each resource in the array is a separate addon object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Errors
        This request should never return an error.
      operationId: addons_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Addon
                  type: object
                  properties:
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        url:
                          type: string
                          description: The URL to the third-party service provider.
                          readOnly: true
                        name:
                          type: string
                          description: The name of the third-party service provider.
                          readOnly: true
                        description:
                          type: string
                          description: The description of the service provider.
                          readOnly: true
                        categories:
                          type: array
                          description: List of categories this addon belongs to.
                          readOnly: true
                          items:
                            type: string
                            enum:
                            - documentation
                            - storage
                            - bibliography
                            - other
                            - security
                            - citations
                      description: The properties of the addon entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the addon entity (`addons`).
                      readOnly: true
                    id:
                      type: string
                      description: The identifier of the addon entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links: {}
                  attributes:
                    url: http://www.box.com
                    name: Box
                    categories:
                    - storage
                    description: Box is a file storage add-on. Connect your Box account
                      to an OSF project to interact with files hosted on Box via the
                      OSF.
                  type: addon
                  id: box
                - links: {}
                  attributes:
                    url: https://dataverse.harvard.edu/
                    name: Dataverse
                    categories:
                    - storage
                    description: "Dataverse is an open source software application\
                      \ to share, cite, and archive data. Connect your Dataverse account\
                      \ to share your Dataverse datasets via the OSF."
                  type: addon
                  id: dataverse
                - links: {}
                  attributes:
                    url: http://www.dropbox.com
                    name: Dropbox
                    categories:
                    - storage
                    description: Dropbox is a file storage add-on. Connect your Dropbox
                      account to an OSF project to interact with files hosted on Dropbox
                      via the OSF.
                  type: addon
                  id: dropbox
                - links: {}
                  attributes:
                    url: http://www.figshare.com
                    name: figshare
                    categories:
                    - storage
                    description: Figshare is an online digital repository. Connect
                      your figshare account to share your figshare files along with
                      other materials in your OSF project.
                  type: addon
                  id: figshare
                - links: {}
                  attributes:
                    url: http://www.github.com
                    name: GitHub
                    categories:
                    - storage
                    description: GitHub is a web-based Git repository hosting service.
                      Connect your GitHub repo to your OSF project to share your code
                      alongside other materials in your OSF project.
                  type: addon
                  id: github
                - links: {}
                  attributes:
                    url: http://www.mendeley.com
                    name: Mendeley
                    categories:
                    - citations
                    description: "Mendeley is a reference management tool. Connecting\
                      \ Mendeley folders to OSF projects allows you and others to\
                      \ view, copy, and download citations that are relevant to your\
                      \ project from the Project Overview page."
                  type: addon
                  id: mendeley
                - links: {}
                  attributes:
                    url: http://www.zotero.org
                    name: Zotero
                    categories:
                    - citations
                    description: "Zotero is a reference management tool. Connecting\
                      \ Zotero folders to OSF projects allows you and others to view,\
                      \ copy, and download citations that are relevant to your project\
                      \ from the Project Overview page."
                  type: addon
                  id: zotero
                - links: {}
                  attributes:
                    url: https://owncloud.org/
                    name: ownCloud
                    categories:
                    - storage
                    description: "ownCloud is an open source, self-hosted file sync\
                      \ and share app platform. Connect your ownCloud account to an\
                      \ OSF project to interact with files hosted on ownCloud via\
                      \ the OSF."
                  type: addon
                  id: owncloud
                - links: {}
                  attributes:
                    url: https://aws.amazon.com/s3/
                    name: Amazon S3
                    categories:
                    - storage
                    description: Amazon S3 is a file storage add-on. Connect your
                      S3 account to an OSF project to interact with files hosted on
                      S3 via the OSF.
                  type: addon
                  id: s3
                - links: {}
                  attributes:
                    url: https://drive.google.com
                    name: Google Drive
                    categories:
                    - storage
                    description: Google Drive is a file storage add-on. Connect your
                      Google Drive account to an OSF project to interact with files
                      hosted on Google Drive via the OSF.
                  type: addon
                  id: googledrive
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta: null
                  total: 10
                  per_page: 1000
      x-response-schema: Addon
  /:
    get:
      tags:
      - Base
      summary: Root
      description: |-
        #### Returns
        A JSON object with `meta` and `links` keys.

        The `meta` key contains information such as a welcome message from the API, the specified version of the request, and the full representation of the current user, if authentication credentials were provided in the request.

        The `links` key contains links to the following entity collections: [addons](#tag/Addons), [collections](), [institutions](#tag/Institutions), [licenses](#tag/Licenses), [registration schemas](#tag/Registration Schemas), [nodes](#tag/Nodes), [registrations](#tag/Registrations), [users](#tag/Users)
      operationId: base_read
      responses:
        "200":
          description: OK
          content: {}
  /citations/styles/:
    get:
      tags:
      - Citations
      summary: List all citation styles
      description: |2-

        A paginated list of all standard citation styles available for rendering citations.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 citation styles. Each resource in the array is a separate citation syle and contains the full representation of the citation style object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include citation styles that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/citations/styles/?filter[title]=open.

        Citation styles may be filtered by their `id`, `title`, `short-title`, and `summary`.
        #### Errors
        This request should never return an error.
      operationId: citations_styles_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Citation Style
                  required:
                  - attributes
                  - id
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the citation style, e.g. APA."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the citation style entity
                        (`citation-styles`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - date_parsed
                      - title
                      type: object
                      properties:
                        date_parsed:
                          type: string
                          description: "The time at which the citation style was first\
                            \ parsed, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        short_title:
                          type: string
                          description: The short name for the citation style.
                          readOnly: true
                        summary:
                          type: string
                          description: The summary of the citation style.
                          readOnly: true
                        title:
                          type: string
                          description: The official name of the citation style.
                          readOnly: true
                      description: The properties of the citation style entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties: {}
                      description: URLs to alternative representations of the citation
                        style entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links: {}
                  attributes:
                    date_parsed: 2015-02-16T04:16:25.732000
                    summary: null
                    short_title: AMR
                    title: Academy of Management Review
                  type: citation-styles
                  id: academy-of-management-review
                links:
                  first: null
                  last: https://api.osf.io/v2/citations/styles/?page=115
                  prev: null
                  next: https://api.osf.io/v2/citations/styles/?page=2
                  meta:
                    total: 1149
                    per_page: 10
      x-response-schema: Citation Style
  /citations/styles/{style_id}/:
    get:
      tags:
      - Citations
      summary: Retrieve a citation style
      description: |-
        Retrieves the details of a citation style.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested citation style, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: citations_styles_read
      parameters:
      - name: style_id
        in: path
        description: The unique identifier of the citation style.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Citation Style
                required:
                - attributes
                - id
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: "The identifier of the citation style, e.g. APA."
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the citation style entity
                      (`citation-styles`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    required:
                    - date_parsed
                    - title
                    type: object
                    properties:
                      date_parsed:
                        type: string
                        description: "The time at which the citation style was first\
                          \ parsed, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      short_title:
                        type: string
                        description: The short name for the citation style.
                        readOnly: true
                      summary:
                        type: string
                        description: The summary of the citation style.
                        readOnly: true
                      title:
                        type: string
                        description: The official name of the citation style.
                        readOnly: true
                    description: The properties of the citation style entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties: {}
                    description: URLs to alternative representations of the citation
                      style entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links: {}
                  attributes:
                    date_parsed: 2015-02-16T04:16:26.233000
                    summary: null
                    short_title: APA
                    title: American Psychological Association 6th edition
                  type: citation-styles
                  id: apa
      x-response-schema: Citation Style
  /comments/{comment_id}/:
    get:
      tags:
      - Comments
      summary: Retrieve a comment
      description: |-
        Retrieves the details of a comment
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested comment, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: comments_read
      parameters:
      - name: comment_id
        in: path
        description: The unique identifier of the comment you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Comment
                required:
                - id
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the comment entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the comment entity (`comments`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      can_edit:
                        type: boolean
                        description: Whether or not the current user has permission
                          to edit this comment
                        readOnly: true
                      content:
                        type: string
                        description: The content of the comment.
                      date_created:
                        type: string
                        description: "The time at which the comment was created, as\
                          \ an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the comment was last modified,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      modified:
                        type: boolean
                        description: Whether or not the comment has been edited.
                        readOnly: true
                      deleted:
                        type: boolean
                        description: Whether or not the comment is deleted.
                        readOnly: true
                      is_abuse:
                        type: boolean
                        description: Whether or not the comment is flagged or confirmed
                          spam.
                        readOnly: true
                      is_ham:
                        type: boolean
                        description: Whether or not an admin checked the legitimacy
                          of this comment.
                        readOnly: true
                      has_report:
                        type: boolean
                        description: Whether or not the comment the current user reported
                          this as spam.
                        readOnly: true
                      has_children:
                        type: boolean
                        description: Whether or not the comment has replies.
                        readOnly: true
                      page:
                        type: string
                        description: "The page type the comment is on, e.g. `node`,\
                          \ `registration`, `wiki`, `files`."
                        readOnly: true
                    description: The properties of the comment entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      node:
                        type: string
                        description: A relationship to the node the comment is on.
                        format: URL
                        readOnly: true
                      replies:
                        type: string
                        description: A relationship to the replies to the comment.
                        format: URL
                        readOnly: true
                      target:
                        type: string
                        description: A relationship to the target of the comment.
                        format: URL
                        readOnly: true
                      reports:
                        type: string
                        description: A relationship to the reports connected to the
                          comment.
                        format: URL
                        readOnly: true
                      user:
                        type: string
                        description: A relationship to the user who created the comment.
                        format: URL
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the comment entity.
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for the comment.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the comment
                      entity.
                    readOnly: true
                example:
                  data:
                    type: comments
                    attributes:
                      content: comment content
                    relationships:
                      target:
                        data:
                          type: "{target_type}"
                          id: "{target_id}"
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/gvuew/
                          meta: {}
                    replies:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/gvuew/comments/?filter%5Btarget%5D=twpgrpv78d8s
                          meta: {}
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/gvuew/
                          meta:
                            type: nodes
                    reports:
                      links:
                        related:
                          href: https://api.osf.io/v2/comments/twpgrpv78d8s/reports/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/rnizy/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/comments/twpgrpv78d8s/
                  attributes:
                    can_edit: true
                    date_modified: 2017-02-10T20:44:03.193000
                    deleted: false
                    is_ham: false
                    has_children: false
                    modified: false
                    content: comments about things
                    has_report: false
                    is_abuse: false
                    date_created: 2017-02-10T20:44:03.185000
                    page: node
                  type: comments
                  id: twpgrpv78d8s
      x-response-schema: Comment
    put:
      tags:
      - Comments
      summary: Update a comment
      description: |-
        Updates the specified comment by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        #### Returns
        Returns JSON with a `data` key containing the new representation of the updated comment, if the request is successful.

        If the request is unsuccessful, JSON with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: comments_put
      parameters:
      - name: comment_id
        in: path
        description: The unique identifier of the comment you wish to update.
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              example:
                data:
                  type: comments
                  id: "{comment_id}"
                  attributes:
                    content: changed comment content
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - Comments
      summary: Delete a comment
      description: |-
        Deletes a comment. This action can be undone by setting deleted to False in a comment update request.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: comments_delete
      parameters:
      - name: comment_id
        in: path
        description: The unique identifier of the comment you wish to delete.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
          content: {}
  /files/{file_id}/:
    get:
      tags:
      - Files
      summary: Retrieve a file
      description: |-
        Retrieves the details of a file (or folder)
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested file, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        ### Waterbutler API actions

        Files can be modified through the Waterbutler API routes found in `links` (`new_folder`, `move`, `upload`, `download`, and `delete`).

        #### Download (files)

        To download a file, issue a GET request against the download link. The response will have the Content-Disposition header set, which will will trigger a download in a browser.

        #### Create Subfolder (folders)

        You can create a subfolder of an existing folder by issuing a PUT request against the new_folder link. The ?kind=folder portion of the query parameter is already included in the new_folder link. The name of the new subfolder should be provided in the name query parameter. The response will contain a WaterButler folder entity. If a folder with that name already exists in the parent directory, the server will return a 409 Conflict error response.

        #### Upload New File (folders)


          To upload a file to a folder, issue a PUT request to the folder's upload link with the raw file data in the request body, and the kind and name query parameters set to 'file' and the desired name of the file. The response will contain a WaterButler file entity that describes the new file. If a file with the same name already exists in the folder, the server will return a 409 Conflict error response.


        #### Update Existing File (file)

        To update an existing file, issue a PUT request to the file's upload link with the raw file data in the request body and the kind query parameter set to "file". The update action will create a new version of the file. The response will contain a WaterButler file entity that describes the updated file.

        #### Rename (files, folders)

        To rename a file or folder, issue a POST request to the move link with the action body parameter set to "rename" and the rename body parameter set to the desired name. The response will contain either a folder entity or file entity with the new name.

        #### Move & Copy (files, folders)

        Move and copy actions both use the same request structure, a POST to the move url, but with different values for the action body parameters. The path parameter is also required and should be the OSF path attribute of the folder being written to. The rename and conflict parameters are optional. If you wish to change the name of the file or folder at its destination, set the rename parameter to the new name. The conflict param governs how name clashes are resolved. Possible values are replace and keep. replace is the default and will overwrite the file that already exists in the target folder. keep will attempt to keep both by adding a suffix to the new file's name until it no longer conflicts. The suffix will be ' (x)' where x is a increasing integer starting from 1. This behavior is intended to mimic that of the OS X Finder. The response will contain either a folder entity or file entity with the new name.
        Files and folders can also be moved between nodes and providers. The resource parameter is the id of the node under which the file/folder should be moved. It must agree with the path parameter, that is the path must identify a valid folder under the node identified by resource. Likewise, the provider parameter may be used to move the file/folder to another storage provider, but both the resource and path parameters must belong to a node and folder already extant on that provider. Both resource and provider default to the current node and providers.
        If a moved/copied file is overwriting an existing file, a 200 OK response will be returned. Otherwise, a 201 Created will be returned.

        #### Delete (file, folders)

        To delete a file or folder send a DELETE request to the delete link. Nothing will be returned in the response body.
      operationId: files_detail
      parameters:
      - name: file_id
        in: path
        description: The unique identifier of the file you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        extra:
                          type: object
                          properties: {}
                          description: "Extra information, contains `hashes` (`sha256`,\
                            \ `md5`) and `downloads` count."
                          readOnly: true
                        kind:
                          type: string
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                        name:
                          type: string
                          description: Name of the file
                        last_touched:
                          type: string
                          description: The time at which the file external metadata
                            was last retrieved as an iso8601 formatted timestamp (does
                            not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Unix-style path to the file relative to the
                            provider root.
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the file was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        current_version:
                          type: integer
                          description: Version number of the file.
                          readOnly: true
                        delete_allowed:
                          type: boolean
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                        date_created:
                          type: string
                          description: "The time at which the file was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        provider:
                          type: string
                          description: "The id of the file provider (e.g., `osfstorage`)"
                          readOnly: true
                        path:
                          type: string
                          description: The unique identifier for this file entity
                            for this project and storage provider.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user is allowed
                            to post comments.
                          readOnly: true
                        guid:
                          type: string
                          description: Global unique identifier (GUID) for this file
                            (if one has been assigned).
                          readOnly: true
                        checkout:
                          type: string
                          description: "SOON TO BE DEPRECATED, see relationships checkout."
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this file,\
                            \ as entered by project contributors."
                          readOnly: true
                          items:
                            type: string
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                        checkout:
                          type: string
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                        versions:
                          type: string
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                      description: Links to other entities or entity collections that
                        have a relationship to the file entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        info:
                          type: string
                          description: A link to the page to view a file's information
                            or a folder's contents.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                        move:
                          type: string
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                        new_folder:
                          type: string
                          description: The Waterbutler API route for creating a new
                            subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                        upload:
                          type: string
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                        download:
                          type: string
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                        delete:
                          type: string
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                          meta: {}
                    versions:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                  attributes:
                    extra:
                      hashes:
                        sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        md5: 44325d4f13b09f3769ede09d7c20a82c
                      downloads: 442
                    kind: file
                    name: OSC2012.pdf
                    last_touched: 2015-09-18T01:11:16.328000
                    materialized_path: /OSC2012.pdf
                    date_modified: 2014-10-17T19:24:12.264Z
                    current_version: 1
                    delete_allowed: true
                    date_created: 2014-10-17T19:24:12.264Z
                    provider: osfstorage
                    path: /553e69248c5e4a219919ea54
                    current_user_can_comment: true
                    guid: sejcv
                    checkout: null
                    tags: []
                    size: 216945
                  type: files
                  id: 553e69248c5e4a219919ea54
      x-response-schema: File
    patch:
      tags:
      - Files
      summary: Update a file
      description: |-
        Updates the specified file by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        #### Returns
        Returns JSON with a `data` key containing the new representation of the updated file, if the request is successful.

        If the request is unsuccessful, JSON with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: files_patch
      parameters:
      - name: file_id
        in: path
        description: The unique identifier of the file you wish to update.
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              example:
                data:
                  type: files
                  id: "{file_id}"
                  attributes:
                    name: new file name.jpg
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: body
  /files/{file_id}/versions/:
    get:
      tags:
      - Files
      summary: List all file versions
      description: |2-

        A paginated list of all file versions.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 file versions. Each resource in the array is a separate file version object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: files_versions
      parameters:
      - name: file_id
        in: path
        description: The unique identifier of the file from which you want to retrieve
          versions.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File Version
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file version.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file versions entity
                        (`file_versions`).
                      readOnly: true
                    attributes:
                      type: object
                      properties:
                        content_type:
                          type: object
                          properties: {}
                          description: MIME content-type for the file (null if unavailable).
                          readOnly: true
                        date_created:
                          type: string
                          description: "The date of the file version creation, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file versions entity.
                      readOnly: true
                    links:
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for a file version.
                          format: URL
                          readOnly: true
                        html:
                          type: string
                          description: A link to the html version page.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        version entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/1/
                    html: https://osf.io/ezcuj/files/osfstorage/553e69248c5e4a219919ea54?revision=1
                  attributes:
                    content_type: application/octet-stream
                    date_created: 2017-01-01T12:34:56.78910
                    size: 216945
                  type: file_versions
                  id: "1"
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: File Version
  /files/{file_id}/versions/{version_id}/:
    get:
      tags:
      - Files
      summary: Retrieve a file version
      description: |-
        Retrieves the details of a file version
        #### Returns

        Returns a JSON object with a `data` key containing the representation of the requested file, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: files_version_detail
      parameters:
      - name: file_id
        in: path
        description: The unique identifier of the file from which you want to retrieve
          versions.
        required: true
        schema:
          type: string
      - name: version_id
        in: path
        description: The file version number you want to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File Version
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file version.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file versions entity
                        (`file_versions`).
                      readOnly: true
                    attributes:
                      type: object
                      properties:
                        content_type:
                          type: object
                          properties: {}
                          description: MIME content-type for the file (null if unavailable).
                          readOnly: true
                        date_created:
                          type: string
                          description: "The date of the file version creation, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file versions entity.
                      readOnly: true
                    links:
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for a file version.
                          format: URL
                          readOnly: true
                        html:
                          type: string
                          description: A link to the html version page.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        version entity.
                      readOnly: true
            application/json:
              example:
                data:
                  links:
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/1/
                    html: https://osf.io/ezcuj/files/osfstorage/553e69248c5e4a219919ea54?revision=1
                  attributes:
                    content_type: application/octet-stream
                    date_created: 2017-01-01T12:34:56.78910
                    size: 216945
                  type: file_versions
                  id: "1"
      x-response-schema: File Version
  /licenses/:
    get:
      tags:
      - Licenses
      summary: List all licenses
      description: |-
        A paginated list of licenses. The returned licenses are sorted by their name.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of 10 licenses. Each resource in the array is a separate license object and contains the full representation of the license, meaning additional requests to a license's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include licenses that match your filters by utilizing the `filter` query parameter, e.g. [https://api.osf.io/v2/licenses/?filter[name]=apache](https://api.osf.io/v2/licenses/?filter[name]=apache).

        Licenses may be filtered by their `id`, and `name`.
      operationId: license_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: License
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the license.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the license (`license`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the license.
                          readOnly: true
                        text:
                          type: string
                          description: Full text of the license.
                          readOnly: true
                        required_fields:
                          type: array
                          description: Fields required for this license (provided
                            to help front-end validators). Maps to properties on the
                            NodeLicense model.
                          readOnly: true
                          items:
                            type: string
                            description: Individual fields required by this license.
                            readOnly: true
                      description: The properties of the license.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the license.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the license.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e968/
                  attributes:
                    text: |
                      Copyright (c) {{year}}, {{copyrightHolders}}
                      All rights reserved.

                      The full descriptive text of the License.
                    required_fields:
                    - year
                    - copyrightHolders
                    name: BSD 2-Clause "Simplified" License
                  type: licenses
                  id: 563c1cf88c5e4a3877f9e968
                links:
                  first: ""
                  last: https://api.osf.io/v2/licenses/?page=2
                  prev: ""
                  next: https://api.osf.io/v2/licenses/?page=2
                  meta:
                    total: 16
                    per_page: 10
      x-response-schema: License
  /license/{license_id}/:
    get:
      tags:
      - Licenses
      summary: Retrieve a license
      description: |-
        Retrieves the details of a license.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested license, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: licenses_read
      parameters:
      - name: license_id
        in: path
        description: The unique identifier of the license.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: License
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the license.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the license (`license`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the license.
                        readOnly: true
                      text:
                        type: string
                        description: Full text of the license.
                        readOnly: true
                      required_fields:
                        type: array
                        description: Fields required for this license (provided to
                          help front-end validators). Maps to properties on the NodeLicense
                          model.
                        readOnly: true
                        items:
                          type: string
                          description: Individual fields required by this license.
                          readOnly: true
                    description: The properties of the license.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for the license.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the license.
                    readOnly: true
            application/json:
              example:
                data:
                  links:
                    self: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e968/
                  attributes:
                    text: |
                      Copyright (c) {{year}}, {{copyrightHolders}}
                      All rights reserved.

                      The full descriptive text of the License
                    required_fields:
                    - year
                    - copyrightHolders
                    name: BSD 2-Clause "Simplified" License
                  type: licenses
                  id: 563c1cf88c5e4a3877f9e968
      x-response-schema: License
  /logs/{log_id}/:
    get:
      tags:
      - Logs
      summary: Retrieve a log
      description: |-
        Retrieves the details of a log.
        A log is permanent immutable record of a node's history. A log is created when a user performs one of many actions. See the [actions](#Logs_logs_actions) section for more details.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested log, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: logs_read
      parameters:
      - name: log_id
        in: path
        description: The unique identifier of the log you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                title: Log
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the log.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the log (`logs`)
                    readOnly: true
                  attributes:
                    title: Attributes
                    required:
                    - action
                    - date
                    type: object
                    properties:
                      date:
                        type: string
                        description: "The date and time at which the log was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      action:
                        type: string
                        description: The type of action performed on the OSF. See
                          actions section for full list of possible actions.
                        readOnly: true
                      params:
                        title: Log Params
                        type: object
                        properties:
                          addon:
                            type: string
                            description: The addon associated with the connected node.
                            readOnly: true
                          anonymous_link:
                            type: boolean
                            description: The view only link added to the node was
                              anonymous.
                            readOnly: true
                          bucket:
                            type: string
                            description: The Amazon s3 bucket connected to the connected
                              node.
                            readOnly: true
                          citation_name:
                            type: string
                            description: Name of citation associated with the connected
                              node.
                            readOnly: true
                          contributors:
                            type: string
                            description: List of contributors on the connected node
                              involved in the action represented by this node log.
                            readOnly: true
                          data_set:
                            type: string
                            description: The dataset associated with the connected
                              node.
                            readOnly: true
                          destination:
                            type: string
                            description: "A dictionary with information about the\
                              \ destination for the move of the item on the node associated\
                              \ with this log. Details include the path, url, addon,\
                              \ node_url and node_title."
                            readOnly: true
                          figshare_title:
                            type: string
                            description: Title of the fighshare project associated
                              with this node log
                            readOnly: true
                          forward_url:
                            type: string
                            description: URL that the connected node forwards to.
                            readOnly: true
                          github_user:
                            type: string
                            description: The github user involved with the action
                              represented by this node log.
                            readOnly: true
                          github_repo:
                            type: string
                            description: The github repository involved with the action
                              represented by this node log.
                            readOnly: true
                          file:
                            type: string
                            description: Dictionary with information about the file
                              involved with the log.
                            readOnly: true
                          filename:
                            type: string
                            description: Filename for the file associated with the
                              log.
                            readOnly: true
                          kind:
                            type: string
                            description: Kind of the object associated with the log.
                            readOnly: true
                          folder:
                            type: string
                            description: Folder associated with the log.
                            readOnly: true
                          folder_name:
                            type: string
                            description: Name of the folder associated with the log.
                            readOnly: true
                          license:
                            type: string
                            description: License for the associated node.
                            readOnly: true
                          identifiers:
                            type: string
                            description: Dictionary containing the DOI and ARK ID
                              for a preprint associated with the log.
                            readOnly: true
                          institution:
                            type: string
                            description: Dictionary containing the ID and Name of
                              the institution associated with the log.
                            readOnly: true
                          old_page:
                            type: string
                            description: Old name of wiki page for a wiki rename log
                              action.
                            readOnly: true
                          page:
                            type: string
                            description: Current name of wiki page for rename log
                              action.
                            readOnly: true
                          page_id:
                            type: string
                            description: Primary key of the wiki page associated with
                              the log.
                            readOnly: true
                          params_node:
                            type: string
                            description: Node that is refered to in the params of
                              the log.
                            readOnly: true
                          params_project:
                            type: string
                            description: Project that is refered to in the params
                              of the log.
                            readOnly: true
                          path:
                            type: string
                            description: Path for a file associated with the log.
                            readOnly: true
                          pointer:
                            type: string
                            description: A dictionary with information about the node
                              that is linked to the associated node.
                            readOnly: true
                          preprint:
                            type: string
                            description: Preprint related to the associated node.
                            readOnly: true
                          preprint_provider:
                            type: string
                            description: Preprint provider for the associated node.
                            readOnly: true
                          previous_institution:
                            type: string
                            description: "If a primary institution for the associated\
                              \ node is changed, this will show the previous institution."
                            readOnly: true
                          source:
                            type: string
                            description: "A dictionary with information about the\
                              \ source of a move related event for a log. Details\
                              \ include the path, url, addon, node_url and node_title."
                            readOnly: true
                          study:
                            type: string
                            description: Dataverse study linked to the associated
                              node.
                            readOnly: true
                          tag:
                            type: string
                            description: Tag associated with the associated node.
                            readOnly: true
                          tags:
                            type: string
                            description: Tags associated with the associated node.
                            readOnly: true
                          target:
                            type: string
                            description: "A dictionary containing details about the\
                              \ target of the log. Details include the path, url,\
                              \ addon, node_url and node_title."
                            readOnly: true
                          template_node:
                            type: string
                            description: A dictionary containing information about
                              the node that was used as a template for the associated
                              node.
                            readOnly: true
                          title_new:
                            type: string
                            description: The new title for the associated node.
                            readOnly: true
                          title_original:
                            type: string
                            description: The original title for the associated node
                            readOnly: true
                          updated_fields:
                            type: string
                            description: A dictionary containing all of the fields
                              updated on the associated node.
                            readOnly: true
                          urls:
                            type: string
                            description: Links to access information about the file
                              associated with this log.
                            readOnly: true
                          version:
                            type: string
                            description: Version of the wiki page associated with
                              this log.
                            readOnly: true
                          wiki:
                            type: string
                            description: A dictionary with information about the wiki
                              page associated with the log.
                            readOnly: true
                        description: The type of action performed on the OSF. See
                          description for full list of possible actions.
                        readOnly: true
                    description: The properties of the log.
                    readOnly: true
                  relationships:
                    title: Relationships
                    required:
                    - node
                    type: object
                    properties:
                      node:
                        type: string
                        description: A relationship to the node associated with this
                          log.
                        readOnly: true
                      original_node:
                        type: string
                        description: "A relationship to the original node that was\
                          \ associated with this log, in case this log was copied\
                          \ from a node to a fork or registration."
                        readOnly: true
                      user:
                        type: string
                        description: A relationship to the user who performed the
                          log action.
                        readOnly: true
                      linked_node:
                        type: string
                        description: A relationship to the node linked to this log.
                        readOnly: true
                      template_node:
                        type: string
                        description: A relationship to the node used as a template
                          for this log.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the log.
                    readOnly: true
                  links:
                    title: Links
                    required:
                    - self
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for the log.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the log entity.
                    readOnly: true
                example:
                  data:
                    relationships:
                      node:
                        links:
                          related:
                            href: https://api.osf.io/v2/nodes/ezcuj/
                            meta: {}
                      original_node:
                        links:
                          related:
                            href: https://api.osf.io/v2/nodes/ezcuj/
                            meta: {}
                      user:
                        links:
                          related:
                            href: https://api.osf.io/v2/users/jk5cv/
                            meta: {}
                    links:
                      self: https://api.osf.io/v2/logs/4fc706a80b6e9118ef000122/
                    attributes:
                      date: 2012-05-31T05:50:32.083000
                      action: contributor_added
                      params:
                        params_node:
                          id: ezcuj
                          title: "Reproducibility Project: Psychology"
                        contributors:
                        - family_name: Nosek
                          middle_names: A.
                          given_name: Brian
                          full_name: Brian A. Nosek
                          active: true
                          id: cdi38
                    type: logs
                    id: 4fc706a80b6e9118ef000122
      x-response-schema: Log
  /actions/:
    get:
      tags:
      - Logs
      summary: Actions
      description: |2-

        A log can have one of many actions. The complete list of loggable actions (in the format {identifier}: {description}) is as follows:
        * `project_created`: A Node is created
        * `project_registered`: A Node is registered
        * `project_deleted`: A Node is deleted
        * `created_from`: A Node is created using an existing Node as a template
        * `pointer_created`: A Pointer is created
        * `pointer_forked`: A Pointer is forked
        * `pointer_removed`: A Pointer is removed
        * `node_removed`: A component is deleted
        * `node_forked`: A Node is forked
        ---
        * `made_public`: A Node is made public
        * `made_private`: A Node is made private
        * `tag_added`: A tag is added to a Node
        * `tag_removed`: A tag is removed from a Node
        * `edit_title`: A Node's title is changed
        * `edit_description`: A Node's description is changed
        * `updated_fields`: One or more of a Node's fields are changed
        * `external_ids_added`: An external identifier is added to a Node (e.g. DOI, ARK)
        * `view_only_link_added`: A view-only link was added to a Node
        * `view_only_link_removed`:  A view-only link was removed from a Node
        ---
        * `contributor_added`: A Contributor is added to a Node
        * `contributor_removed`: A Contributor is removed from a Node
        * `contributors_reordered`: A Contributor's position in a Node's bibliography is changed
        * `permissions_updated`: A Contributor`s permissions on a Node are changed
        * `made_contributor_visible`: A Contributor is made bibliographically visible on a Node
        * `made_contributor_invisible`: A Contributor is made bibliographically invisible on a Node
        ---
        * `wiki_updated`: A Node's wiki is updated
        * `wiki_deleted`: A Node's wiki is deleted
        * `wiki_renamed`: A Node's wiki is renamed
        * `made_wiki_public`: A Node's wiki is made public
        * `made_wiki_private`: A Node's wiki is made private
        ---
        * `addon_added`: An add-on is linked to a Node
        * `addon_removed`: An add-on is unlinked from a Node
        * `addon_file_moved`: A File in a Node's linked add-on is moved
        * `addon_file_copied`: A File in a Node's linked add-on is copied
        * `addon_file_renamed`: A File in a Node's linked add-on is renamed
        * `node_authorized`: An addon is authorized for a project
        * `node_deauthorized`: An addon is deauthorized for a project
        * `folder_created`: A Folder is created in a Node's linked add-on
        * `file_added`: A File is added to a Node's linked add-on
        * `file_updated`: A File is updated on a Node's linked add-on
        * `file_removed`: A File is removed from a Node's linked add-on
        * `file_restored`: A File is restored in a Node's linked add-on
        ---
        * `comment_added`: A Comment is added to some item
        * `comment_removed`: A Comment is removed from some item
        * `comment_updated`: A Comment is updated on some item
        ---
        * `embargo_initiated`: An embargoed Registration is proposed on a Node
        * `embargo_approved`: A proposed Embargo of a Node is approved
        * `embargo_cancelled`: A proposed Embargo of a Node is cancelled
        * `embargo_completed`: A proposed Embargo of a Node is completed
        * `retraction_initiated`: A Withdrawal of a Registration is proposed
        * `retraction_approved`: A Withdrawal of a Registration is approved
        * `retraction_cancelled`: A Withdrawal of a Registration is cancelled
        * `registration_initiated`: A Registration of a Node is proposed
        * `registration_approved`: A proposed Registration is approved
        * `registration_cancelled`: A proposed Registration is cancelled
      operationId: logs_actions
      responses:
        "200":
          description: OK
          content: {}
  /institutions/:
    get:
      tags:
      - Institutions
      summary: List all institutions
      description: |2-

        A paginated list of all verified institutions.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 institutions. Each resource in the array is a separate institution object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include institutions that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/?filter[id]=cos.

        Institutions may be filtered by their `id`, `name`, and `auth_url`
      operationId: institutions_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Institution
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the institution entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        auth_url:
                          type: string
                          description: Url used to authenticate institution specific
                            login.
                          readOnly: true
                        logo_path:
                          type: string
                          description: Static path to the institution specific logo.
                          readOnly: true
                        name:
                          type: string
                          description: Full name of the institution.
                          readOnly: true
                        description:
                          type: string
                          description: Description of the institution.
                          readOnly: true
                      description: The properties of the institution entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        users:
                          type: string
                          description: A relationship to the users affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        registrations:
                          type: string
                          description: A relationship to the registrations affiliated
                            with the institution.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the institution entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the institutions
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/cos/
                  attributes:
                    auth_url: null
                    logo_path: /static/img/institutions/shields/cos-shield.png
                    name: Center For Open Science
                    description: COS is a non-profit technology company providing
                      free and open services to increase inclusivity and transparency
                      of research. Find out more at <a href="https://cos.io">cos.io</a>.
                  type: institutions
                  id: cos
                links:
                  first: null
                  last: https://api.osf.io/v2/institutions/cos/nodes/?page=2
                  prev: null
                  next: https://api.osf.io/v2/institutions/cos/nodes/?page=2
                  meta:
                    total: 15
                    per_page: 10
      x-response-schema: Institution
  /institutions/{institution_id}/:
    get:
      tags:
      - Institutions
      summary: Retrieve an institution
      description: |-
        Retrieves the details of an institution
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested institution, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: institutions_detail
      parameters:
      - name: institution_id
        in: path
        description: The unique identifier of the institution you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Institution
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the institution entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        auth_url:
                          type: string
                          description: Url used to authenticate institution specific
                            login.
                          readOnly: true
                        logo_path:
                          type: string
                          description: Static path to the institution specific logo.
                          readOnly: true
                        name:
                          type: string
                          description: Full name of the institution.
                          readOnly: true
                        description:
                          type: string
                          description: Description of the institution.
                          readOnly: true
                      description: The properties of the institution entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        users:
                          type: string
                          description: A relationship to the users affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        registrations:
                          type: string
                          description: A relationship to the registrations affiliated
                            with the institution.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the institution entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the institutions
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/cos/
                  attributes:
                    auth_url: null
                    logo_path: /static/img/institutions/shields/cos-shield.png
                    name: Center For Open Science
                    description: COS is a non-profit technology company providing
                      free and open services to increase inclusivity and transparency
                      of research. Find out more at <a href="https://cos.io">cos.io</a>.
                  type: institutions
                  id: cos
      x-response-schema: Institution
  /institutions/{institution_id}/users/:
    get:
      tags:
      - Institutions
      summary: List all affiliated users
      description: |-
        A paginated list of all users affiliated with an institution.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 users. Each resource in the array is a separate users object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        You can optionally request that the response only include users that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/cos/users?filter[family_name]=Nosek.

        Users may be filtered by their `id`, `full_name`, `given_name`, `middle_names`, and `family_name`
      operationId: institutions_users_list
      parameters:
      - name: institution_id
        in: path
        description: The unique identifier of the institution you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: User
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the user entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the user entity (`users`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - active
                      - date_registered
                      - full_name
                      type: object
                      properties:
                        active:
                          type: boolean
                          description: Whether or not the user is an active user.
                          readOnly: true
                        date_registered:
                          type: string
                          description: "The time at which the user registered their\
                            \ account, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        family_name:
                          type: string
                          description: "The family name of the user, used for bibliographic\
                            \ citations."
                        full_name:
                          type: string
                          description: "The full name of the user, used for display\
                            \ on the OSF."
                        given_name:
                          type: string
                          description: "The given name of the user, used for bibliographic\
                            \ citations."
                        locale:
                          type: string
                          description: "The user's locale, e.g. 'en_US'."
                        middle_names:
                          type: string
                          description: "The middle names of the user, used for bibliographic\
                            \ citations."
                        suffix:
                          type: string
                          description: "The suffix of the user, used for bibliographic\
                            \ citations."
                        timezone:
                          type: string
                          description: "The user's timezone, e.g. 'Etc/UTC'."
                      description: The properties of the user entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        institutions:
                          type: string
                          description: A link to the list of institutions the user
                            is affiliated with.
                          readOnly: true
                        nodes:
                          type: string
                          description: A link to the list of nodes the user is a contributor
                            to.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the user entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the user's profile page on the OSF.
                          format: URL
                          readOnly: true
                        profile_image:
                          type: string
                          description: A link to the user's profile image.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the user
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: users
                      id: "{user_id}"
                      attributes:
                        full_name: Casey M. Rollins
                        middle_names: Marie
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/cdi38/nodes/
                          meta: {}
                    institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/users/cdi38/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/users/cdi38/institutions/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/users/cdi38/
                    html: https://osf.io/cdi38/
                    profile_image: https://secure.gravatar.com/avatar/37fc491096861dae49fe23ba665af56b?d=identicon
                  attributes:
                    family_name: Nosek
                    suffix: ""
                    locale: en_US
                    date_registered: 2012-05-31T05:29:01.320000
                    middle_names: A.
                    given_name: Brian
                    full_name: Brian A. Nosek
                    active: true
                    timezone: America/New_York
                  type: users
                  id: cdi38
                links:
                  first: null
                  last: https://api.osf.io/v2/institutions/cos/users/?page=8
                  prev: null
                  next: https://api.osf.io/v2/institutions/cos/users/?page=2
                  meta:
                    total: 77
                    per_page: 10
      x-response-schema: User
  /institutions/{institution_id}/nodes/:
    get:
      tags:
      - Institutions
      summary: List all affiliated nodes
      description: |-
        A paginated list of all nodes affiliated with an institution.
        #### Versioning
        As of version `2.2`, affiliated components (in addition to affiliated top-level projects) are returned from this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 nodes. Each resource in the array is a separate nodes object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/cos/nodes?filter[title]=science.

        Nodes may be filtered by their `id`, `title`, `description`, `public`, `tags`, `category`, `date_created`, `date_modified`, `root`, `parent`, `contributors`, and `preprint`
      operationId: institutions_node_list
      parameters:
      - name: institution_id
        in: path
        description: The unique identifier of the institution you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/citation/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/comments/?filter%5Btarget%5D=qpxv2
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/registrations/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/logs/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/qpxv2/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/qpxv2/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/preprints/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qpxv2/draft_registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/qpxv2/
                    html: https://osf.io/qpxv2/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: A project storing mp4 files of all the webinar videos
                      posted to the COS youtube channel
                    current_user_permissions:
                    - read
                    date_modified: 2017-02-09T14:19:23.054000
                    title: COS Webinar Videos
                    collection: false
                    registration: false
                    date_created: 2017-02-08T18:27:00.135000
                    current_user_can_comment: true
                    node_license:
                      copyright_holders:
                      - ""
                      year: "2017"
                    public: true
                    tags: []
                  type: nodes
                  id: qpxv2
                links:
                  first: null
                  last: https://api.osf.io/v2/institutions/cos/nodes/?page=330
                  prev: null
                  next: https://api.osf.io/v2/institutions/cos/nodes/?page=2
                  meta:
                    total: 337
                    per_page: 10
      x-response-schema: Node
  /institutions/{institution_id}/registrations/:
    get:
      tags:
      - Institutions
      summary: List all affiliated registrations
      description: |-
        A paginated list of all registrations affiliated with an institution.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 registrations. Each resource in the array is a separate users object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/institutions/cos/registrations?filter[title]=science.

        Registrations may be filtered by their  `id`, `title`, `description`, `public`, `tags`, `category`, `date_created`, `date_modified`, `root`, `parent`, `contributors`, and `preprint`
      operationId: institutions_registration_list
      parameters:
      - name: institution_id
        in: path
        description: The unique identifier of the institution you wish to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/citation/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/comments/?filter%5Btarget%5D=xemzv
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/xemzv/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/xemzv/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/children/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/xemzv/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/xemzv/
                    html: https://osf.io/xemzv/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: This project contains the materials and proposal
                      for the upcoming OASPA 2016 Conference
                    current_user_permissions:
                    - read
                    date_modified: 2016-12-14T20:48:58.147000
                    title: "COASPA 2016, Center for Open Science"
                    collection: false
                    registration: true
                    date_created: 2016-05-26T14:56:27.310000
                    current_user_can_comment: true
                    node_license:
                      copyright_holders:
                      - ""
                      year: "2016"
                    public: true
                    tags:
                    - TOP Guidelines
                    - Open Practice Badges
                    - Registered Reports
                    - Prereg Challenge
                  type: nodes
                  id: xemzv
                links:
                  first: null
                  last: https://api.osf.io/v2/institutions/cos/registrations/?page=3
                  prev: null
                  next: https://api.osf.io/v2/institutions/cos/registrations/?page=2
                  meta:
                    total: 22
                    per_page: 10
      x-response-schema: Registration
  /schemas/registrations/:
    get:
      tags:
      - Registration Schemas
      summary: Retrieve a list of Registration Schemas
      description: |-
        Retrieve a paginated list of all active Registration Schemas. Registration Schemas describe the supplemental questions that accompany a registration. Registration Schemas are read-only for API users.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of 10 Registration Schemas. Each resource in the array is a separate Registration Schemas object.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Errors
        This request should never return an error.
      operationId: registration_schemas_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Registration Schema
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Registration Schema.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Registration Schema (`registration-schemas`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the Registration Schema
                        readOnly: true
                      active:
                        type: boolean
                        description: Bool that represents whether the Registration
                          Schema is active.
                        readOnly: true
                      schema_version:
                        type: integer
                        description: The version of this Registration Schema
                        readOnly: true
                      schema:
                        type: object
                        additionalProperties:
                          type: object
                          properties: {}
                        description: This dictionary is the raw schema that originally
                          defined the Registration Schema object and it's blocks.
                        readOnly: true
                    description: The attributes of the Registration Schema.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Registration
                          Schema.
                        format: URL
                        readOnly: true
                    description: URLs that link to alternative representations of
                      the Registration Schema.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      schema_blocks:
                        type: string
                        description: A link to the list of schema blocks that contain
                          the question prompt information for the Registration Schema.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the Registration Schema.
                    readOnly: true
            application/json:
              example:
                data:
                - type: registration-schemas
                  id: 6176c9d45e01f100091d4f94
                  attributes:
                    name: Test Long-Form Registration Schema
                    schema_version: 2
                    schema:
                      title: Test Long-Form Registration Schema
                      name: Test Long-Form Registration Schema
                      atomicSchema: true
                      version: 2
                      description: This is a test form for documentation purposes.
                      pages: []
                      blocks:
                      - block_type: page-heading
                        display_text: The title of the page
                      - block_type: question-label
                        display_text: "The first question, put answer below."
                      - block_type: long-text-input
                        registration_response_key: Q1
                    description: This is a test form for documentation purposes.
                    active: true
                  relationships:
                    schema_blocks:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/schema_blocks/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/
                meta:
                  total: 1
                  per_page: 20
                  version: 2.2
                links:
                  self: https://api.test.osf.io/v2/schemas/registrations/
                  first: null
                  last: https://api.test.osf.io/v2/schemas/registrations/?page=2
                  prev: null
                  next: https://api.test.osf.io/v2/schemas/registrations/?page=2
      x-response-schema: Registration Schemas
  /schemas/registrations/{registration_schema_id}:
    get:
      tags:
      - Registration Schemas
      summary: Retrieve a Registration Schema
      description: |-
        Retrieves the details of a given Registration Schema. Registration Schemas defines the desired supplemental information that should accompany be included in a Registration. Registration Schemas are Read-only to API users.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Registration Schemas, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registration_schema_read
      parameters:
      - name: registration_schema_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Registration Schema
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Registration Schema.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Registration Schema (`registration-schemas`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the Registration Schema
                        readOnly: true
                      active:
                        type: boolean
                        description: Bool that represents whether the Registration
                          Schema is active.
                        readOnly: true
                      schema_version:
                        type: integer
                        description: The version of this Registration Schema
                        readOnly: true
                      schema:
                        type: object
                        additionalProperties:
                          type: object
                          properties: {}
                        description: This dictionary is the raw schema that originally
                          defined the Registration Schema object and it's blocks.
                        readOnly: true
                    description: The attributes of the Registration Schema.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Registration
                          Schema.
                        format: URL
                        readOnly: true
                    description: URLs that link to alternative representations of
                      the Registration Schema.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      schema_blocks:
                        type: string
                        description: A link to the list of schema blocks that contain
                          the question prompt information for the Registration Schema.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the Registration Schema.
                    readOnly: true
            application/json:
              example:
                data:
                  type: registration-schemas
                  id: 6176c9d45e01f100091d4f94
                  attributes:
                    name: Test Long-Form Registration Schema
                    schema_version: 2
                    schema:
                      title: Test Long-Form Registration Schema
                      name: Test Long-Form Registration Schema
                      version: 2
                      description: This is a test form for documentation purposes.
                      pages: []
                      blocks:
                      - block_type: page-heading
                        display_text: The title of the page
                      - block_type: question-label
                        display_text: "The first question, put answer below."
                      - block_type: long-text-input
                        registration_response_key: Q1
                      atomicSchema: true
                    description: This is a test form for documentation purposes.
                    active: true
                  relationships:
                    schema_blocks:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/schema_blocks/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/
      x-response-schema: Registration Schema
  /schema_responses/:
    get:
      tags:
      - Schema Responses
      summary: List all Schema Responses
      description: |-
        This retrieves a paginated list of all active Schema Responses that are public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys. The `data` key contains an array of 10 Schema Responses. Each resource in the array is a separate Registration Schemas object. The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Errors
        This request should never return an error.
      operationId: schema_responses_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Schema Responses
                required:
                - attributes
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Schema Response.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Schema Response (`schema-response`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      revision_justification:
                        type: string
                        description: A user provided string representing the reason
                          a new Schema Response was needed.
                      date_created:
                        type: integer
                        description: The date the Schema Response was created
                      date_submitted:
                        type: integer
                        description: The date the Schema Response was submitted for
                          approval.
                      date_modified:
                        type: integer
                        description: The date the Schema Response was most recently
                          changed.
                      revision_responses:
                        type: object
                        properties: {}
                        description: "A dictionary object representing responses to\
                          \ to the revision where the key is the block key for that\
                          \ the response. For example in the registration response\
                          \ `{\"q1\": \"Answer 1\"}` the block key is `q1`.."
                      reviews_state:
                        type: string
                        description: "A string that represents Schema Response state.\
                          \ `initial` is the state of a Schema Response on a newly\
                          \ registered Registration, to edit a Schema Response you\
                          \ must create a Schema Response Action that triggers a new\
                          \ submission."
                        enum:
                        - initial
                        - in_progress
                        - approved
                        - pending_moderation
                      is_pending_current_user_approval:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          needs the current user to approve the state transition.
                      is_original_response:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          is the original one that was made when the registration
                          was created.
                      updated_response_keys:
                        type: array
                        description: A list of strings which the response keys for
                          Registration Response Blocks that were updated from the
                          previous schema.
                        readOnly: true
                    description: The properties of the Schema Response.
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Schema Response.
                        format: URL
                    description: URLs to alternative representations of the Schema
                      Response entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      actions:
                        type: string
                        description: A link to the Registration Schema Actions endpoint
                          for this Schema Response.
                        format: URL
                      registration:
                        type: string
                        description: A link to the Registration for this Schema Response.
                        format: URL
                      registration_schema:
                        type: string
                        description: A link to the Registration Schema for this Schema
                          Response.
                        format: URL
                      initiated_by:
                        type: string
                        description: A link to the User who initiated the creation
                          of the Schema Response.
                        format: URL
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                example:
                  data:
                    type: schema-responses
                    attributes:
                      revision_justification: I made a mistake.
                      revision_responses:
                        Q1: updated response
            application/json:
              example:
                data:
                - type: registration-schemas
                  id: 61b79f9eadbb5701424a2d5e
                  attributes:
                    revision_justification: I made a mistake
                    date_created: 2021-12-13T19:31:42.058Z
                    date_submitted: 2021-12-13T19:53:02.837Z
                    date_modified: 2021-12-13T19:53:05.015Z
                    revision_responses:
                      q1: Answer 1
                      q2: Answer 2
                    reviews_state: approved
                    is_original_response: false
                    is_pending_current_user_approval: false
                  relationships:
                    actions:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/actions/
                          meta: {}
                    registration:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/jxtek/
                          meta: {}
                        data:
                          id: jxtek
                          type: registration
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/5e795fc0d2833800195735d0/
                          meta: {}
                        data:
                          id: 5e795fc0d2833800195735d0
                          type: registration-schemas
                    initiated_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/swrv7/
                          meta: {}
                        data:
                          id: swrv7
                          type: users
                meta:
                  total: 1
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.test.osf.io/v2/schema_responses/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Schema Responses
    post:
      tags:
      - Schema Responses
      summary: Create a new Schema Response
      description: |-
        This endpoint creates a new Schema Response with an `in_progress` state. A new response can only be created if the current schema response is in an `approved` state.
        #### Returns
        Returns a JSON object with a `data` key containing an updated representation of the requested Schema Response, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_ppost
      requestBody:
        content:
          application/json:
            schema:
              title: Schema Responses
              required:
              - attributes
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the Schema Response.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the Schema Response (`schema-response`).
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    revision_justification:
                      type: string
                      description: A user provided string representing the reason
                        a new Schema Response was needed.
                    date_created:
                      type: integer
                      description: The date the Schema Response was created
                    date_submitted:
                      type: integer
                      description: The date the Schema Response was submitted for
                        approval.
                    date_modified:
                      type: integer
                      description: The date the Schema Response was most recently
                        changed.
                    revision_responses:
                      type: object
                      properties: {}
                      description: "A dictionary object representing responses to\
                        \ to the revision where the key is the block key for that\
                        \ the response. For example in the registration response `{\"\
                        q1\": \"Answer 1\"}` the block key is `q1`.."
                    reviews_state:
                      type: string
                      description: "A string that represents Schema Response state.\
                        \ `initial` is the state of a Schema Response on a newly registered\
                        \ Registration, to edit a Schema Response you must create\
                        \ a Schema Response Action that triggers a new submission."
                      enum:
                      - initial
                      - in_progress
                      - approved
                      - pending_moderation
                    is_pending_current_user_approval:
                      type: boolean
                      description: A bool that represents whether the Schema Response
                        needs the current user to approve the state transition.
                    is_original_response:
                      type: boolean
                      description: A bool that represents whether the Schema Response
                        is the original one that was made when the registration was
                        created.
                    updated_response_keys:
                      type: array
                      description: A list of strings which the response keys for Registration
                        Response Blocks that were updated from the previous schema.
                      readOnly: true
                  description: The properties of the Schema Response.
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the detail page for a Schema Response.
                      format: URL
                  description: URLs to alternative representations of the Schema Response
                    entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    actions:
                      type: string
                      description: A link to the Registration Schema Actions endpoint
                        for this Schema Response.
                      format: URL
                    registration:
                      type: string
                      description: A link to the Registration for this Schema Response.
                      format: URL
                    registration_schema:
                      type: string
                      description: A link to the Registration Schema for this Schema
                        Response.
                      format: URL
                    initiated_by:
                      type: string
                      description: A link to the User who initiated the creation of
                        the Schema Response.
                      format: URL
                  description: Links to other entities or entity collections that
                    have a relationship to the file entity.
              example:
                data:
                  type: schema-responses
                  attributes:
                    revision_justification: I made a mistake.
                    revision_responses:
                      Q1: updated response
        required: true
      responses:
        "201":
          description: OK
          content:
            '*/*':
              schema:
                title: Schema Responses
                required:
                - attributes
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Schema Response.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Schema Response (`schema-response`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      revision_justification:
                        type: string
                        description: A user provided string representing the reason
                          a new Schema Response was needed.
                      date_created:
                        type: integer
                        description: The date the Schema Response was created
                      date_submitted:
                        type: integer
                        description: The date the Schema Response was submitted for
                          approval.
                      date_modified:
                        type: integer
                        description: The date the Schema Response was most recently
                          changed.
                      revision_responses:
                        type: object
                        properties: {}
                        description: "A dictionary object representing responses to\
                          \ to the revision where the key is the block key for that\
                          \ the response. For example in the registration response\
                          \ `{\"q1\": \"Answer 1\"}` the block key is `q1`.."
                      reviews_state:
                        type: string
                        description: "A string that represents Schema Response state.\
                          \ `initial` is the state of a Schema Response on a newly\
                          \ registered Registration, to edit a Schema Response you\
                          \ must create a Schema Response Action that triggers a new\
                          \ submission."
                        enum:
                        - initial
                        - in_progress
                        - approved
                        - pending_moderation
                      is_pending_current_user_approval:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          needs the current user to approve the state transition.
                      is_original_response:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          is the original one that was made when the registration
                          was created.
                      updated_response_keys:
                        type: array
                        description: A list of strings which the response keys for
                          Registration Response Blocks that were updated from the
                          previous schema.
                        readOnly: true
                    description: The properties of the Schema Response.
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Schema Response.
                        format: URL
                    description: URLs to alternative representations of the Schema
                      Response entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      actions:
                        type: string
                        description: A link to the Registration Schema Actions endpoint
                          for this Schema Response.
                        format: URL
                      registration:
                        type: string
                        description: A link to the Registration for this Schema Response.
                        format: URL
                      registration_schema:
                        type: string
                        description: A link to the Registration Schema for this Schema
                          Response.
                        format: URL
                      initiated_by:
                        type: string
                        description: A link to the User who initiated the creation
                          of the Schema Response.
                        format: URL
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                example:
                  data:
                    type: schema-responses
                    attributes:
                      revision_justification: I made a mistake.
                      revision_responses:
                        Q1: updated response
            application/json:
              example:
                data:
                  id: 61c1e058e88376000a90e5dd
                  type: schema-responses
                  attributes:
                    date_created: 2021-12-21T14:10:32.665084
                    date_submitted: null
                    date_modified: 2021-12-21T14:10:32.665111
                    revision_justification: ""
                    revision_responses:
                      uploader: []
                      summary: A summary of what is contained in this registration.
                    updated_response_keys: []
                    reviews_state: in_progress
                  relationships:
                    actions:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61c1e058e88376000a90e5dd/actions/
                          meta: {}
                    registration:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/e4ygz/
                          meta: {}
                      data:
                        id: e4ygz
                        type: registrations
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/5e13965879bee100010a790f/
                          meta: {}
                      data:
                        id: 5e13965879bee100010a790f
                        type: registration-schemas
                    initiated_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/zpw9n/
                          meta: {}
                      data:
                        id: zpw9n
                        type: users
                  links:
                    self: https://api.osf.io/v2/schema_responses/61c1e058e88376000a90e5dd/
                meta:
                  version: "2.0"
      x-codegen-request-body-name: body
  /schema_responses/{schema_response_id}:
    get:
      tags:
      - Schema Responses
      summary: Retrieve a Schema Response
      description: |-
        This retrieves a single Schema response using it's id.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Schema Response, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_responses_read
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Schema Responses
                required:
                - attributes
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Schema Response.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Schema Response (`schema-response`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      revision_justification:
                        type: string
                        description: A user provided string representing the reason
                          a new Schema Response was needed.
                      date_created:
                        type: integer
                        description: The date the Schema Response was created
                      date_submitted:
                        type: integer
                        description: The date the Schema Response was submitted for
                          approval.
                      date_modified:
                        type: integer
                        description: The date the Schema Response was most recently
                          changed.
                      revision_responses:
                        type: object
                        properties: {}
                        description: "A dictionary object representing responses to\
                          \ to the revision where the key is the block key for that\
                          \ the response. For example in the registration response\
                          \ `{\"q1\": \"Answer 1\"}` the block key is `q1`.."
                      reviews_state:
                        type: string
                        description: "A string that represents Schema Response state.\
                          \ `initial` is the state of a Schema Response on a newly\
                          \ registered Registration, to edit a Schema Response you\
                          \ must create a Schema Response Action that triggers a new\
                          \ submission."
                        enum:
                        - initial
                        - in_progress
                        - approved
                        - pending_moderation
                      is_pending_current_user_approval:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          needs the current user to approve the state transition.
                      is_original_response:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          is the original one that was made when the registration
                          was created.
                      updated_response_keys:
                        type: array
                        description: A list of strings which the response keys for
                          Registration Response Blocks that were updated from the
                          previous schema.
                        readOnly: true
                    description: The properties of the Schema Response.
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Schema Response.
                        format: URL
                    description: URLs to alternative representations of the Schema
                      Response entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      actions:
                        type: string
                        description: A link to the Registration Schema Actions endpoint
                          for this Schema Response.
                        format: URL
                      registration:
                        type: string
                        description: A link to the Registration for this Schema Response.
                        format: URL
                      registration_schema:
                        type: string
                        description: A link to the Registration Schema for this Schema
                          Response.
                        format: URL
                      initiated_by:
                        type: string
                        description: A link to the User who initiated the creation
                          of the Schema Response.
                        format: URL
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                example:
                  data:
                    type: schema-responses
                    attributes:
                      revision_justification: I made a mistake.
                      revision_responses:
                        Q1: updated response
            application/json:
              example:
                data:
                  type: registration-schemas
                  id: 61b79f9eadbb5701424a2d5e
                  attributes:
                    revision_justification: I made a mistake
                    date_created: 2021-12-13T19:31:42.058Z
                    date_submitted: 2021-12-13T19:53:02.837Z
                    date_modified: 2021-12-13T19:53:05.015Z
                    revision_responses:
                      q1: Answer 1
                      q2: Answer 2
                    reviews_state: approved
                    is_original_response: false
                    is_pending_current_user_approval: false
                  relationships:
                    actions:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/actions/
                          meta: {}
                    registration:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/jxtek/
                          meta: {}
                        data:
                          id: jxtek
                          type: registration
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/5e795fc0d2833800195735d0/
                          meta: {}
                        data:
                          id: 5e795fc0d2833800195735d0
                          type: registration-schemas
                    initiated_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/swrv7/
                          meta: {}
                        data:
                          id: swrv7
                          type: users
                  links:
                    self: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/
      x-response-schema: Schema Response
    delete:
      tags:
      - Schema Responses
      summary: Delete a Incomplete Schema Response
      description: |-
        This endpoint deletes a new Schema Response. Schema Responses can only be deleted in the `in_progress` state. Once a Schema Response is transitioned to an `approved` it is immutable and another Schema Response must be created to update the Schema Response for that registration.
        #### Returns
        Returns a JSON object with a `data` key containing an updated representation of the requested Schema Response, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_delete
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - Schema Responses
      summary: Update a Registration's Schema Response
      description: |-
        Patching to this endpoint allows one to directly edit the revision responses on the Schema Response of a Registration if that Schema Response is in an `in_progress` state.
        #### Returns
        Returns a JSON object with a `data` key containing an updated representation of the requested Schema Response, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_patch
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Schema Responses
              required:
              - attributes
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the Schema Response.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the Schema Response (`schema-response`).
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    revision_justification:
                      type: string
                      description: A user provided string representing the reason
                        a new Schema Response was needed.
                    date_created:
                      type: integer
                      description: The date the Schema Response was created
                    date_submitted:
                      type: integer
                      description: The date the Schema Response was submitted for
                        approval.
                    date_modified:
                      type: integer
                      description: The date the Schema Response was most recently
                        changed.
                    revision_responses:
                      type: object
                      properties: {}
                      description: "A dictionary object representing responses to\
                        \ to the revision where the key is the block key for that\
                        \ the response. For example in the registration response `{\"\
                        q1\": \"Answer 1\"}` the block key is `q1`.."
                    reviews_state:
                      type: string
                      description: "A string that represents Schema Response state.\
                        \ `initial` is the state of a Schema Response on a newly registered\
                        \ Registration, to edit a Schema Response you must create\
                        \ a Schema Response Action that triggers a new submission."
                      enum:
                      - initial
                      - in_progress
                      - approved
                      - pending_moderation
                    is_pending_current_user_approval:
                      type: boolean
                      description: A bool that represents whether the Schema Response
                        needs the current user to approve the state transition.
                    is_original_response:
                      type: boolean
                      description: A bool that represents whether the Schema Response
                        is the original one that was made when the registration was
                        created.
                    updated_response_keys:
                      type: array
                      description: A list of strings which the response keys for Registration
                        Response Blocks that were updated from the previous schema.
                      readOnly: true
                  description: The properties of the Schema Response.
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the detail page for a Schema Response.
                      format: URL
                  description: URLs to alternative representations of the Schema Response
                    entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    actions:
                      type: string
                      description: A link to the Registration Schema Actions endpoint
                        for this Schema Response.
                      format: URL
                    registration:
                      type: string
                      description: A link to the Registration for this Schema Response.
                      format: URL
                    registration_schema:
                      type: string
                      description: A link to the Registration Schema for this Schema
                        Response.
                      format: URL
                    initiated_by:
                      type: string
                      description: A link to the User who initiated the creation of
                        the Schema Response.
                      format: URL
                  description: Links to other entities or entity collections that
                    have a relationship to the file entity.
              example:
                data:
                  type: schema-responses
                  attributes:
                    revision_justification: I made a mistake.
                    revision_responses:
                      Q1: updated response
        required: true
      responses:
        "201":
          description: OK
          content:
            '*/*':
              schema:
                title: Schema Responses
                required:
                - attributes
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Schema Response.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Schema Response (`schema-response`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      revision_justification:
                        type: string
                        description: A user provided string representing the reason
                          a new Schema Response was needed.
                      date_created:
                        type: integer
                        description: The date the Schema Response was created
                      date_submitted:
                        type: integer
                        description: The date the Schema Response was submitted for
                          approval.
                      date_modified:
                        type: integer
                        description: The date the Schema Response was most recently
                          changed.
                      revision_responses:
                        type: object
                        properties: {}
                        description: "A dictionary object representing responses to\
                          \ to the revision where the key is the block key for that\
                          \ the response. For example in the registration response\
                          \ `{\"q1\": \"Answer 1\"}` the block key is `q1`.."
                      reviews_state:
                        type: string
                        description: "A string that represents Schema Response state.\
                          \ `initial` is the state of a Schema Response on a newly\
                          \ registered Registration, to edit a Schema Response you\
                          \ must create a Schema Response Action that triggers a new\
                          \ submission."
                        enum:
                        - initial
                        - in_progress
                        - approved
                        - pending_moderation
                      is_pending_current_user_approval:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          needs the current user to approve the state transition.
                      is_original_response:
                        type: boolean
                        description: A bool that represents whether the Schema Response
                          is the original one that was made when the registration
                          was created.
                      updated_response_keys:
                        type: array
                        description: A list of strings which the response keys for
                          Registration Response Blocks that were updated from the
                          previous schema.
                        readOnly: true
                    description: The properties of the Schema Response.
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Schema Response.
                        format: URL
                    description: URLs to alternative representations of the Schema
                      Response entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      actions:
                        type: string
                        description: A link to the Registration Schema Actions endpoint
                          for this Schema Response.
                        format: URL
                      registration:
                        type: string
                        description: A link to the Registration for this Schema Response.
                        format: URL
                      registration_schema:
                        type: string
                        description: A link to the Registration Schema for this Schema
                          Response.
                        format: URL
                      initiated_by:
                        type: string
                        description: A link to the User who initiated the creation
                          of the Schema Response.
                        format: URL
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                example:
                  data:
                    type: schema-responses
                    attributes:
                      revision_justification: I made a mistake.
                      revision_responses:
                        Q1: updated response
            application/json:
              example:
                data:
                  type: registration-schemas
                  id: 61b79f9eadbb5701424a2d5e
                  attributes:
                    revision_justification: I made a mistake
                    date_created: 2021-12-13T19:31:42.058Z
                    date_submitted: 2021-12-13T19:53:02.837Z
                    date_modified: 2021-12-13T19:53:05.015Z
                    revision_responses:
                      q1: updated respons
                      q2: Answer 2
                    reviews_state: in_progress
                    is_original_response: false
                    is_pending_current_user_approval: false
                  relationships:
                    actions:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/actions/
                          meta: {}
                    registration:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/jxtek/
                          meta: {}
                        data:
                          id: jxtek
                          type: registration
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/5e795fc0d2833800195735d0/
                          meta: {}
                        data:
                          id: 5e795fc0d2833800195735d0
                          type: registration-schemas
                    initiated_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/swrv7/
                          meta: {}
                        data:
                          id: swrv7
                          type: users
                  links:
                    self: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/
      x-codegen-request-body-name: body
  /schema_responses/{schema_response_id}/actions/:
    get:
      tags:
      - Schema Response Actions
      summary: Retrieve a list of Schema Response Actions for a Schema Response
      description: |-
        This retrieves a paginated list of all Schema Response Actions created for a Schema Response.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Schema Response Actions, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_action_read
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Schema Response Actions
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Schema Response Action.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Schema Response Action
                      (`schema-response-actions`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      trigger:
                        type: string
                        description: The name of the trigger that caused the action.
                        enum:
                        - submit
                        - approve
                        - accept
                        - admin_reject
                        - moderator_reject
                      from_state:
                        type: string
                        description: The name of the state of the Schema Response
                          prior to the creation of the action.
                        enum:
                        - initial
                        - in_progress
                        - approved
                        - pending_moderation
                      to_state:
                        type: string
                        description: The name of the state of the Schema Response
                          after the creation of the action
                        enum:
                        - in_progress
                        - approved
                        - pending_moderation
                      comment:
                        type: string
                        description: A comment made explaining the reasoning of the
                          action.
                        readOnly: true
                      date_created:
                        type: string
                        description: The date the action was created.
                        readOnly: true
                      auto:
                        type: boolean
                        description: Bool of representing whether a user created the
                          action.
                        readOnly: true
                      visible:
                        type: boolean
                        description: Bool of representing whether the action is visible.
                        readOnly: true
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      creator:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                      target:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the Schema Response Action entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Registration
                          Schema.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the Registration
                      Schema entity.
                    readOnly: true
            application/json:
              example:
                data:
                - id: 61b9eae1a7d8ac025c4c46d3
                  type: schema-response-actions
                  attributes:
                    trigger: submit
                    comment: ""
                    from_state: in_progress
                    to_state: unapproved
                    date_created: 2021-12-15T13:17:21.845573Z
                    date_modified: 2021-12-15T13:17:21.845622Z
                    auto: false
                    visible: true
                  relationships:
                    creator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/zfsr2/
                          meta: {}
                      data:
                        id: zfsr2
                        type: users
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61b9cd62eb66180215222669/
                          meta: {}
                      data:
                        id: 61b9cd62eb66180215222669
                        type: schema_responses
                  embeds:
                    creator:
                      data:
                        id: zfsr2
                        type: users
                        attributes:
                          full_name: Lukasz Okruszek
                          given_name: Łukasz
                          middle_names: ""
                          family_name: Okruszek
                          suffix: ""
                          date_registered: 2017-02-02T21:32:45.495000Z
                          active: true
                          timezone: Europe/Budapest
                          locale: pl
                          social:
                            ssrn: ""
                            orcid: 0000-0002-7136-2864
                            github: []
                            scholar: CHyWD84AAAAJ&amp;hl
                            twitter: []
                            linkedIn: []
                            impactStory: ""
                            baiduScholar: ""
                            researchGate: Lukasz-Okruszek
                            researcherId: ""
                            profileWebsites: []
                            academiaProfileID: ""
                            academiaInstitution: ""
                          employment:
                          - title: Head
                            endYear: ""
                            ongoing: true
                            endMonth: 0
                            startYear: "2016"
                            department: Social Neuroscience Lab
                            startMonth: 9
                            institution: "Institute of Psychology, Polish Academy\
                              \ of Sciences"
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/groups/
                                meta: {}
                          quickfiles:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/quickfiles/
                                meta: {}
                              upload:
                                href: https://files.osf.io/v1/resources/ytg45jbs3r/providers/osfstorage/
                                meta: {}
                              download:
                                href: https://files.osf.io/v1/resources/ytg45jbs3r/providers/osfstorage/?zip=
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/zfsr2/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/zfsr2/
                          profile_image: https://secure.gravatar.com/avatar/8a25f4601ac997f113b3145aa5cf907e?d=identicon
                          self: https://api.osf.io/v2/users/zfsr2/
                  links:
                    self: https://api.osf.io/v2/actions/61b9eae1a7d8ac025c4c46d3/
                - id: 61b9eaf13cddaa026ef7245d
                  type: schema-response-actions
                  attributes:
                    trigger: approve
                    comment: ""
                    from_state: unapproved
                    to_state: approved
                    date_created: 2021-12-15T13:17:37.195568Z
                    date_modified: 2021-12-15T13:17:37.195597Z
                    auto: false
                    visible: true
                  relationships:
                    creator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/zfsr2/
                          meta: {}
                      data:
                        id: zfsr2
                        type: users
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61b9cd62eb66180215222669/
                          meta: {}
                      data:
                        id: 61b9cd62eb66180215222669
                        type: schema_responses
                  embeds:
                    creator:
                      data:
                        id: zfsr2
                        type: users
                        attributes:
                          full_name: Test User
                          given_name: Test
                          middle_names: ""
                          family_name: User
                          suffix: ""
                          date_registered: 2017-02-02T21:32:45.495000Z
                          active: true
                          timezone: Europe/Budapest
                          locale: pl
                          social:
                            ssrn: ""
                            orcid: 0000-0002-7136-286X
                            github: []
                            scholar: ""
                            twitter: []
                            linkedIn: []
                            impactStory: ""
                            baiduScholar: ""
                            researchGate: test-user
                            researcherId: ""
                            profileWebsites: []
                            academiaProfileID: ""
                            academiaInstitution: ""
                          employment:
                          - title: Developer
                            endYear: ""
                            ongoing: true
                            endMonth: 0
                            startYear: "2017"
                            department: Denfense
                            startMonth: 9
                            institution: Institute of the Stars
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/sfsr2/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/sfsr2/groups/
                                meta: {}
                          quickfiles:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/sfsr2/quickfiles/
                                meta: {}
                              upload:
                                href: https://files.osf.io/v1/resources/ytg45jbs3r/providers/osfstorage/
                                meta: {}
                              download:
                                href: https://files.osf.io/v1/resources/ytg45jbs3r/providers/osfstorage/?zip=
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/sfsr2/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/sfsr2/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/sfsr2/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/sfsr2/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/zfsr2/
                          profile_image: https://secure.gravatar.com/avatar/8a25f4601ac997f113b3145aa5cf907e?d=identicon
                          self: https://api.osf.io/v2/users/sfsr2/
                  links:
                    self: https://api.osf.io/v2/actions/61b9eaf13cddaa026ef7245d/
                meta:
                  total: 2
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/schema_responses/61b9cd62eb66180215222669/actions/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Schema Response Actions
    post:
      tags:
      - Schema Response Actions
      summary: Create a new Schema Response Action
      description: |-
        This creates a new Schema Response Action in order to trigger a state transition for a Schema Response.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Schema Response Actions, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_action_read
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      responses:
        "201":
          description: OK
          content: {}
      x-response-schema: Schema Response Actions
  /schema_responses/{schema_response_id}/actions/{schema_response_action_id}:
    get:
      tags:
      - Schema Response Actions
      summary: A Schema Response Action from a Schema Response
      description: |-
        Retrieves a Schema Response Action by it's ID.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Schema Response Actions, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_action_read
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Schema Response example `61b9cd62eb66180215222669`.
        required: true
        schema:
          type: string
      - name: schema_response_action_id
        in: path
        description: The unique identifier of the Schema Response Action example `61b9eae1a7d8ac025c4c46d3`.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Schema Response Actions
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Schema Response Action.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Schema Response Action
                      (`schema-response-actions`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      trigger:
                        type: string
                        description: The name of the trigger that caused the action.
                        enum:
                        - submit
                        - approve
                        - accept
                        - admin_reject
                        - moderator_reject
                      from_state:
                        type: string
                        description: The name of the state of the Schema Response
                          prior to the creation of the action.
                        enum:
                        - initial
                        - in_progress
                        - approved
                        - pending_moderation
                      to_state:
                        type: string
                        description: The name of the state of the Schema Response
                          after the creation of the action
                        enum:
                        - in_progress
                        - approved
                        - pending_moderation
                      comment:
                        type: string
                        description: A comment made explaining the reasoning of the
                          action.
                        readOnly: true
                      date_created:
                        type: string
                        description: The date the action was created.
                        readOnly: true
                      auto:
                        type: boolean
                        description: Bool of representing whether a user created the
                          action.
                        readOnly: true
                      visible:
                        type: boolean
                        description: Bool of representing whether the action is visible.
                        readOnly: true
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      creator:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                      target:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the Schema Response Action entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Registration
                          Schema.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the Registration
                      Schema entity.
                    readOnly: true
            application/json:
              example:
                data:
                  id: 61b9eae1a7d8ac025c4c46d3
                  type: schema-response-actions
                  attributes:
                    trigger: submit
                    comment: ""
                    from_state: in_progress
                    to_state: unapproved
                    date_created: 2021-12-15T13:17:21.845573Z
                    date_modified: 2021-12-15T13:17:21.845622Z
                    auto: false
                    visible: true
                  relationships:
                    creator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/zfsr2/
                          meta: {}
                      data:
                        id: zfsr2
                        type: users
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/schema_responses/61b9cd62eb66180215222669/
                          meta: {}
                      data:
                        id: 61b9cd62eb66180215222669
                        type: schema_responses
                  embeds:
                    creator:
                      data:
                        id: zfsr2
                        type: users
                        attributes:
                          full_name: Lukasz Okruszek
                          given_name: Łukasz
                          middle_names: ""
                          family_name: Okruszek
                          suffix: ""
                          date_registered: 2017-02-02T21:32:45.495000Z
                          active: true
                          timezone: Europe/Budapest
                          locale: pl
                          social:
                            ssrn: ""
                            orcid: 0000-0002-7136-2864
                            github: []
                            scholar: CHyWD84AAAAJ&amp;hl
                            twitter: []
                            linkedIn: []
                            impactStory: ""
                            baiduScholar: ""
                            researchGate: Lukasz-Okruszek
                            researcherId: ""
                            profileWebsites: []
                            academiaProfileID: ""
                            academiaInstitution: ""
                          employment:
                          - title: Head
                            endYear: ""
                            ongoing: true
                            endMonth: 0
                            startYear: "2016"
                            department: Social Neuroscience Lab
                            startMonth: 9
                            institution: "Institute of Psychology, Polish Academy\
                              \ of Sciences"
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/groups/
                                meta: {}
                          quickfiles:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/quickfiles/
                                meta: {}
                              upload:
                                href: https://files.osf.io/v1/resources/ytg45jbs3r/providers/osfstorage/
                                meta: {}
                              download:
                                href: https://files.osf.io/v1/resources/ytg45jbs3r/providers/osfstorage/?zip=
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/zfsr2/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/zfsr2/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/zfsr2/
                          profile_image: https://secure.gravatar.com/avatar/8a25f4601ac997f113b3145aa5cf907e?d=identicon
                          self: https://api.osf.io/v2/users/zfsr2/
                    links:
                      self: https://api.osf.io/v2/actions/61b9eae1a7d8ac025c4c46d3/
                meta:
                  total: 2
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/schema_responses/61b9cd62eb66180215222669/actions/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Schema Response Actions
  /schema_responses/{schema_response_id}/schema_blocks/:
    get:
      tags:
      - Registration Schema Blocks
      summary: Retrieve a list of Registration Schema Blocks for a Schema Response
      description: |-
        This returns a list of all the Registration Schema Blocks are contained in Registration Schema.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Registration Schemas, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_blocks_read
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Registration Schema Block
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Registration Schema
                      Block.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Registration Schema Block
                      (`schema-blocks`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      registration_response_key:
                        type: string
                        description: This string is the the block key for the Registration
                          Schema Block's corresponding block on the Schema Response.
                        readOnly: true
                      schema_block_group_key:
                        type: string
                        description: "This string indicates if a block is part of\
                          \ a block group, block groups may contain the different\
                          \ options dropdown menu or a group of inputs and display\
                          \ elements that are validated together."
                        readOnly: true
                      block_type:
                        type: string
                        description: A string that represents the type of input that
                          the schema will take and the UI element that appears to
                          the user on the frontend.
                        readOnly: true
                        enum:
                        - page-heading
                        - section-heading
                        - subsection-heading
                        - paragraph
                        - question-label
                        - short-text-input
                        - long-text-input
                        - file-input
                        - contributors-input
                        - single-select-input
                        - multi-select-input
                        - select-input-option
                        - select-other-option
                      display_text:
                        type: string
                        description: The text that will accompany the UI element displayed
                          on this Registration Schema Block.
                        readOnly: true
                      example_text:
                        type: string
                        description: The text that will accompany the UI element displayed
                          on this Registration Schema Block.
                        readOnly: true
                      required:
                        type: boolean
                        description: Bool that represents if this field is required
                          for creation of a Schema Response.
                        readOnly: true
                      index:
                        type: integer
                        description: Integer beginning at zero that represents the
                          order of Registration Schema Block in the Registration Schema.
                        readOnly: true
                    description: The attributes of the Registration Schema Block.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      schema:
                        type: string
                        description: A link to the schema the the Registration Schema
                          Block is on.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the Schema Response Action.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Registration
                          Schema Block.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the  Registration
                      Schema Block.
                    readOnly: true
            application/json:
              example:
                data:
                - type: schema-blocks
                  id: 61b79f9eadbb5701424a2d5e
                  attributes:
                    registration_response_key: null
                    schema_block_group_key: ""
                    block_type: page-heading
                    display_text: Background and Study Intent
                    help_text: ""
                    required: false
                    index: 0
                  relationships:
                    schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/
                          meta: {}
                        data:
                          id: 6176c9d45e01f100091d4f94
                          type: registration-schemas
                  links:
                    self: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/
                - type: schema-blocks
                  id: 61b79f9eadbb5701424a2d53
                  attributes:
                    registration_response_key: null
                    schema_block_group_key: ""
                    block_type: question-label
                    display_text: Question 1
                    help_text: I am a question
                    required: false
                    index: 1
                  relationships:
                    schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/
                          meta: {}
                        data:
                          id: 6176c9d45e01f100091d4f94
                          type: registration-schemas
                  links:
                    self: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d53/
                - type: schema-blocks
                  id: 61b79f9eadbb5701424a2d53
                  attributes:
                    registration_response_key: Q1
                    schema_block_group_key: ""
                    block_type: long-text-input
                    display_text: ""
                    help_text: ""
                    required: false
                    index: 2
                  relationships:
                    schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/
                          meta: {}
                        data:
                          id: 6176c9d45e01f100091d4f94
                          type: registration-schemas
                  links:
                    self: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d53/
                meta:
                  total: 3
                  per_page: 10
                  version: 2.2
                links:
                  self: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/schema_blocks/
                  first: null
                  last: null
                  next: null
                  prev: null
      x-response-schema: Schema Response
  /schema_responses/{schema_response_id}/schema_blocks/{schema_response_block_id}:
    get:
      tags:
      - Registration Schema Blocks
      summary: Retrieve a Registration Schema Block
      description: |-
        This returns a Registration Schema Block by it's ID.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested Registration Schemas, if the request is successful.
        #### Errors
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: schema_response_blocks_read
      parameters:
      - name: schema_response_id
        in: path
        description: The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
        required: true
        schema:
          type: string
      - name: schema_response_block_id
        in: path
        description: The unique identifier of the Schema Response Block example `61b79f9eadbb5701424a2d5e`.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Registration Schema Block
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Registration Schema
                      Block.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Registration Schema Block
                      (`schema-blocks`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      registration_response_key:
                        type: string
                        description: This string is the the block key for the Registration
                          Schema Block's corresponding block on the Schema Response.
                        readOnly: true
                      schema_block_group_key:
                        type: string
                        description: "This string indicates if a block is part of\
                          \ a block group, block groups may contain the different\
                          \ options dropdown menu or a group of inputs and display\
                          \ elements that are validated together."
                        readOnly: true
                      block_type:
                        type: string
                        description: A string that represents the type of input that
                          the schema will take and the UI element that appears to
                          the user on the frontend.
                        readOnly: true
                        enum:
                        - page-heading
                        - section-heading
                        - subsection-heading
                        - paragraph
                        - question-label
                        - short-text-input
                        - long-text-input
                        - file-input
                        - contributors-input
                        - single-select-input
                        - multi-select-input
                        - select-input-option
                        - select-other-option
                      display_text:
                        type: string
                        description: The text that will accompany the UI element displayed
                          on this Registration Schema Block.
                        readOnly: true
                      example_text:
                        type: string
                        description: The text that will accompany the UI element displayed
                          on this Registration Schema Block.
                        readOnly: true
                      required:
                        type: boolean
                        description: Bool that represents if this field is required
                          for creation of a Schema Response.
                        readOnly: true
                      index:
                        type: integer
                        description: Integer beginning at zero that represents the
                          order of Registration Schema Block in the Registration Schema.
                        readOnly: true
                    description: The attributes of the Registration Schema Block.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      schema:
                        type: string
                        description: A link to the schema the the Registration Schema
                          Block is on.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the Schema Response Action.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Registration
                          Schema Block.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the  Registration
                      Schema Block.
                    readOnly: true
            application/json:
              example:
                data:
                  type: schema-blocks
                  id: 61b79f9eadbb5701424a2d5e
                  attributes:
                    registration_response_key: null
                    schema_block_group_key: ""
                    block_type: page-heading
                    display_text: Background and Study Intent
                    help_text: ""
                    required: false
                    index: 0
                  relationships:
                    schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/6176c9d45e01f100091d4f94/
                          meta: {}
                        data:
                          id: 6176c9d45e01f100091d4f94
                          type: registration-schemas
                  links:
                    self: https://api.osf.io/v2/schema_responses/61b79f9eadbb5701424a2d5e/
      x-response-schema: Schema Response
  /nodes/:
    get:
      tags:
      - Nodes
      summary: List all nodes
      description: |2-

        A paginated list of nodes, representing projects and components, on the OSF.

        The returned nodes are those which are public or which the user has access to view.

        The returned nodes are sorted by their `date_modified`, with the most recently updated nodes appearing first.

        Registrations cannot be accessed through this endpoint (use the [registrations](#tag/Registrations) endpoints instead).
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/?filter[title]=reproducibility.

        Nodes may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, `preprint`, and `contributors`.

        Most fields are string fields and will be filtered using simple substring matching. Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting true or false in the query will cause the match to fail.
      operationId: nodes_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=ezcuj
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/ezcuj/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/ezcuj/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/ezcuj/
                    html: https://osf.io/ezcuj/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: ""
                    current_user_permissions:
                    - read
                    date_modified: 2016-12-08T21:45:17.058000
                    title: "Reproducibility Project: Psychology"
                    collection: false
                    registration: false
                    date_created: 2012-04-01T15:49:07.702000
                    current_user_can_comment: true
                    node_license: null
                    public: true
                    tags:
                    - replication
                    - reproducibility
                    - open science
                    - reproduction
                    - psychological science
                    - psychology
                    - metascience
                    - crowdsource
                  type: nodes
                  id: ezcuj
                links:
                  first: null
                  last: https://api.osf.io/v2/nodes/?page=1954
                  prev: null
                  next: https://api.osf.io/v2/nodes/?page=2
                  meta:
                    total: 19536
                    per_page: 10
      x-response-schema: Node
    post:
      tags:
      - Nodes
      summary: Create a node
      description: |-
        Creates a new node.

        On the OSF, nodes are considered **projects** or **components**. The difference between a project and a component is that a project is a top-level node, and a component is a child of a project.

        Additionally, nodes have a `category` field that includes **project** as an option. The categorization determines what icon is displayed with the node on the OSF, and helps with search organization. Projects (top-level nodes) may have a category other than project, and components (children) may have a category of **project**.
        #### Required
        Required fields for creating a node include:

        &nbsp;&nbsp;&nbsp;&nbsp`title`

        &nbsp;&nbsp;&nbsp;&nbsp`category`

        Note: Nodes default to **private** unless the `public` field is explicitly set to **true** in the request payload.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_create
      requestBody:
        content:
          application/json:
            schema:
              title: Node
              required:
              - attributes
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the node entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the node entity (`nodes`).
                attributes:
                  title: Attributes
                  required:
                  - category
                  - title
                  type: object
                  properties:
                    category:
                      type: string
                      description: "The category of the node, as selected by project\
                        \ contributors."
                      enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    title:
                      type: string
                      description: The title of the node.
                    collection:
                      type: boolean
                      description: Whether or not this node represents a collection.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    current_user_can_comment:
                      type: boolean
                      description: Whether or not the current user has permission
                        to post comments on this node. Comments on nodes can be set
                        to allow all users to comment (if public) or restricted to
                        only allow comments from contributors.
                      readOnly: true
                    current_user_permissions:
                      type: array
                      description: "A list of strings representing the permissions\
                        \ for the current user on this node. Valid permissions are\
                        \ \"admin\", \"read\", and \"write\"."
                      readOnly: true
                      items:
                        type: string
                    date_created:
                      type: string
                      description: "The time at which the node was created, as an\
                        \ iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the node was last modified,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    description:
                      type: string
                      description: The description of the node.
                    fork:
                      type: boolean
                      description: Whether or not this node represents a fork of another
                        node.
                      readOnly: true
                    forked_date:
                      type: string
                      description: "If this node is a fork of another node, the time\
                        \ at which the node was created, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    node_license:
                      type: string
                      description: A dictionary containing the metadata (copyright
                        year and holder) associated with the node license (required
                        for certain license types).
                    preprint:
                      type: boolean
                      description: "Whether or not a preprint has been created from\
                        \ this node, or if this node was created for a preprint."
                      readOnly: true
                    public:
                      type: boolean
                      description: Whether or not the node is publicly visible. This
                        field is only editable by project administrators.
                    registration:
                      type: boolean
                      description: Whether or not the node represents a registration.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    tags:
                      type: array
                      description: "A list of strings that describe this node, as\
                        \ entered by project contributors."
                      items:
                        type: string
                    template_from:
                      type: string
                      description: "The unique ID of the node from which this node\
                        \ was templated, if this node was created from a template."
                  description: The properties of the node entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    affiliated_institutions:
                      type: string
                      description: A link to the list of institutions this node is
                        affiliated with.
                      readOnly: true
                    children:
                      type: string
                      description: A link to the list of this node's children (components).
                      readOnly: true
                    citation:
                      type: string
                      description: A link to the citation details of this node.
                      readOnly: true
                    comments:
                      type: string
                      description: A link to the list of comments on this node.
                      readOnly: true
                    contributors:
                      type: string
                      description: A link to the list of contributors on this node.
                      readOnly: true
                    draft_registrations:
                      type: string
                      description: A link to the list of registrations that have been
                        initiated from this node and are still in a draft state.
                      readOnly: true
                    files:
                      type: string
                      description: A link to the list of storage providers that have
                        been enabled on this node.
                      readOnly: true
                    forked_from:
                      type: string
                      description: "A link to the node which this node was forked\
                        \ from, if this node is a fork."
                      readOnly: true
                    forks:
                      type: string
                      description: A link to the list of nodes that are forks of this
                        node.
                      readOnly: true
                    identifiers:
                      type: string
                      description: A link to the list of identifiers for this node
                        (i.e. ARK and DOI identifiers).
                      readOnly: true
                    license:
                      type: string
                      description: A link to the license that has been applied to
                        this node.
                      readOnly: true
                    logs:
                      type: string
                      description: A link to the list of log actions pertaining to
                        this node.
                      readOnly: true
                    linked_nodes:
                      type: string
                      description: A link to the list of nodes that are linked to
                        the current node.
                      readOnly: true
                    node_links:
                      type: string
                      description: A link to the list of nodes that are linked to
                        the current node. This field is deprecated as of verson 2.1;
                        use the linked_nodes link instead.
                      readOnly: true
                    parent:
                      type: string
                      description: "A link to the node that is the direct parent of\
                        \ the current node, if the current node is a child node."
                      readOnly: true
                    preprints:
                      type: string
                      description: A link to the list of preprints that this node
                        relates to.
                      readOnly: true
                    registrations:
                      type: string
                      description: A link to the list of registrations that have been
                        created from this node.
                      readOnly: true
                    root:
                      type: string
                      description: "A link to the node that is the top-level parent\
                        \ of the current node. If the current node is the top-level\
                        \ node, the root is the current node."
                      readOnly: true
                    template_node:
                      type: string
                      description: "A link to the node that the current node was templated\
                        \ from, if the current node was created from a template."
                      readOnly: true
                    view_only_links:
                      type: string
                      description: A link to the list of view only links that have
                        been created for this node.
                      readOnly: true
                    wikis:
                      type: string
                      description: A link to the list of wiki pages for this node.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the node entity.
                links:
                  title: Links
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the node's page on the OSF.
                      format: URL
                      readOnly: true
                    self:
                      type: string
                      description: A link to the canonical API endpoint of this node.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the node entity.
                  readOnly: true
              example:
                data:
                  type: nodes
                  attributes:
                    title: An Excellent Project Title
                    category: software
        required: true
      responses:
        "201":
          description: Success
          content: {}
      x-response-schema: Node
      x-codegen-request-body-name: body
  /nodes/{node_id}/:
    get:
      tags:
      - Nodes
      summary: Retrieve a node
      description: |-
        Retrieves the details of a given node (project or component).
        #### Permissions
        Only project contributors may retrieve the details of a private node. Attempting to retreive a private node for which you are not a contributor will result in a **403 Forbidden** response.

        Authentication is not required to view the details of a public node, as public nodes give read-only access to everyone.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Node
                required:
                - attributes
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the node entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the node entity (`nodes`).
                  attributes:
                    title: Attributes
                    required:
                    - category
                    - title
                    type: object
                    properties:
                      category:
                        type: string
                        description: "The category of the node, as selected by project\
                          \ contributors."
                        enum:
                        - analysis
                        - communication
                        - data
                        - hypothesis
                        - instrumentation
                        - methods and measures
                        - procedure
                        - project
                        - software
                        - other
                      title:
                        type: string
                        description: The title of the node.
                      collection:
                        type: boolean
                        description: Whether or not this node represents a collection.
                          This value should always be `false`. This field may be deprecated
                          in future versions.
                        readOnly: true
                      current_user_can_comment:
                        type: boolean
                        description: Whether or not the current user has permission
                          to post comments on this node. Comments on nodes can be
                          set to allow all users to comment (if public) or restricted
                          to only allow comments from contributors.
                        readOnly: true
                      current_user_permissions:
                        type: array
                        description: "A list of strings representing the permissions\
                          \ for the current user on this node. Valid permissions are\
                          \ \"admin\", \"read\", and \"write\"."
                        readOnly: true
                        items:
                          type: string
                      date_created:
                        type: string
                        description: "The time at which the node was created, as an\
                          \ iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the node was last modified,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      description:
                        type: string
                        description: The description of the node.
                      fork:
                        type: boolean
                        description: Whether or not this node represents a fork of
                          another node.
                        readOnly: true
                      forked_date:
                        type: string
                        description: "If this node is a fork of another node, the\
                          \ time at which the node was created, as an iso8601 formatted\
                          \ timestamp."
                        format: date-time
                        readOnly: true
                      node_license:
                        type: string
                        description: A dictionary containing the metadata (copyright
                          year and holder) associated with the node license (required
                          for certain license types).
                      preprint:
                        type: boolean
                        description: "Whether or not a preprint has been created from\
                          \ this node, or if this node was created for a preprint."
                        readOnly: true
                      public:
                        type: boolean
                        description: Whether or not the node is publicly visible.
                          This field is only editable by project administrators.
                      registration:
                        type: boolean
                        description: Whether or not the node represents a registration.
                          This value should always be `false`. This field may be deprecated
                          in future versions.
                        readOnly: true
                      tags:
                        type: array
                        description: "A list of strings that describe this node, as\
                          \ entered by project contributors."
                        items:
                          type: string
                      template_from:
                        type: string
                        description: "The unique ID of the node from which this node\
                          \ was templated, if this node was created from a template."
                    description: The properties of the node entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      affiliated_institutions:
                        type: string
                        description: A link to the list of institutions this node
                          is affiliated with.
                        readOnly: true
                      children:
                        type: string
                        description: A link to the list of this node's children (components).
                        readOnly: true
                      citation:
                        type: string
                        description: A link to the citation details of this node.
                        readOnly: true
                      comments:
                        type: string
                        description: A link to the list of comments on this node.
                        readOnly: true
                      contributors:
                        type: string
                        description: A link to the list of contributors on this node.
                        readOnly: true
                      draft_registrations:
                        type: string
                        description: A link to the list of registrations that have
                          been initiated from this node and are still in a draft state.
                        readOnly: true
                      files:
                        type: string
                        description: A link to the list of storage providers that
                          have been enabled on this node.
                        readOnly: true
                      forked_from:
                        type: string
                        description: "A link to the node which this node was forked\
                          \ from, if this node is a fork."
                        readOnly: true
                      forks:
                        type: string
                        description: A link to the list of nodes that are forks of
                          this node.
                        readOnly: true
                      identifiers:
                        type: string
                        description: A link to the list of identifiers for this node
                          (i.e. ARK and DOI identifiers).
                        readOnly: true
                      license:
                        type: string
                        description: A link to the license that has been applied to
                          this node.
                        readOnly: true
                      logs:
                        type: string
                        description: A link to the list of log actions pertaining
                          to this node.
                        readOnly: true
                      linked_nodes:
                        type: string
                        description: A link to the list of nodes that are linked to
                          the current node.
                        readOnly: true
                      node_links:
                        type: string
                        description: A link to the list of nodes that are linked to
                          the current node. This field is deprecated as of verson
                          2.1; use the linked_nodes link instead.
                        readOnly: true
                      parent:
                        type: string
                        description: "A link to the node that is the direct parent\
                          \ of the current node, if the current node is a child node."
                        readOnly: true
                      preprints:
                        type: string
                        description: A link to the list of preprints that this node
                          relates to.
                        readOnly: true
                      registrations:
                        type: string
                        description: A link to the list of registrations that have
                          been created from this node.
                        readOnly: true
                      root:
                        type: string
                        description: "A link to the node that is the top-level parent\
                          \ of the current node. If the current node is the top-level\
                          \ node, the root is the current node."
                        readOnly: true
                      template_node:
                        type: string
                        description: "A link to the node that the current node was\
                          \ templated from, if the current node was created from a\
                          \ template."
                        readOnly: true
                      view_only_links:
                        type: string
                        description: A link to the list of view only links that have
                          been created for this node.
                        readOnly: true
                      wikis:
                        type: string
                        description: A link to the list of wiki pages for this node.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the node entity.
                  links:
                    title: Links
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the node's page on the OSF.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the canonical API endpoint of this
                          node.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the node entity.
                    readOnly: true
                example:
                  data:
                    type: nodes
                    attributes:
                      title: An Excellent Project Title
                      category: software
            application/json:
              example:
                data:
                  id: e81xl
                  type: nodes
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: We are conducting a study to investigate the replicability
                      of cancer biology studies. Selected results from a substantial
                      number of high-profile papers in the field of cancer biology
                      published between 2010-2012 are being replicated by the Science
                      Exchange network.
                    current_user_permissions:
                    - read
                    date_modified: 2017-01-18T20:46:11.076000
                    title: "Reproducibility Project: Cancer Biology"
                    collection: false
                    registration: false
                    date_created: 2013-10-08T23:31:56.153000
                    current_user_can_comment: true
                    node_license: null
                    public: true
                    tags:
                    - cancer biology
                    - reproducibility
                    - replication
                    - open science
                  links:
                    self: https://api.osf.io/v2/nodes/e81xl/
                    html: https://osf.io/e81xl/
                  relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/comments/?filter%5Btarget%5D=e81xl
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/e81xl/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/e81xl/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/logs/
                          meta: {}
      x-response-schema: Node
    delete:
      tags:
      - Nodes
      summary: Delete a node
      description: |2-

        Permanently deletes a node. This action cannot be undone.
        #### Permissions
        Only project administrators may delete a node. Attempting to delete a node for which you are not an administrator will result in a **403 Forbidden** response.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_delete
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
          content: {}
    patch:
      tags:
      - Nodes
      summary: Update a node
      description: |-
        Updates a node by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Nodes can be updated with either a **PUT** or **PATCH** request. The `title` and `category` fields are mandatory in a **PUT** request, and optional in a **PATCH**.
        #### Permissions
        Only write contributors may update a node. Attempting to update a node for which you do not have write access will result in a **403 Forbidden** response.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_partial_update
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: nodes
                  id: "{node_id}"
                  attributes:
                    description: An updated abstract.
                    tags:
                    - cancer biology
                    - reproducibility
                    public: true
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-response-schema: Node
      x-codegen-request-body-name: body
  /nodes/{node_id}/addons/:
    get:
      tags:
      - Nodes
      summary: List all addons
      description: |2-

        A paginated list of addons connected to the given node or project.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of at most 10 addon objects. Each resource in the array is a separate addon object and contains the full representation of the addon, meaning additional requests to a addon's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_addons_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Addon
                  type: object
                  properties:
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        url:
                          type: string
                          description: The URL to the third-party service provider.
                          readOnly: true
                        name:
                          type: string
                          description: The name of the third-party service provider.
                          readOnly: true
                        description:
                          type: string
                          description: The description of the service provider.
                          readOnly: true
                        categories:
                          type: array
                          description: List of categories this addon belongs to.
                          readOnly: true
                          items:
                            type: string
                            enum:
                            - documentation
                            - storage
                            - bibliography
                            - other
                            - security
                            - citations
                      description: The properties of the addon entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the addon entity (`addons`).
                      readOnly: true
                    id:
                      type: string
                      description: The identifier of the addon entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: http://api.osf.io/v2/nodes/gaz5n/addons/<provider_id>/
                  attributes:
                    folder_path: null
                    configured: false
                    external_account_id: null
                    folder_id: null
                    node_has_auth: false
                  type: node_addons
                  id: <provider_id>
                - links:
                    self: http://api.osf.io/v2/nodes/gaz5n/addons/<another_provider_id>/
                  attributes:
                    folder_path: null
                    configured: false
                    external_account_id: null
                    folder_id: null
                    node_has_auth: false
                  type: node_addons
                  id: <another_provider_id>
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Addon
  /nodes/{node_id}/addons/{provider}/folders/:
    get:
      tags:
      - Nodes
      summary: List all addon folders
      description: |2-

        A paginated list of folders retrieved from the associated third-party (provider) service.
        #### Permissions
        Folders are visible only to the user that authorized the addon.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of addon folder objects. Each resource in the array is a separate addon folder object and contains the full representation of the addon folder, meaning additional requests to a addon folder's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_addons_folders_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the provider
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Addon
                  type: object
                  properties:
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        url:
                          type: string
                          description: The URL to the third-party service provider.
                          readOnly: true
                        name:
                          type: string
                          description: The name of the third-party service provider.
                          readOnly: true
                        description:
                          type: string
                          description: The description of the service provider.
                          readOnly: true
                        categories:
                          type: array
                          description: List of categories this addon belongs to.
                          readOnly: true
                          items:
                            type: string
                            enum:
                            - documentation
                            - storage
                            - bibliography
                            - other
                            - security
                            - citations
                      description: The properties of the addon entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the addon entity (`addons`).
                      readOnly: true
                    id:
                      type: string
                      description: The identifier of the addon entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    root: https://api.osf.io/v2/nodes/<node_id>/addons/<provider_id>/folders/
                    children: https://api.osf.io/v2/nodes/<node_id>/addons/<provider_id>/folders/?path=/&id=/
                  attributes:
                    path: /
                    kind: folder
                    provider: <provider_id>
                    name: / ()
                    folder_id: /
                  type: node_addon_folders
                  id: /
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 1000
      x-response-schema: Addon Folder
  /nodes/{node_id}/addons/{provider}/:
    get:
      tags:
      - Nodes
      summary: Retrieve an addon
      description: |-
        Retrieve details of an individual addon connected to this node.
        #### Permissions
        NodeSettings that are attached to public nodes will give read-only access to everyone. Private nodes require explicit read permission. Write and admin access are the same for public and private nodes. Administrators on a parent node have implicit read permissions for all child nodes.
        Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.
        #### Returns
        Returns a JSON object with a `data` key containing the details of the requested addon, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_addon_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the addon.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Node Addon
                required:
                - id
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the node addon entity (`node_addons`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      external_account_id:
                        type: string
                        description: "The ID of the associated node addon account,\
                          \ if any."
                        readOnly: true
                      folder_id:
                        type: string
                        description: The ID of the linked folder from the addon provider.
                        readOnly: true
                      folder_path:
                        type: string
                        description: The folder path of the linked folder from the
                          addon provider. Google Drive specific
                        readOnly: true
                      configured:
                        type: boolean
                        description: Whether or not this node has been configured
                          with an addon folder.
                        readOnly: true
                      enabled:
                        type: boolean
                        description: Whether or not this node has a NodeSettings object
                          associated with it.
                        readOnly: true
                      node_has_auth:
                        type: boolean
                        description: Whether or not this node is fully authorized
                          to use this node addon.
                        readOnly: true
                      url:
                        type: string
                        description: An external link specific to the addon provider.
                        format: URL
                        readOnly: true
                      label:
                        type: string
                        description: A label specific to the addon provider.
                        readOnly: true
                    description: The properties of the node addon entity.
                    readOnly: true
                  links:
                    title: Links
                    required:
                    - self
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the the canonical API endpoint for
                          this node addon.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the node addon
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links:
                    self: http://api.osf.io/v2/nodes/gaz5n/addons/box/
                  attributes:
                    folder_path: null
                    configured: false
                    external_account_id: null
                    folder_id: null
                    node_has_auth: false
                  type: node_addons
                  id: box
      x-response-schema: Addon
    patch:
      tags:
      - Nodes
      summary: Update an addon
      description: |-
        Updates a node addon by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Node addon can be updated with either a **PUT** or **PATCH** request. The `external_account_id`, `enabled`, and `folder_id` fields are mandatory in a **PUT**, and optional in **PATCH**. Non-string values will be accepted and stringified, however we make no promises about the stringification output.

        To delete or deauthorize a node addon, issue a **PUT** with all fields set to `null` or `False`, or a **PATCH** with enabled set `False`.
        #### Permissions
        NodeSettings that are attached to public nodes will give read-only access to everyone. Private nodes require explicit read permission. Write and admin access are the same for public and private nodes. Administrators on a parent node have implicit read permissions for all child nodes.
        Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.

        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated node addon, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_node_addon_update
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the addon.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: node_addons
                  id: "{provider}"
                  attributes:
                    external_account_id: "{account_id}"
                    folder_id: "{folder_id}"
                    folder_path: "{folder_path}"
                    url: "{url}"
                    label: "{label}"
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-codegen-request-body-name: body
  /nodes/{node_id}/children/:
    get:
      tags:
      - Nodes
      summary: List all child nodes
      description: |2-

        A paginated list of the next level child nodes for the given node. The returned nodes are sorted by their `date_modified`, with the most recently updated child nodes appearing first.

        The list will include child nodes that are public, as well as child nodes that are private, if the authenticated user has permission to view them.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 child nodes. If the given node has zero child nodes, the `data` key will contain an empty array. Each resource in the array is a separate node object and contains the full representation of the child node, meaning additional requests to the child node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/children/?filter[title]=reproducibility.

        Nodes may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, `preprint`, and `contributors`.

        Most fields are string fields and will be filtered using simple substring matching. Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting true or false in the query will cause the match to fail.
      operationId: nodes_children_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/citation/
                          meta: {}
                    parent:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/comments/?filter%5Btarget%5D=ezum7
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/registrations/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/logs/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/ezum7/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/ezum7/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/preprints/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezum7/draft_registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/ezum7/
                    html: https://osf.io/ezum7/
                  attributes:
                    category: communication
                    fork: false
                    preprint: true
                    description: "Reproducibility is a defining feature of science,\
                      \ but the extent to which it characterizes current research\
                      \ is unknown. We conducted replications of 100 experimental\
                      \ and correlational studies published in three psychology journals\
                      \ using high-powered designs and original materials when available.\
                      \ Replication effects were half the magnitude of original effects,\
                      \ representing a substantial decline. Ninety-seven percent of\
                      \ original studies had statistically significant results. Thirty-six\
                      \ percent of replications had statistically significant results;\
                      \ 47% of original effect sizes were in the 95% confidence interval\
                      \ of the replication effect size; 39% of effects were subjectively\
                      \ rated to have replicated the original result; and if no bias\
                      \ in original results is assumed, combining original and replication\
                      \ results left 68% with statistically significant effects. Correlational\
                      \ tests suggest that replication success was better predicted\
                      \ by the strength of original evidence than by characteristics\
                      \ of the original and replication teams."
                    current_user_permissions:
                    - read
                    date_modified: 2016-11-02T21:25:12.572000
                    title: Estimating the Reproducibility of Psychological Science
                    collection: false
                    registration: false
                    date_created: 2015-07-20T17:42:16.496000
                    current_user_can_comment: false
                    node_license: null
                    public: true
                    tags:
                    - replication
                    - reproducibility
                    - effect size
                  type: nodes
                  id: ezum7
                links:
                  first: null
                  last: https://api.osf.io/v2/nodes/ezcuj/children/?page=5
                  prev: null
                  next: https://api.osf.io/v2/nodes/ezcuj/children/?page=2
                  meta:
                    total: 49
                    per_page: 10
      x-response-schema: Node
    post:
      tags:
      - Nodes
      summary: Create a child node
      description: |-
        Creates a new child node.

        Note: Creating a child node via this endpoint will function the same as creating a node via the node list endpoint, but the child node will have the given node set as its parent.
        #### Permissions
        Only write contributors may create children nodes.
        #### Required
        Required fields for creating a node include:

        &nbsp;&nbsp;&nbsp;&nbsp`title`

        &nbsp;&nbsp;&nbsp;&nbsp`category`

        Note: nodes default to **private** unless the `public` field is explicitly set to **true** in the request payload.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_children_create
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Node
              required:
              - attributes
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the node entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the node entity (`nodes`).
                attributes:
                  title: Attributes
                  required:
                  - category
                  - title
                  type: object
                  properties:
                    category:
                      type: string
                      description: "The category of the node, as selected by project\
                        \ contributors."
                      enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    title:
                      type: string
                      description: The title of the node.
                    collection:
                      type: boolean
                      description: Whether or not this node represents a collection.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    current_user_can_comment:
                      type: boolean
                      description: Whether or not the current user has permission
                        to post comments on this node. Comments on nodes can be set
                        to allow all users to comment (if public) or restricted to
                        only allow comments from contributors.
                      readOnly: true
                    current_user_permissions:
                      type: array
                      description: "A list of strings representing the permissions\
                        \ for the current user on this node. Valid permissions are\
                        \ \"admin\", \"read\", and \"write\"."
                      readOnly: true
                      items:
                        type: string
                    date_created:
                      type: string
                      description: "The time at which the node was created, as an\
                        \ iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the node was last modified,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    description:
                      type: string
                      description: The description of the node.
                    fork:
                      type: boolean
                      description: Whether or not this node represents a fork of another
                        node.
                      readOnly: true
                    forked_date:
                      type: string
                      description: "If this node is a fork of another node, the time\
                        \ at which the node was created, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    node_license:
                      type: string
                      description: A dictionary containing the metadata (copyright
                        year and holder) associated with the node license (required
                        for certain license types).
                    preprint:
                      type: boolean
                      description: "Whether or not a preprint has been created from\
                        \ this node, or if this node was created for a preprint."
                      readOnly: true
                    public:
                      type: boolean
                      description: Whether or not the node is publicly visible. This
                        field is only editable by project administrators.
                    registration:
                      type: boolean
                      description: Whether or not the node represents a registration.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    tags:
                      type: array
                      description: "A list of strings that describe this node, as\
                        \ entered by project contributors."
                      items:
                        type: string
                    template_from:
                      type: string
                      description: "The unique ID of the node from which this node\
                        \ was templated, if this node was created from a template."
                  description: The properties of the node entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    affiliated_institutions:
                      type: string
                      description: A link to the list of institutions this node is
                        affiliated with.
                      readOnly: true
                    children:
                      type: string
                      description: A link to the list of this node's children (components).
                      readOnly: true
                    citation:
                      type: string
                      description: A link to the citation details of this node.
                      readOnly: true
                    comments:
                      type: string
                      description: A link to the list of comments on this node.
                      readOnly: true
                    contributors:
                      type: string
                      description: A link to the list of contributors on this node.
                      readOnly: true
                    draft_registrations:
                      type: string
                      description: A link to the list of registrations that have been
                        initiated from this node and are still in a draft state.
                      readOnly: true
                    files:
                      type: string
                      description: A link to the list of storage providers that have
                        been enabled on this node.
                      readOnly: true
                    forked_from:
                      type: string
                      description: "A link to the node which this node was forked\
                        \ from, if this node is a fork."
                      readOnly: true
                    forks:
                      type: string
                      description: A link to the list of nodes that are forks of this
                        node.
                      readOnly: true
                    identifiers:
                      type: string
                      description: A link to the list of identifiers for this node
                        (i.e. ARK and DOI identifiers).
                      readOnly: true
                    license:
                      type: string
                      description: A link to the license that has been applied to
                        this node.
                      readOnly: true
                    logs:
                      type: string
                      description: A link to the list of log actions pertaining to
                        this node.
                      readOnly: true
                    linked_nodes:
                      type: string
                      description: A link to the list of nodes that are linked to
                        the current node.
                      readOnly: true
                    node_links:
                      type: string
                      description: A link to the list of nodes that are linked to
                        the current node. This field is deprecated as of verson 2.1;
                        use the linked_nodes link instead.
                      readOnly: true
                    parent:
                      type: string
                      description: "A link to the node that is the direct parent of\
                        \ the current node, if the current node is a child node."
                      readOnly: true
                    preprints:
                      type: string
                      description: A link to the list of preprints that this node
                        relates to.
                      readOnly: true
                    registrations:
                      type: string
                      description: A link to the list of registrations that have been
                        created from this node.
                      readOnly: true
                    root:
                      type: string
                      description: "A link to the node that is the top-level parent\
                        \ of the current node. If the current node is the top-level\
                        \ node, the root is the current node."
                      readOnly: true
                    template_node:
                      type: string
                      description: "A link to the node that the current node was templated\
                        \ from, if the current node was created from a template."
                      readOnly: true
                    view_only_links:
                      type: string
                      description: A link to the list of view only links that have
                        been created for this node.
                      readOnly: true
                    wikis:
                      type: string
                      description: A link to the list of wiki pages for this node.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the node entity.
                links:
                  title: Links
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the node's page on the OSF.
                      format: URL
                      readOnly: true
                    self:
                      type: string
                      description: A link to the canonical API endpoint of this node.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the node entity.
                  readOnly: true
              example:
                data:
                  type: nodes
                  attributes:
                    title: An Excellent Project Title
                    category: software
        required: true
      responses:
        "201":
          description: Created
          content: {}
      x-codegen-request-body-name: body
  /nodes/{node_id}/citation/:
    get:
      tags:
      - Nodes
      summary: Retrieve citation details
      description: |-
        The citation details for a node, in CSL format.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the details necessary for the node citation.
      operationId: nodes_citation_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Citation Detail
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the entity being cited.
                    readOnly: true
                  type:
                    type: string
                    description: "The type identifier of the citation entity (either\
                      \ `node-citation`, `preprint-citation`, or `registration-citation`)."
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      author:
                        type: string
                        description: "The list of bibliographic authors, represented\
                          \ as dictionaries of their given and family names, for the\
                          \ entitiy being cited."
                        readOnly: true
                      doi:
                        type: string
                        description: "The DOI for the entity being cited, if one exists."
                        readOnly: true
                      publisher:
                        type: string
                        description: "The publisher of the entity being cited. For\
                          \ nodes and registrations, the publisher is the 'Open Science\
                          \ Framework'. For preprints, the publisher is the same as\
                          \ the preprint provider."
                        readOnly: true
                      title:
                        type: string
                        description: The title of the entity being cited.
                        readOnly: true
                    description: The properties of the citation entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the entity that is being cited.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the citation
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  id: bg4di
                  type: node-citation
                  attributes:
                    publisher: Open Science Framework
                    author:
                    - given: Timothy M
                      family: Errington
                    - given: Nicole
                      family: Vasilevsky
                    - given: Melissa A
                      family: Haendel
                    type: webpage
                    title: Identification Analysis of RP:CB
                  links:
                    self: osf.io/bg4di
      x-response-schema: Citation Detail
  /nodes/{node_id}/citation/{style_id}/:
    get:
      tags:
      - Nodes
      summary: Retrieve a styled citation
      description: |-
        The citation for a node in a specific style.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the node citation, in the requested style.
      operationId: nodes_citation_read
      parameters:
      - name: style_id
        in: path
        description: The unique identifier of the citation style.
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Styled Citation
                type: object
                properties:
                  id:
                    type: string
                    description: "The identifier of the citation style, e.g. APA."
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the citation style entity
                      (`styled-citations`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      citation:
                        type: string
                        description: The complete entity citation in the requested
                          style.
                        readOnly: true
                    description: The properties of the citation style entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links: {}
                  attributes:
                    citation: "Aarts, A. A., Anderson, C. J., Anderson, J., van Assen,\
                      \ M. A. L. M., Attridge, P. R., Attwood, A. S., … Grange, J.\
                      \ (2016, December 8). Reproducibility Project: Psychology. Retrieved\
                      \ from osf.io/ezcuj"
                  type: styled-citations
                  id: apa
      x-response-schema: Styled Citation
  /nodes/{node_id}/comments/:
    get:
      tags:
      - Nodes
      summary: List all comments
      description: |2-

        A paginated list of comments related to a given node.

        The returned comments are sorted by their creation date, with the most recent comments appearing first.
        #### Permissions
        Comments on public nodes are given read-only access to everyone.

        If the node comment-level is `private`, only contributors have permission to comment.

        If the comment-level is `public`, any logged-in OSF user can comment.

        Comments on private nodes are only visible to contributors and administrators on the parent node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include comments that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/comments/?filter[target_id]=jg7sezmdnt93

        Nodes may be filtered by their `deleted`, `target_id`, `date_created`, `date_modified`.

        Most fields are string fields and will be filtered using simple substring matching. Public and preprint are boolean fields, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting `true` or `false` in the query will cause the match to fail.
      operationId: nodes_comments_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Comment
                  required:
                  - id
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the comment entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the comment entity (`comments`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        can_edit:
                          type: boolean
                          description: Whether or not the current user has permission
                            to edit this comment
                          readOnly: true
                        content:
                          type: string
                          description: The content of the comment.
                        date_created:
                          type: string
                          description: "The time at which the comment was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the comment was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        modified:
                          type: boolean
                          description: Whether or not the comment has been edited.
                          readOnly: true
                        deleted:
                          type: boolean
                          description: Whether or not the comment is deleted.
                          readOnly: true
                        is_abuse:
                          type: boolean
                          description: Whether or not the comment is flagged or confirmed
                            spam.
                          readOnly: true
                        is_ham:
                          type: boolean
                          description: Whether or not an admin checked the legitimacy
                            of this comment.
                          readOnly: true
                        has_report:
                          type: boolean
                          description: Whether or not the comment the current user
                            reported this as spam.
                          readOnly: true
                        has_children:
                          type: boolean
                          description: Whether or not the comment has replies.
                          readOnly: true
                        page:
                          type: string
                          description: "The page type the comment is on, e.g. `node`,\
                            \ `registration`, `wiki`, `files`."
                          readOnly: true
                      description: The properties of the comment entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A relationship to the node the comment is on.
                          format: URL
                          readOnly: true
                        replies:
                          type: string
                          description: A relationship to the replies to the comment.
                          format: URL
                          readOnly: true
                        target:
                          type: string
                          description: A relationship to the target of the comment.
                          format: URL
                          readOnly: true
                        reports:
                          type: string
                          description: A relationship to the reports connected to
                            the comment.
                          format: URL
                          readOnly: true
                        user:
                          type: string
                          description: A relationship to the user who created the
                            comment.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the comment entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the comment.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the comment
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: comments
                      attributes:
                        content: comment content
                      relationships:
                        target:
                          data:
                            type: "{target_type}"
                            id: "{target_id}"
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    replies:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=jg7sezmdnt93
                          meta: {}
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta:
                            type: nodes
                    reports:
                      links:
                        related:
                          href: https://api.osf.io/v2/comments/jg7sezmdnt93/reports/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/6yc8z/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/comments/jg7sezmdnt93/
                  attributes:
                    can_edit: false
                    date_modified: 2016-04-01T04:45:44.123000
                    deleted: false
                    is_ham: false
                    has_children: false
                    modified: false
                    content: |-
                      We have published a Bayesian reanalysis of this project at PLOS ONE: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0149794

                      I explain some of the context on my blog: http://alexanderetz.com/2016/02/26/the-bayesian-rpp-take-2/

                      Please note that the analysis we use in this paper is very different from the analysis used in the blog I posted in the previous comment, so the results are different as well.
                    has_report: false
                    is_abuse: false
                    date_created: 2016-02-27T13:50:24.240000
                    page: node
                  type: comments
                  id: jg7sezmdnt93
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    replies:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=23pk9
                          meta: {}
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta:
                            type: nodes
                    reports:
                      links:
                        related:
                          href: https://api.osf.io/v2/comments/23pk9/reports/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/6yc8z/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/comments/23pk9/
                  attributes:
                    can_edit: false
                    date_modified: 2016-04-01T04:45:37.437000
                    deleted: false
                    is_ham: false
                    has_children: false
                    modified: null
                    content: "In this blog http://wp.me/p4sgtg-o6 I conduct a Bayesian\
                      \ Re-analysis of the Reproducibility Project that gives a graded\
                      \ measure of replication success. In an attempt to avoid dichotomous\
                      \ success/fail replication outcomes, I calculate a continous\
                      \ outcome (Bayes factor) that answers the question, does the\
                      \ replication result fit more with the original reported effect\
                      \ or a null effect? Many replications are strong successes,\
                      \ many are strong failures, and there are many that lie somewhere\
                      \ in between."
                    has_report: false
                    is_abuse: false
                    date_created: 2015-08-30T14:50:21.093000
                    page: node
                  type: comments
                  id: 23pk9
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Comment
    post:
      tags:
      - Nodes
      summary: Create a comment
      description: |-
        Create a comment on a given node overview page or a reply to a comment on that node.

        To create a comment on the node overview page, the target `type` would be "nodes" and the target `id` would be the node `id`.

        To reply to a comment on this node, the target `type` would be "comments" and the target `id` would be the `id` of the comment to reply to.
        #### Required
        A relationship object with a `data` key, containing the target (`comments` or `nodes`) type and a target `id` is required.
        In addition, the `content` attribute describing the relationship between the node and the comment is required.
        #### Returns
        Returns a JSON object with a data key containing the representation of the new comment, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_comment_create
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node you want to comment on.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Comment
              required:
              - id
              type: object
              properties:
                id:
                  type: string
                  description: The identifier of the comment entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the comment entity (`comments`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    can_edit:
                      type: boolean
                      description: Whether or not the current user has permission
                        to edit this comment
                      readOnly: true
                    content:
                      type: string
                      description: The content of the comment.
                    date_created:
                      type: string
                      description: "The time at which the comment was created, as\
                        \ an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the comment was last modified,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    modified:
                      type: boolean
                      description: Whether or not the comment has been edited.
                      readOnly: true
                    deleted:
                      type: boolean
                      description: Whether or not the comment is deleted.
                      readOnly: true
                    is_abuse:
                      type: boolean
                      description: Whether or not the comment is flagged or confirmed
                        spam.
                      readOnly: true
                    is_ham:
                      type: boolean
                      description: Whether or not an admin checked the legitimacy
                        of this comment.
                      readOnly: true
                    has_report:
                      type: boolean
                      description: Whether or not the comment the current user reported
                        this as spam.
                      readOnly: true
                    has_children:
                      type: boolean
                      description: Whether or not the comment has replies.
                      readOnly: true
                    page:
                      type: string
                      description: "The page type the comment is on, e.g. `node`,\
                        \ `registration`, `wiki`, `files`."
                      readOnly: true
                  description: The properties of the comment entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    node:
                      type: string
                      description: A relationship to the node the comment is on.
                      format: URL
                      readOnly: true
                    replies:
                      type: string
                      description: A relationship to the replies to the comment.
                      format: URL
                      readOnly: true
                    target:
                      type: string
                      description: A relationship to the target of the comment.
                      format: URL
                      readOnly: true
                    reports:
                      type: string
                      description: A relationship to the reports connected to the
                        comment.
                      format: URL
                      readOnly: true
                    user:
                      type: string
                      description: A relationship to the user who created the comment.
                      format: URL
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the comment entity.
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the detail page for the comment.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the comment
                    entity.
                  readOnly: true
              example:
                data:
                  type: comments
                  attributes:
                    content: comment content
                  relationships:
                    target:
                      data:
                        type: "{target_type}"
                        id: "{target_id}"
        required: true
      responses:
        "201":
          description: Success
          content: {}
      x-response-schema: Comment
      x-codegen-request-body-name: body
  /nodes/{node_id}/contributors/:
    get:
      tags:
      - Nodes
      summary: List all contributors
      description: |-
        A paginated list of the node's contributors, sorted by their index.

        Contributors are users who can make changes to the node or, in the case of private nodes, have read access to the node.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of contributors, the user relationship will not be exposed and the contributor ID will be an empty string.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 contributors. Each resource in the array contains the full representation of the contributor, meaning additional requests to a contributor's detail view are not necessary. Additionally, the full representation of the user this contributor represents is automatically embedded within the `data` key of the response.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include contributors that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/y9jdt/contributors/?filter[bibliographic]=true.

        Contributors may be filtered by their `bibliographic` and `permission` attributes.
      operationId: nodes_contributors_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Contributor
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the contributor entity. Contributor\
                        \ identifiers have the form {node_id}-{user_id}."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        bibliographic:
                          type: boolean
                          description: Whether or not the contributor will be included
                            in citations for the node. The default value is true.
                        index:
                          type: integer
                          description: The position of this contributor in the list
                            of project contributors and in project citations.
                        permission:
                          type: string
                          description: The permission level of the contributor. The
                            default value is 'write'.
                          enum:
                          - read
                          - write
                          - admin
                        unregistered_contributor:
                          type: string
                          description: The assigned name of the contributor if the
                            contributor has not yet claimed their account.
                          readOnly: true
                      description: The properties of the contributor entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                          readOnly: true
                        user:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                      description: URLs to other entities or entity collections that
                        have a relationship to the contributor entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the the canonical API endpoint for
                            the contributor.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the contributor
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: contributors
                      attributes: {}
                      relationships:
                        user:
                          data:
                            type: users
                            id: guid0
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/y9jdt/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/typ46/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/y9jdt/contributors/typ46/
                  embeds:
                    users:
                      data:
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/typ46/nodes/
                                meta: {}
                          institutions:
                            links:
                              self:
                                href: https://api.osf.io/v2/users/typ46/relationships/institutions/
                                meta: {}
                              related:
                                href: https://api.osf.io/v2/users/typ46/institutions/
                                meta: {}
                        links:
                          self: https://api.osf.io/v2/users/typ46/
                          html: https://osf.io/typ46/
                          profile_image: https://secure.gravatar.com/avatar/3dd8757ba100b8406413706886243811?d=identicon
                        attributes:
                          family_name: Geiger
                          suffix: ""
                          locale: en_us
                          date_registered: 2014-03-18T19:11:57.252000
                          middle_names: J.
                          given_name: Brian
                          full_name: Brian J. Geiger
                          active: true
                          timezone: America/New_York
                        type: users
                        id: typ46
                  attributes:
                    index: 0
                    unregistered_contributor: null
                    bibliographic: true
                    permission: admin
                  type: contributors
                  id: y9jdt-typ46
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 9
                    per_page: 10
                    total_bibliographic: 1
      x-response-schema: Contributor
    post:
      tags:
      - Nodes
      summary: Create a contributor
      description: |-
        Adds a contributor to a node, effectively creating a relationship between the node and a user.

        Contributors are users who can make changes to the node or, in the case of private nodes, have read access to the node.

        Contributors are categorized as either "bibliographic" or "non-bibliographic" contributors. From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
        #### Permissions
        Only project administrators can add contributors to a node.
        #### Required
        A relationship object with a `data` key, containing the `users` type and valid user ID is required.

        All attributes describing the relationship between the node and the user are optional.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the new contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_contributors_create
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Contributor
              required:
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: "The identifier of the contributor entity. Contributor\
                    \ identifiers have the form {node_id}-{user_id}."
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the contributor entity (`contributors`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    bibliographic:
                      type: boolean
                      description: Whether or not the contributor will be included
                        in citations for the node. The default value is true.
                    index:
                      type: integer
                      description: The position of this contributor in the list of
                        project contributors and in project citations.
                    permission:
                      type: string
                      description: The permission level of the contributor. The default
                        value is 'write'.
                      enum:
                      - read
                      - write
                      - admin
                    unregistered_contributor:
                      type: string
                      description: The assigned name of the contributor if the contributor
                        has not yet claimed their account.
                      readOnly: true
                  description: The properties of the contributor entity.
                relationships:
                  title: Relationships
                  required:
                  - node
                  - user
                  type: object
                  properties:
                    node:
                      type: string
                      description: "A relationship to the node that was created for\
                        \ the preprint, or from which the preprint was created."
                      readOnly: true
                    user:
                      type: string
                      description: "A relationship to the file that is designated\
                        \ as the preprint's primary file, or the manuscript of the\
                        \ preprint."
                  description: URLs to other entities or entity collections that have
                    a relationship to the contributor entity.
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the the canonical API endpoint for the
                        contributor.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the contributor
                    entity.
                  readOnly: true
              example:
                data:
                  type: contributors
                  attributes: {}
                  relationships:
                    user:
                      data:
                        type: users
                        id: guid0
        required: true
      responses:
        "201":
          description: Success
          content: {}
      x-response-schema: Contributor
      x-codegen-request-body-name: body
  /nodes/{node_id}/contributors/{user_id}/:
    get:
      tags:
      - Nodes
      summary: Retrieve a contributor
      description: |-
        Retrieves the details of a given contributor.

        Contributors are users who can make changes to the node or, in the case of private nodes, have read access to the node.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_contributors_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Contributor
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the contributor entity. Contributor\
                        \ identifiers have the form {node_id}-{user_id}."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        bibliographic:
                          type: boolean
                          description: Whether or not the contributor will be included
                            in citations for the node. The default value is true.
                        index:
                          type: integer
                          description: The position of this contributor in the list
                            of project contributors and in project citations.
                        permission:
                          type: string
                          description: The permission level of the contributor. The
                            default value is 'write'.
                          enum:
                          - read
                          - write
                          - admin
                        unregistered_contributor:
                          type: string
                          description: The assigned name of the contributor if the
                            contributor has not yet claimed their account.
                          readOnly: true
                      description: The properties of the contributor entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                          readOnly: true
                        user:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                      description: URLs to other entities or entity collections that
                        have a relationship to the contributor entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the the canonical API endpoint for
                            the contributor.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the contributor
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: contributors
                      attributes: {}
                      relationships:
                        user:
                          data:
                            type: users
                            id: guid0
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/y9jdt/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/typ46/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/y9jdt/contributors/typ46/
                  embeds:
                    users:
                      data:
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/typ46/nodes/
                                meta: {}
                          institutions:
                            links:
                              self:
                                href: https://api.osf.io/v2/users/typ46/relationships/institutions/
                                meta: {}
                              related:
                                href: https://api.osf.io/v2/users/typ46/institutions/
                                meta: {}
                        links:
                          self: https://api.osf.io/v2/users/typ46/
                          html: https://osf.io/typ46/
                          profile_image: https://secure.gravatar.com/avatar/3dd8757ba100b8406413706886243811?d=identicon
                        attributes:
                          family_name: Geiger
                          suffix: ""
                          locale: en_us
                          date_registered: 2014-03-18T19:11:57.252000
                          middle_names: J.
                          given_name: Brian
                          full_name: Brian J. Geiger
                          active: true
                          timezone: America/New_York
                        type: users
                        id: typ46
                  attributes:
                    index: 0
                    unregistered_contributor: null
                    bibliographic: true
                    permission: admin
                  type: contributors
                  id: y9jdt-typ46
      x-response-schema: Contributor
    delete:
      tags:
      - Nodes
      summary: Delete a contributor
      description: |-
        Removes a contributor from a node. This request only removes the relationship between the node and the user, it does not delete the user itself.

        A node must always have at least one admin, and attempting to remove the only admin from a node will result in a **400 Bad Request** response.
        #### Permissions
        A user can remove themselves as a node contributor. Otherwise, only project administrators can remove contributors.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_contributors_delete
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content
          content: {}
    patch:
      tags:
      - Nodes
      summary: Update a contributor
      description: |-
        Updates a contributor by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Contributors can be updated with either a **PUT** or **PATCH** request. Since this endpoint has no mandatory attributes, PUT and PATCH are functionally the same.
        #### Permissions
        Only project administrators can update the contributors on a node.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        If the given user is not already in the contributor list, a 404 Not Found error will be returned. A node must always have at least one admin, and any attempt to downgrade the permissions of a sole admin will result in a 400 Bad Request error.
      operationId: nodes_contributors_partial_update
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Contributor
              required:
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: "The identifier of the contributor entity. Contributor\
                    \ identifiers have the form {node_id}-{user_id}."
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the contributor entity (`contributors`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    bibliographic:
                      type: boolean
                      description: Whether or not the contributor will be included
                        in citations for the node. The default value is true.
                    index:
                      type: integer
                      description: The position of this contributor in the list of
                        project contributors and in project citations.
                    permission:
                      type: string
                      description: The permission level of the contributor. The default
                        value is 'write'.
                      enum:
                      - read
                      - write
                      - admin
                    unregistered_contributor:
                      type: string
                      description: The assigned name of the contributor if the contributor
                        has not yet claimed their account.
                      readOnly: true
                  description: The properties of the contributor entity.
                relationships:
                  title: Relationships
                  required:
                  - node
                  - user
                  type: object
                  properties:
                    node:
                      type: string
                      description: "A relationship to the node that was created for\
                        \ the preprint, or from which the preprint was created."
                      readOnly: true
                    user:
                      type: string
                      description: "A relationship to the file that is designated\
                        \ as the preprint's primary file, or the manuscript of the\
                        \ preprint."
                  description: URLs to other entities or entity collections that have
                    a relationship to the contributor entity.
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the the canonical API endpoint for the
                        contributor.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the contributor
                    entity.
                  readOnly: true
              example:
                data:
                  type: contributors
                  attributes: {}
                  relationships:
                    user:
                      data:
                        type: users
                        id: guid0
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-response-schema: Contributor
      x-codegen-request-body-name: body
  /nodes/{node_id}/draft_registrations/:
    get:
      tags:
      - Nodes
      summary: List all draft registrations
      description: |-
        A paginated list of all of the draft registrations of a given node.

        Draft Registrations contain Registration questions that will become part of the Registration. A Registration is a frozen version of the project that can never be deleted, but can be withdrawn and have it's metadata edited.

        Your original project remains editable but will now have the draft registration linked to it.
        #### Permissions
        Only project administrators may view draft registrations.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 draft registrations. Each resource in the array is a separate draft registration object and contains the full representation of the draft registration, meaning additional requests to a draft registration's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_draft_registrations_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Draft Registration
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the draft registration
                        entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the draft registration entity
                        (`draft_registrations`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        title:
                          type: string
                          description: The title of the Draft Registration.
                        description:
                          type: string
                          description: The description of the Draft Registration.
                        category:
                          type: string
                          description: The category of the Draft Registration.
                        tags:
                          type: array
                          description: The searchable tags of the Draft Registration.
                          items:
                            type: string
                        node_license:
                          title: Node License
                          type: object
                          properties:
                            copyright_holders:
                              type: array
                              description: A list of names of copyright holders for
                                the license.
                              items:
                                type: string
                                description: A copyright holders for the license.
                                readOnly: true
                            year:
                              type: integer
                              description: The year the copyright was made.
                        current_user_permissions:
                          type: array
                          description: The current users permission level for the
                            Draft Registration.
                          readOnly: true
                          items:
                            type: string
                        has_project:
                          type: boolean
                          description: This indicates whether a Draft Registration
                            was branched from a project.
                          readOnly: true
                        datetime_initiated:
                          type: string
                          description: "The time at which the draft registration was\
                            \ first initiated, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        datetime_updated:
                          type: string
                          description: "The time at which the draft registration was\
                            \ last updated, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        registration_metadata:
                          type: object
                          properties: {}
                          description: This is a legacy format for `registration_responses`.
                        registration_responses:
                          type: object
                          properties: {}
                          description: A dictionary of question IDs and responses
                            from the registration schema.
                      description: The properties of the Draft Registration entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        branched_from:
                          type: string
                          description: A link to the node that this draft registration
                            was created from.
                          readOnly: true
                        initiator:
                          type: string
                          description: A link to the user who initiated the draft
                            registration.
                          readOnly: true
                        registration_schema:
                          type: string
                          description: A link to the detailed registration schema
                            that this draft conforms to.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the draft registration entity.
                      readOnly: true
                    links:
                      title: Links
                      required:
                      - html
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the draft registration's page on
                            the OSF.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the draft
                        registration entity.
                      readOnly: true
                  example:
                    data:
                      type: draft_registrations
                      relationships:
                        registration_schema:
                          data:
                            id: 61e02b6c90de34000ae3447a
                            type: registration_schemas
            application/json:
              example:
                data:
                - id: 62716076d90ebe0017f2bf42
                  type: draft_registrations
                  attributes:
                    registration_metadata: {}
                    registration_responses: {}
                    datetime_initiated: 2022-05-03T17:03:50.288542
                    datetime_updated: 2022-05-03T17:03:50.560153
                    title: Untitled
                    description: ""
                    category: ""
                    tags: []
                    node_license: null
                  relationships:
                    initiator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/fgvc6/
                          meta: {}
                      data:
                        id: fgvc6
                        type: users
                    branched_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/nmj5w/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/61e02b6c90de34000ae3447a/
                          meta: {}
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration-schemas
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/registrations/osf/
                          meta: {}
                      data:
                        id: osf
                        type: registration-providers
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/relationships/institutions/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/contributors/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/relationships/subjects/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/
                links:
                  first: ""
                  last: ""
                  prev: ""
                  next: ""
                  meta:
                    total: ""
                    per_page: 10
      x-response-schema: Draft Registration
    post:
      tags:
      - Nodes
      summary: Create a draft registration based on your current project Node.
      description: |-
        Initiate a draft registration of the current node.
        Draft Registrations contain Registration questions that will become part of the Registration. A Registration is a frozen version of the project that can never be deleted, but can be withdrawn and have it's metadata edited.

        Your original project remains editable but will now have the draft registration linked to it.
        #### Permissions
        Only project administrators may view create registrations.
        #### Required
        Required fields for creating a draft registration include:

        &nbsp;&nbsp;&nbsp;&nbsp;`schema_id`
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_create
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Draft Registration
              required:
              - attributes
              - id
              - links
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the draft registration entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the draft registration entity
                    (`draft_registrations`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    title:
                      type: string
                      description: The title of the Draft Registration.
                    description:
                      type: string
                      description: The description of the Draft Registration.
                    category:
                      type: string
                      description: The category of the Draft Registration.
                    tags:
                      type: array
                      description: The searchable tags of the Draft Registration.
                      items:
                        type: string
                    node_license:
                      title: Node License
                      type: object
                      properties:
                        copyright_holders:
                          type: array
                          description: A list of names of copyright holders for the
                            license.
                          items:
                            type: string
                            description: A copyright holders for the license.
                            readOnly: true
                        year:
                          type: integer
                          description: The year the copyright was made.
                    current_user_permissions:
                      type: array
                      description: The current users permission level for the Draft
                        Registration.
                      readOnly: true
                      items:
                        type: string
                    has_project:
                      type: boolean
                      description: This indicates whether a Draft Registration was
                        branched from a project.
                      readOnly: true
                    datetime_initiated:
                      type: string
                      description: "The time at which the draft registration was first\
                        \ initiated, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    datetime_updated:
                      type: string
                      description: "The time at which the draft registration was last\
                        \ updated, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    registration_metadata:
                      type: object
                      properties: {}
                      description: This is a legacy format for `registration_responses`.
                    registration_responses:
                      type: object
                      properties: {}
                      description: A dictionary of question IDs and responses from
                        the registration schema.
                  description: The properties of the Draft Registration entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    branched_from:
                      type: string
                      description: A link to the node that this draft registration
                        was created from.
                      readOnly: true
                    initiator:
                      type: string
                      description: A link to the user who initiated the draft registration.
                      readOnly: true
                    registration_schema:
                      type: string
                      description: A link to the detailed registration schema that
                        this draft conforms to.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the draft registration entity.
                  readOnly: true
                links:
                  title: Links
                  required:
                  - html
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the draft registration's page on the
                        OSF.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the draft registration
                    entity.
                  readOnly: true
              example:
                data:
                  type: draft_registrations
                  relationships:
                    registration_schema:
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration_schemas
        required: true
      responses:
        "201":
          description: Created
          content: {}
      x-response-schema: Draft Registration
      x-codegen-request-body-name: body
  /nodes/{node_id}/draft_registrations/{draft_id}/:
    get:
      tags:
      - Draft Registrations
      summary: Retrieve a Draft Registration
      description: |-
        Retrieve the details of a given draft registration.
        Draft Registrations contain Registration questions that will become part of the Registration. A Registration is a frozen version of the project that can never be deleted, but can be withdrawn and have it's metadata edited.

        Your original project remains editable but will now have the draft registration linked to it.
        #### Permissions
        Only project administrators may view draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Draft Registration
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the draft registration entity
                      (`draft_registrations`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      title:
                        type: string
                        description: The title of the Draft Registration.
                      description:
                        type: string
                        description: The description of the Draft Registration.
                      category:
                        type: string
                        description: The category of the Draft Registration.
                      tags:
                        type: array
                        description: The searchable tags of the Draft Registration.
                        items:
                          type: string
                      node_license:
                        title: Node License
                        type: object
                        properties:
                          copyright_holders:
                            type: array
                            description: A list of names of copyright holders for
                              the license.
                            items:
                              type: string
                              description: A copyright holders for the license.
                              readOnly: true
                          year:
                            type: integer
                            description: The year the copyright was made.
                      current_user_permissions:
                        type: array
                        description: The current users permission level for the Draft
                          Registration.
                        readOnly: true
                        items:
                          type: string
                      has_project:
                        type: boolean
                        description: This indicates whether a Draft Registration was
                          branched from a project.
                        readOnly: true
                      datetime_initiated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ first initiated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      datetime_updated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ last updated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      registration_metadata:
                        type: object
                        properties: {}
                        description: This is a legacy format for `registration_responses`.
                      registration_responses:
                        type: object
                        properties: {}
                        description: A dictionary of question IDs and responses from
                          the registration schema.
                    description: The properties of the Draft Registration entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      branched_from:
                        type: string
                        description: A link to the node that this draft registration
                          was created from.
                        readOnly: true
                      initiator:
                        type: string
                        description: A link to the user who initiated the draft registration.
                        readOnly: true
                      registration_schema:
                        type: string
                        description: A link to the detailed registration schema that
                          this draft conforms to.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the draft registration entity.
                    readOnly: true
                  links:
                    title: Links
                    required:
                    - html
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the draft registration's page on the
                          OSF.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the draft
                      registration entity.
                    readOnly: true
                example:
                  data:
                    type: draft_registrations
                    relationships:
                      registration_schema:
                        data:
                          id: 61e02b6c90de34000ae3447a
                          type: registration_schemas
            application/json:
              example:
                data:
                - id: ""
                  type: draft_registrations
                  attributes:
                    datetime_initiated: ""
                    datetime_updated: ""
                    registration_metadata: {}
                    registration_supplement: ""
                  relationships:
                    branched_from:
                      links:
                        related:
                          href: ""
                          meta: {}
                    initiator:
                      links:
                        related:
                          href: ""
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: ""
                          meta: {}
                  links:
                    html: ""
                links:
                  first: ""
                  last: ""
                  prev: ""
                  next: ""
                  meta:
                    total: ""
                    per_page: 10
      x-response-schema: Draft Registration
    delete:
      tags:
      - Nodes
      summary: Delete a draft registration
      description: |-
        Permanently deletes a draft registration. A draft that has already been registered cannot be deleted.
        #### Permissions
        Only project administrators may delete draft registrations.
        #### Returns
        If the request is successful, no content is returned.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: nodes_draft_registrations_delete
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - Nodes
      summary: Update a draft registration
      description: |-
        Updates a draft registration by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Draft Registrations contain Registration questions that will become part of the Registration. Answer the questions in the draft registration supplement by sending update requests until you are ready to submit the draft.

        The registration supplement of a draft registration cannot be updated after the draft has been created.

        When updating a draft registration, `registration_metadata` is required. It must be a dictionary with keys as question ids in the registration form, and values as nested dictionaries matching the specific format in the [registration schema](TODO: link me pls).

        If a question is multiple-choice, the question response must exactly match one of the possible choices.
        #### Permissions
        Only project administrators may update draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_partial_update
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Draft Registration
              required:
              - attributes
              - id
              - links
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the draft registration entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the draft registration entity
                    (`draft_registrations`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    title:
                      type: string
                      description: The title of the Draft Registration.
                    description:
                      type: string
                      description: The description of the Draft Registration.
                    category:
                      type: string
                      description: The category of the Draft Registration.
                    tags:
                      type: array
                      description: The searchable tags of the Draft Registration.
                      items:
                        type: string
                    node_license:
                      title: Node License
                      type: object
                      properties:
                        copyright_holders:
                          type: array
                          description: A list of names of copyright holders for the
                            license.
                          items:
                            type: string
                            description: A copyright holders for the license.
                            readOnly: true
                        year:
                          type: integer
                          description: The year the copyright was made.
                    current_user_permissions:
                      type: array
                      description: The current users permission level for the Draft
                        Registration.
                      readOnly: true
                      items:
                        type: string
                    has_project:
                      type: boolean
                      description: This indicates whether a Draft Registration was
                        branched from a project.
                      readOnly: true
                    datetime_initiated:
                      type: string
                      description: "The time at which the draft registration was first\
                        \ initiated, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    datetime_updated:
                      type: string
                      description: "The time at which the draft registration was last\
                        \ updated, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    registration_metadata:
                      type: object
                      properties: {}
                      description: This is a legacy format for `registration_responses`.
                    registration_responses:
                      type: object
                      properties: {}
                      description: A dictionary of question IDs and responses from
                        the registration schema.
                  description: The properties of the Draft Registration entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    branched_from:
                      type: string
                      description: A link to the node that this draft registration
                        was created from.
                      readOnly: true
                    initiator:
                      type: string
                      description: A link to the user who initiated the draft registration.
                      readOnly: true
                    registration_schema:
                      type: string
                      description: A link to the detailed registration schema that
                        this draft conforms to.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the draft registration entity.
                  readOnly: true
                links:
                  title: Links
                  required:
                  - html
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the draft registration's page on the
                        OSF.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the draft registration
                    entity.
                  readOnly: true
              example:
                data:
                  type: draft_registrations
                  relationships:
                    registration_schema:
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration_schemas
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-response-schema: Draft Registration
      x-codegen-request-body-name: body
  /nodes/{node_id}/files/:
    get:
      tags:
      - Nodes
      summary: List all storage providers
      description: |-
        List of all storage providers that are configured for this node

        Users of the OSF may access their data on a [number of cloud-storage services](https://api.osf.io/v2/#storage-providers) that have integrations with the OSF. We call these **providers**. By default, every node has access to the OSF-provided storage but may use as many of the supported providers as desired.


        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of files. Each resource in the array is a separate file object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        Note: In the OSF filesystem model, providers are treated as folders, but with special properties that distinguish them from regular folders. Every provider folder is considered a root folder, and may not be deleted through the regular file API.
      operationId: nodes_providers_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        extra:
                          type: object
                          properties: {}
                          description: "Extra information, contains `hashes` (`sha256`,\
                            \ `md5`) and `downloads` count."
                          readOnly: true
                        kind:
                          type: string
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                        name:
                          type: string
                          description: Name of the file
                        last_touched:
                          type: string
                          description: The time at which the file external metadata
                            was last retrieved as an iso8601 formatted timestamp (does
                            not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Unix-style path to the file relative to the
                            provider root.
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the file was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        current_version:
                          type: integer
                          description: Version number of the file.
                          readOnly: true
                        delete_allowed:
                          type: boolean
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                        date_created:
                          type: string
                          description: "The time at which the file was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        provider:
                          type: string
                          description: "The id of the file provider (e.g., `osfstorage`)"
                          readOnly: true
                        path:
                          type: string
                          description: The unique identifier for this file entity
                            for this project and storage provider.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user is allowed
                            to post comments.
                          readOnly: true
                        guid:
                          type: string
                          description: Global unique identifier (GUID) for this file
                            (if one has been assigned).
                          readOnly: true
                        checkout:
                          type: string
                          description: "SOON TO BE DEPRECATED, see relationships checkout."
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this file,\
                            \ as entered by project contributors."
                          readOnly: true
                          items:
                            type: string
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                        checkout:
                          type: string
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                        versions:
                          type: string
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                      description: Links to other entities or entity collections that
                        have a relationship to the file entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        info:
                          type: string
                          description: A link to the page to view a file's information
                            or a folder's contents.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                        move:
                          type: string
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                        new_folder:
                          type: string
                          description: The Waterbutler API route for creating a new
                            subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                        upload:
                          type: string
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                        download:
                          type: string
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                        delete:
                          type: string
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/
                          meta: {}
                  links:
                    storage_addons: https://api.osf.io/v2/addons/?filter%5Bcategories%5D=storage
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/
                    new_folder: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/?kind=folder
                  attributes:
                    node: ezcuj
                    path: /
                    kind: folder
                    name: osfstorage
                    provider: osfstorage
                  type: files
                  id: ezcuj:osfstorage
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: File
  /nodes/{node_id}/files/providers/{provider}/:
    get:
      tags:
      - Nodes
      summary: Retrieve a storage provider
      description: |-
        Retrieves the details of a storage provider enabled on this node.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested file object, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_providers_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the storage provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: File
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the file entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the file entity (`files`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      extra:
                        type: object
                        properties: {}
                        description: "Extra information, contains `hashes` (`sha256`,\
                          \ `md5`) and `downloads` count."
                        readOnly: true
                      kind:
                        type: string
                        description: The kind of files object it is (`file` or `folder`).
                        readOnly: true
                      name:
                        type: string
                        description: Name of the file
                      last_touched:
                        type: string
                        description: The time at which the file external metadata
                          was last retrieved as an iso8601 formatted timestamp (does
                          not apply to OSF Storage files).
                        format: date-time
                        readOnly: true
                      materialized_path:
                        type: string
                        description: Unix-style path to the file relative to the provider
                          root.
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the file was last modified,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      current_version:
                        type: integer
                        description: Version number of the file.
                        readOnly: true
                      delete_allowed:
                        type: boolean
                        description: Whether or not deletion of the file is allowed.
                        readOnly: true
                      date_created:
                        type: string
                        description: "The time at which the file was created, as an\
                          \ iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      provider:
                        type: string
                        description: "The id of the file provider (e.g., `osfstorage`)"
                        readOnly: true
                      path:
                        type: string
                        description: The unique identifier for this file entity for
                          this project and storage provider.
                        readOnly: true
                      current_user_can_comment:
                        type: boolean
                        description: Whether or not the current user is allowed to
                          post comments.
                        readOnly: true
                      guid:
                        type: string
                        description: Global unique identifier (GUID) for this file
                          (if one has been assigned).
                        readOnly: true
                      checkout:
                        type: string
                        description: "SOON TO BE DEPRECATED, see relationships checkout."
                        readOnly: true
                      tags:
                        type: array
                        description: "A list of strings that describe this file, as\
                          \ entered by project contributors."
                        readOnly: true
                        items:
                          type: string
                      size:
                        type: integer
                        description: Size of the file in bytes.
                        readOnly: true
                    description: The properties of the file entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      node:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                      checkout:
                        type: string
                        description: A link to the user who checked out the file.
                        format: URL
                        readOnly: true
                      comments:
                        type: string
                        description: A link to the comments on the file.
                        format: URL
                        readOnly: true
                      versions:
                        type: string
                        description: A link to the versions of the file.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      info:
                        type: string
                        description: A link to the page to view a file's information
                          or a folder's contents.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the file.
                        format: URL
                        readOnly: true
                      move:
                        type: string
                        description: The Waterbutler API route for file moves.
                        format: URL
                        readOnly: true
                      new_folder:
                        type: string
                        description: The Waterbutler API route for creating a new
                          subfolder (does not exist for files).
                        format: URL
                        readOnly: true
                      upload:
                        type: string
                        description: The Waterbutler API route for file uploads.
                        format: URL
                        readOnly: true
                      download:
                        type: string
                        description: The Waterbutler API route for file downloads.
                        format: URL
                        readOnly: true
                      delete:
                        type: string
                        description: The Waterbutler API route for file deletions.
                        format: URL
                        readOnly: true
                    description: Links to alternative representations of the file
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/
                          meta: {}
                  links:
                    storage_addons: https://api.osf.io/v2/addons/?filter%5Bcategories%5D=storage
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/
                    new_folder: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/?kind=folder
                  attributes:
                    node: ezcuj
                    path: /
                    kind: folder
                    name: osfstorage
                    provider: osfstorage
                  type: files
                  id: ezcuj:osfstorage
      x-response-schema: File
  /nodes/{node_id}/files/{provider}/:
    get:
      tags:
      - Nodes
      summary: List all node files
      description: |-
        List of all the files/folders that are attached to your project for a given storage provider.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of files. Each resource in the array is a separate file object and contains the full representation of the file.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Filtering

        You can optionally request that the response only include files that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/?filter[kind]=file

        Node files may be filtered by `id`, `name`, `node`, `kind`, `path`, `provider`, `size`, and `last_touched`.

        ### Waterbutler API actions

        Files can be modified through the Waterbutler API routes found in `links` (`new_folder`, `move`, `upload`, `download`, and `delete`).

        #### Download (files)

        To download a file, issue a GET request against the download link. The response will have the Content-Disposition header set, which will will trigger a download in a browser.

        #### Create Subfolder (folders)

        You can create a subfolder of an existing folder by issuing a PUT request against the new_folder link. The ?kind=folder portion of the query parameter is already included in the new_folder link. The name of the new subfolder should be provided in the name query parameter. The response will contain a WaterButler folder entity. If a folder with that name already exists in the parent directory, the server will return a 409 Conflict error response.

        #### Upload New File (folders)

        To upload a file to a folder, issue a PUT request to the folder's upload link with the raw file data in the request body, and the kind and name query parameters set to 'file' and the desired name of the file. The response will contain a WaterButler file entity that describes the new file. If a file with the same name already exists in the folder, the server will return a 409 Conflict error response.

        #### Update Existing File (file)

        To update an existing file, issue a PUT request to the file's upload link with the raw file data in the request body and the kind query parameter set to "file". The update action will create a new version of the file. The response will contain a WaterButler file entity that describes the updated file.

        #### Rename (files, folders)

        To rename a file or folder, issue a POST request to the move link with the action body parameter set to "rename" and the rename body parameter set to the desired name. The response will contain either a folder entity or file entity with the new name.

        #### Move & Copy (files, folders)

        Move and copy actions both use the same request structure, a POST to the move url, but with different values for the action body parameters. The path parameter is also required and should be the OSF path attribute of the folder being written to. The rename and conflict parameters are optional. If you wish to change the name of the file or folder at its destination, set the rename parameter to the new name. The conflict param governs how name clashes are resolved. Possible values are replace and keep. replace is the default and will overwrite the file that already exists in the target folder. keep will attempt to keep both by adding a suffix to the new file's name until it no longer conflicts. The suffix will be ' (x)' where x is a increasing integer starting from 1. This behavior is intended to mimic that of the OS X Finder. The response will contain either a folder entity or file entity with the new name.
        Files and folders can also be moved between nodes and providers. The resource parameter is the id of the node under which the file/folder should be moved. It must agree with the path parameter, that is the path must identify a valid folder under the node identified by resource. Likewise, the provider parameter may be used to move the file/folder to another storage provider, but both the resource and path parameters must belong to a node and folder already extant on that provider. Both resource and provider default to the current node and providers.
        If a moved/copied file is overwriting an existing file, a 200 OK response will be returned. Otherwise, a 201 Created will be returned.

        #### Delete (file, folders)

        To delete a file or folder send a DELETE request to the delete link. Nothing will be returned in the response body.
      operationId: nodes_files_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the storage provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        extra:
                          type: object
                          properties: {}
                          description: "Extra information, contains `hashes` (`sha256`,\
                            \ `md5`) and `downloads` count."
                          readOnly: true
                        kind:
                          type: string
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                        name:
                          type: string
                          description: Name of the file
                        last_touched:
                          type: string
                          description: The time at which the file external metadata
                            was last retrieved as an iso8601 formatted timestamp (does
                            not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Unix-style path to the file relative to the
                            provider root.
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the file was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        current_version:
                          type: integer
                          description: Version number of the file.
                          readOnly: true
                        delete_allowed:
                          type: boolean
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                        date_created:
                          type: string
                          description: "The time at which the file was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        provider:
                          type: string
                          description: "The id of the file provider (e.g., `osfstorage`)"
                          readOnly: true
                        path:
                          type: string
                          description: The unique identifier for this file entity
                            for this project and storage provider.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user is allowed
                            to post comments.
                          readOnly: true
                        guid:
                          type: string
                          description: Global unique identifier (GUID) for this file
                            (if one has been assigned).
                          readOnly: true
                        checkout:
                          type: string
                          description: "SOON TO BE DEPRECATED, see relationships checkout."
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this file,\
                            \ as entered by project contributors."
                          readOnly: true
                          items:
                            type: string
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                        checkout:
                          type: string
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                        versions:
                          type: string
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                      description: Links to other entities or entity collections that
                        have a relationship to the file entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        info:
                          type: string
                          description: A link to the page to view a file's information
                            or a folder's contents.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                        move:
                          type: string
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                        new_folder:
                          type: string
                          description: The Waterbutler API route for creating a new
                            subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                        upload:
                          type: string
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                        download:
                          type: string
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                        delete:
                          type: string
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                          meta: {}
                    versions:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                  attributes:
                    extra:
                      hashes:
                        sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        md5: 44325d4f13b09f3769ede09d7c20a82c
                      downloads: 447
                    kind: file
                    name: OSC2012.pdf
                    last_touched: 2015-09-18T01:11:16.328000
                    materialized_path: /OSC2012.pdf
                    date_modified: 2014-10-17T19:24:12.264Z
                    current_version: 1
                    delete_allowed: true
                    date_created: 2014-10-17T19:24:12.264Z
                    provider: osfstorage
                    path: /553e69248c5e4a219919ea54
                    current_user_can_comment: true
                    guid: sejcv
                    checkout: null
                    tags: []
                    size: 216945
                  type: files
                  id: 553e69248c5e4a219919ea54
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: File
  /nodes/{node_id}/files/{provider}/{path}/:
    get:
      tags:
      - Nodes
      summary: Retrieve a file
      description: |-
        Retrieves the details of a file attached to given node (project or component) for the given storage provider.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested file object, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_files_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the storage provider.
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: The unique identifier of the file path.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: File
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the file entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the file entity (`files`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      extra:
                        type: object
                        properties: {}
                        description: "Extra information, contains `hashes` (`sha256`,\
                          \ `md5`) and `downloads` count."
                        readOnly: true
                      kind:
                        type: string
                        description: The kind of files object it is (`file` or `folder`).
                        readOnly: true
                      name:
                        type: string
                        description: Name of the file
                      last_touched:
                        type: string
                        description: The time at which the file external metadata
                          was last retrieved as an iso8601 formatted timestamp (does
                          not apply to OSF Storage files).
                        format: date-time
                        readOnly: true
                      materialized_path:
                        type: string
                        description: Unix-style path to the file relative to the provider
                          root.
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the file was last modified,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      current_version:
                        type: integer
                        description: Version number of the file.
                        readOnly: true
                      delete_allowed:
                        type: boolean
                        description: Whether or not deletion of the file is allowed.
                        readOnly: true
                      date_created:
                        type: string
                        description: "The time at which the file was created, as an\
                          \ iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      provider:
                        type: string
                        description: "The id of the file provider (e.g., `osfstorage`)"
                        readOnly: true
                      path:
                        type: string
                        description: The unique identifier for this file entity for
                          this project and storage provider.
                        readOnly: true
                      current_user_can_comment:
                        type: boolean
                        description: Whether or not the current user is allowed to
                          post comments.
                        readOnly: true
                      guid:
                        type: string
                        description: Global unique identifier (GUID) for this file
                          (if one has been assigned).
                        readOnly: true
                      checkout:
                        type: string
                        description: "SOON TO BE DEPRECATED, see relationships checkout."
                        readOnly: true
                      tags:
                        type: array
                        description: "A list of strings that describe this file, as\
                          \ entered by project contributors."
                        readOnly: true
                        items:
                          type: string
                      size:
                        type: integer
                        description: Size of the file in bytes.
                        readOnly: true
                    description: The properties of the file entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      node:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                      checkout:
                        type: string
                        description: A link to the user who checked out the file.
                        format: URL
                        readOnly: true
                      comments:
                        type: string
                        description: A link to the comments on the file.
                        format: URL
                        readOnly: true
                      versions:
                        type: string
                        description: A link to the versions of the file.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      info:
                        type: string
                        description: A link to the page to view a file's information
                          or a folder's contents.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the file.
                        format: URL
                        readOnly: true
                      move:
                        type: string
                        description: The Waterbutler API route for file moves.
                        format: URL
                        readOnly: true
                      new_folder:
                        type: string
                        description: The Waterbutler API route for creating a new
                          subfolder (does not exist for files).
                        format: URL
                        readOnly: true
                      upload:
                        type: string
                        description: The Waterbutler API route for file uploads.
                        format: URL
                        readOnly: true
                      download:
                        type: string
                        description: The Waterbutler API route for file downloads.
                        format: URL
                        readOnly: true
                      delete:
                        type: string
                        description: The Waterbutler API route for file deletions.
                        format: URL
                        readOnly: true
                    description: Links to alternative representations of the file
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                          meta: {}
                    versions:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                  attributes:
                    extra:
                      hashes:
                        sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        md5: 44325d4f13b09f3769ede09d7c20a82c
                      downloads: 447
                    kind: file
                    name: OSC2012.pdf
                    last_touched: 2015-09-18T01:11:16.328000
                    materialized_path: /OSC2012.pdf
                    date_modified: 2014-10-17T19:24:12.264Z
                    current_version: 1
                    delete_allowed: true
                    date_created: 2014-10-17T19:24:12.264Z
                    provider: osfstorage
                    path: /553e69248c5e4a219919ea54
                    current_user_can_comment: true
                    guid: sejcv
                    checkout: null
                    tags: []
                    size: 216945
                  type: files
                  id: 553e69248c5e4a219919ea54
      x-response-schema: File
  /nodes/{node_id}/identifiers/:
    get:
      tags:
      - Nodes
      summary: List all identifiers
      description: |-
        List all identifiers associated with a given node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of identifiers. Each resource in the array is a separate identifier object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering

        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/identifiers/?filter[category]=ark

        Identifiers may be filtered by their `category` e.g `ark` or `doi`.
      operationId: nodes_identifiers_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Identifier
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the identifier entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the identifier entity (`identifiers`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        category:
                          type: string
                          description: The category of the identifier
                          readOnly: true
                          enum:
                          - ark
                          - doi
                        value:
                          type: string
                          description: The identifier value itself
                          readOnly: true
                      description: The properties of the identifier entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        referent:
                          type: string
                          description: A relationship to the node the identifier refers
                            to.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the identifier entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the identifier.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the identifier
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    referent:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b459/
                  attributes:
                    category: doi
                    value: 10.17605/OSF.IO/73PND
                  type: identifiers
                  id: 57f1641db83f6901ed94b459
                - relationships:
                    referent:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b45a/
                  attributes:
                    category: ark
                    value: c7605/osf.io/73pnd
                  type: identifiers
                  id: 57f1641db83f6901ed94b45a
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Identifier
  /nodes/{node_id}/institutions/:
    get:
      tags:
      - Nodes
      summary: List all institutions
      description: |-
        List of all institutions affiliated with this node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 affilited institutions. Each resource in the array is a separate institution object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_institutions_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Institution
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the institution entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        auth_url:
                          type: string
                          description: Url used to authenticate institution specific
                            login.
                          readOnly: true
                        logo_path:
                          type: string
                          description: Static path to the institution specific logo.
                          readOnly: true
                        name:
                          type: string
                          description: Full name of the institution.
                          readOnly: true
                        description:
                          type: string
                          description: Description of the institution.
                          readOnly: true
                      description: The properties of the institution entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        users:
                          type: string
                          description: A relationship to the users affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        registrations:
                          type: string
                          description: A relationship to the registrations affiliated
                            with the institution.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the institution entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the institutions
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/cos/
                  attributes:
                    auth_url: null
                    logo_path: /static/img/institutions/shields/cos-shield.png
                    name: Center For Open Science
                    description: COS is a non-profit technology company providing
                      free and open services to increase inclusivity and transparency
                      of research. Find out more at <a href="https://cos.io">cos.io</a>.
                  type: institutions
                  id: cos
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/uva/
                  attributes:
                    auth_url: https://accounts.osf.io/Shibboleth.sso/Login?entityID=urn%3Amace%3Aincommon%3Avirginia.edu
                    logo_path: /static/img/institutions/shields/uva-shield.png
                    name: University of Virginia
                    description: "In partnership with the <a href=\"http://www.virginia.edu/vpr/\"\
                      >Vice President for Research</a>, <a href=\"http://dsi.virginia.edu\"\
                      >Data Science Institute</a>, <a href=\"https://www.hsl.virginia.edu\"\
                      >Health Sciences Library</a>, and <a href=\"http://data.library.virginia.edu\"\
                      >University Library</a>. Learn more about <a href=\"http://cadre.virginia.edu\"\
                      >UVA resources for computational and data-driven research</a>.\
                      \ Projects must abide by the <a href=\"http://www.virginia.edu/informationpolicy/security.html\"\
                      >University Security and Data Protection Policies</a>."
                  type: institutions
                  id: uva
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Institution
  /nodes/{node_id}/forks/:
    get:
      tags:
      - Nodes
      summary: List all forks of this node
      description: |2-

        A paginated list of the current node's forks. The returned fork nodes are sorted by their `forked_date`, with the most recently forked nodes appearing first.

        Forking a project creates a copy of an existing node and all of its contents. The fork always points back to the original node, forming a network of nodes.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 forked nodes. If the current node has zero forked nodes, the `data` key will contain an empty array. Each resource in the array is a separate node object and contains the full representation of the forked node, meaning additional requests to the forked node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
      operationId: nodes_forks_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/identifiers/
                          meta: {}
                    forked_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/comments/?filter%5Btarget%5D=95q3e
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/95q3e/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/95q3e/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/95q3e/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/95q3e/
                    html: https://osf.io/95q3e/
                  attributes:
                    category: project
                    fork: true
                    preprint: false
                    description: ""
                    current_user_permissions:
                    - read
                    - write
                    - admin
                    date_modified: 2016-07-23T00:21:05.371000
                    title: "Fork of Reproducibility Project: Psychology"
                    forked_date: 2016-11-08T15:59:03.114000
                    collection: false
                    registration: false
                    date_created: 2012-04-01T15:49:07.702000
                    current_user_can_comment: true
                    node_license: null
                    public: false
                    tags:
                    - replication
                    - reproducibility
                    - open science
                    - reproduction
                    - psychological science
                    - psychology
                    - metascience
                    - crowdsource
                  type: nodes
                  id: 95q3e
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Node
    post:
      tags:
      - Nodes
      summary: Create a fork of this node
      description: |-
        Creates a fork of the given node.

        Forking a project creates a copy of an existing node and all of its contents. The fork always points back to the original node, forming a network of nodes.

        You might use a fork to copy another's work to build on and extend. For example, a professor may create an OSF project of materials for individual student use. Each student forks the project to have his or her own copy of the materials to start his/her own work.

        When creating a fork, your fork will only contain public components of the current node and components for which you are a contributor. Private components that you do not have access to will not be forked.
        #### Required
        There are no required attributes when creating a fork, as all of the forked node's attributes will be copied from the current node.

        The `title` field is optional, with the default title being "Fork of " prepended to the current node's title.
        #### Returns
        Returns a JSON object with a `data` key containing the complete srepresentation of the forked node, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_forks_create
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Node
              required:
              - attributes
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the node entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the node entity (`nodes`).
                attributes:
                  title: Attributes
                  required:
                  - category
                  - title
                  type: object
                  properties:
                    category:
                      type: string
                      description: "The category of the node, as selected by project\
                        \ contributors."
                      enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    title:
                      type: string
                      description: The title of the node.
                    collection:
                      type: boolean
                      description: Whether or not this node represents a collection.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    current_user_can_comment:
                      type: boolean
                      description: Whether or not the current user has permission
                        to post comments on this node. Comments on nodes can be set
                        to allow all users to comment (if public) or restricted to
                        only allow comments from contributors.
                      readOnly: true
                    current_user_permissions:
                      type: array
                      description: "A list of strings representing the permissions\
                        \ for the current user on this node. Valid permissions are\
                        \ \"admin\", \"read\", and \"write\"."
                      readOnly: true
                      items:
                        type: string
                    date_created:
                      type: string
                      description: "The time at which the node was created, as an\
                        \ iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the node was last modified,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    description:
                      type: string
                      description: The description of the node.
                    fork:
                      type: boolean
                      description: Whether or not this node represents a fork of another
                        node.
                      readOnly: true
                    forked_date:
                      type: string
                      description: "If this node is a fork of another node, the time\
                        \ at which the node was created, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    node_license:
                      type: string
                      description: A dictionary containing the metadata (copyright
                        year and holder) associated with the node license (required
                        for certain license types).
                    preprint:
                      type: boolean
                      description: "Whether or not a preprint has been created from\
                        \ this node, or if this node was created for a preprint."
                      readOnly: true
                    public:
                      type: boolean
                      description: Whether or not the node is publicly visible. This
                        field is only editable by project administrators.
                    registration:
                      type: boolean
                      description: Whether or not the node represents a registration.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    tags:
                      type: array
                      description: "A list of strings that describe this node, as\
                        \ entered by project contributors."
                      items:
                        type: string
                    template_from:
                      type: string
                      description: "The unique ID of the node from which this node\
                        \ was templated, if this node was created from a template."
                  description: The properties of the node entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    affiliated_institutions:
                      type: string
                      description: A link to the list of institutions this node is
                        affiliated with.
                      readOnly: true
                    children:
                      type: string
                      description: A link to the list of this node's children (components).
                      readOnly: true
                    citation:
                      type: string
                      description: A link to the citation details of this node.
                      readOnly: true
                    comments:
                      type: string
                      description: A link to the list of comments on this node.
                      readOnly: true
                    contributors:
                      type: string
                      description: A link to the list of contributors on this node.
                      readOnly: true
                    draft_registrations:
                      type: string
                      description: A link to the list of registrations that have been
                        initiated from this node and are still in a draft state.
                      readOnly: true
                    files:
                      type: string
                      description: A link to the list of storage providers that have
                        been enabled on this node.
                      readOnly: true
                    forked_from:
                      type: string
                      description: "A link to the node which this node was forked\
                        \ from, if this node is a fork."
                      readOnly: true
                    forks:
                      type: string
                      description: A link to the list of nodes that are forks of this
                        node.
                      readOnly: true
                    identifiers:
                      type: string
                      description: A link to the list of identifiers for this node
                        (i.e. ARK and DOI identifiers).
                      readOnly: true
                    license:
                      type: string
                      description: A link to the license that has been applied to
                        this node.
                      readOnly: true
                    logs:
                      type: string
                      description: A link to the list of log actions pertaining to
                        this node.
                      readOnly: true
                    linked_nodes:
                      type: string
                      description: A link to the list of nodes that are linked to
                        the current node.
                      readOnly: true
                    node_links:
                      type: string
                      description: A link to the list of nodes that are linked to
                        the current node. This field is deprecated as of verson 2.1;
                        use the linked_nodes link instead.
                      readOnly: true
                    parent:
                      type: string
                      description: "A link to the node that is the direct parent of\
                        \ the current node, if the current node is a child node."
                      readOnly: true
                    preprints:
                      type: string
                      description: A link to the list of preprints that this node
                        relates to.
                      readOnly: true
                    registrations:
                      type: string
                      description: A link to the list of registrations that have been
                        created from this node.
                      readOnly: true
                    root:
                      type: string
                      description: "A link to the node that is the top-level parent\
                        \ of the current node. If the current node is the top-level\
                        \ node, the root is the current node."
                      readOnly: true
                    template_node:
                      type: string
                      description: "A link to the node that the current node was templated\
                        \ from, if the current node was created from a template."
                      readOnly: true
                    view_only_links:
                      type: string
                      description: A link to the list of view only links that have
                        been created for this node.
                      readOnly: true
                    wikis:
                      type: string
                      description: A link to the list of wiki pages for this node.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the node entity.
                links:
                  title: Links
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the node's page on the OSF.
                      format: URL
                      readOnly: true
                    self:
                      type: string
                      description: A link to the canonical API endpoint of this node.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the node entity.
                  readOnly: true
              example:
                data:
                  type: nodes
                  attributes:
                    title: An Excellent Project Title
                    category: software
        required: true
      responses:
        "201":
          description: Created
          content: {}
      x-response-schema: Node
      x-codegen-request-body-name: body
  /nodes/{node_id}/linked_nodes/:
    get:
      tags:
      - Nodes
      summary: List all linked nodes
      description: |-
        List of all nodes linked to the given node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/?filter[title]=reproducibility.

        Nodes may be filtered by their `title`, `category`, `description`, `public`, `registration`, or `tags`. `title`, `description`, and `category` are string fields and will be filteres using simple substring matching. `public`, `registration` are boolean and can be filtered using truthy values, such as `true`, `false`, `0`, `1`. `tags` is an array of simple strings.
      operationId: nodes_linked_nodes_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/comments/?filter%5Btarget%5D=bifc7
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/bifc7/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/bifc7/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/bifc7/
                    html: https://osf.io/bifc7/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: "This is an independent replication as part of the\
                      \ Reproducibility Project: Psychology."
                    current_user_permissions:
                    - read
                    date_modified: 2017-03-03T05:00:31.512000
                    title: "Replication of WA Cunningham, JJ Van Bavel, IR Johnsen\
                      \ (2008, PS 19(2))"
                    collection: false
                    registration: false
                    date_created: 2014-07-28T13:53:04.508000
                    current_user_can_comment: false
                    node_license: null
                    public: true
                    tags: []
                  type: nodes
                  id: bifc7
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/citation/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/identifiers/
                          meta: {}
                    forked_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/kxhz5/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/comments/?filter%5Btarget%5D=73pnd
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/registrations/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/logs/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/73pnd/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/73pnd/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/preprints/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/draft_registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/73pnd/
                    html: https://osf.io/73pnd/
                  attributes:
                    category: project
                    fork: true
                    preprint: false
                    description: null
                    current_user_permissions:
                    - read
                    date_modified: 2016-10-02T19:50:23.605000
                    title: "Replication of Hajcak &amp; Foti (2008, PS, Study 1)"
                    collection: false
                    registration: false
                    date_created: 2012-10-31T18:50:46.111000
                    current_user_can_comment: false
                    node_license:
                      copyright_holders:
                      - ""
                      year: "2016"
                    public: true
                    tags:
                    - anxiety
                    - EMG
                    - EEG
                    - motivation
                    - ERN
                  type: nodes
                  id: 73pnd
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Node
  /nodes/{node_id}/logs/:
    get:
      tags:
      - Nodes
      summary: List all logs
      description: |-
        A paginated list of all logs associated with a given node.

        The returned logs are sorted by their `date`, with the most recents logs appearing first.

        This list includes the logs of the specified node as well as the logs of that node's children to which the current user has read-only access.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 logs. Each resource in the array is a separate logs object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include logs that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/logs/?filter[action]=made_private.

        Nodes may be filtered by their `action`, and `date`.
      operationId: nodes_logs_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Log
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the log.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the log (`logs`)
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - action
                      - date
                      type: object
                      properties:
                        date:
                          type: string
                          description: "The date and time at which the log was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        action:
                          type: string
                          description: The type of action performed on the OSF. See
                            actions section for full list of possible actions.
                          readOnly: true
                        params:
                          title: Log Params
                          type: object
                          properties:
                            addon:
                              type: string
                              description: The addon associated with the connected
                                node.
                              readOnly: true
                            anonymous_link:
                              type: boolean
                              description: The view only link added to the node was
                                anonymous.
                              readOnly: true
                            bucket:
                              type: string
                              description: The Amazon s3 bucket connected to the connected
                                node.
                              readOnly: true
                            citation_name:
                              type: string
                              description: Name of citation associated with the connected
                                node.
                              readOnly: true
                            contributors:
                              type: string
                              description: List of contributors on the connected node
                                involved in the action represented by this node log.
                              readOnly: true
                            data_set:
                              type: string
                              description: The dataset associated with the connected
                                node.
                              readOnly: true
                            destination:
                              type: string
                              description: "A dictionary with information about the\
                                \ destination for the move of the item on the node\
                                \ associated with this log. Details include the path,\
                                \ url, addon, node_url and node_title."
                              readOnly: true
                            figshare_title:
                              type: string
                              description: Title of the fighshare project associated
                                with this node log
                              readOnly: true
                            forward_url:
                              type: string
                              description: URL that the connected node forwards to.
                              readOnly: true
                            github_user:
                              type: string
                              description: The github user involved with the action
                                represented by this node log.
                              readOnly: true
                            github_repo:
                              type: string
                              description: The github repository involved with the
                                action represented by this node log.
                              readOnly: true
                            file:
                              type: string
                              description: Dictionary with information about the file
                                involved with the log.
                              readOnly: true
                            filename:
                              type: string
                              description: Filename for the file associated with the
                                log.
                              readOnly: true
                            kind:
                              type: string
                              description: Kind of the object associated with the
                                log.
                              readOnly: true
                            folder:
                              type: string
                              description: Folder associated with the log.
                              readOnly: true
                            folder_name:
                              type: string
                              description: Name of the folder associated with the
                                log.
                              readOnly: true
                            license:
                              type: string
                              description: License for the associated node.
                              readOnly: true
                            identifiers:
                              type: string
                              description: Dictionary containing the DOI and ARK ID
                                for a preprint associated with the log.
                              readOnly: true
                            institution:
                              type: string
                              description: Dictionary containing the ID and Name of
                                the institution associated with the log.
                              readOnly: true
                            old_page:
                              type: string
                              description: Old name of wiki page for a wiki rename
                                log action.
                              readOnly: true
                            page:
                              type: string
                              description: Current name of wiki page for rename log
                                action.
                              readOnly: true
                            page_id:
                              type: string
                              description: Primary key of the wiki page associated
                                with the log.
                              readOnly: true
                            params_node:
                              type: string
                              description: Node that is refered to in the params of
                                the log.
                              readOnly: true
                            params_project:
                              type: string
                              description: Project that is refered to in the params
                                of the log.
                              readOnly: true
                            path:
                              type: string
                              description: Path for a file associated with the log.
                              readOnly: true
                            pointer:
                              type: string
                              description: A dictionary with information about the
                                node that is linked to the associated node.
                              readOnly: true
                            preprint:
                              type: string
                              description: Preprint related to the associated node.
                              readOnly: true
                            preprint_provider:
                              type: string
                              description: Preprint provider for the associated node.
                              readOnly: true
                            previous_institution:
                              type: string
                              description: "If a primary institution for the associated\
                                \ node is changed, this will show the previous institution."
                              readOnly: true
                            source:
                              type: string
                              description: "A dictionary with information about the\
                                \ source of a move related event for a log. Details\
                                \ include the path, url, addon, node_url and node_title."
                              readOnly: true
                            study:
                              type: string
                              description: Dataverse study linked to the associated
                                node.
                              readOnly: true
                            tag:
                              type: string
                              description: Tag associated with the associated node.
                              readOnly: true
                            tags:
                              type: string
                              description: Tags associated with the associated node.
                              readOnly: true
                            target:
                              type: string
                              description: "A dictionary containing details about\
                                \ the target of the log. Details include the path,\
                                \ url, addon, node_url and node_title."
                              readOnly: true
                            template_node:
                              type: string
                              description: A dictionary containing information about
                                the node that was used as a template for the associated
                                node.
                              readOnly: true
                            title_new:
                              type: string
                              description: The new title for the associated node.
                              readOnly: true
                            title_original:
                              type: string
                              description: The original title for the associated node
                              readOnly: true
                            updated_fields:
                              type: string
                              description: A dictionary containing all of the fields
                                updated on the associated node.
                              readOnly: true
                            urls:
                              type: string
                              description: Links to access information about the file
                                associated with this log.
                              readOnly: true
                            version:
                              type: string
                              description: Version of the wiki page associated with
                                this log.
                              readOnly: true
                            wiki:
                              type: string
                              description: A dictionary with information about the
                                wiki page associated with the log.
                              readOnly: true
                          description: The type of action performed on the OSF. See
                            description for full list of possible actions.
                          readOnly: true
                      description: The properties of the log.
                      readOnly: true
                    relationships:
                      title: Relationships
                      required:
                      - node
                      type: object
                      properties:
                        node:
                          type: string
                          description: A relationship to the node associated with
                            this log.
                          readOnly: true
                        original_node:
                          type: string
                          description: "A relationship to the original node that was\
                            \ associated with this log, in case this log was copied\
                            \ from a node to a fork or registration."
                          readOnly: true
                        user:
                          type: string
                          description: A relationship to the user who performed the
                            log action.
                          readOnly: true
                        linked_node:
                          type: string
                          description: A relationship to the node linked to this log.
                          readOnly: true
                        template_node:
                          type: string
                          description: A relationship to the node used as a template
                            for this log.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the log.
                      readOnly: true
                    links:
                      title: Links
                      required:
                      - self
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the log.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the log
                        entity.
                      readOnly: true
                  example:
                    data:
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        original_node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        user:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/jk5cv/
                              meta: {}
                      links:
                        self: https://api.osf.io/v2/logs/4fc706a80b6e9118ef000122/
                      attributes:
                        date: 2012-05-31T05:50:32.083000
                        action: contributor_added
                        params:
                          params_node:
                            id: ezcuj
                            title: "Reproducibility Project: Psychology"
                          contributors:
                          - family_name: Nosek
                            middle_names: A.
                            given_name: Brian
                            full_name: Brian A. Nosek
                            active: true
                            id: cdi38
                      type: logs
                      id: 4fc706a80b6e9118ef000122
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/fejxb/
                          meta: {}
                    original_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/fejxb/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/2z47w/
                          meta: {}
                    linked_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/iraqy/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/logs/58862f8f594d9001f547f484/
                  attributes:
                    date: 2017-01-23T16:30:07.321000
                    action: pointer_created
                    params:
                      preprint_provider: null
                      params_node:
                        id: fejxb
                        title: "Replication of Correll (2008, JPSP, Study 2)"
                      pointer:
                        url: /iraqy/
                        category: project
                        id: iraqy
                        title: "Independent Direct Replication #2 of Correll (2008,\
                          \ JPSP, Study 2)"
                      params_project: null
                      contributors: []
                  type: logs
                  id: 58862f8f594d9001f547f484
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/rtjws/
                          meta: {}
                    original_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/rtjws/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/logs/5873190554be8101d7e30b3e/
                  attributes:
                    date: 2017-01-09T05:00:53.761000
                    action: project_registered
                    params:
                      preprint_provider: null
                      params_node:
                        id: rtjws
                        title: Analysis Audit
                      params_project: null
                      contributors: []
                  type: logs
                  id: 5873190554be8101d7e30b3e
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta: null
                  total: 2
                  per_page: 10
      x-response-schema: Log
  /nodes/{node_id}/preprints/:
    get:
      tags:
      - Nodes
      summary: List all preprints
      description: |-
        A paginated list of preprints related to a given node. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.

        **Note: This API endpoint is under active development, and is subject to change in the future.**
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 preprints. Each resource in the array is a separate preprint object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: nodes_preprints_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Preprint
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the preprint entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the preprint entity (`preprints`).
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        date_created:
                          type: string
                          description: "The time at which the preprint was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the preprint was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_published:
                          type: string
                          description: "The time at which the preprint was published,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        doi:
                          type: string
                          description: "The DOI of the associated journal article,\
                            \ as entered by the user, if the preprint is published."
                        is_preprint_orphan:
                          type: boolean
                          description: Whether or not the preprint is orphaned. A
                            preprint can be orphaned if it's primary file was removed
                            from the preprint node. This field may be deprecated in
                            future versions.
                          readOnly: true
                        license_record:
                          type: string
                          description: "The metadata (copyright year and holder) associated\
                            \ with a license, required for certain licenses."
                        subjects:
                          type: array
                          description: "A nested array structure that describe subjects\
                            \ related to the preprint, in the BePress taxonomy. Each\
                            \ dictionary contains the text and ID of a subject."
                          items:
                            type: string
                      description: The properties of the preprint entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - primary_file
                      - provider
                      type: object
                      properties:
                        citation:
                          type: string
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A relationship to the identifiers associated
                            with the preprint.
                          readOnly: true
                        license:
                          type: string
                          description: A relationship to the license that has been
                            applied to the preprint.
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                        primary_file:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                        provider:
                          type: string
                          description: "A relationship to the preprint provider under\
                            \ which the preprint was created (OSF, socarxiv, psyarxiv,\
                            \ etc.)."
                        bibliographic_contributors:
                          type: string
                          description: A relationship to the bibliographic contributors
                            that are listed as contributing to this preprint.
                      description: URLs to other entities or entity collections that
                        have a relationship to the preprint entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        doi:
                          type: string
                          description: The URL representation of the DOI entered by
                            the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                        html:
                          type: string
                          description: "A link to the project on the OSF that was\
                            \ created for the preprint, or from which the preprint\
                            \ was created."
                          format: URL
                          readOnly: true
                        preprint_doi:
                          type: string
                          description: The URL representation of the OSF assigned
                            DOI for the preprint.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the preprint
                        entity.
                      readOnly: true
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            type: nodes
                            id: "{node_id}"
                        primary_file:
                          data:
                            type: primary_files
                            id: "{primary_file_id}"
                        provider:
                          data:
                            type: providers
                            id: "{preprint_provider_id}"
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bnzx5/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/khbvy/citation/
                          meta: {}
                    primary_file:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/57c44b1e594d90004a421ab1/
                          meta: {}
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprints/khbvy/
                    html: https://osf.io/khbvy/
                    doi: https://dx.doi.org/10.1371/journal.pbio.1002456
                  attributes:
                    doi: 10.1371/journal.pbio.1002456
                    license_record: null
                    date_modified: 2016-08-29T14:53:51.185000
                    is_preprint_orphan: false
                    date_published: 2016-08-29T14:53:51.185000
                    subjects:
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: "Public Affairs, Public Policy and Public Administration"
                        id: 584240da54be81056cecaab8
                      - text: Science and Technology Policy
                        id: 584240d954be81056cecaa10
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Library and Information Science
                        id: 584240da54be81056cecab33
                      - text: Scholarly Publishing
                        id: 584240db54be81056cecacd2
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Psychology
                        id: 584240da54be81056cecac68
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Psychology
                        id: 584240da54be81056cecac68
                    date_created: 2016-08-29T14:53:51.185000
                    is_published: true
                  type: preprints
                  id: khbvy
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Preprint
  /nodes/{node_id}/registrations/:
    get:
      tags:
      - Nodes
      summary: List all registrations
      description: |-
        List of all registrations of the given node.
        #### Returns

        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 registrations. Each resource in the array is a separate registrations object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering

        You can optionally request that the response only include registrations that match your filters by utilizing the filter query parameter, e.g. https://api.osf.io/v2/registrations/?filter[title]=open.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.
      operationId: nodes_registrations_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Registration
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the registration.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the registration entity
                        (`registrations`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        category:
                          type: string
                          description: The category of the registered node.
                          readOnly: true
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        collection:
                          type: boolean
                          description: Whether or not this registration represents
                            a collection. This value should always be `false`. This
                            field may be deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this registration. Comments on registrations
                            can be set to allow all users to comment or restricted
                            to only contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this registration. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the registered node was\
                            \ created, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the registered node was\
                            \ last modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_registered:
                          type: string
                          description: "The time at which this registration was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_withdrawn:
                          type: string
                          description: "The time at which this registration was withdrawn,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the registered node.
                          readOnly: true
                        embargo_end_date:
                          type: string
                          description: "The time at which the embargo on this registration\
                            \ will be lifted and the registration will become public,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        fork:
                          type: boolean
                          description: Whether or not this registration represents
                            a fork of another node.
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the registered node license
                            (required for certain license types).
                          readOnly: true
                        pending_embargo_approval:
                          type: boolean
                          description: Whether or not the embargo associated with
                            this registration is pending approval from project administrators.
                          readOnly: true
                        pending_registration_approval:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval from project administrators.
                          readOnly: true
                        pending_withdrawal:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval for withdrawal from project administrators.
                          readOnly: true
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the registration is publicly
                            visible.
                        registration:
                          type: boolean
                          description: Whether or not this is a registration. This
                            value should always be `true`. This field may be deprecated
                            in future versions.
                          readOnly: true
                        registered_meta:
                          type: string
                          description: A dictionary with supplemental registration
                            questions and responses.
                          readOnly: true
                        registration_supplement:
                          type: string
                          description: The title of the registration schema this registration
                            conforms to.
                          readOnly: true
                        tags:
                          type: array
                          description: A list of strings that describe the registered
                            node.
                          readOnly: true
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which the registered\
                            \ node was templated, if the registered node was created\
                            \ from a template."
                          readOnly: true
                        title:
                          type: string
                          description: The title of the registered node.
                          readOnly: true
                        withdrawn:
                          type: boolean
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                        withdrawal_justification:
                          type: string
                          description: "The reasoning for why this registration was\
                            \ withdrawn, as entered by the administrator that initiated\
                            \ the withdrawal."
                          readOnly: true
                      description: The properties of the registration entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this registration
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of the registered node's
                            children (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this registration.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this registration.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            registration.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this registration.
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this registration.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this registration.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current registration, if the current registration\
                            \ is a child registration."
                          readOnly: true
                        registered_by:
                          type: string
                          description: A link to the user that initiated this registration.
                          readOnly: true
                        registered_from:
                          type: string
                          description: A link to the node that this registration was
                            registered from.
                          readOnly: true
                        registration_schema:
                          type: string
                          description: A link to the metaschema that this registration
                            conforms to.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current registration. If the current registration\
                            \ is the top-level node, the root is the current registration."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this registration.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the registration entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            registration.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the registrations
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: registrations
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        registration_choice: embargo
                        lift_embargo: 2017-05-10T20:44:03.185000
            application/json:
              example:
                data:
                  relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/citation/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2be/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/logs/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/comments/?filter%5Btarget%5D=esa63
                          meta: {}
                    registered_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/dpfyv/
                          meta: {}
                    linked_registrations:
                      links:
                        self:
                          href: https://api.osf.io/v2/registrations/esa63/relationships/linked_registrations/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/linked_registrations/
                          meta: {}
                    registered_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/ztdnp/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/registrations/esa63/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/children/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/esa63/
                    html: https://osf.io/esa63/
                  attributes:
                    registration_supplement: Open-Ended Registration
                    pending_embargo_approval: false
                    registration: true
                    embargo_end_date: null
                    withdrawn: false
                    withdrawal_justification: null
                    category: project
                    preprint: false
                    current_user_permissions:
                    - read
                    title: How Awareness Impacts Multiple Forms of Social Bias in
                      Behavior (Final Data Collection and Analysis Plan)
                    registered_meta:
                      summary:
                        comments: []
                        value: This pre-registration is an updated data collection
                          and analysis plan. See https://osf.io/ptcqw/ for original
                          data collection rule and https://osf.io/8jyu8/ for original
                          analysis plan. We are collecting more data given that results
                          after original data collection were inconclusive.
                        extra: []
                    public: true
                    fork: false
                    description: ""
                    tags: []
                    collection: false
                    current_user_can_comment: true
                    pending_registration_approval: false
                    date_modified: 2017-02-12T19:22:26.488000
                    date_registered: 2017-02-12T19:28:48.864000
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/esa63/node_links/
                          meta: {}
                    date_created: 2017-02-12T18:45:55.063000
                    pending_withdrawal: false
                    node_license: null
                  type: registrations
                  id: esa63
      x-response-schema: Registration
  /nodes/{node_id}/view_only_links/:
    get:
      tags:
      - Nodes
      summary: List all view only links
      description: |-
        List of view only links on a node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 view only links. Each resource in the array is a view only link object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Permissions

        View only links on a node, public or private, are readable and writeable only by users that are administrators on the node.

        #### Filtering

        You can optionally request that the response only include view only links that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/nodes/ezcuj/view_only_links/?filter[anonymous]=true.

        View Only Links may be filtered based on their `name`, `anonymous` and `date_created` fields. Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: nodes_view_only_links_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: view-only-links
                  required:
                  - attributes
                  - id
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the view only link.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the view only link ('view-only-links').
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        date_created:
                          type: string
                          description: "The time at which the view only link was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        anonymous:
                          type: boolean
                          description: Whether or not the view only link has anonymized
                            contributors
                          default: true
                        name:
                          type: string
                          description: The name of the view only link
                          default: Shared project link
                        key:
                          type: string
                          description: The view only key
                          readOnly: true
                      description: The properties of the view only link entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      required:
                      - creator
                      - nodes
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes which this view
                            only link gives read-only access to.
                          format: URL
                        creator:
                          type: string
                          description: A relationship to the user who created this
                            view only link.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the view only link entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        self:
                          href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/relationships/nodes/
                          meta: {}
                        related:
                          href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/nodes/
                          meta: {}
                    creator:
                      links:
                        related:
                          href: http://api.osf.io/v2/users/4xpu9/
                          meta: {}
                  links:
                    self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d03846a170c50025baae61/
                  attributes:
                    date_created: 2017-03-20T20:15:02.488643
                    anonymous: false
                    key: c1df490be3294a9bac01ff05c4097ab7
                    name: vol name
                  type: view_only_links
                  id: 58d03846a170c50025baae61
                - relationships:
                    nodes:
                      links:
                        self:
                          href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/relationships/nodes/
                          meta: {}
                        related:
                          href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/nodes/
                          meta: {}
                    creator:
                      links:
                        related:
                          href: http://api.osf.io/v2/users/4xpu9/
                          meta: {}
                  links:
                    self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d13827a170c50025baae6e/
                  attributes:
                    date_created: 2017-03-21T14:26:47.507504
                    anonymous: false
                    key: 9794ac36085e4d7086ff4dab49daf1cb
                    name: vol name
                  type: view_only_links
                  id: 58d13827a170c50025baae6e
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta: null
                  total: 2
                  per_page: 10
      x-response-schema: View Only Link
  /nodes/{node_id}/view_only_links/{link_id}/:
    get:
      tags:
      - Nodes
      summary: Retrieve a view only link
      description: |-
        Retrieves the details of a view only link on a node.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Permissions

        View only links on a node, public or private, are readable and writeable only by users that are administrators on the node.
      operationId: nodes_view_only_links_read
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      - name: link_id
        in: path
        description: The unique identifier of the view only link.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: view-only-links
                required:
                - attributes
                - id
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the view only link.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the view only link ('view-only-links').
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      date_created:
                        type: string
                        description: "The time at which the view only link was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      anonymous:
                        type: boolean
                        description: Whether or not the view only link has anonymized
                          contributors
                        default: true
                      name:
                        type: string
                        description: The name of the view only link
                        default: Shared project link
                      key:
                        type: string
                        description: The view only key
                        readOnly: true
                    description: The properties of the view only link entity.
                    readOnly: true
                  relationships:
                    title: Relationships
                    required:
                    - creator
                    - nodes
                    type: object
                    properties:
                      nodes:
                        type: string
                        description: A relationship to the nodes which this view only
                          link gives read-only access to.
                        format: URL
                      creator:
                        type: string
                        description: A relationship to the user who created this view
                          only link.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the view only link entity.
                    readOnly: true
            application/json:
              example: null
      x-response-schema: View Only Link
  /nodes/{node_id}/wikis/:
    get:
      tags:
      - Nodes
      summary: List all wikis
      description: |-
        List of wiki pages on a node.
        #### Returns
        Paginated list of the node's current wiki page versions ordered by their date_modified. Each resource contains the full representation of the wiki, meaning additional requests to an individual wiki's detail view are not necessary.

        Note that if an anonymous view_only key is being used, the user relationship will not be exposed.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        Wiki pages can be filtered based on their `name` and `date_modified` fields.
        + `filter[name]=<Str>` -- filter wiki pages by name
        + `filter[date_modified][comparison_operator]=YYYY-MM-DDTH:M:S` -- filter wiki pages based on date modified.

        Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: nodes_wikis_list
      parameters:
      - name: node_id
        in: path
        description: The unique identifier of the node.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Wiki
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the wiki.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the wiki (`wikis`).
                    attributes:
                      title: Attributes
                      required:
                      - content_type
                      - current_user_can_comment
                      - date_modified
                      - extra
                      - kind
                      - materialized_path
                      - name
                      - path
                      - size
                      type: object
                      properties:
                        date_modified:
                          type: string
                          description: "The date and time at which the wiki was last\
                            \ modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        kind:
                          type: string
                          description: The type of object.
                          readOnly: true
                        name:
                          type: string
                          description: The name/title of the wiki page.
                          readOnly: true
                        extra:
                          type: string
                          description: "A dictionary containing additional metadata\
                            \ about this wiki, including version information."
                          readOnly: true
                        content_type:
                          type: string
                          description: Content type of the wiki (`text/markdown`).
                          readOnly: true
                        path:
                          type: string
                          description: Path to the wiki object.
                          readOnly: true
                        current_user_can_comment:
                          type: string
                          description: Whether the current user is allowed to post
                            comments on this wiki.
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Materialized path to the wiki object.
                          readOnly: true
                        size:
                          type: string
                          description: Size of the wiki.
                          readOnly: true
                      description: The properties of the wiki.
                    relationships:
                      title: Relationships
                      required:
                      - comments
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: A relationship to the associated node.
                        user:
                          type: string
                          description: A relationship to the user associated with
                            this wiki.
                        comments:
                          type: string
                          description: A relationship to the comments related to this
                            wiki.
                      description: URLs to other entities or entity collections that
                        have a relationship to the wiki.
                    links:
                      title: Links
                      type: object
                      properties:
                        download:
                          type: string
                          description: The URL to download the content of the wiki.
                          format: URL
                          readOnly: true
                        info:
                          type: string
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the wiki.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/tvyxz/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/5k3hq/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/tvyxz/comments/?filter%5Btarget%5D=zveyb
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/wikis/zveyb/
                    download: https://api.osf.io/v2/wikis/zveyb/content/
                    self: https://api.osf.io/v2/wikis/zveyb/
                  attributes:
                    kind: file
                    name: home
                    date_modified: 2017-02-16T15:45:57.671957
                    extra:
                      version: 47
                    content_type: text/markdown
                    path: /zveyb
                    current_user_can_comment: true
                    materialized_path: /zveyb
                    size: 552
                  type: wikis
                  id: xu77p
                links:
                  first: ""
                  last: https://api.osf.io/v2/wikis/zveyb/?page=2
                  prev: ""
                  next: https://api.osf.io/v2/wikis/zveyb/?page=2
                  meta:
                    total: 12
                    per_page: 10
      x-response-schema: Wiki
  /preprints/:
    get:
      tags:
      - Preprints
      summary: List all preprints
      description: |2-

        A paginated list of preprints from all preprint providers. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprints. Each resource in the array is a separate preprint object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprints/?filter[provider]=socarxiv.

        Preprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.
      operationId: preprints_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Preprint
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the preprint entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the preprint entity (`preprints`).
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        date_created:
                          type: string
                          description: "The time at which the preprint was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the preprint was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_published:
                          type: string
                          description: "The time at which the preprint was published,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        doi:
                          type: string
                          description: "The DOI of the associated journal article,\
                            \ as entered by the user, if the preprint is published."
                        is_preprint_orphan:
                          type: boolean
                          description: Whether or not the preprint is orphaned. A
                            preprint can be orphaned if it's primary file was removed
                            from the preprint node. This field may be deprecated in
                            future versions.
                          readOnly: true
                        license_record:
                          type: string
                          description: "The metadata (copyright year and holder) associated\
                            \ with a license, required for certain licenses."
                        subjects:
                          type: array
                          description: "A nested array structure that describe subjects\
                            \ related to the preprint, in the BePress taxonomy. Each\
                            \ dictionary contains the text and ID of a subject."
                          items:
                            type: string
                      description: The properties of the preprint entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - primary_file
                      - provider
                      type: object
                      properties:
                        citation:
                          type: string
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A relationship to the identifiers associated
                            with the preprint.
                          readOnly: true
                        license:
                          type: string
                          description: A relationship to the license that has been
                            applied to the preprint.
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                        primary_file:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                        provider:
                          type: string
                          description: "A relationship to the preprint provider under\
                            \ which the preprint was created (OSF, socarxiv, psyarxiv,\
                            \ etc.)."
                        bibliographic_contributors:
                          type: string
                          description: A relationship to the bibliographic contributors
                            that are listed as contributing to this preprint.
                      description: URLs to other entities or entity collections that
                        have a relationship to the preprint entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        doi:
                          type: string
                          description: The URL representation of the DOI entered by
                            the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                        html:
                          type: string
                          description: "A link to the project on the OSF that was\
                            \ created for the preprint, or from which the preprint\
                            \ was created."
                          format: URL
                          readOnly: true
                        preprint_doi:
                          type: string
                          description: The URL representation of the OSF assigned
                            DOI for the preprint.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the preprint
                        entity.
                      readOnly: true
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            type: nodes
                            id: "{node_id}"
                        primary_file:
                          data:
                            type: primary_files
                            id: "{primary_file_id}"
                        provider:
                          data:
                            type: providers
                            id: "{preprint_provider_id}"
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/5xuck/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/hqb2p/citation/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/hqb2p/identifiers/
                          meta: {}
                    primary_file:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/5894204f594d900200ed23f2/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/socarxiv/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprints/hqb2p/
                    html: https://osf.io/preprints/socarxiv/hqb2p/
                    preprint_doi: https://dx.doi.org/10.5072/FK2OSF.IO/HQB2P
                  attributes:
                    doi: null
                    license_record:
                      copyright_holders: []
                      year: "2017"
                    date_modified: 2017-02-03T06:19:00.158000
                    is_preprint_orphan: false
                    date_published: 2017-02-03T06:18:59.788000
                    subjects:
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Political Science
                        id: 584240da54be81056cecac1a
                    date_created: 2017-02-03T06:16:57.129000
                    is_published: true
                  type: preprints
                  id: hqb2p
                links:
                  first: null
                  last: https://api.osf.io/v2/preprints/?page=172
                  prev: null
                  next: https://api.osf.io/v2/preprints/?page=2
                  meta:
                    total: 1720
                    per_page: 10
      x-response-schema: Preprint
    post:
      tags:
      - Preprints
      summary: Create a preprint
      description: |-
        Creates a new preprint.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the created preprint, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: preprints_create
      requestBody:
        content:
          application/json:
            schema:
              title: Preprint
              required:
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The identifier of the preprint entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the preprint entity (`preprints`).
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    date_created:
                      type: string
                      description: "The time at which the preprint was created, as\
                        \ an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the preprint was last modified,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_published:
                      type: string
                      description: "The time at which the preprint was published,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    doi:
                      type: string
                      description: "The DOI of the associated journal article, as\
                        \ entered by the user, if the preprint is published."
                    is_preprint_orphan:
                      type: boolean
                      description: Whether or not the preprint is orphaned. A preprint
                        can be orphaned if it's primary file was removed from the
                        preprint node. This field may be deprecated in future versions.
                      readOnly: true
                    license_record:
                      type: string
                      description: "The metadata (copyright year and holder) associated\
                        \ with a license, required for certain licenses."
                    subjects:
                      type: array
                      description: "A nested array structure that describe subjects\
                        \ related to the preprint, in the BePress taxonomy. Each dictionary\
                        \ contains the text and ID of a subject."
                      items:
                        type: string
                  description: The properties of the preprint entity.
                relationships:
                  title: Relationships
                  required:
                  - node
                  - primary_file
                  - provider
                  type: object
                  properties:
                    citation:
                      type: string
                      description: A relationship to the citation of the preprint.
                      readOnly: true
                    identifiers:
                      type: string
                      description: A relationship to the identifiers associated with
                        the preprint.
                      readOnly: true
                    license:
                      type: string
                      description: A relationship to the license that has been applied
                        to the preprint.
                    node:
                      type: string
                      description: "A relationship to the node that was created for\
                        \ the preprint, or from which the preprint was created."
                    primary_file:
                      type: string
                      description: "A relationship to the file that is designated\
                        \ as the preprint's primary file, or the manuscript of the\
                        \ preprint."
                    provider:
                      type: string
                      description: "A relationship to the preprint provider under\
                        \ which the preprint was created (OSF, socarxiv, psyarxiv,\
                        \ etc.)."
                    bibliographic_contributors:
                      type: string
                      description: A relationship to the bibliographic contributors
                        that are listed as contributing to this preprint.
                  description: URLs to other entities or entity collections that have
                    a relationship to the preprint entity.
                links:
                  title: Links
                  type: object
                  properties:
                    doi:
                      type: string
                      description: The URL representation of the DOI entered by the
                        user for the preprint manuscript.
                      format: URL
                      readOnly: true
                    html:
                      type: string
                      description: "A link to the project on the OSF that was created\
                        \ for the preprint, or from which the preprint was created."
                      format: URL
                      readOnly: true
                    preprint_doi:
                      type: string
                      description: The URL representation of the OSF assigned DOI
                        for the preprint.
                      format: URL
                      readOnly: true
                    self:
                      type: string
                      description: A link to the detail page for the preprint.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the preprint
                    entity.
                  readOnly: true
              example:
                data:
                  attributes: {}
                  relationships:
                    node:
                      data:
                        type: nodes
                        id: "{node_id}"
                    primary_file:
                      data:
                        type: primary_files
                        id: "{primary_file_id}"
                    provider:
                      data:
                        type: providers
                        id: "{preprint_provider_id}"
        required: true
      responses:
        "201":
          description: Success
          content: {}
      x-response-schema: Preprint
      x-codegen-request-body-name: data
  /preprints/{preprint_id}/:
    get:
      tags:
      - Preprints
      summary: Retrieve a preprint
      description: |-
        Retrieves the details of a preprint.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested preprint, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprints_read
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the preprint.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Preprint
                required:
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the preprint entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the preprint entity (`preprints`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      date_created:
                        type: string
                        description: "The time at which the preprint was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the preprint was last modified,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_published:
                        type: string
                        description: "The time at which the preprint was published,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      doi:
                        type: string
                        description: "The DOI of the associated journal article, as\
                          \ entered by the user, if the preprint is published."
                      is_preprint_orphan:
                        type: boolean
                        description: Whether or not the preprint is orphaned. A preprint
                          can be orphaned if it's primary file was removed from the
                          preprint node. This field may be deprecated in future versions.
                        readOnly: true
                      license_record:
                        type: string
                        description: "The metadata (copyright year and holder) associated\
                          \ with a license, required for certain licenses."
                      subjects:
                        type: array
                        description: "A nested array structure that describe subjects\
                          \ related to the preprint, in the BePress taxonomy. Each\
                          \ dictionary contains the text and ID of a subject."
                        items:
                          type: string
                    description: The properties of the preprint entity.
                  relationships:
                    title: Relationships
                    required:
                    - node
                    - primary_file
                    - provider
                    type: object
                    properties:
                      citation:
                        type: string
                        description: A relationship to the citation of the preprint.
                        readOnly: true
                      identifiers:
                        type: string
                        description: A relationship to the identifiers associated
                          with the preprint.
                        readOnly: true
                      license:
                        type: string
                        description: A relationship to the license that has been applied
                          to the preprint.
                      node:
                        type: string
                        description: "A relationship to the node that was created\
                          \ for the preprint, or from which the preprint was created."
                      primary_file:
                        type: string
                        description: "A relationship to the file that is designated\
                          \ as the preprint's primary file, or the manuscript of the\
                          \ preprint."
                      provider:
                        type: string
                        description: "A relationship to the preprint provider under\
                          \ which the preprint was created (OSF, socarxiv, psyarxiv,\
                          \ etc.)."
                      bibliographic_contributors:
                        type: string
                        description: A relationship to the bibliographic contributors
                          that are listed as contributing to this preprint.
                    description: URLs to other entities or entity collections that
                      have a relationship to the preprint entity.
                  links:
                    title: Links
                    type: object
                    properties:
                      doi:
                        type: string
                        description: The URL representation of the DOI entered by
                          the user for the preprint manuscript.
                        format: URL
                        readOnly: true
                      html:
                        type: string
                        description: "A link to the project on the OSF that was created\
                          \ for the preprint, or from which the preprint was created."
                        format: URL
                        readOnly: true
                      preprint_doi:
                        type: string
                        description: The URL representation of the OSF assigned DOI
                          for the preprint.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the preprint.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the preprint
                      entity.
                    readOnly: true
                example:
                  data:
                    attributes: {}
                    relationships:
                      node:
                        data:
                          type: nodes
                          id: "{node_id}"
                      primary_file:
                        data:
                          type: primary_files
                          id: "{primary_file_id}"
                      provider:
                        data:
                          type: providers
                          id: "{preprint_provider_id}"
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bnzx5/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/khbvy/citation/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/khbvy/identifiers/
                          meta: {}
                    primary_file:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/57c44b1e594d90004a421ab1/
                          meta: {}
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/
                          meta: {}
                    bibliographic_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/khbvy/bibliographic_contributors
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprints/khbvy/
                    html: https://osf.io/khbvy/
                    doi: https://dx.doi.org/10.1371/journal.pbio.1002456
                    preprint_doi: https://dx.doi.org/10.5072/FK2OSF.IO/KHBVY
                  attributes:
                    doi: 10.1371/journal.pbio.1002456
                    license_record: null
                    date_modified: 2016-08-29T14:53:51.185000
                    is_preprint_orphan: false
                    date_published: 2016-08-29T14:53:51.185000
                    subjects:
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: "Public Affairs, Public Policy and Public Administration"
                        id: 584240da54be81056cecaab8
                      - text: Science and Technology Policy
                        id: 584240d954be81056cecaa10
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Library and Information Science
                        id: 584240da54be81056cecab33
                      - text: Scholarly Publishing
                        id: 584240db54be81056cecacd2
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Psychology
                        id: 584240da54be81056cecac68
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Psychology
                        id: 584240da54be81056cecac68
                    date_created: 2016-08-29T14:53:51.185000
                    is_published: true
                  type: preprints
                  id: khbvy
      x-response-schema: Preprint
    patch:
      tags:
      - Preprints
      summary: Update a preprint
      description: |-
        Updates the specified preprint by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated preprint, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: preprints_partial_update
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the preprint.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: "{preprint_id}"
                  attributes:
                    doi: "{doi}"
                  relationships:
                    primary_file:
                      data:
                        type: primary_files
                        id: "{file_id}"
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-response-schema: Preprint
      x-codegen-request-body-name: data
  /preprints/{preprint_id}/citation/:
    get:
      tags:
      - Preprints
      summary: Retrieve citation details
      description: |-
        The citation details for a preprint, in CSL format.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the details necessary for the preprint citation.
      operationId: preprints_citation_list
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the preprint whose citation you wish
          to retrieve.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                title: Citation Detail
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the entity being cited.
                    readOnly: true
                  type:
                    type: string
                    description: "The type identifier of the citation entity (either\
                      \ `node-citation`, `preprint-citation`, or `registration-citation`)."
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      author:
                        type: string
                        description: "The list of bibliographic authors, represented\
                          \ as dictionaries of their given and family names, for the\
                          \ entitiy being cited."
                        readOnly: true
                      doi:
                        type: string
                        description: "The DOI for the entity being cited, if one exists."
                        readOnly: true
                      publisher:
                        type: string
                        description: "The publisher of the entity being cited. For\
                          \ nodes and registrations, the publisher is the 'Open Science\
                          \ Framework'. For preprints, the publisher is the same as\
                          \ the preprint provider."
                        readOnly: true
                      title:
                        type: string
                        description: The title of the entity being cited.
                        readOnly: true
                    description: The properties of the citation entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the entity that is being cited.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the citation
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links:
                    self: osf.io/khbvy
                  attributes:
                    publisher: Open Science Framework
                    author:
                    - given: Mallory
                      family: Kidwell
                    - given: Ljiljana B
                      family: Lazarevic
                    - given: Erica
                      family: Baranski
                    - given: Tom E
                      family: Hardwicke
                    - given: Sarah
                      family: Piechowski
                    - given: Lina-Sophia
                      family: Falkenberg
                    - given: Curtis A
                      family: Kennett
                    - given: Agnieszka
                      family: Slowik
                    - given: Carina
                      family: Sonnleitner
                    - given: Chelsey L
                      family: Hess-Holden
                    - given: Timothy M
                      family: Errington
                    - given: Susann
                      family: Fiedler
                    - given: Brian A
                      family: Nosek
                    type: webpage
                    title: "Badges to Acknowledge Open Practices: A Simple, Low-Cost,\
                      \ Effective Method for Increasing Transparency"
                  type: preprint-citation
                  id: khbvy
      x-response-schema: Citation Detail
  /preprints/{preprint_id}/citation/{style_id}/:
    get:
      tags:
      - Preprints
      summary: Retrieve a styled citation
      description: |-
        The citation for a preprint in a specific style.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the preprint citation, in the requested style.
      operationId: preprints_citation_read
      parameters:
      - name: style_id
        in: path
        description: The unique identifier of the citation style.
        required: true
        schema:
          type: string
      - name: preprint_id
        in: path
        description: The unique identifier of the preprint.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                title: Styled Citation
                type: object
                properties:
                  id:
                    type: string
                    description: "The identifier of the citation style, e.g. APA."
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the citation style entity
                      (`styled-citations`).
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      citation:
                        type: string
                        description: The complete entity citation in the requested
                          style.
                        readOnly: true
                    description: The properties of the citation style entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links: {}
                  attributes:
                    citation: "Kidwell, M., Lazarevic, L. B., Baranski, E., Hardwicke,\
                      \ T. E., Piechowski, S., Falkenberg, L.-S., … Nosek, B. A. (2016,\
                      \ August 29). Badges to Acknowledge Open Practices: A Simple,\
                      \ Low-Cost, Effective Method for Increasing Transparency. http://doi.org/10.1371/journal.pbio.1002456"
                  type: styled-citations
                  id: apa
      x-response-schema: Styled Citation
  /preprints/{preprint_id}/contributors/:
    get:
      tags:
      - Preprints
      summary: List all Contributors for a Preprint
      description: |-
        A paginated list of the Preprint's Contributors, sorted by their index.

        Contributors are users who can make changes to the Preprint. Contributors with WRITE permissions may edit preprint details, and ADMIN Contributors may add or remove other Contributors.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of Contributors, the user relationship will not be exposed and the Contributor ID will be an empty string.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 contributors. Each resource in the array contains the full representation of the contributor, meaning additional requests to a contributor's detail view are not necessary. Additionally, the full representation of the user this contributor represents is automatically embedded within the `data` key of the response.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include contributors that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprints/y9jdt/contributors/?filter[bibliographic]=true.

        Contributors may be filtered by their `bibliographic` and `permission` attributes.
      operationId: preprints_contributors_list
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the preprint.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Contributor
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the contributor entity. Contributor\
                        \ identifiers have the form {preprint_id}-{user_id}."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        bibliographic:
                          type: boolean
                          description: Whether or not the contributor will be included
                            in citations for the Preprint. The default value is true.
                        index:
                          type: integer
                          description: The position of this contributor in the list
                            of Preprint's contributors and in a Preprint's citations.
                        permission:
                          type: string
                          description: The permission level of the contributor. The
                            default value is 'write'.
                          enum:
                          - read
                          - write
                          - admin
                        unregistered_contributor:
                          type: string
                          description: The assigned name of the contributor if the
                            contributor has not yet claimed their account.
                          readOnly: true
                      description: The properties of the contributor entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                          readOnly: true
                        user:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                      description: URLs to other entities or entity collections that
                        have a relationship to the contributor entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the the canonical API endpoint for
                            the contributor.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the contributor
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - id: bg8v7-fgvc6
                  type: contributors
                  attributes:
                    index: 0
                    bibliographic: true
                    permission: admin
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/fgvc6/
                          meta: {}
                      data:
                        id: fgvc6
                        type: users
                    preprint:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/bg8v7/
                          meta: {}
                      data:
                        id: bg8v7
                        type: preprints
                  embeds:
                    users:
                      data:
                        id: fgvc6
                        type: users
                        attributes:
                          full_name: Freddie Mercury0
                          given_name: Freddie
                          middle_names: ""
                          family_name: Mercury0
                          suffix: ""
                          date_registered: 2022-01-13T13:47:07.685511
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                          can_view_reviews: []
                          accepted_terms_of_service: true
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/fgvc6/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/preprints/
                                meta: {}
                          emails:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/settings/emails/
                                meta: {}
                          default_region:
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/
                                meta: {}
                            data:
                              id: us
                              type: regions
                          settings:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/settings/
                                meta: {}
                            data:
                              id: fgvc6
                              type: user-settings
                        links:
                          html: https://osf.io/fgvc6/
                          profile_image: https://secure.gravatar.com/avatar/a61b3827662ddbc604c78e1c8f6a3636?d=identicon
                          self: https://api.osf.io/v2/users/fgvc6/
                  links:
                    self: https://api.osf.io/v2/preprints/bg8v7/contributors/fgvc6/
                - id: bg8v7-faqpw
                  type: contributors
                  attributes:
                    index: 1
                    bibliographic: true
                    permission: write
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/faqpw/
                          meta: {}
                      data:
                        id: faqpw
                        type: users
                    preprint:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/bg8v7/
                          meta: {}
                      data:
                        id: bg8v7
                        type: preprints
                  embeds:
                    users:
                      data:
                        id: faqpw
                        type: users
                        attributes:
                          full_name: Freddie Mercury1
                          given_name: Freddie
                          middle_names: ""
                          family_name: Mercury1
                          suffix: ""
                          date_registered: 2022-05-04T19:39:33.138339
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/faqpw/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/faqpw/
                          profile_image: https://secure.gravatar.com/avatar/c9ac5d6cc7964ba7eb2bb96f877bc983?d=identicon
                          self: https://api.osf.io/v2/users/faqpw/
                  links:
                    self: https://api.osf.io/v2/preprints/bg8v7/contributors/faqpw/
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
                    total_bibliographic: 2
                meta:
                  version: "2.0"
      x-response-schema: Contributor
    post:
      tags:
      - Preprints
      summary: Create a Contributor
      description: |-
        Adds a contributor to a Preprint, effectively creating a relationship between the Preprint and a user.

        Contributors are users who can make changes to the Preprint. Contributors with WRITE permissions may edit preprint details, and ADMIN Contributors may add or remove other Contributors.

        Contributors are categorized as either "bibliographic" or "non-bibliographic" contributors. From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
        #### Permissions
        Only project administrators can add contributors to a Preprint.
        #### Required
        A relationship object with a `data` key, containing the `users` type and valid user ID is required.

        All attributes describing the relationship between the Preprint and the user are optional.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the new contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprints_contributors_create
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the Preprint.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Contributor
              required:
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: "The identifier of the contributor entity. Contributor\
                    \ identifiers have the form {preprint_id}-{user_id}."
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the contributor entity (`contributors`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    bibliographic:
                      type: boolean
                      description: Whether or not the contributor will be included
                        in citations for the Preprint. The default value is true.
                    index:
                      type: integer
                      description: The position of this contributor in the list of
                        Preprint's contributors and in a Preprint's citations.
                    permission:
                      type: string
                      description: The permission level of the contributor. The default
                        value is 'write'.
                      enum:
                      - read
                      - write
                      - admin
                    unregistered_contributor:
                      type: string
                      description: The assigned name of the contributor if the contributor
                        has not yet claimed their account.
                      readOnly: true
                  description: The properties of the contributor entity.
                relationships:
                  title: Relationships
                  required:
                  - node
                  - user
                  type: object
                  properties:
                    node:
                      type: string
                      description: "A relationship to the node that was created for\
                        \ the preprint, or from which the preprint was created."
                      readOnly: true
                    user:
                      type: string
                      description: "A relationship to the file that is designated\
                        \ as the preprint's primary file, or the manuscript of the\
                        \ preprint."
                  description: URLs to other entities or entity collections that have
                    a relationship to the contributor entity.
                  readOnly: true
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the the canonical API endpoint for the
                        contributor.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the contributor
                    entity.
                  readOnly: true
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              example:
                data:
                  id: bg8v7-faqpw
                  type: contributors
                  attributes:
                    index: 1
                    bibliographic: true
                    permission: write
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/faqpw/
                          meta: {}
                      data:
                        id: faqpw
                        type: users
                    preprint:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/bg8v7/
                          meta: {}
                      data:
                        id: bg8v7
                        type: preprints
                  embeds:
                    users:
                      data:
                        id: faqpw
                        type: users
                        attributes:
                          full_name: Freddie Mercury1
                          given_name: Freddie
                          middle_names: ""
                          family_name: Mercury1
                          suffix: ""
                          date_registered: 2022-05-04T19:39:33.138339
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/faqpw/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/faqpw/
                          profile_image: https://secure.gravatar.com/avatar/c9ac5d6cc7964ba7eb2bb96f877bc983?d=identicon
                          self: https://api.osf.io/v2/users/faqpw/
                  links:
                    self: https://api.osf.io/v2/preprints/bg8v7/contributors/faqpw/
                meta:
                  version: "2.0"
      x-response-schema: Contributor
      x-codegen-request-body-name: body
  /preprints/{preprint_id}/contributors/{user_id}/:
    get:
      tags:
      - Preprints
      summary: Retrieve a contributor
      description: |-
        Retrieves the details of a contributor on this Preprint.
        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of contributors, the user relationship will not be exposed and the contributor ID will be an empty string.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprints_contributor_read
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the Preprint.
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  id: bg8v7-faqpw
                  type: contributors
                  attributes:
                    index: 1
                    bibliographic: true
                    permission: write
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/faqpw/
                          meta: {}
                      data:
                        id: faqpw
                        type: users
                    preprint:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/bg8v7/
                          meta: {}
                      data:
                        id: bg8v7
                        type: preprints
                  embeds:
                    users:
                      data:
                        id: faqpw
                        type: users
                        attributes:
                          full_name: Freddie Mercury1
                          given_name: Freddie
                          middle_names: ""
                          family_name: Mercury1
                          suffix: ""
                          date_registered: 2022-05-04T19:39:33.138339
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/faqpw/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/faqpw/
                          profile_image: https://secure.gravatar.com/avatar/c9ac5d6cc7964ba7eb2bb96f877bc983?d=identicon
                          self: https://api.osf.io/v2/users/faqpw/
                  links:
                    self: https://api.osf.io/v2/preprints/bg8v7/contributors/faqpw/
                meta:
                  version: "2.0"
  /preprints/{preprint_id}/bibliographic_contributors/:
    get:
      tags:
      - Preprints
      summary: List all Bibliographic Contributors
      description: |-
        A paginated list of the Preprint's Bibliographic Contributors, sorted by their index.
        Contributors are users who can make changes to the Preprint. Contributors with WRITE permissions may edit preprint details, and ADMIN Contributors may add or remove other Contributors.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of contributors, the user relationship will not be exposed and the contributor ID will be an empty string.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 contributors. Each resource in the array contains the full representation of the contributor, meaning additional requests to a contributor's detail view are not necessary. Additionally, the full representation of the user this contributor represents is automatically embedded within the `data` key of the response.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include contributors that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprints/y9jdt/contributors/?filter[bibliographic]=true.

        Contributors may be filtered by their `bibliographic` and `permission` attributes.
      operationId: preprints_bibliographic_contributors_list
      parameters:
      - name: preprint_id
        in: path
        description: The unique identifier of the preprint.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Contributor
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the contributor entity. Contributor\
                        \ identifiers have the form {preprint_id}-{user_id}."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        bibliographic:
                          type: boolean
                          description: Whether or not the contributor will be included
                            in citations for the Preprint. The default value is true.
                        index:
                          type: integer
                          description: The position of this contributor in the list
                            of Preprint's contributors and in a Preprint's citations.
                        permission:
                          type: string
                          description: The permission level of the contributor. The
                            default value is 'write'.
                          enum:
                          - read
                          - write
                          - admin
                        unregistered_contributor:
                          type: string
                          description: The assigned name of the contributor if the
                            contributor has not yet claimed their account.
                          readOnly: true
                      description: The properties of the contributor entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                          readOnly: true
                        user:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                      description: URLs to other entities or entity collections that
                        have a relationship to the contributor entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the the canonical API endpoint for
                            the contributor.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the contributor
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - id: bg8v7-fgvc6
                  type: contributors
                  attributes:
                    index: 0
                    bibliographic: true
                    permission: admin
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/fgvc6/
                          meta: {}
                      data:
                        id: fgvc6
                        type: users
                    preprint:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/bg8v7/
                          meta: {}
                      data:
                        id: bg8v7
                        type: preprints
                  embeds:
                    users:
                      data:
                        id: fgvc6
                        type: users
                        attributes:
                          full_name: Freddie Mercury0
                          given_name: Freddie
                          middle_names: ""
                          family_name: Mercury0
                          suffix: ""
                          date_registered: 2022-01-13T13:47:07.685511
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                          can_view_reviews: []
                          accepted_terms_of_service: true
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/fgvc6/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/preprints/
                                meta: {}
                          emails:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/settings/emails/
                                meta: {}
                          default_region:
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/
                                meta: {}
                            data:
                              id: us
                              type: regions
                          settings:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/fgvc6/settings/
                                meta: {}
                            data:
                              id: fgvc6
                              type: user-settings
                        links:
                          html: https://osf.io/fgvc6/
                          profile_image: https://secure.gravatar.com/avatar/a61b3827662ddbc604c78e1c8f6a3636?d=identicon
                          self: https://api.osf.io/v2/users/fgvc6/
                  links:
                    self: https://api.osf.io/v2/preprints/bg8v7/contributors/fgvc6/
                - id: bg8v7-faqpw
                  type: contributors
                  attributes:
                    index: 1
                    bibliographic: true
                    permission: write
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/faqpw/
                          meta: {}
                      data:
                        id: faqpw
                        type: users
                    preprint:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/bg8v7/
                          meta: {}
                      data:
                        id: bg8v7
                        type: preprints
                  embeds:
                    users:
                      data:
                        id: faqpw
                        type: users
                        attributes:
                          full_name: Freddie Mercury1
                          given_name: Freddie
                          middle_names: ""
                          family_name: Mercury1
                          suffix: ""
                          date_registered: 2022-05-04T19:39:33.138339
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/faqpw/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/faqpw/preprints/
                                meta: {}
                        links:
                          html: https://osf.io/faqpw/
                          profile_image: https://secure.gravatar.com/avatar/c9ac5d6cc7964ba7eb2bb96f877bc983?d=identicon
                          self: https://api.osf.io/v2/users/faqpw/
                  links:
                    self: https://api.osf.io/v2/preprints/bg8v7/contributors/faqpw/
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
                    total_bibliographic: 2
                meta:
                  version: "2.0"
      x-response-schema: Contributor
  /preprint_providers/:
    get:
      tags:
      - Preprint Providers
      summary: List all preprint providers
      description: |2-

        A paginated list of all preprint providers. The returned preprint providers are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprint providers. Each resource in the array is a separate preprint provider object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include preprint providers that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprint_providers/?filter[id]=osf.

        Preprint Providers may be filtered by their `id`, `name`,  and `description`
      operationId: preprint_provider_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Preprint Providers
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the preprint provider entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the preprint provider entity
                      (`preprint_providers`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      social_instagram:
                        type: string
                        description: The preprint provider's Instagram account ID.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                      advisory_board:
                        type: string
                        description: The HTML representation of the preprint provider's
                          advisory board.
                        readOnly: true
                      email_support:
                        type: string
                        description: The preprint providers's support email address.
                        readOnly: true
                      banner_path:
                        type: string
                        description: A static path to the preprint provider's banner
                          image. This field is deprecated as of verson 2.4.
                        readOnly: true
                      logo_path:
                        type: string
                        description: A static path to the preprint provider's logo
                          image. This field is deprecated as of verson 2.4.
                        readOnly: true
                      subjects_acceptable:
                        type: string
                        description: "A nested array structure defining allowed subjects\
                          \ for this preprint provider, in the BePress taxonomy."
                        readOnly: true
                      description:
                        type: string
                        description: The description of the preprint provider.
                        readOnly: true
                      social_facebook:
                        type: string
                        description: The preprint provider's Facebook account ID.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                      email_contact:
                        type: string
                        description: The preprint provider's contact email address.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                      example:
                        type: string
                        description: The GUID for an example preprint from this preprint
                          provider.
                        readOnly: true
                      name:
                        type: string
                        description: The name of the preprint provider.
                        readOnly: true
                      domain:
                        type: string
                        description: "The preprint provider's domain, if the provider\
                          \ is using a domain to for their preprint service."
                        readOnly: true
                      domain_redirect_enabled:
                        type: boolean
                        description: Whether or not redirects are enabled for the
                          provider's domain.
                        readOnly: true
                    description: The properties of the preprint provider entity.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      licenses_acceptable:
                        type: string
                        description: A link to licenses the preprint provider allows.
                        format: URL
                        readOnly: true
                      taxonomies:
                        type: string
                        description: A link to the taxonomies the preprint provider
                          allows.
                        format: URL
                        readOnly: true
                      preprints:
                        type: string
                        description: A link to the preprint list page for the preprint
                          provider.
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the preprint provider.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      external_url:
                        type: string
                        description: A link to the external website for the preprint
                          provider.
                        format: URL
                        readOnly: true
                      preprints:
                        type: string
                        description: A link to the preprint list page for the preprint
                          provider.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the preprint provider.
                        format: URL
                        readOnly: true
                    description: Links to alternative representations of the preprint
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    licenses_acceptable:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/licenses/
                          meta: {}
                    taxonomies:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/taxonomies/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/preprints/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprint_providers/osf/
                    preprints: https://api.osf.io/v2/preprint_providers/osf/preprints/
                    external_url: https://osf.io/preprints/
                  attributes:
                    social_instagram: ""
                    advisory_board: ""
                    email_support: ""
                    banner_path: /static/img/preprint_providers/cos-logo.png
                    logo_path: /static/img/preprint_providers/cos-logo.png
                    subjects_acceptable: []
                    description: A scholarly commons to connect the entire research
                      cycle
                    social_facebook: ""
                    header_text: ""
                    social_twitter: ""
                    email_contact: ""
                    example: khbvy
                    name: Open Science Framework
                    domain: osf.io
                  type: preprint_providers
                  id: osf
      x-response-schema: Preprint Provider
  /preprint_providers/{preprint_provider_id}/:
    get:
      tags:
      - Preprint Providers
      summary: Retrieve a preprint provider
      description: |-
        Retrieves the details of a preprint provider.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested preprint provider, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        #### Acceptable Subjects Structure
        Each preprint provider specifies acceptable subjects.
        `subjects_acceptable` is an array found in `attributes`.
        Subjects consist of general parent subjects (e.g., Engineering), more specific child subjects (e.g., Aerospace Engineering), and even more specific grandchild subjects (e.g., Aerodynamics and Fluid Mechanics). Subjects can only be nested 3 deep.


            "subjects_acceptable": [
                [
                    [
                        # Parent Subject:
                        # Architecture
                        "584240d954be81056ceca9e5",

                        # Child Subject:
                        # Architectural Engineering
                        "584240da54be81056cecac87"
                    ],
                    # Include all Architectural Engineering's children:
                    true
                ],
                [
                    [
                        # Parent Subject:
                        # Engineering
                        "584240da54be81056cecaca9",

                        # Child Subject:
                        # Aerospace Engineering
                        "584240db54be81056cecacd6",

                        # Grandchild Subject:
                        # Aerodynamics and Fluid Mechanics
                        "584240da54be81056cecaa74"
                    ],
                    # All nestings 3 deep must be false
                    false
                ]
            ]

        The above structure would allow Architecture, Architectural Engineering, all of Architectural Engineering's children, Engineering, Aerospace Engineering, and Aerodynamics and Fluid Mechanics.
      operationId: preprint_provider_detail
      parameters:
      - name: preprint_provider_id
        in: path
        description: The unique identifier of the preprint provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Preprint Providers
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the preprint provider entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the preprint provider entity
                      (`preprint_providers`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      social_instagram:
                        type: string
                        description: The preprint provider's Instagram account ID.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                      advisory_board:
                        type: string
                        description: The HTML representation of the preprint provider's
                          advisory board.
                        readOnly: true
                      email_support:
                        type: string
                        description: The preprint providers's support email address.
                        readOnly: true
                      banner_path:
                        type: string
                        description: A static path to the preprint provider's banner
                          image. This field is deprecated as of verson 2.4.
                        readOnly: true
                      logo_path:
                        type: string
                        description: A static path to the preprint provider's logo
                          image. This field is deprecated as of verson 2.4.
                        readOnly: true
                      subjects_acceptable:
                        type: string
                        description: "A nested array structure defining allowed subjects\
                          \ for this preprint provider, in the BePress taxonomy."
                        readOnly: true
                      description:
                        type: string
                        description: The description of the preprint provider.
                        readOnly: true
                      social_facebook:
                        type: string
                        description: The preprint provider's Facebook account ID.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                      email_contact:
                        type: string
                        description: The preprint provider's contact email address.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                      example:
                        type: string
                        description: The GUID for an example preprint from this preprint
                          provider.
                        readOnly: true
                      name:
                        type: string
                        description: The name of the preprint provider.
                        readOnly: true
                      domain:
                        type: string
                        description: "The preprint provider's domain, if the provider\
                          \ is using a domain to for their preprint service."
                        readOnly: true
                      domain_redirect_enabled:
                        type: boolean
                        description: Whether or not redirects are enabled for the
                          provider's domain.
                        readOnly: true
                    description: The properties of the preprint provider entity.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      licenses_acceptable:
                        type: string
                        description: A link to licenses the preprint provider allows.
                        format: URL
                        readOnly: true
                      taxonomies:
                        type: string
                        description: A link to the taxonomies the preprint provider
                          allows.
                        format: URL
                        readOnly: true
                      preprints:
                        type: string
                        description: A link to the preprint list page for the preprint
                          provider.
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the preprint provider.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      external_url:
                        type: string
                        description: A link to the external website for the preprint
                          provider.
                        format: URL
                        readOnly: true
                      preprints:
                        type: string
                        description: A link to the preprint list page for the preprint
                          provider.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the preprint provider.
                        format: URL
                        readOnly: true
                    description: Links to alternative representations of the preprint
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    licenses_acceptable:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/licenses/
                          meta: {}
                    taxonomies:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/taxonomies/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/preprints/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprint_providers/osf/
                    preprints: https://api.osf.io/v2/preprint_providers/osf/preprints/
                    external_url: https://osf.io/preprints/
                  attributes:
                    social_instagram: ""
                    advisory_board: ""
                    email_support: ""
                    banner_path: /static/img/preprint_providers/cos-logo.png
                    logo_path: /static/img/preprint_providers/cos-logo.png
                    subjects_acceptable: []
                    description: A scholarly commons to connect the entire research
                      cycle
                    social_facebook: ""
                    header_text: ""
                    social_twitter: ""
                    email_contact: ""
                    example: khbvy
                    name: Open Science Framework
                    domain: osf.io
                  type: preprint_providers
                  id: osf
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 5
                    per_page: 10
      x-response-schema: Preprint Provider
  /preprint_providers/{preprint_provider_id}/preprints/:
    get:
      tags:
      - Preprint Providers
      summary: List all preprints
      description: |2-

        A paginated list of preprints from the specified preprint provider. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprints. Each resource in the array is a separate preprint object.

        The `links` key contains a dictionary with keys that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        #### Filtering
        You can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprint_providers/osf/preprints/?filter[is_published]=true.

        Preprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.
      operationId: preprint_providers_preprints_list
      parameters:
      - name: preprint_provider_id
        in: path
        description: The unique identifier of the preprint provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Preprint
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the preprint entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the preprint entity (`preprints`).
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        date_created:
                          type: string
                          description: "The time at which the preprint was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the preprint was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_published:
                          type: string
                          description: "The time at which the preprint was published,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        doi:
                          type: string
                          description: "The DOI of the associated journal article,\
                            \ as entered by the user, if the preprint is published."
                        is_preprint_orphan:
                          type: boolean
                          description: Whether or not the preprint is orphaned. A
                            preprint can be orphaned if it's primary file was removed
                            from the preprint node. This field may be deprecated in
                            future versions.
                          readOnly: true
                        license_record:
                          type: string
                          description: "The metadata (copyright year and holder) associated\
                            \ with a license, required for certain licenses."
                        subjects:
                          type: array
                          description: "A nested array structure that describe subjects\
                            \ related to the preprint, in the BePress taxonomy. Each\
                            \ dictionary contains the text and ID of a subject."
                          items:
                            type: string
                      description: The properties of the preprint entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - primary_file
                      - provider
                      type: object
                      properties:
                        citation:
                          type: string
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A relationship to the identifiers associated
                            with the preprint.
                          readOnly: true
                        license:
                          type: string
                          description: A relationship to the license that has been
                            applied to the preprint.
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                        primary_file:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                        provider:
                          type: string
                          description: "A relationship to the preprint provider under\
                            \ which the preprint was created (OSF, socarxiv, psyarxiv,\
                            \ etc.)."
                        bibliographic_contributors:
                          type: string
                          description: A relationship to the bibliographic contributors
                            that are listed as contributing to this preprint.
                      description: URLs to other entities or entity collections that
                        have a relationship to the preprint entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        doi:
                          type: string
                          description: The URL representation of the DOI entered by
                            the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                        html:
                          type: string
                          description: "A link to the project on the OSF that was\
                            \ created for the preprint, or from which the preprint\
                            \ was created."
                          format: URL
                          readOnly: true
                        preprint_doi:
                          type: string
                          description: The URL representation of the OSF assigned
                            DOI for the preprint.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the preprint
                        entity.
                      readOnly: true
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            type: nodes
                            id: "{node_id}"
                        primary_file:
                          data:
                            type: primary_files
                            id: "{primary_file_id}"
                        provider:
                          data:
                            type: providers
                            id: "{preprint_provider_id}"
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/5xuck/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/hqb2p/citation/
                          meta: {}
                    primary_file:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/5894204f594d900200ed23f2/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/socarxiv/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprints/hqb2p/
                    html: https://osf.io/preprints/socarxiv/hqb2p/
                  attributes:
                    doi: null
                    license_record:
                      copyright_holders: []
                      year: "2017"
                    date_modified: 2017-02-03T06:19:00.158000
                    is_preprint_orphan: false
                    date_published: 2017-02-03T06:18:59.788000
                    subjects:
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Political Science
                        id: 584240da54be81056cecac1a
                    date_created: 2017-02-03T06:16:57.129000
                    is_published: true
                  type: preprints
                  id: hqb2p
                links:
                  first: null
                  last: https://api.osf.io/v2/preprints/?page=172
                  prev: null
                  next: https://api.osf.io/v2/preprints/?page=2
                  meta:
                    total: 1720
                    per_page: 10
      x-response-schema: Preprint
  /preprint_providers/{preprint_provider_id}/taxonomies/:
    get:
      tags:
      - Preprint Providers
      summary: List all taxonomies
      description: |2-

        A paginated list of the taxonomies for a preprint provider. The returned preprint providers taxonomies are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprint providers. Each resource in the array is a separate preprint provider object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprint_provider_taxonomies_list
      parameters:
      - name: preprint_provider_id
        in: path
        description: The unique identifier of the preprint provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Taxonomy
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the taxonomy entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the taxonomy entity (`taxonomies`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      text:
                        type: string
                        description: The text name of the taxonomy
                        readOnly: true
                      child_count:
                        type: integer
                        description: The number of children this taxonomy contains.
                        readOnly: true
                      parents:
                        type: array
                        description: An array of JSON objects containing keys for
                          `text` (name) and `id` (unique identifier) of this taxonomy's
                          parents
                        readOnly: true
                        items:
                          type: string
                    description: The properties of the taxonomy entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      parents:
                        type: array
                        description: An array of links to to this taxonomy's parents.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                        items:
                          type: string
                      self:
                        type: string
                        description: A link to the detail page for the taxonomy.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the taxonomy
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca838/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240d954be81056ceca97a/
                  attributes:
                    text: History of Philosophy
                    parents:
                    - text: Philosophy
                      id: 584240d954be81056ceca97a
                    child_count: 0
                  type: taxonomies
                  id: 584240d854be81056ceca838
                links:
                  first: null
                  last: https://api.osf.io/v2/preprint_providers/osf/taxonomies/?page=122
                  prev: null
                  next: https://api.osf.io/v2/preprint_providers/osf/taxonomies/?page=2
                  meta:
                    total: 1217
                    per_page: 10
      x-response-schema: Taxonomies
  /preprint_providers/{preprint_provider_id}/licenses/:
    get:
      tags:
      - Preprint Providers
      summary: List all licenses
      description: |2-

        A paginated list of the licenses allowed by a preprint provider.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprint providers. Each resource in the array is a separate preprint provider object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: preprint_provider_licenses_list
      parameters:
      - name: preprint_provider_id
        in: path
        description: The unique identifier of the preprint provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: License
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the license.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the license (`license`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the license.
                        readOnly: true
                      text:
                        type: string
                        description: Full text of the license.
                        readOnly: true
                      required_fields:
                        type: array
                        description: Fields required for this license (provided to
                          help front-end validators). Maps to properties on the NodeLicense
                          model.
                        readOnly: true
                        items:
                          type: string
                          description: Individual fields required by this license.
                          readOnly: true
                    description: The properties of the license.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for the license.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the license.
                    readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e965/
                  attributes:
                    text: "Copyright {{year}} {{copyrightHolders}}"
                    required_fields:
                    - year
                    - copyrightHolders
                    name: No license
                  type: licenses
                  id: 563c1cf88c5e4a3877f9e965
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 3
                    per_page: 10
      x-response-schema: Licenses
  /registrations/:
    get:
      tags:
      - Registrations
      summary: List all registrations
      description: |-
        A paginated list of registrations on the OSF to which the user has access.

        The returned registrations are those which are public or which the user has access to view.

        Non-registered nodes cannot be accessed through this endpoint (use the [nodes](#Nodes_nodes_list) endpoints instead).

        #### Registrations
        A registration on the OSF creates a frozen, time-stamped version of a project that cannot be edited or deleted. The *original project* can still be edited, while the registered version cannot.

        Registrations can be made public immediately or embargoed for up to 4 years.

        #### Withdrawals
        Registrations cannot be deleted, but they can be withdrawn. Withdrawing a registration removes the content of the registration but leaves behind basic metadata. A withdrawn registration will display a limited subset of information, namely, title, description, date_created, date_registered, date_withdrawn, registration, withdrawn, withdrawal_justification, and registration supplement. All other fields will be displayed as null. Additionally, the only relationship that remains accesible for a withdrawn registration is the contributors. All other relationships will return a **403 Forbidden** response.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 registrations. Each resource in the array is a separate registration object and contains the full representation of the registration, meaning additional requests to a registration's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/?filter[title]=open.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.
      operationId: registrations_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Registration
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the registration.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the registration entity
                        (`registrations`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        category:
                          type: string
                          description: The category of the registered node.
                          readOnly: true
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        collection:
                          type: boolean
                          description: Whether or not this registration represents
                            a collection. This value should always be `false`. This
                            field may be deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this registration. Comments on registrations
                            can be set to allow all users to comment or restricted
                            to only contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this registration. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the registered node was\
                            \ created, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the registered node was\
                            \ last modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_registered:
                          type: string
                          description: "The time at which this registration was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_withdrawn:
                          type: string
                          description: "The time at which this registration was withdrawn,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the registered node.
                          readOnly: true
                        embargo_end_date:
                          type: string
                          description: "The time at which the embargo on this registration\
                            \ will be lifted and the registration will become public,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        fork:
                          type: boolean
                          description: Whether or not this registration represents
                            a fork of another node.
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the registered node license
                            (required for certain license types).
                          readOnly: true
                        pending_embargo_approval:
                          type: boolean
                          description: Whether or not the embargo associated with
                            this registration is pending approval from project administrators.
                          readOnly: true
                        pending_registration_approval:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval from project administrators.
                          readOnly: true
                        pending_withdrawal:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval for withdrawal from project administrators.
                          readOnly: true
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the registration is publicly
                            visible.
                        registration:
                          type: boolean
                          description: Whether or not this is a registration. This
                            value should always be `true`. This field may be deprecated
                            in future versions.
                          readOnly: true
                        registered_meta:
                          type: string
                          description: A dictionary with supplemental registration
                            questions and responses.
                          readOnly: true
                        registration_supplement:
                          type: string
                          description: The title of the registration schema this registration
                            conforms to.
                          readOnly: true
                        tags:
                          type: array
                          description: A list of strings that describe the registered
                            node.
                          readOnly: true
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which the registered\
                            \ node was templated, if the registered node was created\
                            \ from a template."
                          readOnly: true
                        title:
                          type: string
                          description: The title of the registered node.
                          readOnly: true
                        withdrawn:
                          type: boolean
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                        withdrawal_justification:
                          type: string
                          description: "The reasoning for why this registration was\
                            \ withdrawn, as entered by the administrator that initiated\
                            \ the withdrawal."
                          readOnly: true
                      description: The properties of the registration entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this registration
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of the registered node's
                            children (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this registration.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this registration.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            registration.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this registration.
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this registration.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this registration.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current registration, if the current registration\
                            \ is a child registration."
                          readOnly: true
                        registered_by:
                          type: string
                          description: A link to the user that initiated this registration.
                          readOnly: true
                        registered_from:
                          type: string
                          description: A link to the node that this registration was
                            registered from.
                          readOnly: true
                        registration_schema:
                          type: string
                          description: A link to the metaschema that this registration
                            conforms to.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current registration. If the current registration\
                            \ is the top-level node, the root is the current registration."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this registration.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the registration entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            registration.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the registrations
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: registrations
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        registration_choice: embargo
                        lift_embargo: 2017-05-10T20:44:03.185000
            application/json:
              example:
                data:
                - id: ipkea
                  type: registrations
                  attributes:
                    registration_supplement: OSF-Standard Pre-Data Collection Registration
                    pending_embargo_approval: false
                    registration: true
                    embargo_end_date: null
                    withdrawn: false
                    withdrawal_justification: null
                    category: project
                    preprint: false
                    current_user_permissions:
                    - read
                    title: The Effect of Badges on Availability of Data and Materials
                    registered_meta:
                      looked:
                        value: "No"
                      datacompletion:
                        value: "No"
                      comments:
                        value: ""
                    public: true
                    fork: false
                    description: This investigation seeks to evaluate the impact of
                      badges on the availability and accessibility of open data and
                      materials.
                    tags:
                    - badges
                    - methodology
                    - signals
                    - open science
                    - open data
                    - open materials
                    collection: false
                    current_user_can_comment: false
                    pending_registration_approval: false
                    date_modified: 2016-02-04T20:58:11.042000
                    date_registered: 2015-06-01T14:47:40.064000
                    date_created: 2015-05-21T19:38:55.398000
                    date_withdrawn: null
                    pending_withdrawal: false
                    node_license: null
                  relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/citation/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/logs/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/comments/?filter%5Btarget%5D=ipkea
                          meta: {}
                    registered_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/rfgdw/
                          meta: {}
                    registered_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/z2u9w/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/registrations/ipkea/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/ipkea/children/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/ipkea/
                    html: https://osf.io/ipkea/
                links:
                  first: null
                  last: https://api.osf.io/v2/registrations/?page=856
                  prev: null
                  next: https://api.osf.io/v2/registrations/?page=2
                  meta:
                    total: 8559
                    per_page: 10
      x-response-schema: Registration
  /registrations/{registration_id}/:
    get:
      tags:
      - Registrations
      summary: Retrieve a registration
      description: |-
        Retrieve the details of a given registration.
        #### Permissions
        Only project contributors may retrieve the details of a registration that is embargoed, or has not yet been made public. Attempting to retrieve a private registration for which you are not a contributor will result in a **403 Forbidden** response.

        Authentication is not required to view the details of a public registration, as public registrations give read-only access to everyone.
        #### Registrations
        A registration on the OSF creates a frozen, time-stamped version of a project that cannot be edited or deleted. The *original project* can still be edited, while the registered version cannot.

        Registrations can be made public immediately or embargoed for up to 4 years.

        #### Withdrawals
        Registrations cannot be deleted, but they can be withdrawn. Withdrawing a registration removes the content of the registration but leaves behind basic metadata. A withdrawn registration will display a limited subset of information, namely, title, description, date_created, date_registered, date_withdrawn, registration, withdrawn, withdrawal_justification, and registration supplement. All other fields will be displayed as null. Additionally, the only relationship that remains accesible for a withdrawn registration is the contributors. All other relationships will return a **403 Forbidden** response.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_read
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Registration
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the registration.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the registration entity (`registrations`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      category:
                        type: string
                        description: The category of the registered node.
                        readOnly: true
                        enum:
                        - analysis
                        - communication
                        - data
                        - hypothesis
                        - instrumentation
                        - methods and measures
                        - procedure
                        - project
                        - software
                        - other
                      collection:
                        type: boolean
                        description: Whether or not this registration represents a
                          collection. This value should always be `false`. This field
                          may be deprecated in future versions.
                        readOnly: true
                      current_user_can_comment:
                        type: boolean
                        description: Whether or not the current user has permission
                          to post comments on this registration. Comments on registrations
                          can be set to allow all users to comment or restricted to
                          only contributors.
                        readOnly: true
                      current_user_permissions:
                        type: array
                        description: "A list of strings representing the permissions\
                          \ for the current user on this registration. Valid permissions\
                          \ are \"admin\", \"read\", and \"write\"."
                        readOnly: true
                        items:
                          type: string
                      date_created:
                        type: string
                        description: "The time at which the registered node was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the registered node was last\
                          \ modified, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_registered:
                        type: string
                        description: "The time at which this registration was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      date_withdrawn:
                        type: string
                        description: "The time at which this registration was withdrawn,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      description:
                        type: string
                        description: The description of the registered node.
                        readOnly: true
                      embargo_end_date:
                        type: string
                        description: "The time at which the embargo on this registration\
                          \ will be lifted and the registration will become public,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      fork:
                        type: boolean
                        description: Whether or not this registration represents a
                          fork of another node.
                        readOnly: true
                      node_license:
                        type: string
                        description: A dictionary containing the metadata (copyright
                          year and holder) associated with the registered node license
                          (required for certain license types).
                        readOnly: true
                      pending_embargo_approval:
                        type: boolean
                        description: Whether or not the embargo associated with this
                          registration is pending approval from project administrators.
                        readOnly: true
                      pending_registration_approval:
                        type: boolean
                        description: Whether or not the registration is pending approval
                          from project administrators.
                        readOnly: true
                      pending_withdrawal:
                        type: boolean
                        description: Whether or not the registration is pending approval
                          for withdrawal from project administrators.
                        readOnly: true
                      preprint:
                        type: boolean
                        description: "Whether or not a preprint has been created from\
                          \ this node, or if this node was created for a preprint."
                        readOnly: true
                      public:
                        type: boolean
                        description: Whether or not the registration is publicly visible.
                      registration:
                        type: boolean
                        description: Whether or not this is a registration. This value
                          should always be `true`. This field may be deprecated in
                          future versions.
                        readOnly: true
                      registered_meta:
                        type: string
                        description: A dictionary with supplemental registration questions
                          and responses.
                        readOnly: true
                      registration_supplement:
                        type: string
                        description: The title of the registration schema this registration
                          conforms to.
                        readOnly: true
                      tags:
                        type: array
                        description: A list of strings that describe the registered
                          node.
                        readOnly: true
                        items:
                          type: string
                      template_from:
                        type: string
                        description: "The unique ID of the node from which the registered\
                          \ node was templated, if the registered node was created\
                          \ from a template."
                        readOnly: true
                      title:
                        type: string
                        description: The title of the registered node.
                        readOnly: true
                      withdrawn:
                        type: boolean
                        description: Whether or not this registration has been withdrawn.
                        readOnly: true
                      withdrawal_justification:
                        type: string
                        description: "The reasoning for why this registration was\
                          \ withdrawn, as entered by the administrator that initiated\
                          \ the withdrawal."
                        readOnly: true
                    description: The properties of the registration entity.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      affiliated_institutions:
                        type: string
                        description: A link to the list of institutions this registration
                          is affiliated with.
                        readOnly: true
                      children:
                        type: string
                        description: A link to the list of the registered node's children
                          (components).
                        readOnly: true
                      citation:
                        type: string
                        description: A link to the citation details of this registration.
                        readOnly: true
                      comments:
                        type: string
                        description: A link to the list of comments on this registration.
                        readOnly: true
                      contributors:
                        type: string
                        description: A link to the list of contributors on this registration.
                        readOnly: true
                      files:
                        type: string
                        description: A link to the list of storage providers that
                          have been enabled on this registration.
                        readOnly: true
                      forks:
                        type: string
                        description: A link to the list of nodes that are forks of
                          this registration.
                        readOnly: true
                      identifiers:
                        type: string
                        description: A link to the list of identifiers for this registration
                          (i.e. ARK and DOI identifiers).
                        readOnly: true
                      logs:
                        type: string
                        description: A link to the list of log actions pertaining
                          to this registration.
                        readOnly: true
                      linked_nodes:
                        type: string
                        description: A link to the list of nodes that are linked to
                          this registration.
                        readOnly: true
                      node_links:
                        type: string
                        description: A link to the list of nodes that are linked to
                          this registration. This field is deprecated as of verson
                          2.1; use the linked_nodes link instead.
                        readOnly: true
                      parent:
                        type: string
                        description: "A link to the node that is the direct parent\
                          \ of the current registration, if the current registration\
                          \ is a child registration."
                        readOnly: true
                      registered_by:
                        type: string
                        description: A link to the user that initiated this registration.
                        readOnly: true
                      registered_from:
                        type: string
                        description: A link to the node that this registration was
                          registered from.
                        readOnly: true
                      registration_schema:
                        type: string
                        description: A link to the metaschema that this registration
                          conforms to.
                        readOnly: true
                      root:
                        type: string
                        description: "A link to the node that is the top-level parent\
                          \ of the current registration. If the current registration\
                          \ is the top-level node, the root is the current registration."
                        readOnly: true
                      view_only_links:
                        type: string
                        description: A link to the list of view only links that have
                          been created for this registration.
                        readOnly: true
                      wikis:
                        type: string
                        description: A link to the list of wiki pages for this registration.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the registration entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the registration's page on the OSF.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the canonical API endpoint of this
                          registration.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the registrations
                      entity.
                    readOnly: true
                example:
                  data:
                    type: registrations
                    attributes:
                      draft_registration: "{draft_registration_id}"
                      registration_choice: embargo
                      lift_embargo: 2017-05-10T20:44:03.185000
      x-response-schema: Registration
    patch:
      tags:
      - Registrations
      summary: Update a registration
      description: |-
        Updates a registration's privacy from **private** to **public**.

        Registrations can be updated with either a **PUT** or **PATCH** request. The `public` field is the only field that can be modified on a registration

        Registrations can only be turned from private to public, not vice versa.
        #### Permissions
        Only project administrators may update a registration.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_partial_update
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Registration
              required:
              - attributes
              - id
              - links
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the registration.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the registration entity (`registrations`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    category:
                      type: string
                      description: The category of the registered node.
                      readOnly: true
                      enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    collection:
                      type: boolean
                      description: Whether or not this registration represents a collection.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    current_user_can_comment:
                      type: boolean
                      description: Whether or not the current user has permission
                        to post comments on this registration. Comments on registrations
                        can be set to allow all users to comment or restricted to
                        only contributors.
                      readOnly: true
                    current_user_permissions:
                      type: array
                      description: "A list of strings representing the permissions\
                        \ for the current user on this registration. Valid permissions\
                        \ are \"admin\", \"read\", and \"write\"."
                      readOnly: true
                      items:
                        type: string
                    date_created:
                      type: string
                      description: "The time at which the registered node was created,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the registered node was last\
                        \ modified, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_registered:
                      type: string
                      description: "The time at which this registration was created,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_withdrawn:
                      type: string
                      description: "The time at which this registration was withdrawn,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    description:
                      type: string
                      description: The description of the registered node.
                      readOnly: true
                    embargo_end_date:
                      type: string
                      description: "The time at which the embargo on this registration\
                        \ will be lifted and the registration will become public,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    fork:
                      type: boolean
                      description: Whether or not this registration represents a fork
                        of another node.
                      readOnly: true
                    node_license:
                      type: string
                      description: A dictionary containing the metadata (copyright
                        year and holder) associated with the registered node license
                        (required for certain license types).
                      readOnly: true
                    pending_embargo_approval:
                      type: boolean
                      description: Whether or not the embargo associated with this
                        registration is pending approval from project administrators.
                      readOnly: true
                    pending_registration_approval:
                      type: boolean
                      description: Whether or not the registration is pending approval
                        from project administrators.
                      readOnly: true
                    pending_withdrawal:
                      type: boolean
                      description: Whether or not the registration is pending approval
                        for withdrawal from project administrators.
                      readOnly: true
                    preprint:
                      type: boolean
                      description: "Whether or not a preprint has been created from\
                        \ this node, or if this node was created for a preprint."
                      readOnly: true
                    public:
                      type: boolean
                      description: Whether or not the registration is publicly visible.
                    registration:
                      type: boolean
                      description: Whether or not this is a registration. This value
                        should always be `true`. This field may be deprecated in future
                        versions.
                      readOnly: true
                    registered_meta:
                      type: string
                      description: A dictionary with supplemental registration questions
                        and responses.
                      readOnly: true
                    registration_supplement:
                      type: string
                      description: The title of the registration schema this registration
                        conforms to.
                      readOnly: true
                    tags:
                      type: array
                      description: A list of strings that describe the registered
                        node.
                      readOnly: true
                      items:
                        type: string
                    template_from:
                      type: string
                      description: "The unique ID of the node from which the registered\
                        \ node was templated, if the registered node was created from\
                        \ a template."
                      readOnly: true
                    title:
                      type: string
                      description: The title of the registered node.
                      readOnly: true
                    withdrawn:
                      type: boolean
                      description: Whether or not this registration has been withdrawn.
                      readOnly: true
                    withdrawal_justification:
                      type: string
                      description: "The reasoning for why this registration was withdrawn,\
                        \ as entered by the administrator that initiated the withdrawal."
                      readOnly: true
                  description: The properties of the registration entity.
                  readOnly: true
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    affiliated_institutions:
                      type: string
                      description: A link to the list of institutions this registration
                        is affiliated with.
                      readOnly: true
                    children:
                      type: string
                      description: A link to the list of the registered node's children
                        (components).
                      readOnly: true
                    citation:
                      type: string
                      description: A link to the citation details of this registration.
                      readOnly: true
                    comments:
                      type: string
                      description: A link to the list of comments on this registration.
                      readOnly: true
                    contributors:
                      type: string
                      description: A link to the list of contributors on this registration.
                      readOnly: true
                    files:
                      type: string
                      description: A link to the list of storage providers that have
                        been enabled on this registration.
                      readOnly: true
                    forks:
                      type: string
                      description: A link to the list of nodes that are forks of this
                        registration.
                      readOnly: true
                    identifiers:
                      type: string
                      description: A link to the list of identifiers for this registration
                        (i.e. ARK and DOI identifiers).
                      readOnly: true
                    logs:
                      type: string
                      description: A link to the list of log actions pertaining to
                        this registration.
                      readOnly: true
                    linked_nodes:
                      type: string
                      description: A link to the list of nodes that are linked to
                        this registration.
                      readOnly: true
                    node_links:
                      type: string
                      description: A link to the list of nodes that are linked to
                        this registration. This field is deprecated as of verson 2.1;
                        use the linked_nodes link instead.
                      readOnly: true
                    parent:
                      type: string
                      description: "A link to the node that is the direct parent of\
                        \ the current registration, if the current registration is\
                        \ a child registration."
                      readOnly: true
                    registered_by:
                      type: string
                      description: A link to the user that initiated this registration.
                      readOnly: true
                    registered_from:
                      type: string
                      description: A link to the node that this registration was registered
                        from.
                      readOnly: true
                    registration_schema:
                      type: string
                      description: A link to the metaschema that this registration
                        conforms to.
                      readOnly: true
                    root:
                      type: string
                      description: "A link to the node that is the top-level parent\
                        \ of the current registration. If the current registration\
                        \ is the top-level node, the root is the current registration."
                      readOnly: true
                    view_only_links:
                      type: string
                      description: A link to the list of view only links that have
                        been created for this registration.
                      readOnly: true
                    wikis:
                      type: string
                      description: A link to the list of wiki pages for this registration.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the registration entity.
                  readOnly: true
                links:
                  title: Links
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the registration's page on the OSF.
                      format: URL
                      readOnly: true
                    self:
                      type: string
                      description: A link to the canonical API endpoint of this registration.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the registrations
                    entity.
                  readOnly: true
              example:
                data:
                  type: registrations
                  attributes:
                    draft_registration: "{draft_registration_id}"
                    registration_choice: embargo
                    lift_embargo: 2017-05-10T20:44:03.185000
        required: true
      responses:
        "200":
          description: Created
          content: {}
      x-codegen-request-body-name: body
  /registrations/{registration_id}/citations/:
    get:
      tags:
      - Registrations
      summary: List all citation styles
      description: |2-

        A paginated list of the registration's alternative citation styles

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 citation styles. Each resource in the array is a separate citation styles object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include citation styles that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/citations/?filter[title]=open.

        Citation styles may be filtered by their `id`, `title`, `short-title`, and `summary`.
      operationId: registrations_citations_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Citation Style
                  required:
                  - attributes
                  - id
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the citation style, e.g. APA."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the citation style entity
                        (`citation-styles`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - date_parsed
                      - title
                      type: object
                      properties:
                        date_parsed:
                          type: string
                          description: "The time at which the citation style was first\
                            \ parsed, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        short_title:
                          type: string
                          description: The short name for the citation style.
                          readOnly: true
                        summary:
                          type: string
                          description: The summary of the citation style.
                          readOnly: true
                        title:
                          type: string
                          description: The official name of the citation style.
                          readOnly: true
                      description: The properties of the citation style entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties: {}
                      description: URLs to alternative representations of the citation
                        style entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links: {}
                  attributes:
                    date_parsed: 2015-02-16T04:16:25.732000
                    summary: null
                    short_title: AMR
                    title: Academy of Management Review
                  type: citation-styles
                  id: academy-of-management-review
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Citation Style
  /registrations/{registration_id}/citations/{citation_id}/:
    get:
      tags:
      - Registrations
      summary: Retrieve a citation
      description: |-
        Retrieves the citation style details for a registration, in CSL format.
        #### Returns
        Returns a JSON object with a `data` key that contains the representation of the details necessary for the citation style.
      operationId: registrations_citation_read
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      - name: citation_id
        in: path
        description: The unique identifier of the citation.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Citation Detail
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the entity being cited.
                    readOnly: true
                  type:
                    type: string
                    description: "The type identifier of the citation entity (either\
                      \ `node-citation`, `preprint-citation`, or `registration-citation`)."
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      author:
                        type: string
                        description: "The list of bibliographic authors, represented\
                          \ as dictionaries of their given and family names, for the\
                          \ entitiy being cited."
                        readOnly: true
                      doi:
                        type: string
                        description: "The DOI for the entity being cited, if one exists."
                        readOnly: true
                      publisher:
                        type: string
                        description: "The publisher of the entity being cited. For\
                          \ nodes and registrations, the publisher is the 'Open Science\
                          \ Framework'. For preprints, the publisher is the same as\
                          \ the preprint provider."
                        readOnly: true
                      title:
                        type: string
                        description: The title of the entity being cited.
                        readOnly: true
                    description: The properties of the citation entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the entity that is being cited.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the citation
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  id: bg4di
                  type: node-citation
                  attributes:
                    publisher: Open Science Framework
                    author:
                    - given: Timothy M
                      family: Errington
                    - given: Nicole
                      family: Vasilevsky
                    - given: Melissa A
                      family: Haendel
                    type: webpage
                    title: Identification Analysis of RP:CB
                  links:
                    self: osf.io/bg4di
      x-response-schema: Citation Detail
  /registrations/{registration_id}/children/:
    get:
      tags:
      - Registrations
      summary: List all child registrations
      description: |2-

        A paginated list of children of a registration.

        The list consists of the next level child registrations for the given registration. The returned registrations are sorted by their `date_modified`, with the most recently updated child registrations appearing first.

        The list will include child registrations that are public, as well as child registrations that are private, if the authenticated user has permission to view them.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 child registrations. If the given registration has zero child registrations, the `data` key will contain an empty array. Each resource in the array is a separate registration object and contains the full representation of the child registration.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/children/?filter[title]=reproducibility.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.

        Most fields are string fields and will be filtered using simple substring matching. Public is a boolean field, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting true or false in the query will cause the match to fail.
      operationId: registrations_children_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Registration
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the registration.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the registration entity
                        (`registrations`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        category:
                          type: string
                          description: The category of the registered node.
                          readOnly: true
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        collection:
                          type: boolean
                          description: Whether or not this registration represents
                            a collection. This value should always be `false`. This
                            field may be deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this registration. Comments on registrations
                            can be set to allow all users to comment or restricted
                            to only contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this registration. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the registered node was\
                            \ created, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the registered node was\
                            \ last modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_registered:
                          type: string
                          description: "The time at which this registration was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_withdrawn:
                          type: string
                          description: "The time at which this registration was withdrawn,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the registered node.
                          readOnly: true
                        embargo_end_date:
                          type: string
                          description: "The time at which the embargo on this registration\
                            \ will be lifted and the registration will become public,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        fork:
                          type: boolean
                          description: Whether or not this registration represents
                            a fork of another node.
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the registered node license
                            (required for certain license types).
                          readOnly: true
                        pending_embargo_approval:
                          type: boolean
                          description: Whether or not the embargo associated with
                            this registration is pending approval from project administrators.
                          readOnly: true
                        pending_registration_approval:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval from project administrators.
                          readOnly: true
                        pending_withdrawal:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval for withdrawal from project administrators.
                          readOnly: true
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the registration is publicly
                            visible.
                        registration:
                          type: boolean
                          description: Whether or not this is a registration. This
                            value should always be `true`. This field may be deprecated
                            in future versions.
                          readOnly: true
                        registered_meta:
                          type: string
                          description: A dictionary with supplemental registration
                            questions and responses.
                          readOnly: true
                        registration_supplement:
                          type: string
                          description: The title of the registration schema this registration
                            conforms to.
                          readOnly: true
                        tags:
                          type: array
                          description: A list of strings that describe the registered
                            node.
                          readOnly: true
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which the registered\
                            \ node was templated, if the registered node was created\
                            \ from a template."
                          readOnly: true
                        title:
                          type: string
                          description: The title of the registered node.
                          readOnly: true
                        withdrawn:
                          type: boolean
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                        withdrawal_justification:
                          type: string
                          description: "The reasoning for why this registration was\
                            \ withdrawn, as entered by the administrator that initiated\
                            \ the withdrawal."
                          readOnly: true
                      description: The properties of the registration entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this registration
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of the registered node's
                            children (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this registration.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this registration.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            registration.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this registration.
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this registration.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this registration.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current registration, if the current registration\
                            \ is a child registration."
                          readOnly: true
                        registered_by:
                          type: string
                          description: A link to the user that initiated this registration.
                          readOnly: true
                        registered_from:
                          type: string
                          description: A link to the node that this registration was
                            registered from.
                          readOnly: true
                        registration_schema:
                          type: string
                          description: A link to the metaschema that this registration
                            conforms to.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current registration. If the current registration\
                            \ is the top-level node, the root is the current registration."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this registration.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the registration entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            registration.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the registrations
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: registrations
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        registration_choice: embargo
                        lift_embargo: 2017-05-10T20:44:03.185000
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/citation/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                          meta: {}
                    parent:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wucr8/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wucr8/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/comments/?filter%5Btarget%5D=4cmnz
                          meta: {}
                    registered_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/5wprs/
                          meta: {}
                    registered_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/registrations/4cmnz/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/children/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/4cmnz/
                    html: https://osf.io/4cmnz/
                  attributes:
                    registration_supplement: OSF-Standard Pre-Data Collection Registration
                    pending_embargo_approval: false
                    registration: true
                    embargo_end_date: null
                    withdrawn: false
                    withdrawal_justification: null
                    category: project
                    preprint: false
                    current_user_permissions:
                    - read
                    title: Full Project Description
                    registered_meta:
                      looked:
                        comments: []
                        value: "No"
                        extra: []
                      datacompletion:
                        comments: []
                        value: "Yes, data collection is underway or complete"
                        extra: []
                      comments:
                        comments: []
                        value: "Data collection for measurement time T1 is underway,\
                          \ but no data has been collected for T2 (when menstrual\
                          \ cycle information will be assessed). Therefore, data cannot\
                          \ be analysed at the time of preregistration."
                        extra: []
                    public: true
                    fork: false
                    description: ""
                    tags: []
                    collection: false
                    current_user_can_comment: false
                    pending_registration_approval: false
                    date_modified: 2016-05-23T14:22:03.885000
                    date_registered: 2016-05-23T14:24:25.478000
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/node_links/
                          meta: {}
                    date_created: 2016-05-23T12:11:14.853000
                    pending_withdrawal: false
                    node_license: null
                  type: registrations
                  id: 4cmnz
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Registration
  /registrations/{registration_id}/comments/:
    get:
      tags:
      - Registrations
      summary: List all comments
      description: |2-

        A paginated list of the registration's comments.

        The returned comments are sorted by their creation date, with the most recent comments appearing first.
        #### Permissions
        Comments of public registrations are given read-only access to everyone.

        If the comment-level is `private`, only registration contributors have permission to comment.

        If the comment-level is `public`, any logged-in OSF user can comment.

        Comments of private registrations are only visible to contributors and administrators on the registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include comments that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wuerf/comments/?filter[target]=wuerf

        Comments may be filtered by their `deleted`, `target`, `date_created`, `date_modified`.

        Most fields are string fields and will be filtered using simple substring matching. Deleted is a boolean field, and can be filtered using truthy values, such as **true**, **false**, **0** or **1**. Note that quoting `true` or `false` in the query will cause the match to fail.
      operationId: registrations_comments_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Comment
                  required:
                  - id
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the comment entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the comment entity (`comments`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        can_edit:
                          type: boolean
                          description: Whether or not the current user has permission
                            to edit this comment
                          readOnly: true
                        content:
                          type: string
                          description: The content of the comment.
                        date_created:
                          type: string
                          description: "The time at which the comment was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the comment was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        modified:
                          type: boolean
                          description: Whether or not the comment has been edited.
                          readOnly: true
                        deleted:
                          type: boolean
                          description: Whether or not the comment is deleted.
                          readOnly: true
                        is_abuse:
                          type: boolean
                          description: Whether or not the comment is flagged or confirmed
                            spam.
                          readOnly: true
                        is_ham:
                          type: boolean
                          description: Whether or not an admin checked the legitimacy
                            of this comment.
                          readOnly: true
                        has_report:
                          type: boolean
                          description: Whether or not the comment the current user
                            reported this as spam.
                          readOnly: true
                        has_children:
                          type: boolean
                          description: Whether or not the comment has replies.
                          readOnly: true
                        page:
                          type: string
                          description: "The page type the comment is on, e.g. `node`,\
                            \ `registration`, `wiki`, `files`."
                          readOnly: true
                      description: The properties of the comment entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A relationship to the node the comment is on.
                          format: URL
                          readOnly: true
                        replies:
                          type: string
                          description: A relationship to the replies to the comment.
                          format: URL
                          readOnly: true
                        target:
                          type: string
                          description: A relationship to the target of the comment.
                          format: URL
                          readOnly: true
                        reports:
                          type: string
                          description: A relationship to the reports connected to
                            the comment.
                          format: URL
                          readOnly: true
                        user:
                          type: string
                          description: A relationship to the user who created the
                            comment.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the comment entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the comment.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the comment
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: comments
                      attributes:
                        content: comment content
                      relationships:
                        target:
                          data:
                            type: "{target_type}"
                            id: "{target_id}"
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    replies:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=jg7sezmdnt93
                          meta: {}
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta:
                            type: nodes
                    reports:
                      links:
                        related:
                          href: https://api.osf.io/v2/comments/jg7sezmdnt93/reports/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/6yc8z/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/comments/jg7sezmdnt93/
                  attributes:
                    can_edit: false
                    date_modified: 2016-04-01T04:45:44.123000
                    deleted: false
                    is_ham: false
                    has_children: false
                    modified: false
                    content: |-
                      We have published a Bayesian reanalysis of this project at PLOS ONE: http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0149794

                      I explain some of the context on my blog: http://alexanderetz.com/2016/02/26/the-bayesian-rpp-take-2/

                      Please note that the analysis we use in this paper is very different from the analysis used in the blog I posted in the previous comment, so the results are different as well.
                    has_report: false
                    is_abuse: false
                    date_created: 2016-02-27T13:50:24.240000
                    page: node
                  type: comments
                  id: jg7sezmdnt93
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    replies:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=23pk9
                          meta: {}
                    target:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta:
                            type: nodes
                    reports:
                      links:
                        related:
                          href: https://api.osf.io/v2/comments/23pk9/reports/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/6yc8z/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/comments/23pk9/
                  attributes:
                    can_edit: false
                    date_modified: 2016-04-01T04:45:37.437000
                    deleted: false
                    is_ham: false
                    has_children: false
                    modified: null
                    content: "In this blog http://wp.me/p4sgtg-o6 I conduct a Bayesian\
                      \ Re-analysis of the Reproducibility Project that gives a graded\
                      \ measure of replication success. In an attempt to avoid dichotomous\
                      \ success/fail replication outcomes, I calculate a continous\
                      \ outcome (Bayes factor) that answers the question, does the\
                      \ replication result fit more with the original reported effect\
                      \ or a null effect? Many replications are strong successes,\
                      \ many are strong failures, and there are many that lie somewhere\
                      \ in between."
                    has_report: false
                    is_abuse: false
                    date_created: 2015-08-30T14:50:21.093000
                    page: node
                  type: comments
                  id: 23pk9
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Comment
  /registrations/{registration_id}/contributors/:
    get:
      tags:
      - Registrations
      summary: List all contributors
      description: |-
        A paginated list of all contributors on this registration.
        The returned contributors are sorted by their index.

        Contributors are users who can make changes to the registration or, in the case of private registration, have read access to the registration.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed in the contributors list on the OSF, while non-bibliographic contributors are not.

        Note that if an anonymous view_only key is being used to view the list of contributors, the user relationship will not be exposed and the contributor ID will be an empty string.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 contributors. Each resource in the array contains the full representation of the contributor. Additionally, the full representation of the user this contributor represents is automatically embedded within the `data` key of the response.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include contributors that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wu3a4/contributors/?filter[bibliographic]=true.

        Contributors may be filtered by their `bibliographic` and `permission` attributes.
      operationId: registrations_contributors_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Contributor
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the contributor entity. Contributor\
                        \ identifiers have the form {node_id}-{user_id}."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        bibliographic:
                          type: boolean
                          description: Whether or not the contributor will be included
                            in citations for the node. The default value is true.
                        index:
                          type: integer
                          description: The position of this contributor in the list
                            of project contributors and in project citations.
                        permission:
                          type: string
                          description: The permission level of the contributor. The
                            default value is 'write'.
                          enum:
                          - read
                          - write
                          - admin
                        unregistered_contributor:
                          type: string
                          description: The assigned name of the contributor if the
                            contributor has not yet claimed their account.
                          readOnly: true
                      description: The properties of the contributor entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                          readOnly: true
                        user:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                      description: URLs to other entities or entity collections that
                        have a relationship to the contributor entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the the canonical API endpoint for
                            the contributor.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the contributor
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: contributors
                      attributes: {}
                      relationships:
                        user:
                          data:
                            type: users
                            id: guid0
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/wucr8/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/wucr8/contributors/7xea5/
                  embeds:
                    users:
                      data:
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/nodes/
                                meta: {}
                          institutions:
                            links:
                              self:
                                href: https://api.osf.io/v2/users/7xea5/relationships/institutions/
                                meta: {}
                              related:
                                href: https://api.osf.io/v2/users/7xea5/institutions/
                                meta: {}
                        links:
                          html: https://osf.io/7xea5/
                          profile_image: https://secure.gravatar.com/avatar/0ddf92ef0f0a7011c21cd07d7940bc32?d=identicon
                        attributes:
                          family_name: Anderl
                          suffix: ""
                          locale: de
                          date_registered: 2014-10-22T13:48:22.652000
                          middle_names: ""
                          given_name: Christine
                          full_name: Christine Anderl
                          active: true
                          timezone: America/Los_Angeles
                        type: users
                        id: 7xea5
                  attributes:
                    index: 0
                    unregistered_contributor: null
                    bibliographic: true
                    permission: admin
                  type: contributors
                  id: wucr8-7xea5
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Contributor
  /registrations/{registration_id}/contributors/{user_id}/:
    get:
      tags:
      - Registrations
      summary: Retrieve a contributor
      description: |-
        Retrieves the details of a contributor on this registration.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested contributor, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_contributors_read
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Contributor
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: "The identifier of the contributor entity. Contributor\
                        \ identifiers have the form {node_id}-{user_id}."
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the contributor entity (`contributors`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        bibliographic:
                          type: boolean
                          description: Whether or not the contributor will be included
                            in citations for the node. The default value is true.
                        index:
                          type: integer
                          description: The position of this contributor in the list
                            of project contributors and in project citations.
                        permission:
                          type: string
                          description: The permission level of the contributor. The
                            default value is 'write'.
                          enum:
                          - read
                          - write
                          - admin
                        unregistered_contributor:
                          type: string
                          description: The assigned name of the contributor if the
                            contributor has not yet claimed their account.
                          readOnly: true
                      description: The properties of the contributor entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                          readOnly: true
                        user:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                      description: URLs to other entities or entity collections that
                        have a relationship to the contributor entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the the canonical API endpoint for
                            the contributor.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the contributor
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: contributors
                      attributes: {}
                      relationships:
                        user:
                          data:
                            type: users
                            id: guid0
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/wucr8/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/wucr8/contributors/7xea5/
                  embeds:
                    users:
                      data:
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/7xea5/nodes/
                                meta: {}
                          institutions:
                            links:
                              self:
                                href: https://api.osf.io/v2/users/7xea5/relationships/institutions/
                                meta: {}
                              related:
                                href: https://api.osf.io/v2/users/7xea5/institutions/
                                meta: {}
                        links:
                          html: https://osf.io/7xea5/
                          profile_image: https://secure.gravatar.com/avatar/0ddf92ef0f0a7011c21cd07d7940bc32?d=identicon
                        attributes:
                          family_name: Anderl
                          suffix: ""
                          locale: de
                          date_registered: 2014-10-22T13:48:22.652000
                          middle_names: ""
                          given_name: Christine
                          full_name: Christine Anderl
                          active: true
                          timezone: America/Los_Angeles
                        type: users
                        id: 7xea5
                  attributes:
                    index: 0
                    unregistered_contributor: null
                    bibliographic: true
                    permission: admin
                  type: contributors
                  id: wucr8-7xea5
      x-response-schema: Contributor
  /registrations/{registration_id}/files/:
    get:
      tags:
      - Registrations
      summary: List all storage providers
      description: |-
        A paginated list of storage providers enabled on the registration

        Users of the OSF may access their data on a [number of cloud-storage services](https://api.osf.io/v2/#storage-providers) that have integrations with the OSF. We call these **providers**. By default, every node has access to the OSF-provided storage but may use as many of the supported providers as desired.


        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 files. Each resource in the array is a separate file object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        Note: In the OSF filesystem model, providers are treated as folders, but with special properties that distinguish them from regular folders. Every provider folder is considered a root folder, and may not be deleted through the regular file API.
      operationId: registrations_providers_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        extra:
                          type: object
                          properties: {}
                          description: "Extra information, contains `hashes` (`sha256`,\
                            \ `md5`) and `downloads` count."
                          readOnly: true
                        kind:
                          type: string
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                        name:
                          type: string
                          description: Name of the file
                        last_touched:
                          type: string
                          description: The time at which the file external metadata
                            was last retrieved as an iso8601 formatted timestamp (does
                            not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Unix-style path to the file relative to the
                            provider root.
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the file was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        current_version:
                          type: integer
                          description: Version number of the file.
                          readOnly: true
                        delete_allowed:
                          type: boolean
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                        date_created:
                          type: string
                          description: "The time at which the file was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        provider:
                          type: string
                          description: "The id of the file provider (e.g., `osfstorage`)"
                          readOnly: true
                        path:
                          type: string
                          description: The unique identifier for this file entity
                            for this project and storage provider.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user is allowed
                            to post comments.
                          readOnly: true
                        guid:
                          type: string
                          description: Global unique identifier (GUID) for this file
                            (if one has been assigned).
                          readOnly: true
                        checkout:
                          type: string
                          description: "SOON TO BE DEPRECATED, see relationships checkout."
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this file,\
                            \ as entered by project contributors."
                          readOnly: true
                          items:
                            type: string
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                        checkout:
                          type: string
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                        versions:
                          type: string
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                      description: Links to other entities or entity collections that
                        have a relationship to the file entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        info:
                          type: string
                          description: A link to the page to view a file's information
                            or a folder's contents.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                        move:
                          type: string
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                        new_folder:
                          type: string
                          description: The Waterbutler API route for creating a new
                            subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                        upload:
                          type: string
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                        download:
                          type: string
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                        delete:
                          type: string
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/files/osfstorage/
                          meta: {}
                  links:
                    storage_addons: https://api.osf.io/v2/addons/?filter%5Bcategories%5D=storage
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/
                    new_folder: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/?kind=folder
                  attributes:
                    node: ezcuj
                    path: /
                    kind: folder
                    name: osfstorage
                    provider: osfstorage
                  type: files
                  id: ezcuj:osfstorage
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: File
  /registrations/{registration_id}/files/{provider}/:
    get:
      tags:
      - Registrations
      summary: List all files
      description: |-
        List of all the registration's files/folders for a given storage provider.

        #### Returns

        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of files. Each resource in the array is a separate file object and contains the full representation of the file.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Filtering

        You can optionally request that the response only include files that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/files/osfstorage/?filter[kind]=file

        Files may be filtered by `id`, `name`, `node`, `kind`, `path`, `provider`, `size`, and `last_touched`.
      operationId: registrations_files_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the storage provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: File
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the file entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the file entity (`files`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        extra:
                          type: object
                          properties: {}
                          description: "Extra information, contains `hashes` (`sha256`,\
                            \ `md5`) and `downloads` count."
                          readOnly: true
                        kind:
                          type: string
                          description: The kind of files object it is (`file` or `folder`).
                          readOnly: true
                        name:
                          type: string
                          description: Name of the file
                        last_touched:
                          type: string
                          description: The time at which the file external metadata
                            was last retrieved as an iso8601 formatted timestamp (does
                            not apply to OSF Storage files).
                          format: date-time
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Unix-style path to the file relative to the
                            provider root.
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the file was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        current_version:
                          type: integer
                          description: Version number of the file.
                          readOnly: true
                        delete_allowed:
                          type: boolean
                          description: Whether or not deletion of the file is allowed.
                          readOnly: true
                        date_created:
                          type: string
                          description: "The time at which the file was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        provider:
                          type: string
                          description: "The id of the file provider (e.g., `osfstorage`)"
                          readOnly: true
                        path:
                          type: string
                          description: The unique identifier for this file entity
                            for this project and storage provider.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user is allowed
                            to post comments.
                          readOnly: true
                        guid:
                          type: string
                          description: Global unique identifier (GUID) for this file
                            (if one has been assigned).
                          readOnly: true
                        checkout:
                          type: string
                          description: "SOON TO BE DEPRECATED, see relationships checkout."
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this file,\
                            \ as entered by project contributors."
                          readOnly: true
                          items:
                            type: string
                        size:
                          type: integer
                          description: Size of the file in bytes.
                          readOnly: true
                      description: The properties of the file entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        node:
                          type: string
                          description: A link to the node the file is on.
                          format: URL
                          readOnly: true
                        checkout:
                          type: string
                          description: A link to the user who checked out the file.
                          format: URL
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the comments on the file.
                          format: URL
                          readOnly: true
                        versions:
                          type: string
                          description: A link to the versions of the file.
                          format: URL
                          readOnly: true
                      description: Links to other entities or entity collections that
                        have a relationship to the file entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        info:
                          type: string
                          description: A link to the page to view a file's information
                            or a folder's contents.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the file.
                          format: URL
                          readOnly: true
                        move:
                          type: string
                          description: The Waterbutler API route for file moves.
                          format: URL
                          readOnly: true
                        new_folder:
                          type: string
                          description: The Waterbutler API route for creating a new
                            subfolder (does not exist for files).
                          format: URL
                          readOnly: true
                        upload:
                          type: string
                          description: The Waterbutler API route for file uploads.
                          format: URL
                          readOnly: true
                        download:
                          type: string
                          description: The Waterbutler API route for file downloads.
                          format: URL
                          readOnly: true
                        delete:
                          type: string
                          description: The Waterbutler API route for file deletions.
                          format: URL
                          readOnly: true
                      description: Links to alternative representations of the file
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                          meta: {}
                    versions:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                  attributes:
                    extra:
                      hashes:
                        sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        md5: 44325d4f13b09f3769ede09d7c20a82c
                      downloads: 447
                    kind: file
                    name: OSC2012.pdf
                    last_touched: 2015-09-18T01:11:16.328000
                    materialized_path: /OSC2012.pdf
                    date_modified: 2014-10-17T19:24:12.264Z
                    current_version: 1
                    delete_allowed: true
                    date_created: 2014-10-17T19:24:12.264Z
                    provider: osfstorage
                    path: /553e69248c5e4a219919ea54
                    current_user_can_comment: true
                    guid: sejcv
                    checkout: null
                    tags: []
                    size: 216945
                  type: files
                  id: 553e69248c5e4a219919ea54
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: File
  /registrations/{registration_id}/files/{provider}/{path}/:
    get:
      tags:
      - Registrations
      summary: Retrieve a file
      description: |-
        Retrieves the details of a registration file for the given storage provider.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested registration file object, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_files_read
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the storage provider.
        required: true
        schema:
          type: string
      - name: path
        in: path
        description: The unique identifier of the file path.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: File
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the file entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the file entity (`files`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      extra:
                        type: object
                        properties: {}
                        description: "Extra information, contains `hashes` (`sha256`,\
                          \ `md5`) and `downloads` count."
                        readOnly: true
                      kind:
                        type: string
                        description: The kind of files object it is (`file` or `folder`).
                        readOnly: true
                      name:
                        type: string
                        description: Name of the file
                      last_touched:
                        type: string
                        description: The time at which the file external metadata
                          was last retrieved as an iso8601 formatted timestamp (does
                          not apply to OSF Storage files).
                        format: date-time
                        readOnly: true
                      materialized_path:
                        type: string
                        description: Unix-style path to the file relative to the provider
                          root.
                        readOnly: true
                      date_modified:
                        type: string
                        description: "The time at which the file was last modified,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      current_version:
                        type: integer
                        description: Version number of the file.
                        readOnly: true
                      delete_allowed:
                        type: boolean
                        description: Whether or not deletion of the file is allowed.
                        readOnly: true
                      date_created:
                        type: string
                        description: "The time at which the file was created, as an\
                          \ iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      provider:
                        type: string
                        description: "The id of the file provider (e.g., `osfstorage`)"
                        readOnly: true
                      path:
                        type: string
                        description: The unique identifier for this file entity for
                          this project and storage provider.
                        readOnly: true
                      current_user_can_comment:
                        type: boolean
                        description: Whether or not the current user is allowed to
                          post comments.
                        readOnly: true
                      guid:
                        type: string
                        description: Global unique identifier (GUID) for this file
                          (if one has been assigned).
                        readOnly: true
                      checkout:
                        type: string
                        description: "SOON TO BE DEPRECATED, see relationships checkout."
                        readOnly: true
                      tags:
                        type: array
                        description: "A list of strings that describe this file, as\
                          \ entered by project contributors."
                        readOnly: true
                        items:
                          type: string
                      size:
                        type: integer
                        description: Size of the file in bytes.
                        readOnly: true
                    description: The properties of the file entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      node:
                        type: string
                        description: A link to the node the file is on.
                        format: URL
                        readOnly: true
                      checkout:
                        type: string
                        description: A link to the user who checked out the file.
                        format: URL
                        readOnly: true
                      comments:
                        type: string
                        description: A link to the comments on the file.
                        format: URL
                        readOnly: true
                      versions:
                        type: string
                        description: A link to the versions of the file.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      info:
                        type: string
                        description: A link to the page to view a file's information
                          or a folder's contents.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the file.
                        format: URL
                        readOnly: true
                      move:
                        type: string
                        description: The Waterbutler API route for file moves.
                        format: URL
                        readOnly: true
                      new_folder:
                        type: string
                        description: The Waterbutler API route for creating a new
                          subfolder (does not exist for files).
                        format: URL
                        readOnly: true
                      upload:
                        type: string
                        description: The Waterbutler API route for file uploads.
                        format: URL
                        readOnly: true
                      download:
                        type: string
                        description: The Waterbutler API route for file downloads.
                        format: URL
                        readOnly: true
                      delete:
                        type: string
                        description: The Waterbutler API route for file deletions.
                        format: URL
                        readOnly: true
                    description: Links to alternative representations of the file
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/ezcuj/comments/?filter%5Btarget%5D=sejcv
                          meta: {}
                    versions:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/versions/
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    self: https://api.osf.io/v2/files/553e69248c5e4a219919ea54/
                    move: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    upload: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    download: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                    delete: https://files.osf.io/v1/resources/ezcuj/providers/osfstorage/553e69248c5e4a219919ea54
                  attributes:
                    extra:
                      hashes:
                        sha256: 2450eb9ff3db92a1bff370368b0552b270bd4b5ca0745b773c37d2662f94df8e
                        md5: 44325d4f13b09f3769ede09d7c20a82c
                      downloads: 447
                    kind: file
                    name: OSC2012.pdf
                    last_touched: 2015-09-18T01:11:16.328000
                    materialized_path: /OSC2012.pdf
                    date_modified: 2014-10-17T19:24:12.264Z
                    current_version: 1
                    delete_allowed: true
                    date_created: 2014-10-17T19:24:12.264Z
                    provider: osfstorage
                    path: /553e69248c5e4a219919ea54
                    current_user_can_comment: true
                    guid: sejcv
                    checkout: null
                    tags: []
                    size: 216945
                  type: files
                  id: 553e69248c5e4a219919ea54
      x-response-schema: File
  /registrations/{registration_id}/forks/:
    get:
      tags:
      - Registrations
      summary: List all forks
      description: |2-

        A paginated list of the registration’s forks

        The returned forks are sorted by their `forked_date`, with the most recent forks appearing first.

        Forking a registration creates a copy of an existing registration and all of its contents.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 forks. If the current registration has no fork, the `data` key will contain an empty array. Each resource in the array is a separate registration object and contains the full representation of the registration's fork.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: registrations_forks_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Registration
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the registration.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the registration entity
                        (`registrations`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        category:
                          type: string
                          description: The category of the registered node.
                          readOnly: true
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        collection:
                          type: boolean
                          description: Whether or not this registration represents
                            a collection. This value should always be `false`. This
                            field may be deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this registration. Comments on registrations
                            can be set to allow all users to comment or restricted
                            to only contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this registration. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the registered node was\
                            \ created, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the registered node was\
                            \ last modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_registered:
                          type: string
                          description: "The time at which this registration was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_withdrawn:
                          type: string
                          description: "The time at which this registration was withdrawn,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the registered node.
                          readOnly: true
                        embargo_end_date:
                          type: string
                          description: "The time at which the embargo on this registration\
                            \ will be lifted and the registration will become public,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        fork:
                          type: boolean
                          description: Whether or not this registration represents
                            a fork of another node.
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the registered node license
                            (required for certain license types).
                          readOnly: true
                        pending_embargo_approval:
                          type: boolean
                          description: Whether or not the embargo associated with
                            this registration is pending approval from project administrators.
                          readOnly: true
                        pending_registration_approval:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval from project administrators.
                          readOnly: true
                        pending_withdrawal:
                          type: boolean
                          description: Whether or not the registration is pending
                            approval for withdrawal from project administrators.
                          readOnly: true
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the registration is publicly
                            visible.
                        registration:
                          type: boolean
                          description: Whether or not this is a registration. This
                            value should always be `true`. This field may be deprecated
                            in future versions.
                          readOnly: true
                        registered_meta:
                          type: string
                          description: A dictionary with supplemental registration
                            questions and responses.
                          readOnly: true
                        registration_supplement:
                          type: string
                          description: The title of the registration schema this registration
                            conforms to.
                          readOnly: true
                        tags:
                          type: array
                          description: A list of strings that describe the registered
                            node.
                          readOnly: true
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which the registered\
                            \ node was templated, if the registered node was created\
                            \ from a template."
                          readOnly: true
                        title:
                          type: string
                          description: The title of the registered node.
                          readOnly: true
                        withdrawn:
                          type: boolean
                          description: Whether or not this registration has been withdrawn.
                          readOnly: true
                        withdrawal_justification:
                          type: string
                          description: "The reasoning for why this registration was\
                            \ withdrawn, as entered by the administrator that initiated\
                            \ the withdrawal."
                          readOnly: true
                      description: The properties of the registration entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this registration
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of the registered node's
                            children (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this registration.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this registration.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            registration.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this registration.
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this registration.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            registration (i.e. ARK and DOI identifiers).
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this registration.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to this registration. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current registration, if the current registration\
                            \ is a child registration."
                          readOnly: true
                        registered_by:
                          type: string
                          description: A link to the user that initiated this registration.
                          readOnly: true
                        registered_from:
                          type: string
                          description: A link to the node that this registration was
                            registered from.
                          readOnly: true
                        registration_schema:
                          type: string
                          description: A link to the metaschema that this registration
                            conforms to.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current registration. If the current registration\
                            \ is the top-level node, the root is the current registration."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this registration.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this registration.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the registration entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the registration's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            registration.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the registrations
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: registrations
                      attributes:
                        draft_registration: "{draft_registration_id}"
                        registration_choice: embargo
                        lift_embargo: 2017-05-10T20:44:03.185000
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/citation/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                          meta: {}
                    parent:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wucr8/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wucr8/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/comments/?filter%5Btarget%5D=4cmnz
                          meta: {}
                    registered_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/5wprs/
                          meta: {}
                    registered_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/registrations/4cmnz/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/children/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/4cmnz/
                    html: https://osf.io/4cmnz/
                  attributes:
                    registration_supplement: OSF-Standard Pre-Data Collection Registration
                    pending_embargo_approval: false
                    registration: true
                    embargo_end_date: null
                    withdrawn: false
                    withdrawal_justification: null
                    category: project
                    preprint: false
                    current_user_permissions:
                    - read
                    title: Full Project Description
                    registered_meta:
                      looked:
                        comments: []
                        value: "No"
                        extra: []
                      datacompletion:
                        comments: []
                        value: "Yes, data collection is underway or complete"
                        extra: []
                      comments:
                        comments: []
                        value: "Data collection for measurement time T1 is underway,\
                          \ but no data has been collected for T2 (when menstrual\
                          \ cycle information will be assessed). Therefore, data cannot\
                          \ be analysed at the time of preregistration."
                        extra: []
                    public: true
                    fork: false
                    description: ""
                    tags: []
                    collection: false
                    current_user_can_comment: false
                    pending_registration_approval: false
                    date_modified: 2016-05-23T14:22:03.885000
                    date_registered: 2016-05-23T14:24:25.478000
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/node_links/
                          meta: {}
                    date_created: 2016-05-23T12:11:14.853000
                    pending_withdrawal: false
                    node_license: null
                  type: registrations
                  id: 4cmnz
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Registration
    post:
      tags:
      - Registrations
      summary: Create a fork
      description: |-
        Creates a fork of the given registration.

        Forking a project creates a copy of an existing registration and all of its contents. The fork always points back to the original registration, forming a network of registrations.

        You might use a fork to copy another's work to build on and extend. For example, a professor may create an OSF project of materials for individual student use. Each student forks the project to have his or her own copy of the materials to start his/her own work.

        When creating a fork, your fork will only contain public components of the current registration and components for which you are a contributor. Private components that you do not have access to will not be forked.
        #### Required
        There are no required attributes when creating a fork, as all of the forked registration's attributes will be copied from the current registration.

        The `title` field is optional, with the default title being "Fork of " prepended to the current registration's title.
        #### Returns
        Returns a JSON object with a `data` key containing the complete representation of the forked registration, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: registrations_forks_create
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Registration
              required:
              - attributes
              - id
              - links
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the registration.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the registration entity (`registrations`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    category:
                      type: string
                      description: The category of the registered node.
                      readOnly: true
                      enum:
                      - analysis
                      - communication
                      - data
                      - hypothesis
                      - instrumentation
                      - methods and measures
                      - procedure
                      - project
                      - software
                      - other
                    collection:
                      type: boolean
                      description: Whether or not this registration represents a collection.
                        This value should always be `false`. This field may be deprecated
                        in future versions.
                      readOnly: true
                    current_user_can_comment:
                      type: boolean
                      description: Whether or not the current user has permission
                        to post comments on this registration. Comments on registrations
                        can be set to allow all users to comment or restricted to
                        only contributors.
                      readOnly: true
                    current_user_permissions:
                      type: array
                      description: "A list of strings representing the permissions\
                        \ for the current user on this registration. Valid permissions\
                        \ are \"admin\", \"read\", and \"write\"."
                      readOnly: true
                      items:
                        type: string
                    date_created:
                      type: string
                      description: "The time at which the registered node was created,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_modified:
                      type: string
                      description: "The time at which the registered node was last\
                        \ modified, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_registered:
                      type: string
                      description: "The time at which this registration was created,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    date_withdrawn:
                      type: string
                      description: "The time at which this registration was withdrawn,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    description:
                      type: string
                      description: The description of the registered node.
                      readOnly: true
                    embargo_end_date:
                      type: string
                      description: "The time at which the embargo on this registration\
                        \ will be lifted and the registration will become public,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    fork:
                      type: boolean
                      description: Whether or not this registration represents a fork
                        of another node.
                      readOnly: true
                    node_license:
                      type: string
                      description: A dictionary containing the metadata (copyright
                        year and holder) associated with the registered node license
                        (required for certain license types).
                      readOnly: true
                    pending_embargo_approval:
                      type: boolean
                      description: Whether or not the embargo associated with this
                        registration is pending approval from project administrators.
                      readOnly: true
                    pending_registration_approval:
                      type: boolean
                      description: Whether or not the registration is pending approval
                        from project administrators.
                      readOnly: true
                    pending_withdrawal:
                      type: boolean
                      description: Whether or not the registration is pending approval
                        for withdrawal from project administrators.
                      readOnly: true
                    preprint:
                      type: boolean
                      description: "Whether or not a preprint has been created from\
                        \ this node, or if this node was created for a preprint."
                      readOnly: true
                    public:
                      type: boolean
                      description: Whether or not the registration is publicly visible.
                    registration:
                      type: boolean
                      description: Whether or not this is a registration. This value
                        should always be `true`. This field may be deprecated in future
                        versions.
                      readOnly: true
                    registered_meta:
                      type: string
                      description: A dictionary with supplemental registration questions
                        and responses.
                      readOnly: true
                    registration_supplement:
                      type: string
                      description: The title of the registration schema this registration
                        conforms to.
                      readOnly: true
                    tags:
                      type: array
                      description: A list of strings that describe the registered
                        node.
                      readOnly: true
                      items:
                        type: string
                    template_from:
                      type: string
                      description: "The unique ID of the node from which the registered\
                        \ node was templated, if the registered node was created from\
                        \ a template."
                      readOnly: true
                    title:
                      type: string
                      description: The title of the registered node.
                      readOnly: true
                    withdrawn:
                      type: boolean
                      description: Whether or not this registration has been withdrawn.
                      readOnly: true
                    withdrawal_justification:
                      type: string
                      description: "The reasoning for why this registration was withdrawn,\
                        \ as entered by the administrator that initiated the withdrawal."
                      readOnly: true
                  description: The properties of the registration entity.
                  readOnly: true
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    affiliated_institutions:
                      type: string
                      description: A link to the list of institutions this registration
                        is affiliated with.
                      readOnly: true
                    children:
                      type: string
                      description: A link to the list of the registered node's children
                        (components).
                      readOnly: true
                    citation:
                      type: string
                      description: A link to the citation details of this registration.
                      readOnly: true
                    comments:
                      type: string
                      description: A link to the list of comments on this registration.
                      readOnly: true
                    contributors:
                      type: string
                      description: A link to the list of contributors on this registration.
                      readOnly: true
                    files:
                      type: string
                      description: A link to the list of storage providers that have
                        been enabled on this registration.
                      readOnly: true
                    forks:
                      type: string
                      description: A link to the list of nodes that are forks of this
                        registration.
                      readOnly: true
                    identifiers:
                      type: string
                      description: A link to the list of identifiers for this registration
                        (i.e. ARK and DOI identifiers).
                      readOnly: true
                    logs:
                      type: string
                      description: A link to the list of log actions pertaining to
                        this registration.
                      readOnly: true
                    linked_nodes:
                      type: string
                      description: A link to the list of nodes that are linked to
                        this registration.
                      readOnly: true
                    node_links:
                      type: string
                      description: A link to the list of nodes that are linked to
                        this registration. This field is deprecated as of verson 2.1;
                        use the linked_nodes link instead.
                      readOnly: true
                    parent:
                      type: string
                      description: "A link to the node that is the direct parent of\
                        \ the current registration, if the current registration is\
                        \ a child registration."
                      readOnly: true
                    registered_by:
                      type: string
                      description: A link to the user that initiated this registration.
                      readOnly: true
                    registered_from:
                      type: string
                      description: A link to the node that this registration was registered
                        from.
                      readOnly: true
                    registration_schema:
                      type: string
                      description: A link to the metaschema that this registration
                        conforms to.
                      readOnly: true
                    root:
                      type: string
                      description: "A link to the node that is the top-level parent\
                        \ of the current registration. If the current registration\
                        \ is the top-level node, the root is the current registration."
                      readOnly: true
                    view_only_links:
                      type: string
                      description: A link to the list of view only links that have
                        been created for this registration.
                      readOnly: true
                    wikis:
                      type: string
                      description: A link to the list of wiki pages for this registration.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the registration entity.
                  readOnly: true
                links:
                  title: Links
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the registration's page on the OSF.
                      format: URL
                      readOnly: true
                    self:
                      type: string
                      description: A link to the canonical API endpoint of this registration.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the registrations
                    entity.
                  readOnly: true
              example:
                data:
                  type: registrations
                  attributes:
                    draft_registration: "{draft_registration_id}"
                    registration_choice: embargo
                    lift_embargo: 2017-05-10T20:44:03.185000
        required: true
      responses:
        "201":
          description: Created
          content: {}
      x-response-schema: Registration
      x-codegen-request-body-name: body
  /registrations/{registration_id}/identifiers/:
    get:
      tags:
      - Registrations
      summary: List all identifiers
      description: |-
        A paginated list of the registration's identifiers.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of identifiers. Each resource in the array is a separate identifier object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering

        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/identifiers/?filter[category]=ark

        Identifiers may be filtered by their `category` e.g `ark` or `doi`.
      operationId: registrations_identifiers_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Identifier
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the identifier entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the identifier entity (`identifiers`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        category:
                          type: string
                          description: The category of the identifier
                          readOnly: true
                          enum:
                          - ark
                          - doi
                        value:
                          type: string
                          description: The identifier value itself
                          readOnly: true
                      description: The properties of the identifier entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        referent:
                          type: string
                          description: A relationship to the node the identifier refers
                            to.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the identifier entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the identifier.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the identifier
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    referent:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b459/
                  attributes:
                    category: doi
                    value: 10.17605/OSF.IO/73PND
                  type: identifiers
                  id: 57f1641db83f6901ed94b459
                - relationships:
                    referent:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/identifiers/57f1641db83f6901ed94b45a/
                  attributes:
                    category: ark
                    value: c7605/osf.io/73pnd
                  type: identifiers
                  id: 57f1641db83f6901ed94b45a
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Identifier
  /registrations/{registration_id}/institutions/:
    get:
      tags:
      - Registrations
      summary: List all institutions
      description: |-
        A paginated list of institutions affiliated with the registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 affiliated institutions. Each resource in the array is a separate institution object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: registrations_institutions_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Institution
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the institution entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        auth_url:
                          type: string
                          description: Url used to authenticate institution specific
                            login.
                          readOnly: true
                        logo_path:
                          type: string
                          description: Static path to the institution specific logo.
                          readOnly: true
                        name:
                          type: string
                          description: Full name of the institution.
                          readOnly: true
                        description:
                          type: string
                          description: Description of the institution.
                          readOnly: true
                      description: The properties of the institution entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        users:
                          type: string
                          description: A relationship to the users affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        registrations:
                          type: string
                          description: A relationship to the registrations affiliated
                            with the institution.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the institution entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the institutions
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/cos/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/cos/
                  attributes:
                    auth_url: null
                    logo_path: /static/img/institutions/shields/cos-shield.png
                    name: Center For Open Science
                    description: COS is a non-profit technology company providing
                      free and open services to increase inclusivity and transparency
                      of research. Find out more at <a href="https://cos.io">cos.io</a>.
                  type: institutions
                  id: cos
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/uva/
                  attributes:
                    auth_url: https://accounts.osf.io/Shibboleth.sso/Login?entityID=urn%3Amace%3Aincommon%3Avirginia.edu
                    logo_path: /static/img/institutions/shields/uva-shield.png
                    name: University of Virginia
                    description: "In partnership with the <a href=\"http://www.virginia.edu/vpr/\"\
                      >Vice President for Research</a>, <a href=\"http://dsi.virginia.edu\"\
                      >Data Science Institute</a>, <a href=\"https://www.hsl.virginia.edu\"\
                      >Health Sciences Library</a>, and <a href=\"http://data.library.virginia.edu\"\
                      >University Library</a>. Learn more about <a href=\"http://cadre.virginia.edu\"\
                      >UVA resources for computational and data-driven research</a>.\
                      \ Projects must abide by the <a href=\"http://www.virginia.edu/informationpolicy/security.html\"\
                      >University Security and Data Protection Policies</a>."
                  type: institutions
                  id: uva
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Institution
  /registrations/{registration_id}/linked_nodes/:
    get:
      tags:
      - Registrations
      summary: List all linked nodes
      description: |-
        List of all nodes linked to the registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/linked_nodes/?filter[title]=reproducibility/?filter[title]=reproducibility.

        Nodes may be filtered by their `title`, `category`, `description`, `public`, `registration`, or `tags`. `title`, `description`, and `category` are string fields and will be filteres using simple substring matching. `public`, `registration` are boolean and can be filtered using truthy values, such as `true`, `false`, `0`, `1`. `tags` is an array of simple strings.
      operationId: registrations_linked_nodes_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/comments/?filter%5Btarget%5D=bifc7
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/bifc7/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/bifc7/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/bifc7/
                    html: https://osf.io/bifc7/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: "This is an independent replication as part of the\
                      \ Reproducibility Project: Psychology."
                    current_user_permissions:
                    - read
                    date_modified: 2017-03-03T05:00:31.512000
                    title: "Replication of WA Cunningham, JJ Van Bavel, IR Johnsen\
                      \ (2008, PS 19(2))"
                    collection: false
                    registration: false
                    date_created: 2014-07-28T13:53:04.508000
                    current_user_can_comment: false
                    node_license: null
                    public: true
                    tags: []
                  type: nodes
                  id: bifc7
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/citation/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/identifiers/
                          meta: {}
                    forked_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/kxhz5/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/comments/?filter%5Btarget%5D=73pnd
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/registrations/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/logs/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/73pnd/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/73pnd/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/preprints/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/draft_registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/73pnd/
                    html: https://osf.io/73pnd/
                  attributes:
                    category: project
                    fork: true
                    preprint: false
                    description: null
                    current_user_permissions:
                    - read
                    date_modified: 2016-10-02T19:50:23.605000
                    title: "Replication of Hajcak &amp; Foti (2008, PS, Study 1)"
                    collection: false
                    registration: false
                    date_created: 2012-10-31T18:50:46.111000
                    current_user_can_comment: false
                    node_license:
                      copyright_holders:
                      - ""
                      year: "2016"
                    public: true
                    tags:
                    - anxiety
                    - EMG
                    - EEG
                    - motivation
                    - ERN
                  type: nodes
                  id: 73pnd
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Node
  /registrations/{registration_id}/logs/:
    get:
      tags:
      - Registrations
      summary: List all logs
      description: |-
        A paginated list of the registration's logs.

        The returned logs are sorted by their `date`, with the most recents logs appearing first.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 logs. Each resource in the array is a separate logs object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include logs that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wucr8/logs/?filter[action]=made_private.

        Logs may be filtered by their `action`, and `date`.
      operationId: registrations_logs_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Log
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the log.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the log (`logs`)
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - action
                      - date
                      type: object
                      properties:
                        date:
                          type: string
                          description: "The date and time at which the log was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        action:
                          type: string
                          description: The type of action performed on the OSF. See
                            actions section for full list of possible actions.
                          readOnly: true
                        params:
                          title: Log Params
                          type: object
                          properties:
                            addon:
                              type: string
                              description: The addon associated with the connected
                                node.
                              readOnly: true
                            anonymous_link:
                              type: boolean
                              description: The view only link added to the node was
                                anonymous.
                              readOnly: true
                            bucket:
                              type: string
                              description: The Amazon s3 bucket connected to the connected
                                node.
                              readOnly: true
                            citation_name:
                              type: string
                              description: Name of citation associated with the connected
                                node.
                              readOnly: true
                            contributors:
                              type: string
                              description: List of contributors on the connected node
                                involved in the action represented by this node log.
                              readOnly: true
                            data_set:
                              type: string
                              description: The dataset associated with the connected
                                node.
                              readOnly: true
                            destination:
                              type: string
                              description: "A dictionary with information about the\
                                \ destination for the move of the item on the node\
                                \ associated with this log. Details include the path,\
                                \ url, addon, node_url and node_title."
                              readOnly: true
                            figshare_title:
                              type: string
                              description: Title of the fighshare project associated
                                with this node log
                              readOnly: true
                            forward_url:
                              type: string
                              description: URL that the connected node forwards to.
                              readOnly: true
                            github_user:
                              type: string
                              description: The github user involved with the action
                                represented by this node log.
                              readOnly: true
                            github_repo:
                              type: string
                              description: The github repository involved with the
                                action represented by this node log.
                              readOnly: true
                            file:
                              type: string
                              description: Dictionary with information about the file
                                involved with the log.
                              readOnly: true
                            filename:
                              type: string
                              description: Filename for the file associated with the
                                log.
                              readOnly: true
                            kind:
                              type: string
                              description: Kind of the object associated with the
                                log.
                              readOnly: true
                            folder:
                              type: string
                              description: Folder associated with the log.
                              readOnly: true
                            folder_name:
                              type: string
                              description: Name of the folder associated with the
                                log.
                              readOnly: true
                            license:
                              type: string
                              description: License for the associated node.
                              readOnly: true
                            identifiers:
                              type: string
                              description: Dictionary containing the DOI and ARK ID
                                for a preprint associated with the log.
                              readOnly: true
                            institution:
                              type: string
                              description: Dictionary containing the ID and Name of
                                the institution associated with the log.
                              readOnly: true
                            old_page:
                              type: string
                              description: Old name of wiki page for a wiki rename
                                log action.
                              readOnly: true
                            page:
                              type: string
                              description: Current name of wiki page for rename log
                                action.
                              readOnly: true
                            page_id:
                              type: string
                              description: Primary key of the wiki page associated
                                with the log.
                              readOnly: true
                            params_node:
                              type: string
                              description: Node that is refered to in the params of
                                the log.
                              readOnly: true
                            params_project:
                              type: string
                              description: Project that is refered to in the params
                                of the log.
                              readOnly: true
                            path:
                              type: string
                              description: Path for a file associated with the log.
                              readOnly: true
                            pointer:
                              type: string
                              description: A dictionary with information about the
                                node that is linked to the associated node.
                              readOnly: true
                            preprint:
                              type: string
                              description: Preprint related to the associated node.
                              readOnly: true
                            preprint_provider:
                              type: string
                              description: Preprint provider for the associated node.
                              readOnly: true
                            previous_institution:
                              type: string
                              description: "If a primary institution for the associated\
                                \ node is changed, this will show the previous institution."
                              readOnly: true
                            source:
                              type: string
                              description: "A dictionary with information about the\
                                \ source of a move related event for a log. Details\
                                \ include the path, url, addon, node_url and node_title."
                              readOnly: true
                            study:
                              type: string
                              description: Dataverse study linked to the associated
                                node.
                              readOnly: true
                            tag:
                              type: string
                              description: Tag associated with the associated node.
                              readOnly: true
                            tags:
                              type: string
                              description: Tags associated with the associated node.
                              readOnly: true
                            target:
                              type: string
                              description: "A dictionary containing details about\
                                \ the target of the log. Details include the path,\
                                \ url, addon, node_url and node_title."
                              readOnly: true
                            template_node:
                              type: string
                              description: A dictionary containing information about
                                the node that was used as a template for the associated
                                node.
                              readOnly: true
                            title_new:
                              type: string
                              description: The new title for the associated node.
                              readOnly: true
                            title_original:
                              type: string
                              description: The original title for the associated node
                              readOnly: true
                            updated_fields:
                              type: string
                              description: A dictionary containing all of the fields
                                updated on the associated node.
                              readOnly: true
                            urls:
                              type: string
                              description: Links to access information about the file
                                associated with this log.
                              readOnly: true
                            version:
                              type: string
                              description: Version of the wiki page associated with
                                this log.
                              readOnly: true
                            wiki:
                              type: string
                              description: A dictionary with information about the
                                wiki page associated with the log.
                              readOnly: true
                          description: The type of action performed on the OSF. See
                            description for full list of possible actions.
                          readOnly: true
                      description: The properties of the log.
                      readOnly: true
                    relationships:
                      title: Relationships
                      required:
                      - node
                      type: object
                      properties:
                        node:
                          type: string
                          description: A relationship to the node associated with
                            this log.
                          readOnly: true
                        original_node:
                          type: string
                          description: "A relationship to the original node that was\
                            \ associated with this log, in case this log was copied\
                            \ from a node to a fork or registration."
                          readOnly: true
                        user:
                          type: string
                          description: A relationship to the user who performed the
                            log action.
                          readOnly: true
                        linked_node:
                          type: string
                          description: A relationship to the node linked to this log.
                          readOnly: true
                        template_node:
                          type: string
                          description: A relationship to the node used as a template
                            for this log.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the log.
                      readOnly: true
                    links:
                      title: Links
                      required:
                      - self
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the log.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the log
                        entity.
                      readOnly: true
                  example:
                    data:
                      relationships:
                        node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        original_node:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/ezcuj/
                              meta: {}
                        user:
                          links:
                            related:
                              href: https://api.osf.io/v2/users/jk5cv/
                              meta: {}
                      links:
                        self: https://api.osf.io/v2/logs/4fc706a80b6e9118ef000122/
                      attributes:
                        date: 2012-05-31T05:50:32.083000
                        action: contributor_added
                        params:
                          params_node:
                            id: ezcuj
                            title: "Reproducibility Project: Psychology"
                          contributors:
                          - family_name: Nosek
                            middle_names: A.
                            given_name: Brian
                            full_name: Brian A. Nosek
                            active: true
                            id: cdi38
                      type: logs
                      id: 4fc706a80b6e9118ef000122
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/n32tp/
                          meta: {}
                    original_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/7eshv/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/logs/57431299594d9001ead7174f/
                  attributes:
                    date: 2016-05-23T14:22:20.142000
                    action: osf_storage_file_updated
                    params:
                      contributors: []
                      params_project:
                        id: 5wprs
                        title: Full Project Description
                      params_node:
                        id: 7eshv
                        title: "Full Questionnaire [in original language]"
                      urls:
                        download: /project/7eshv/files/osfstorage/5742f41c6c613b01de5b15dd/?action=download
                        view: /project/7eshv/files/osfstorage/5742f41c6c613b01de5b15dd/
                      preprint_provider: null
                      path: /StudyMaterials_UEH1.pdf
                  type: logs
                  id: 57431299594d9001ead7174f
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/n32tp/
                          meta: {}
                    original_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/7eshv/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/logs/57431299594d9001ead7174d/
                  attributes:
                    date: 2016-05-23T12:13:58.371000
                    action: project_created
                    params:
                      preprint_provider: null
                      params_node:
                        id: 7eshv
                        title: "Full Questionnaire [in original language]"
                      params_project: null
                      contributors: []
                  type: logs
                  id: 57431299594d9001ead7174d
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/4cmnz/
                          meta: {}
                    original_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/5wprs/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/logs/57431299594d9001ead71746/
                  attributes:
                    date: 2016-05-23T12:11:14.853000
                    action: project_created
                    params:
                      preprint_provider: null
                      params_node:
                        id: 5wprs
                        title: Full Project Description
                      params_project: null
                      contributors: []
                  type: logs
                  id: 57431299594d9001ead71746
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wucr8/
                          meta: {}
                    original_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/6gbkh/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/7xea5/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/logs/57431299594d9001ead71742/
                  attributes:
                    date: 2016-05-23T12:10:48.868000
                    action: project_created
                    params:
                      preprint_provider: null
                      params_node:
                        id: 6gbkh
                        title: Investigating fluctuations in cooperative preferences
                          across the natural female menstrual cycle in a within-subjects-design
                      params_project: null
                      contributors: []
                  type: logs
                  id: 57431299594d9001ead71742
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 5
                    per_page: 10
      x-response-schema: Log
  /registrations/{registration_id}/view_only_links/:
    get:
      tags:
      - Registrations
      summary: List all view only links
      description: |-
        A paginated list of view only links created for this registration.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 view only links. Each resource in the array is a view only link object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        #### Permissions

        View only links on a registration, public or private, are readable and writeable only by users that are administrators on the registration.

        #### Filtering

        You can optionally request that the response only include view only links that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/registrations/wu3a4/view_only_links/?filter[anonymous]=true.

        View Only Links may be filtered based on their `name`, `anonymous` and `date_created` fields. Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: registrations_view_only_links_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: view-only-links
                  required:
                  - attributes
                  - id
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the view only link.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the view only link ('view-only-links').
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        date_created:
                          type: string
                          description: "The time at which the view only link was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        anonymous:
                          type: boolean
                          description: Whether or not the view only link has anonymized
                            contributors
                          default: true
                        name:
                          type: string
                          description: The name of the view only link
                          default: Shared project link
                        key:
                          type: string
                          description: The view only key
                          readOnly: true
                      description: The properties of the view only link entity.
                      readOnly: true
                    relationships:
                      title: Relationships
                      required:
                      - creator
                      - nodes
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes which this view
                            only link gives read-only access to.
                          format: URL
                        creator:
                          type: string
                          description: A relationship to the user who created this
                            view only link.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the view only link entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        self:
                          href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/relationships/nodes/
                          meta: {}
                        related:
                          href: http://api.osf.io/v2/view_only_links/58d03846a170c50025baae61/nodes/
                          meta: {}
                    creator:
                      links:
                        related:
                          href: http://api.osf.io/v2/users/4xpu9/
                          meta: {}
                  links:
                    self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d03846a170c50025baae61/
                  attributes:
                    date_created: 2017-03-20T20:15:02.488643
                    anonymous: false
                    key: c1df490be3294a9bac01ff05c4097ab7
                    name: vol name
                  type: view_only_links
                  id: 58d03846a170c50025baae61
                - relationships:
                    nodes:
                      links:
                        self:
                          href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/relationships/nodes/
                          meta: {}
                        related:
                          href: http://api.osf.io/v2/view_only_links/58d13827a170c50025baae6e/nodes/
                          meta: {}
                    creator:
                      links:
                        related:
                          href: http://api.osf.io/v2/users/4xpu9/
                          meta: {}
                  links:
                    self: http://api.osf.io/v2/nodes/gaz5n/view_only_links/58d13827a170c50025baae6e/
                  attributes:
                    date_created: 2017-03-21T14:26:47.507504
                    anonymous: false
                    key: 9794ac36085e4d7086ff4dab49daf1cb
                    name: vol name
                  type: view_only_links
                  id: 58d13827a170c50025baae6e
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: View Only Link
  /registrations/{registration_id}/view_only_links/{link_id}/:
    get:
      tags:
      - Registrations
      summary: Retrieve a view only link
      description: |-
        Retrieves the details of a view only link created from this registration.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Permissions

        View only links on a registration, public or private, are readable and writeable only by users that are administrators on the registration.
      operationId: registrations_view_only_links_read
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      - name: link_id
        in: path
        description: The unique identifier of the view only link.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: view-only-links
                required:
                - attributes
                - id
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the view only link.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the view only link ('view-only-links').
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      date_created:
                        type: string
                        description: "The time at which the view only link was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      anonymous:
                        type: boolean
                        description: Whether or not the view only link has anonymized
                          contributors
                        default: true
                      name:
                        type: string
                        description: The name of the view only link
                        default: Shared project link
                      key:
                        type: string
                        description: The view only key
                        readOnly: true
                    description: The properties of the view only link entity.
                    readOnly: true
                  relationships:
                    title: Relationships
                    required:
                    - creator
                    - nodes
                    type: object
                    properties:
                      nodes:
                        type: string
                        description: A relationship to the nodes which this view only
                          link gives read-only access to.
                        format: URL
                      creator:
                        type: string
                        description: A relationship to the user who created this view
                          only link.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the view only link entity.
                    readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    nodes:
                      links:
                        self:
                          href: http://api.osf.io/v2/view_only_links/<link_id>/relationships/nodes/
                          meta: {}
                        related:
                          href: http://api.osf.io/v2/view_only_links/<link_id>/nodes/
                          meta: {}
                    creator:
                      links:
                        related:
                          href: http://api.osf.io/v2/users/<user_id>/
                          meta: {}
                  attributes:
                    date_created: 2017-03-20T20:11:01.603851
                    anonymous: false
                    key: <view_only_link_key>
                    name: Test View Only Link
                  type: view-only-links
                  id: <link_id>
      x-response-schema: View Only Link
  /registrations/{registration_id}/wikis/:
    get:
      tags:
      - Registrations
      summary: List all wikis
      description: |-
        A paginated list of the registration's wiki pages
        #### Returns
        A list of all registration's current wiki page versions ordered by their date_modified. Each resource contains the full representation of the wiki, meaning additional requests to an individual wiki's detail view are not necessary.

        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
        #### Filtering
        Wiki pages can be filtered based on their `name` and `date_modified` fields.
        + `filter[name]=<Str>` -- filter wiki pages by name
        + `filter[date_modified][comparison_operator]=YYYY-MM-DDTH:M:S` -- filter wiki pages based on date modified.

        Possible comparison operators include 'gt' (greater than), 'gte'(greater than or equal to), 'lt' (less than) and 'lte' (less than or equal to). The date must be in the format YYYY-MM-DD and the time is optional.
      operationId: registrations_wikis_list
      parameters:
      - name: registration_id
        in: path
        description: The unique identifier of the registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Wiki
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the wiki.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the wiki (`wikis`).
                    attributes:
                      title: Attributes
                      required:
                      - content_type
                      - current_user_can_comment
                      - date_modified
                      - extra
                      - kind
                      - materialized_path
                      - name
                      - path
                      - size
                      type: object
                      properties:
                        date_modified:
                          type: string
                          description: "The date and time at which the wiki was last\
                            \ modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        kind:
                          type: string
                          description: The type of object.
                          readOnly: true
                        name:
                          type: string
                          description: The name/title of the wiki page.
                          readOnly: true
                        extra:
                          type: string
                          description: "A dictionary containing additional metadata\
                            \ about this wiki, including version information."
                          readOnly: true
                        content_type:
                          type: string
                          description: Content type of the wiki (`text/markdown`).
                          readOnly: true
                        path:
                          type: string
                          description: Path to the wiki object.
                          readOnly: true
                        current_user_can_comment:
                          type: string
                          description: Whether the current user is allowed to post
                            comments on this wiki.
                          readOnly: true
                        materialized_path:
                          type: string
                          description: Materialized path to the wiki object.
                          readOnly: true
                        size:
                          type: string
                          description: Size of the wiki.
                          readOnly: true
                      description: The properties of the wiki.
                    relationships:
                      title: Relationships
                      required:
                      - comments
                      - node
                      - user
                      type: object
                      properties:
                        node:
                          type: string
                          description: A relationship to the associated node.
                        user:
                          type: string
                          description: A relationship to the user associated with
                            this wiki.
                        comments:
                          type: string
                          description: A relationship to the comments related to this
                            wiki.
                      description: URLs to other entities or entity collections that
                        have a relationship to the wiki.
                    links:
                      title: Links
                      type: object
                      properties:
                        download:
                          type: string
                          description: The URL to download the content of the wiki.
                          format: URL
                          readOnly: true
                        info:
                          type: string
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the wiki.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the wiki.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wu3a4/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/edb8y/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/wu3a4/comments/?filter%5Btarget%5D=9rb7g
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/wikis/9rb7g/
                    download: https://api.osf.io/v2/wikis/9rb7g/content/
                    self: https://api.osf.io/v2/wikis/9rb7g/
                  attributes:
                    kind: file
                    name: home
                    date_modified: 2015-02-11T21:16:50.918000
                    extra:
                      version: 1
                    content_type: text/markdown
                    path: /9rb7g
                    current_user_can_comment: false
                    materialized_path: /9rb7g
                    size: 1544
                  type: wikis
                  id: 9rb7g
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Wiki
  /draft_registrations/:
    get:
      tags:
      - Draft Registrations
      summary: Retrieve a list of Draft Registrations
      description: |-
        Retrieve a list of all currently available Draft Registrations for that user.
        #### Permissions
        Only Draft Registration contributors may view draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: draft_registrations_read
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Draft Registration
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the draft registration entity
                      (`draft_registrations`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      title:
                        type: string
                        description: The title of the Draft Registration.
                      description:
                        type: string
                        description: The description of the Draft Registration.
                      category:
                        type: string
                        description: The category of the Draft Registration.
                      tags:
                        type: array
                        description: The searchable tags of the Draft Registration.
                        items:
                          type: string
                      node_license:
                        title: Node License
                        type: object
                        properties:
                          copyright_holders:
                            type: array
                            description: A list of names of copyright holders for
                              the license.
                            items:
                              type: string
                              description: A copyright holders for the license.
                              readOnly: true
                          year:
                            type: integer
                            description: The year the copyright was made.
                      current_user_permissions:
                        type: array
                        description: The current users permission level for the Draft
                          Registration.
                        readOnly: true
                        items:
                          type: string
                      has_project:
                        type: boolean
                        description: This indicates whether a Draft Registration was
                          branched from a project.
                        readOnly: true
                      datetime_initiated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ first initiated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      datetime_updated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ last updated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      registration_metadata:
                        type: object
                        properties: {}
                        description: This is a legacy format for `registration_responses`.
                      registration_responses:
                        type: object
                        properties: {}
                        description: A dictionary of question IDs and responses from
                          the registration schema.
                    description: The properties of the Draft Registration entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      branched_from:
                        type: string
                        description: A link to the node that this draft registration
                          was created from.
                        readOnly: true
                      initiator:
                        type: string
                        description: A link to the user who initiated the draft registration.
                        readOnly: true
                      registration_schema:
                        type: string
                        description: A link to the detailed registration schema that
                          this draft conforms to.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the draft registration entity.
                    readOnly: true
                  links:
                    title: Links
                    required:
                    - html
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the draft registration's page on the
                          OSF.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the draft
                      registration entity.
                    readOnly: true
                example:
                  data:
                    type: draft_registrations
                    relationships:
                      registration_schema:
                        data:
                          id: 61e02b6c90de34000ae3447a
                          type: registration_schemas
            application/json:
              example:
                data:
                - id: 626170854968470203611e2c
                  type: draft-registrations
                  attributes:
                    registration_metadata: {}
                    registration_responses: {}
                    datetime_initiated: 2022-04-21T14:56:05.674349Z
                    datetime_updated: 2022-04-21T14:56:05.908546Z
                    title: Test Draft
                    description: Test
                    category: ""
                    tags: []
                    node_license: null
                    current_user_permissions:
                    - admin
                    - write
                    - read
                    has_project: false
                  relationships:
                    initiator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/gyht4/
                          meta: {}
                      data:
                        id: gyht4
                        type: users
                    branched_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_nodes/yt5fw/
                          meta: {}
                      data:
                        id: yt5fw
                        type: draft_nodes
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/5e795fc0d2833800195735d0/
                          meta: {}
                      data:
                        id: 5e795fc0d2833800195735d0
                        type: registration-schemas
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/registrations/osf/
                          meta: {}
                      data:
                        id: osf
                        type: registration-providers
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/relationships/institutions/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/contributors/
                          meta: {}
                    bibliographic_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/bibliographic_contributors/
                          meta: {}
                    license:
                      data: null
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/relationships/subjects/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/
                meta:
                  total: 1
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/draft_registrations/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Draft Registration
    post:
      tags:
      - Draft Registrations
      summary: Create a Draft Registration
      description: "This creates a Draft Registration that can be used to edit and\
        \ register research.\nDraft Registrations contain Registration questions that\
        \ will become part of the Registration. A Registration is a frozen version\
        \ of the project that can never be deleted, but can be withdrawn and have\
        \ it's metadata edited.\nA Draft Registration created by this endpoint will\
        \ not have a Project linked with it by default, but if the user includes a\
        \ `branched_from` attribute in their Draft Registration creation payload with\
        \ the value of the `branched_from` being guid of a Project they have permissions\
        \ for the Draft Registration will be linked to the Project. If you linked\
        \ your Draft Registration on a Project, your original Project remains editable\
        \ and will now have the Draft Registration linked to it. \n#### Permissions\n\
        Any user can create a Draft Registration. If the `branched_from` attribute\
        \ is provided, then the user must be an ADMIN contributor on the Project being\
        \ registered.\n#### Required\nRequired fields for creating a Draft Registration\
        \ include:\n\n&nbsp;&nbsp;&nbsp;&nbsp;`schema_id`\n#### Returns\nReturns a\
        \ JSON object with a `data` key containing the representation of the created\
        \ Draft Registration, if the request is successful.\n\nIf the request is unsuccessful,\
        \ an `errors` key containing information about the failure will be returned.\
        \ Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand\
        \ why this request may have failed."
      operationId: draft_registrations_create
      requestBody:
        content:
          application/json:
            schema:
              title: Draft Registration
              required:
              - attributes
              - id
              - links
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the draft registration entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the draft registration entity
                    (`draft_registrations`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    title:
                      type: string
                      description: The title of the Draft Registration.
                    description:
                      type: string
                      description: The description of the Draft Registration.
                    category:
                      type: string
                      description: The category of the Draft Registration.
                    tags:
                      type: array
                      description: The searchable tags of the Draft Registration.
                      items:
                        type: string
                    node_license:
                      title: Node License
                      type: object
                      properties:
                        copyright_holders:
                          type: array
                          description: A list of names of copyright holders for the
                            license.
                          items:
                            type: string
                            description: A copyright holders for the license.
                            readOnly: true
                        year:
                          type: integer
                          description: The year the copyright was made.
                    current_user_permissions:
                      type: array
                      description: The current users permission level for the Draft
                        Registration.
                      readOnly: true
                      items:
                        type: string
                    has_project:
                      type: boolean
                      description: This indicates whether a Draft Registration was
                        branched from a project.
                      readOnly: true
                    datetime_initiated:
                      type: string
                      description: "The time at which the draft registration was first\
                        \ initiated, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    datetime_updated:
                      type: string
                      description: "The time at which the draft registration was last\
                        \ updated, as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    registration_metadata:
                      type: object
                      properties: {}
                      description: This is a legacy format for `registration_responses`.
                    registration_responses:
                      type: object
                      properties: {}
                      description: A dictionary of question IDs and responses from
                        the registration schema.
                  description: The properties of the Draft Registration entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    branched_from:
                      type: string
                      description: A link to the node that this draft registration
                        was created from.
                      readOnly: true
                    initiator:
                      type: string
                      description: A link to the user who initiated the draft registration.
                      readOnly: true
                    registration_schema:
                      type: string
                      description: A link to the detailed registration schema that
                        this draft conforms to.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the draft registration entity.
                  readOnly: true
                links:
                  title: Links
                  required:
                  - html
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the draft registration's page on the
                        OSF.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the draft registration
                    entity.
                  readOnly: true
              example:
                data:
                  type: draft_registrations
                  relationships:
                    registration_schema:
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration_schemas
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                title: Draft Registration
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the draft registration entity
                      (`draft_registrations`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      title:
                        type: string
                        description: The title of the Draft Registration.
                      description:
                        type: string
                        description: The description of the Draft Registration.
                      category:
                        type: string
                        description: The category of the Draft Registration.
                      tags:
                        type: array
                        description: The searchable tags of the Draft Registration.
                        items:
                          type: string
                      node_license:
                        title: Node License
                        type: object
                        properties:
                          copyright_holders:
                            type: array
                            description: A list of names of copyright holders for
                              the license.
                            items:
                              type: string
                              description: A copyright holders for the license.
                              readOnly: true
                          year:
                            type: integer
                            description: The year the copyright was made.
                      current_user_permissions:
                        type: array
                        description: The current users permission level for the Draft
                          Registration.
                        readOnly: true
                        items:
                          type: string
                      has_project:
                        type: boolean
                        description: This indicates whether a Draft Registration was
                          branched from a project.
                        readOnly: true
                      datetime_initiated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ first initiated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      datetime_updated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ last updated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      registration_metadata:
                        type: object
                        properties: {}
                        description: This is a legacy format for `registration_responses`.
                      registration_responses:
                        type: object
                        properties: {}
                        description: A dictionary of question IDs and responses from
                          the registration schema.
                    description: The properties of the Draft Registration entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      branched_from:
                        type: string
                        description: A link to the node that this draft registration
                          was created from.
                        readOnly: true
                      initiator:
                        type: string
                        description: A link to the user who initiated the draft registration.
                        readOnly: true
                      registration_schema:
                        type: string
                        description: A link to the detailed registration schema that
                          this draft conforms to.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the draft registration entity.
                    readOnly: true
                  links:
                    title: Links
                    required:
                    - html
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the draft registration's page on the
                          OSF.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the draft
                      registration entity.
                    readOnly: true
                example:
                  data:
                    type: draft_registrations
                    relationships:
                      registration_schema:
                        data:
                          id: 61e02b6c90de34000ae3447a
                          type: registration_schemas
            application/json:
              example:
                data:
                  id: 62716076d90ebe0017f2bf42
                  type: draft_registrations
                  attributes:
                    registration_metadata: {}
                    registration_responses: {}
                    datetime_initiated: 2022-05-03T17:03:50.288542
                    datetime_updated: 2022-05-03T17:03:50.560153
                    title: Untitled
                    description: ""
                    category: ""
                    tags: []
                    node_license: null
                  relationships:
                    initiator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/fgvc6/
                          meta: {}
                      data:
                        id: fgvc6
                        type: users
                    branched_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_nodes/nmj5w/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/61e02b6c90de34000ae3447a/
                          meta: {}
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration-schemas
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/registrations/osf/
                          meta: {}
                      data:
                        id: osf
                        type: registration-providers
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/relationships/institutions/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/contributors/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/relationships/subjects/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/draft_registrations/62716076d90ebe0017f2bf42/
                meta:
                  version: "2.0"
      x-response-schema: Draft Registration
      x-codegen-request-body-name: body
  /draft_registrations/{draft_id}/:
    get:
      tags:
      - Draft Registrations
      summary: Retrieve a Draft Registration
      description: |-
        Retrieve the details of a given Draft Registration
        Draft Registrations contain Registration questions that will become part of the Registration. A Registration is a frozen version of the project that can never be deleted, but can be withdrawn and have it's metadata edited.

        If you based your Draft Registration on a Project, your original Project remains editable but will now have the Draft Registration linked to it.
        #### Permissions
        Only draft registration contributors may view draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested draft registration, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_read
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Draft Registration
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the draft registration entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the draft registration entity
                      (`draft_registrations`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      title:
                        type: string
                        description: The title of the Draft Registration.
                      description:
                        type: string
                        description: The description of the Draft Registration.
                      category:
                        type: string
                        description: The category of the Draft Registration.
                      tags:
                        type: array
                        description: The searchable tags of the Draft Registration.
                        items:
                          type: string
                      node_license:
                        title: Node License
                        type: object
                        properties:
                          copyright_holders:
                            type: array
                            description: A list of names of copyright holders for
                              the license.
                            items:
                              type: string
                              description: A copyright holders for the license.
                              readOnly: true
                          year:
                            type: integer
                            description: The year the copyright was made.
                      current_user_permissions:
                        type: array
                        description: The current users permission level for the Draft
                          Registration.
                        readOnly: true
                        items:
                          type: string
                      has_project:
                        type: boolean
                        description: This indicates whether a Draft Registration was
                          branched from a project.
                        readOnly: true
                      datetime_initiated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ first initiated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      datetime_updated:
                        type: string
                        description: "The time at which the draft registration was\
                          \ last updated, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      registration_metadata:
                        type: object
                        properties: {}
                        description: This is a legacy format for `registration_responses`.
                      registration_responses:
                        type: object
                        properties: {}
                        description: A dictionary of question IDs and responses from
                          the registration schema.
                    description: The properties of the Draft Registration entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      branched_from:
                        type: string
                        description: A link to the node that this draft registration
                          was created from.
                        readOnly: true
                      initiator:
                        type: string
                        description: A link to the user who initiated the draft registration.
                        readOnly: true
                      registration_schema:
                        type: string
                        description: A link to the detailed registration schema that
                          this draft conforms to.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the draft registration entity.
                    readOnly: true
                  links:
                    title: Links
                    required:
                    - html
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the draft registration's page on the
                          OSF.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the draft
                      registration entity.
                    readOnly: true
                example:
                  data:
                    type: draft_registrations
                    relationships:
                      registration_schema:
                        data:
                          id: 61e02b6c90de34000ae3447a
                          type: registration_schemas
            application/json:
              example:
                data:
                  id: 626ffc1ad90ebe0011fc7601
                  type: draft-registrations
                  attributes:
                    registration_metadata: {}
                    registration_responses: {}
                    datetime_initiated: 2022-05-02T15:43:22.981108Z
                    datetime_updated: 2022-05-03T13:08:47.334711Z
                    title: Untitled
                    description: ""
                    category: ""
                    tags: []
                    node_license: null
                  relationships:
                    initiator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/fgvc6/
                          meta: {}
                      data:
                        id: fgvc6
                        type: users
                    branched_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_nodes/ng4w2/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/61e02b6c90de34000ae3447a/
                          meta: {}
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration-schemas
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/registrations/osf/
                          meta: {}
                      data:
                        id: osf
                        type: registration-providers
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/relationships/institutions/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/contributors/
                          meta: {}
                    license:
                      data: null
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/relationships/subjects/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/
                meta:
                  version: "2.20"
      x-response-schema: Draft Registration
    delete:
      tags:
      - Draft Registrations
      summary: Delete a draft registration
      description: |-
        Permanently deletes a draft registration. A draft that has already been registered cannot be deleted.
        #### Permissions
        Only draft registration contributors with ADMIN permissions may delete draft registrations
        #### Returns
        If the request is successful, no content is returned.
        If the request is unsuccessful, a JSON object with an `errors` key containing information about the failure will be returned. Refer to the [list of error codes]() to understand why this request may have failed.
      operationId: nodes_draft_registrations_delete
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
    patch:
      tags:
      - Draft Registrations
      summary: Update a Draft Registration
      description: |-
        Updates a Draft Registration by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged. Note this will not register or change the machine state of a Draft Registration, it can only edit the Draft Registration's attributes prior to its registration.
        #### Permissions
        Only draft registration contributors may view draft registrations and only draft registration contributors with WRITE or ADMIN permissions may update draft registrations.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated draft registration, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: nodes_draft_registrations_partial_update
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  id: 626ffc1ad90ebe0011fc7601
                  type: draft_registrations
                  attributes:
                    title: test title change
                    registration_responses:
                      summary: Test Value
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  id: 626ffc1ad90ebe0011fc7601
                  type: draft_registrations
                  attributes:
                    registration_metadata:
                      summary:
                        comments: []
                        value: Test
                        extra: []
                      uploader:
                        comments: []
                        value: ""
                        extra: []
                    registration_responses:
                      summary: Test Value
                    datetime_initiated: 2022-05-02T15:43:22.981108
                    datetime_updated: 2022-05-03T18:34:29.504428
                    title: test title change
                    description: ""
                    category: ""
                    tags: []
                    node_license: None
                  relationships:
                    initiator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/fgvc6/
                          meta: {}
                      data:
                        id: fgvc6
                        type: users
                    branched_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_nodes/ng4w2/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/61e02b6c90de34000ae3447a/
                          meta: {}
                      data:
                        id: 61e02b6c90de34000ae3447a
                        type: registration-schemas
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/registrations/osf/
                          meta: {}
                      data:
                        id: osf
                        type: registration-providers
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/relationships/institutions/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/contributors/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/relationships/subjects/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/
                meta:
                  version: "2.0"
      x-response-schema: Draft Registration
      x-codegen-request-body-name: body
  /draft_registrations/{draft_id}/contributors/:
    get:
      tags:
      - Draft Registrations
      summary: Retreive a list Contributors from a Draft Registration
      description: |-
        Retrieves the details of all given Contributors for a Draft Registration.
        Contributors are users who can make changes to the Draft Registration.
        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
      operationId: draft_registration_contributors_list
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the Draft Registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              example:
                data:
                - id: 626170854968470203611e2c-gyht4
                  type: contributors
                  attributes:
                    index: 0
                    bibliographic: true
                    permission: admin
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/gyht4/
                          meta: {}
                      data:
                        id: gyht4
                        type: users
                    draft_registration:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/
                          meta: {}
                  embeds:
                    users:
                      data:
                        id: gyht4
                        type: users
                        attributes:
                          full_name: John Tordoff
                          given_name: John
                          middle_names: ""
                          family_name: Tordoff
                          suffix: ""
                          date_registered: 2017-04-26T15:39:29.779518Z
                          active: true
                          timezone: America/New_York
                          locale: en_US
                          social:
                            ssrn: ""
                            orcid: 0000-0001-8693-9390
                            github:
                            - Johnetordoff
                            scholar: ""
                            twitter: []
                            linkedIn: []
                            impactStory: ""
                            baiduScholar: ""
                            researchGate: ""
                            researcherId: ""
                            profileWebsites:
                            - https://test.com
                            academiaProfileID: ""
                            academiaInstitution: ""
                          employment: []
                          education: []
                          can_view_reviews: []
                          accepted_terms_of_service: true
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/gyht4/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/preprints/
                                meta: {}
                          emails:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/settings/emails/
                                meta: {}
                          default_region:
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/
                                meta: {}
                            data:
                              id: us
                              type: regions
                          settings:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/settings/
                                meta: {}
                            data:
                              id: gyht4
                              type: user-settings
                        links:
                          html: https://osf.io/gyht4/
                          profile_image: https://secure.gravatar.com/avatar/a61b3827662ddbc604c78e1c8f6a3636?d=identicon
                          self: https://api.osf.io/v2/users/gyht4/
                  links:
                    self: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/contributors/gyht4/
                meta:
                  total: 1
                  per_page: 10
                  total_bibliographic: 1
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/contributors/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Contributor
    post:
      tags:
      - Draft Registrations
      summary: Add a contributor to a Draft Registration
      description: |-
        Adds a contributor to a Draft Registration, contributors can view, edit, register or delete a Draft Registration depending on their permissions.
        Contributors are categorized as either "bibliographic" or "non-bibliographic" contributors. From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
        #### Permissions
        Only project administrators can add contributors to a Draft Registration.
        #### Required
        A relationship object with a `data` key, containing the `users` type and valid user ID is required.
        All attributes describing the relationship between the node and the user are optional.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the new contributor, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: draft_registration_contributors_create
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the Draft Registration.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Contributor
              required:
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: "The identifier of the contributor entity. Contributor\
                    \ identifiers have the form {node_id}-{user_id}."
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the contributor entity (`contributors`).
                  readOnly: true
                attributes:
                  title: Attributes
                  type: object
                  properties:
                    bibliographic:
                      type: boolean
                      description: Whether or not the contributor will be included
                        in citations for the node. The default value is true.
                    index:
                      type: integer
                      description: The position of this contributor in the list of
                        project contributors and in project citations.
                    permission:
                      type: string
                      description: The permission level of the contributor. The default
                        value is 'write'.
                      enum:
                      - read
                      - write
                      - admin
                    unregistered_contributor:
                      type: string
                      description: The assigned name of the contributor if the contributor
                        has not yet claimed their account.
                      readOnly: true
                  description: The properties of the contributor entity.
                relationships:
                  title: Relationships
                  required:
                  - node
                  - user
                  type: object
                  properties:
                    node:
                      type: string
                      description: "A relationship to the node that was created for\
                        \ the preprint, or from which the preprint was created."
                      readOnly: true
                    user:
                      type: string
                      description: "A relationship to the file that is designated\
                        \ as the preprint's primary file, or the manuscript of the\
                        \ preprint."
                  description: URLs to other entities or entity collections that have
                    a relationship to the contributor entity.
                links:
                  title: Links
                  type: object
                  properties:
                    self:
                      type: string
                      description: A link to the the canonical API endpoint for the
                        contributor.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the contributor
                    entity.
                  readOnly: true
              example:
                data:
                  type: contributors
                  attributes: {}
                  relationships:
                    user:
                      data:
                        type: users
                        id: guid0
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              example:
                data:
                  id: 62718748d90ebe0012c38815-tmxzg
                  type: contributors
                  attributes:
                    index: 2
                    bibliographic: true
                    permission: write
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: http://localhost:8000/v2/users/tmxzg/
                          meta: {}
                      data:
                        id: tmxzg
                        type: users
                    draft_registration:
                      links:
                        related:
                          href: http://localhost:8000/v2/draft_registrations/62718748d90ebe0012c38815/
                          meta: {}
                  embeds:
                    users:
                      data:
                        id: tmxzg
                        type: users
                        attributes:
                          full_name: Paul Dominguez
                          given_name: Paul
                          middle_names: ""
                          family_name: Dominguez
                          suffix: ""
                          date_registered: 2022-03-04T20:13:35.594990
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: http://localhost:8000/v2/users/tmxzg/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: http://localhost:8000/v2/users/tmxzg/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: http://localhost:8000/v2/users/tmxzg/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: http://localhost:8000/v2/users/tmxzg/institutions/
                                meta: {}
                              self:
                                href: http://localhost:8000/v2/users/tmxzg/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: http://localhost:8000/v2/users/tmxzg/preprints/
                                meta: {}
                        links:
                          html: http://localhost:5000/tmxzg/
                          profile_image: https://secure.gravatar.com/avatar/c16b8f65c6ac5dc8511fbffab8ef8918?d=identicon
                          self: http://localhost:8000/v2/users/tmxzg/
                  links:
                    self: http://localhost:8000/v2/draft_registrations/62718748d90ebe0012c38815/contributors/tmxzg/
                meta:
                  version: "2.0"
      x-response-schema: Contributor
      x-codegen-request-body-name: body
  /draft_registrations/{draft_id}/contributors/{user_id}/:
    get:
      tags:
      - Draft Registrations
      summary: Retreive a Contributor from a Draft Registration
      description: |-
        Retrieves the details of a given contributor.

        Contributors are users who can view or edit to the Draft Registrations.

        Contributors are categorized as either "bibliographic" or "non-bibliographic". From a permissions standpoint, both are the same, but bibliographic contributors are included in citations and are listed on the project overview page on the OSF, while non-bibliographic contributors are not.
      operationId: draft_registration_contributors_create
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the Draft Registration.
        required: true
        schema:
          type: string
      - name: user_id
        in: path
        description: The unique identifier of the Contributor.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              example:
                data:
                  id: 626170854968470203611e2c-gyht4
                  type: contributors
                  attributes:
                    index: 0
                    bibliographic: true
                    permission: admin
                    unregistered_contributor: null
                  relationships:
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/gyht4/
                          meta: {}
                      data:
                        id: gyht4
                        type: users
                    draft_registration:
                      links:
                        related:
                          href: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/
                          meta: {}
                  embeds:
                    users:
                      data:
                        id: gyht4
                        type: users
                        attributes:
                          full_name: John Tordoff
                          given_name: John
                          middle_names: ""
                          family_name: Tordoff
                          suffix: ""
                          date_registered: 2017-04-26T15:39:29.779518Z
                          active: true
                          timezone: America/New_York
                          locale: en_US
                          social:
                            ssrn: ""
                            orcid: 0000-0001-8693-9390
                            github:
                            - Johnetordoff
                            scholar: ""
                            twitter: []
                            linkedIn: []
                            impactStory: ""
                            baiduScholar: ""
                            researchGate: ""
                            researcherId: ""
                            profileWebsites:
                            - https://test.com
                            academiaProfileID: ""
                            academiaInstitution: ""
                          employment: []
                          education: []
                          can_view_reviews: []
                          accepted_terms_of_service: true
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/institutions/
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/users/gyht4/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/preprints/
                                meta: {}
                          emails:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/settings/emails/
                                meta: {}
                          default_region:
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/
                                meta: {}
                            data:
                              id: us
                              type: regions
                          settings:
                            links:
                              related:
                                href: https://api.osf.io/v2/users/gyht4/settings/
                                meta: {}
                            data:
                              id: gyht4
                              type: user-settings
                        links:
                          html: https://osf.io/gyht4/
                          profile_image: https://secure.gravatar.com/avatar/a61b3827662ddbc604c78e1c8f6a3636?d=identicon
                          self: https://api.osf.io/v2/users/gyht4/
                  links:
                    self: https://api.osf.io/v2/draft_registrations/626170854968470203611e2c/contributors/gyht4/
                meta:
                  version: "2.20"
      x-response-schema: Contributor
  /draft_registrations/{draft_id}/institutions/:
    get:
      tags:
      - Draft Registrations
      summary: Retrieve Institutions afilliated with a Draft Registration
      description: "Once a properly authenticated user has marked their registration\
        \ as affiliated with an institution, that institution and any others added\
        \ will appear in this list."
      operationId: nodes_draft_registrations_read
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Institution
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the institution entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the institution entity (`institutions`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      auth_url:
                        type: string
                        description: Url used to authenticate institution specific
                          login.
                        readOnly: true
                      logo_path:
                        type: string
                        description: Static path to the institution specific logo.
                        readOnly: true
                      name:
                        type: string
                        description: Full name of the institution.
                        readOnly: true
                      description:
                        type: string
                        description: Description of the institution.
                        readOnly: true
                    description: The properties of the institution entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      nodes:
                        type: string
                        description: A relationship to the nodes affiliated with the
                          institution.
                        format: URL
                        readOnly: true
                      users:
                        type: string
                        description: A relationship to the users affiliated with the
                          institution.
                        format: URL
                        readOnly: true
                      registrations:
                        type: string
                        description: A relationship to the registrations affiliated
                          with the institution.
                        format: URL
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the institution entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for the institution.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the institutions
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                - id: lab
                  type: institutions
                  attributes:
                    name: "Lab [Test]"
                    description: Lab test
                    assets:
                      logo: /static/img/institutions/shields/lab-shield.png
                      logo_rounded: /static/img/institutions/shields-rounded-corners/lab-shield-rounded-corners.png
                  relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/lab/nodes/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/lab/registrations/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/lab/users/
                          meta: {}
                    department_metrics:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/lab/metrics/departments/
                          meta: {}
                    user_metrics:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/lab/metrics/users/
                          meta: {}
                    summary_metrics:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/lab/metrics/summary/
                          meta: {}
                      data:
                        id: a2jlab
                        type: institution-summary-metrics
                  links:
                    self: https://api.osf.io/v2/institutions/lab/
                    html: http://localhost:5000/institutions/lab/
                meta:
                  total: 1
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/institutions/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Draft Registration
  /draft_registrations/{draft_id}/subjects/:
    get:
      tags:
      - Draft Registrations
      summary: Retrieve Subjects associated with a Draft Registration
      description: "This retrieves a list of subjects associated with a Draft Registration.\
        \ Subjects are formatted here in a flat paginated list, but are hierarchical\
        \ and nested by specificity of subject matter."
      operationId: nodes_draft_registrations_subjects
      parameters:
      - name: draft_id
        in: path
        description: The unique identifier of the draft registration.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Subject
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the Subject.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the Subject (`subject`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      text:
                        type: string
                        description: The name for the subject (`Arts and Humanities`)
                        readOnly: true
                      taxonomy_name:
                        type: string
                        description: The name for the taxonomy used to name subjects
                          (`bepress`)
                        readOnly: true
                    description: The attributes of the Subject.
                    readOnly: true
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      parent:
                        type: string
                        description: A link to the parent for this Subject.
                        format: URL
                        readOnly: true
                      children:
                        type: string
                        description: A link to the children for this Subject.
                        format: URL
                        readOnly: true
                    description: Links to other entities or entity collections that
                      have a relationship to the file entity.
                    readOnly: true
                  embeds:
                    title: Embeds
                    type: object
                    properties:
                      parent:
                        title: parent
                        type: object
                        properties:
                          data:
                            title: data
                            type: object
                            properties:
                              data:
                                title: data
                                type: object
                                properties: {}
                                description: A JSON object containing the embedded
                                  information.
                                readOnly: true
                              id:
                                type: string
                                description: The unique identifier of the Subject.
                                readOnly: true
                              type:
                                type: string
                                description: The type identifier of the Subject (`subject`).
                                readOnly: true
                              attributes:
                                title: Attributes
                                type: object
                                properties:
                                  text:
                                    type: string
                                    description: The name for the subject (`Arts and
                                      Humanities`)
                                    readOnly: true
                                  taxonomy_name:
                                    type: string
                                    description: The name for the taxonmy used to
                                      name subjects (`bepress`)
                                    readOnly: true
                                description: The attributes of the Subject.
                                readOnly: true
                              relationships:
                                title: Relationships
                                type: object
                                properties:
                                  parent:
                                    type: string
                                    description: A link to the parent for this Subject.
                                    format: URL
                                    readOnly: true
                                  children:
                                    type: string
                                    description: A link to the children for this Subject.
                                    format: URL
                                    readOnly: true
                                description: Links to other entities or entity collections
                                  that have a relationship to the file entity.
                                readOnly: true
                            readOnly: true
                        description: The parent of the Subject.
                        readOnly: true
                    description: The parent is always embedded in the Subject response.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: A link to the detail page for a Subject.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the Subject
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                - id: 61e02bee90de34000ae3449e
                  type: subjects
                  attributes:
                    text: Philosophy
                    taxonomy_name: ""
                  relationships:
                    parent:
                      links:
                        related:
                          href: https://api.osf.io/v2/subjects/61e02bee90de34000ae344b5/
                          meta: {}
                      data:
                        id: 61e02bee90de34000ae344b5
                        type: subjects
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/subjects/61e02bee90de34000ae3449e/children/
                          meta: {}
                  embeds:
                    parent:
                      data:
                        id: 61e02bee90de34000ae344b5
                        type: subjects
                        attributes:
                          text: Arts and Humanities
                          taxonomy_name: ""
                        relationships:
                          parent:
                            data: null
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/subjects/61e02bee90de34000ae344b5/children/
                                meta: {}
                        embeds:
                          parent:
                            errors:
                            - detail: Not found.
                        links:
                          self: https://api.osf.io/v2/subjects/61e02bee90de34000ae344b5/
                  links:
                    self: https://api.osf.io/v2/subjects/61e02bee90de34000ae3449e/
                meta:
                  total: 1
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/draft_registrations/626ffc1ad90ebe0011fc7601/subjects/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Draft Registration
  /taxonomies/:
    get:
      tags:
      - Taxonomies
      summary: List all taxonomies
      description: |2-

        A paginated list of all [bepress disciplines taxonomies](https://www.bepress.com/wp-content/uploads/2016/12/Digital-Commons-Disciplines-taxonomy-2017-01.pdf).
        Note: this API endpoint is under active development, and is subject to change in the future.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 taxonomies. Each resource in the array is a separate taxonomy object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include taxonomies that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/taxonomies/?filter['id']='{taxonomy_id}'.

        Taxonomies may be filtered by their `id`, `parents`, and `text`.
      operationId: taxonomies_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Taxonomy
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the taxonomy entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the taxonomy entity (`taxonomies`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        text:
                          type: string
                          description: The text name of the taxonomy
                          readOnly: true
                        child_count:
                          type: integer
                          description: The number of children this taxonomy contains.
                          readOnly: true
                        parents:
                          type: array
                          description: An array of JSON objects containing keys for
                            `text` (name) and `id` (unique identifier) of this taxonomy's
                            parents
                          readOnly: true
                          items:
                            type: string
                      description: The properties of the taxonomy entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        parents:
                          type: array
                          description: An array of links to to this taxonomy's parents.
                            This field is deprecated as of verson 2.4.
                          readOnly: true
                          items:
                            type: string
                        self:
                          type: string
                          description: A link to the detail page for the taxonomy.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the taxonomy
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca838/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240d954be81056ceca97a/
                  attributes:
                    text: History of Philosophy
                    parents:
                    - text: Philosophy
                      id: 584240d954be81056ceca97a
                    child_count: 0
                  type: taxonomies
                  id: 584240d854be81056ceca838
                - links:
                    self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca839/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240db54be81056cecacd3/
                  attributes:
                    text: Animal Law
                    parents:
                    - text: Law
                      id: 584240db54be81056cecacd3
                    child_count: 0
                  type: taxonomies
                  id: 584240d854be81056ceca839
                - links:
                    self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca83a/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240db54be81056cecacd3/
                  attributes:
                    text: Consumer Protection Law
                    parents:
                    - text: Law
                      id: 584240db54be81056cecacd3
                    child_count: 0
                  type: taxonomies
                  id: 584240d854be81056ceca83a
                - links:
                    self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca83b/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240da54be81056cecaa9c/
                  attributes:
                    text: Missions and World Christianity
                    parents:
                    - text: Religion
                      id: 584240da54be81056cecaa9c
                    child_count: 0
                  type: taxonomies
                  id: 584240d854be81056ceca83b
                - links:
                    self: https://api.osf.io/v2/taxonomies/584240d854be81056ceca83c/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240d954be81056ceca8fd/
                  attributes:
                    text: Other Teacher Education and Professional Development
                    parents:
                    - text: Teacher Education and Professional Development
                      id: 584240d954be81056ceca8fd
                    child_count: 0
                  type: taxonomies
                  id: 584240d854be81056ceca83c
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta: null
                  total: 5
                  per_page: 10
      x-response-schema: Taxonomy
  /taxonomies/{taxonomy_id}/:
    get:
      tags:
      - Taxonomies
      summary: Retrieve a taxonomy
      description: |-
        Retrieves the details of a taxonomy.
        #### Returns

        Returns a JSON object with a `data` key containing the representation of the requested taxonomy, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: taxonomies_read
      parameters:
      - name: taxonomy_id
        in: path
        description: The unique identifier of the taxonomy.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Taxonomy
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the taxonomy entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the taxonomy entity (`taxonomies`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      text:
                        type: string
                        description: The text name of the taxonomy
                        readOnly: true
                      child_count:
                        type: integer
                        description: The number of children this taxonomy contains.
                        readOnly: true
                      parents:
                        type: array
                        description: An array of JSON objects containing keys for
                          `text` (name) and `id` (unique identifier) of this taxonomy's
                          parents
                        readOnly: true
                        items:
                          type: string
                    description: The properties of the taxonomy entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      parents:
                        type: array
                        description: An array of links to to this taxonomy's parents.
                          This field is deprecated as of verson 2.4.
                        readOnly: true
                        items:
                          type: string
                      self:
                        type: string
                        description: A link to the detail page for the taxonomy.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the taxonomy
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links:
                    self: https://api.osf.io/v2/taxonomies/584240d954be81056ceca841/
                    parents:
                    - https://api.osf.io/v2/taxonomies/584240da54be81056cecab8f/
                  attributes:
                    text: Public Economics
                    parents:
                    - text: Economics
                      id: 584240da54be81056cecab8f
                    child_count: 0
                  type: taxonomies
                  id: 584240d954be81056ceca841
      x-response-schema: Taxonomy
  /users/:
    get:
      tags:
      - Users
      summary: List all users
      description: |2-

        A paginated list of all users registered on the OSF. The returned users are sorted by their `date_registered`, with the most recently registered users appearing first.

        The subroute `/users/me/` is a special endpoint that always points to the currently logged-in user.
        #### Versioning
        As of version `2.3`, merged users will not be returned from this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 users. Each resource in the array is a separate users object and contains the full representation of the user, meaning additional requests to a user's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        This request should never return an error.
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/?filter[family_name]=Nosek.

        Users may be filtered by their `id`, `full_name`, `given_name`, `middle_name`, or `family_name`.
      operationId: users_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: User
                  required:
                  - attributes
                  - id
                  - links
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the user entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the user entity (`users`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - active
                      - date_registered
                      - full_name
                      type: object
                      properties:
                        active:
                          type: boolean
                          description: Whether or not the user is an active user.
                          readOnly: true
                        date_registered:
                          type: string
                          description: "The time at which the user registered their\
                            \ account, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        family_name:
                          type: string
                          description: "The family name of the user, used for bibliographic\
                            \ citations."
                        full_name:
                          type: string
                          description: "The full name of the user, used for display\
                            \ on the OSF."
                        given_name:
                          type: string
                          description: "The given name of the user, used for bibliographic\
                            \ citations."
                        locale:
                          type: string
                          description: "The user's locale, e.g. 'en_US'."
                        middle_names:
                          type: string
                          description: "The middle names of the user, used for bibliographic\
                            \ citations."
                        suffix:
                          type: string
                          description: "The suffix of the user, used for bibliographic\
                            \ citations."
                        timezone:
                          type: string
                          description: "The user's timezone, e.g. 'Etc/UTC'."
                      description: The properties of the user entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        institutions:
                          type: string
                          description: A link to the list of institutions the user
                            is affiliated with.
                          readOnly: true
                        nodes:
                          type: string
                          description: A link to the list of nodes the user is a contributor
                            to.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the user entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the user's profile page on the OSF.
                          format: URL
                          readOnly: true
                        profile_image:
                          type: string
                          description: A link to the user's profile image.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the user
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: users
                      id: "{user_id}"
                      attributes:
                        full_name: Casey M. Rollins
                        middle_names: Marie
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/q7fts/nodes/
                          meta: {}
                    institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/users/q7fts/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/users/q7fts/institutions/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/users/q7fts/
                    html: https://osf.io/q7fts/
                    profile_image: https://secure.gravatar.com/avatar/e9d9311ab2f5ab7492a86ac9adb5c8e9?d=identicon
                  attributes:
                    family_name: Rollins
                    suffix: ""
                    locale: en_US
                    date_registered: 2014-06-15T17:39:06.701000
                    middle_names: ""
                    given_name: Casey
                    full_name: Casey Rollins
                    active: true
                    timezone: America/New_York
                  type: users
                  id: q7fts
                links:
                  first: null
                  last: https://api.osf.io/v2/users/?page=4337
                  prev: null
                  next: https://api.osf.io/v2/users/?page=2
                  meta:
                    total: 43370
                    per_page: 10
      x-response-schema: User
  /users/{user_id}/:
    get:
      tags:
      - Users
      summary: Retrieve a user
      description: |-
        Retrieves the details of a given users.

        The returned information includes the user's bibliographic information and the date the user was registered.

        Additionally, relationships to the list of institutions with which the user is affiliated, and to the list of nodes which the user contributes to (that the requesting user has permission to see) are returned.

        If `me` is given as the `user_id` in the request path, the record of the currently logged-in user will be returned.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested user, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: users_read
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: User
                required:
                - attributes
                - id
                - links
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the user entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the user entity (`users`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    required:
                    - active
                    - date_registered
                    - full_name
                    type: object
                    properties:
                      active:
                        type: boolean
                        description: Whether or not the user is an active user.
                        readOnly: true
                      date_registered:
                        type: string
                        description: "The time at which the user registered their\
                          \ account, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      family_name:
                        type: string
                        description: "The family name of the user, used for bibliographic\
                          \ citations."
                      full_name:
                        type: string
                        description: "The full name of the user, used for display\
                          \ on the OSF."
                      given_name:
                        type: string
                        description: "The given name of the user, used for bibliographic\
                          \ citations."
                      locale:
                        type: string
                        description: "The user's locale, e.g. 'en_US'."
                      middle_names:
                        type: string
                        description: "The middle names of the user, used for bibliographic\
                          \ citations."
                      suffix:
                        type: string
                        description: "The suffix of the user, used for bibliographic\
                          \ citations."
                      timezone:
                        type: string
                        description: "The user's timezone, e.g. 'Etc/UTC'."
                    description: The properties of the user entity.
                  relationships:
                    title: Relationships
                    type: object
                    properties:
                      institutions:
                        type: string
                        description: A link to the list of institutions the user is
                          affiliated with.
                        readOnly: true
                      nodes:
                        type: string
                        description: A link to the list of nodes the user is a contributor
                          to.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the user entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      html:
                        type: string
                        description: A link to the user's profile page on the OSF.
                        format: URL
                        readOnly: true
                      profile_image:
                        type: string
                        description: A link to the user's profile image.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the user entity.
                    readOnly: true
                example:
                  data:
                    type: users
                    id: "{user_id}"
                    attributes:
                      full_name: Casey M. Rollins
                      middle_names: Marie
            application/json:
              example:
                data:
                  relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/q7fts/nodes/
                          meta: {}
                    institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/users/q7fts/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/users/q7fts/institutions/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/users/q7fts/
                    html: https://osf.io/q7fts/
                    profile_image: https://secure.gravatar.com/avatar/e9d9311ab2f5ab7492a86ac9adb5c8e9?d=identicon
                  attributes:
                    family_name: Rollins
                    suffix: ""
                    locale: en_US
                    date_registered: 2014-06-15T17:39:06.701000
                    middle_names: ""
                    given_name: Casey
                    full_name: Casey Rollins
                    active: true
                    timezone: America/New_York
                  type: users
                  id: q7fts
      x-response-schema: User
    patch:
      tags:
      - Users
      summary: Update a user
      description: |-
        Updates a user by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.

        Users can be updated with either a **PUT** or **PATCH** request. The `full_name` field is mandatory in a **PUT** request, and optional in a **PATCH**.

        **Note**: if you make a PUT/PATCH request to the `/users/me/` endpoint, you must still provide your full user ID in the ID field of the request. We do not support using the `me` alias in request bodies at this time.
        #### Returns
        Returns a JSON object with a `data` key containing the new representation of the updated node, if the request is successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: users_partial_update
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: User
              required:
              - attributes
              - id
              - links
              - relationships
              - type
              type: object
              properties:
                id:
                  type: string
                  description: The unique identifier of the user entity.
                  readOnly: true
                type:
                  type: string
                  description: The type identifier of the user entity (`users`).
                  readOnly: true
                attributes:
                  title: Attributes
                  required:
                  - active
                  - date_registered
                  - full_name
                  type: object
                  properties:
                    active:
                      type: boolean
                      description: Whether or not the user is an active user.
                      readOnly: true
                    date_registered:
                      type: string
                      description: "The time at which the user registered their account,\
                        \ as an iso8601 formatted timestamp."
                      format: date-time
                      readOnly: true
                    family_name:
                      type: string
                      description: "The family name of the user, used for bibliographic\
                        \ citations."
                    full_name:
                      type: string
                      description: "The full name of the user, used for display on\
                        \ the OSF."
                    given_name:
                      type: string
                      description: "The given name of the user, used for bibliographic\
                        \ citations."
                    locale:
                      type: string
                      description: "The user's locale, e.g. 'en_US'."
                    middle_names:
                      type: string
                      description: "The middle names of the user, used for bibliographic\
                        \ citations."
                    suffix:
                      type: string
                      description: "The suffix of the user, used for bibliographic\
                        \ citations."
                    timezone:
                      type: string
                      description: "The user's timezone, e.g. 'Etc/UTC'."
                  description: The properties of the user entity.
                relationships:
                  title: Relationships
                  type: object
                  properties:
                    institutions:
                      type: string
                      description: A link to the list of institutions the user is
                        affiliated with.
                      readOnly: true
                    nodes:
                      type: string
                      description: A link to the list of nodes the user is a contributor
                        to.
                      readOnly: true
                  description: URLs to other entities or entity collections that have
                    a relationship to the user entity.
                  readOnly: true
                links:
                  title: Links
                  type: object
                  properties:
                    html:
                      type: string
                      description: A link to the user's profile page on the OSF.
                      format: URL
                      readOnly: true
                    profile_image:
                      type: string
                      description: A link to the user's profile image.
                      format: URL
                      readOnly: true
                  description: URLs to alternative representations of the user entity.
                  readOnly: true
              example:
                data:
                  type: users
                  id: "{user_id}"
                  attributes:
                    full_name: Casey M. Rollins
                    middle_names: Marie
        required: true
      responses:
        "200":
          description: OK
          content: {}
      x-response-schema: User
      x-codegen-request-body-name: body
  /users/{user_id}/institutions/:
    get:
      tags:
      - Users
      summary: List all institutions
      description: |-
        A paginated list of institutions that the user is affiliated with.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 institutions. Each resource in the array is a complete institution object and contains the full representation of the institution, meaning additional requests to a institution's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: users_institutions_list
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Institution
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the institution entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the institution entity (`institutions`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        auth_url:
                          type: string
                          description: Url used to authenticate institution specific
                            login.
                          readOnly: true
                        logo_path:
                          type: string
                          description: Static path to the institution specific logo.
                          readOnly: true
                        name:
                          type: string
                          description: Full name of the institution.
                          readOnly: true
                        description:
                          type: string
                          description: Description of the institution.
                          readOnly: true
                      description: The properties of the institution entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        nodes:
                          type: string
                          description: A relationship to the nodes affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        users:
                          type: string
                          description: A relationship to the users affiliated with
                            the institution.
                          format: URL
                          readOnly: true
                        registrations:
                          type: string
                          description: A relationship to the registrations affiliated
                            with the institution.
                          format: URL
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the institution entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the detail page for the institution.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the institutions
                        entity.
                      readOnly: true
            application/json:
              example:
                data:
                - relationships:
                    nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/nodes/
                          meta: {}
                    users:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/users/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/institutions/uva/registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/institutions/uva/
                  attributes:
                    auth_url: https://accounts.osf.io/Shibboleth.sso/Login?entityID=urn%3Amace%3Aincommon%3Avirginia.edu
                    logo_path: /static/img/institutions/shields/uva-shield.png
                    name: University of Virginia
                    description: "In partnership with the <a href=\"http://www.virginia.edu/vpr/\"\
                      >Vice President for Research</a>, <a href=\"http://dsi.virginia.edu\"\
                      >Data Science Institute</a>, <a href=\"https://www.hsl.virginia.edu\"\
                      >Health Sciences Library</a>, and <a href=\"http://data.library.virginia.edu\"\
                      >University Library</a>. Learn more about <a href=\"http://cadre.virginia.edu\"\
                      >UVA resources for computational and data-driven research</a>.\
                      \ Projects must abide by the <a href=\"http://www.virginia.edu/informationpolicy/security.html\"\
                      >University Security and Data Protection Policies</a>."
                  type: institutions
                  id: uva
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 2
                    per_page: 10
      x-response-schema: Institution
  /users/{user_id}/nodes/:
    get:
      tags:
      - Users
      summary: List all nodes
      description: |-
        A paginated list of nodes that the user is a contributor to. The returned nodes are sorted by their `date_modified`, with the most recently updated nodes appearing first.

        If the user ID in the path is the same as the logged-in user, all nodes will be returned. Otherwise, only the user's public nodes will be returned.

        User registrations are not available at this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include nodes that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/cdi38/nodes/?filter[title]=open.

        Nodes may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, `preprint`, and `contributors`.
      operationId: users_nodes_list
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/citation/
                          meta: {}
                    parent:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/p7ayb/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/e81xl/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/comments/?filter%5Btarget%5D=0hezb
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/registrations/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/logs/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/0hezb/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/0hezb/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/preprints/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/0hezb/draft_registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/0hezb/
                    html: https://osf.io/0hezb/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: null
                    current_user_permissions:
                    - read
                    date_modified: 2017-02-09T20:37:49.060000
                    title: "Study 8: Replication of Hatzivassiliou et al., 2010 (Nature)"
                    collection: false
                    registration: false
                    date_created: 2013-10-22T20:07:57.674000
                    current_user_can_comment: false
                    node_license: null
                    public: true
                    tags: []
                  type: nodes
                  id: 0hezb
                links:
                  first: null
                  last: https://api.osf.io/v2/users/alh38/nodes/?page=23
                  prev: null
                  next: https://api.osf.io/v2/users/alh38/nodes/?page=2
                  meta:
                    total: 224
                    per_page: 10
      x-response-schema: Node
  /users/{user_id}/preprints/:
    get:
      tags:
      - Users
      summary: List all preprints
      description: |-
        A paginated list of preprints that the user contributes to. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 preprints. Each resource in the array is a complete preprint object and contains the full representation of the preprint, meaning additional requests to a preprint's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/cdi38/preprints/?filter[provider]=psyarxiv.

        Preprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.
      operationId: users_preprints_list
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Preprint
                  required:
                  - relationships
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The identifier of the preprint entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the preprint entity (`preprints`).
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        date_created:
                          type: string
                          description: "The time at which the preprint was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the preprint was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_published:
                          type: string
                          description: "The time at which the preprint was published,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        doi:
                          type: string
                          description: "The DOI of the associated journal article,\
                            \ as entered by the user, if the preprint is published."
                        is_preprint_orphan:
                          type: boolean
                          description: Whether or not the preprint is orphaned. A
                            preprint can be orphaned if it's primary file was removed
                            from the preprint node. This field may be deprecated in
                            future versions.
                          readOnly: true
                        license_record:
                          type: string
                          description: "The metadata (copyright year and holder) associated\
                            \ with a license, required for certain licenses."
                        subjects:
                          type: array
                          description: "A nested array structure that describe subjects\
                            \ related to the preprint, in the BePress taxonomy. Each\
                            \ dictionary contains the text and ID of a subject."
                          items:
                            type: string
                      description: The properties of the preprint entity.
                    relationships:
                      title: Relationships
                      required:
                      - node
                      - primary_file
                      - provider
                      type: object
                      properties:
                        citation:
                          type: string
                          description: A relationship to the citation of the preprint.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A relationship to the identifiers associated
                            with the preprint.
                          readOnly: true
                        license:
                          type: string
                          description: A relationship to the license that has been
                            applied to the preprint.
                        node:
                          type: string
                          description: "A relationship to the node that was created\
                            \ for the preprint, or from which the preprint was created."
                        primary_file:
                          type: string
                          description: "A relationship to the file that is designated\
                            \ as the preprint's primary file, or the manuscript of\
                            \ the preprint."
                        provider:
                          type: string
                          description: "A relationship to the preprint provider under\
                            \ which the preprint was created (OSF, socarxiv, psyarxiv,\
                            \ etc.)."
                        bibliographic_contributors:
                          type: string
                          description: A relationship to the bibliographic contributors
                            that are listed as contributing to this preprint.
                      description: URLs to other entities or entity collections that
                        have a relationship to the preprint entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        doi:
                          type: string
                          description: The URL representation of the DOI entered by
                            the user for the preprint manuscript.
                          format: URL
                          readOnly: true
                        html:
                          type: string
                          description: "A link to the project on the OSF that was\
                            \ created for the preprint, or from which the preprint\
                            \ was created."
                          format: URL
                          readOnly: true
                        preprint_doi:
                          type: string
                          description: The URL representation of the OSF assigned
                            DOI for the preprint.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the detail page for the preprint.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the preprint
                        entity.
                      readOnly: true
                  example:
                    data:
                      attributes: {}
                      relationships:
                        node:
                          data:
                            type: nodes
                            id: "{node_id}"
                        primary_file:
                          data:
                            type: primary_files
                            id: "{primary_file_id}"
                        provider:
                          data:
                            type: providers
                            id: "{preprint_provider_id}"
            application/json:
              example:
                data:
                - relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bnzx5/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/khbvy/citation/
                          meta: {}
                    primary_file:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/57c44b1e594d90004a421ab1/
                          meta: {}
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprint_providers/osf/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprints/khbvy/
                    html: https://osf.io/khbvy/
                    doi: https://dx.doi.org/10.1371/journal.pbio.1002456
                  attributes:
                    doi: 10.1371/journal.pbio.1002456
                    license_record: null
                    date_modified: 2016-08-29T14:53:51.185000
                    is_preprint_orphan: false
                    date_published: 2016-08-29T14:53:51.185000
                    subjects:
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: "Public Affairs, Public Policy and Public Administration"
                        id: 584240da54be81056cecaab8
                      - text: Science and Technology Policy
                        id: 584240d954be81056cecaa10
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Library and Information Science
                        id: 584240da54be81056cecab33
                      - text: Scholarly Publishing
                        id: 584240db54be81056cecacd2
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Psychology
                        id: 584240da54be81056cecac68
                    - - text: Social and Behavioral Sciences
                        id: 584240da54be81056cecac48
                      - text: Psychology
                        id: 584240da54be81056cecac68
                    date_created: 2016-08-29T14:53:51.185000
                    is_published: true
                  type: preprints
                  id: khbvy
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 4
                    per_page: 10
      x-response-schema: Preprint
  /users/{user_id}/registrations/:
    get:
      tags:
      - Users
      summary: List all registrations
      description: |-
        A paginated list of registrations that the user is a contributor to. The returned registrations are sorted by their `date_modified`, with the most recently updated registrations appearing first.

        If the user ID in the path is the same as the logged-in user, all registrations will be returned. Otherwise, only the user's public registrations will be returned.

        User nodes are not available at this endpoint.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of 10 registrations. Each resource in the array is a separate registration object and contains the full representation of the registration, meaning additional requests to a registration's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Filtering
        You can optionally request that the response only include registrations that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/users/cdi38/registrations/?filter[title]=replication.

        Registrations may be filtered by their `id`, `title`, `category`, `description`, `public`, `tags`, `date_created`, `date_modified`, `root`, `parent`, and `contributors`.
      operationId: users_registrations_list
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/citation/
                          meta: {}
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                          meta: {}
                    parent:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/sdbdx/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/sdbdx/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/comments/?filter%5Btarget%5D=d5r99
                          meta: {}
                    registered_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qce75/
                          meta: {}
                    registered_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/dnhrw/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/registrations/d5r99/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/children/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/registrations/d5r99/
                    html: https://osf.io/d5r99/
                  attributes:
                    registration_supplement: OSF-Standard Pre-Data Collection Registration
                    pending_embargo_approval: false
                    registration: true
                    embargo_end_date: null
                    withdrawn: false
                    withdrawal_justification: null
                    category: communication
                    preprint: false
                    current_user_permissions:
                    - read
                    title: Replication Reports
                    registered_meta:
                      looked:
                        value: "No"
                        comments: []
                        extra: []
                      datacompletion:
                        value: "No, data collection has not begun"
                        comments: []
                        extra: []
                      comments:
                        value: ""
                        comments: []
                        extra: []
                    public: true
                    fork: false
                    description: ""
                    tags: []
                    collection: false
                    current_user_can_comment: true
                    pending_registration_approval: false
                    date_modified: 2016-11-18T19:14:42.873000
                    date_registered: 2016-11-18T19:16:56.962000
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/d5r99/node_links/
                          meta: {}
                    date_created: 2016-09-27T01:12:42.135000
                    pending_withdrawal: false
                    node_license: null
                  type: registrations
                  id: d5r99
                links:
                  first: null
                  last: https://api.osf.io/v2/users/cdi38/registrations/?page=17
                  prev: null
                  next: https://api.osf.io/v2/users/cdi38/registrations/?page=2
                  meta:
                    total: 170
                    per_page: 10
      x-response-schema: Registration
  /users/{user_id}/addons/:
    get:
      tags:
      - Users
      summary: List all user addons
      description: |2-

        A paginated list of authorized user addons

        #### Permissions

        User addons are visible only to the user that authorized the addon.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 addons. Each resource in the array is a separate addon object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        Attempting to request the accounts for an addon that is not enabled will result in a **404 Not Found** response.
      operationId: users_addons_list
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: User Addon
                  required:
                  - attributes
                  - id
                  - links
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the user addon entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the user addon entity (`user_addons`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - user_has_auth
                      type: object
                      properties:
                        user_has_auth:
                          type: boolean
                          description: Whether or not the user has access to this
                            user addon.
                          readOnly: true
                      description: The properties of the user addon entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: The canonical API endpoint to this user addon.
                          format: URL
                          readOnly: true
                        accounts:
                          type: object
                          properties: {}
                          description: "A dictionary with addon_account id as key,\
                            \ an array of connected nodes and link to user account\
                            \ as value"
                          readOnly: true
                      description: URLs to alternative representations of the user
                        addon entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/users/me/addons/box/
                    accounts:
                      "562d9acf8c5e4a14112e489e":
                        nodes_connected:
                        - https://api.osf.io/v2/nodes/t3y58/
                        account: https://api.osf.io/v2/users/q7fts/addons/box/accounts/562d9acf8c5e4a14112e489e/
                  attributes:
                    user_has_auth: true
                  type: user_addons
                  id: box
                - links:
                    self: https://api.osf.io/v2/users/me/addons/dropbox/
                    accounts:
                      "56742db88c5e4a396d689e3e":
                        nodes_connected: []
                        account: https://api.osf.io/v2/users/q7fts/addons/dropbox/accounts/56742db88c5e4a396d689e3e/
                  attributes:
                    user_has_auth: true
                  type: user_addons
                  id: dropbox
                - links:
                    self: https://api.osf.io/v2/users/me/addons/github/
                    accounts:
                      "570edf7f9ad5a101f90030f6":
                        nodes_connected:
                        - https://api.osf.io/v2/nodes/t3y58/
                        account: https://api.osf.io/v2/users/q7fts/addons/github/accounts/570edf7f9ad5a101f90030f6/
                  attributes:
                    user_has_auth: true
                  type: user_addons
                  id: github
                - links:
                    self: https://api.osf.io/v2/users/me/addons/googledrive/
                    accounts:
                      "58fe1cb59ad5a1025c8ae281":
                        nodes_connected: []
                        account: https://api.osf.io/v2/users/q7fts/addons/googledrive/accounts/58fe1cb59ad5a1025c8ae281/
                      "563c1c518c5e4a36e7dc5450":
                        nodes_connected:
                        - https://api.osf.io/v2/nodes/6y5jf/
                        - https://api.osf.io/v2/nodes/t3y58/
                        account: https://api.osf.io/v2/users/q7fts/addons/googledrive/accounts/563c1c518c5e4a36e7dc5450/
                  attributes:
                    user_has_auth: true
                  type: user_addons
                  id: googledrive
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 4
                    per_page: 10
      x-response-schema: User Addon
  /users/{user_id}/addons/{provider}/:
    get:
      tags:
      - Users
      summary: Retrieve a user addon
      description: |-
        Retrieves the details of an authorized user addon

        #### Permissions

        User addons are visible only to the user that authorized the addon.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested user addon, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

        Attempting to request the accounts for an addon that is not enabled will result in a **404 Not Found** response.
      operationId: users_addons_read
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the addon provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: User Addon
                required:
                - attributes
                - id
                - links
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the user addon entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the user addon entity (`user_addons`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    required:
                    - user_has_auth
                    type: object
                    properties:
                      user_has_auth:
                        type: boolean
                        description: Whether or not the user has access to this user
                          addon.
                        readOnly: true
                    description: The properties of the user addon entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: The canonical API endpoint to this user addon.
                        format: URL
                        readOnly: true
                      accounts:
                        type: object
                        properties: {}
                        description: "A dictionary with addon_account id as key, an\
                          \ array of connected nodes and link to user account as value"
                        readOnly: true
                    description: URLs to alternative representations of the user addon
                      entity.
                    readOnly: true
            application/json:
              example:
                data:
                  links:
                    self: https://api.osf.io/v2/users/me/addons/dropbox/
                    accounts:
                      "58d16ece9ad5a10201025eb4":
                        nodes_connected: []
                        account: https://api.osf.io/v2/users/f542f/addons/dropbox/accounts/58d16ece9ad5a10201025eb4/
                  attributes:
                    user_has_auth: true
                  type: user_addons
                  id: dropbox
      x-response-schema: User Addon
  /users/{user_id}/addons/{provider}/accounts/:
    get:
      tags:
      - Users
      summary: List all addon accounts
      description: |2-

        A paginated list of addon accounts authorized by this user.

        #### Permissions

        Addon accounts are visible only to the user that authorized the account.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of at most 10 addon account objects. Each resource in the array is a separate  addon account object and contains the full representation of the addon account.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: Users_addon_accounts_list
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the addon provider.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Addon Account
                  required:
                  - attributes
                  - id
                  - links
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the addon account entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the addon account entity
                        (`external_accounts`).
                      readOnly: true
                    attributes:
                      title: Attributes
                      required:
                      - display_name
                      - provider
                      type: object
                      properties:
                        display_name:
                          type: string
                          description: The user's display name on the third-party
                            service
                          readOnly: true
                        provider:
                          type: string
                          description: The short name of the third-party service
                          readOnly: true
                        profile_url:
                          type: string
                          description: The link to user's profile on third-party service
                          readOnly: true
                      description: The properties of the addon account entity.
                      readOnly: true
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: The canonical api endpoint of this addon account
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the addon
                        account entity.
                      readOnly: true
            application/json:
              example:
                data:
                - links:
                    self: https://api.osf.io/v2/users/me/addons/dropbox/accounts/58d16ece9ad5a10201027eb4/
                  attributes:
                    display_name: Fabrice Mizero
                    profile_url: null
                    provider: dropbox
                  type: external_accounts
                  id: 58d16ece9ad5a10201027eb4
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Addon Account
  /users/{user_id}/addons/{provider}/accounts/{account_id}/:
    get:
      tags:
      - Users
      summary: Retrieve an addon account
      description: |-
        Retrieves the details of an addon account

        #### Permissions

        Addon accounts are visible only to the user that authorized the account.

        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested addon account, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: Users_addon_accounts_read
      parameters:
      - name: user_id
        in: path
        description: The unique identifier of the user.
        required: true
        schema:
          type: string
      - name: provider
        in: path
        description: The unique identifier of the addon provider.
        required: true
        schema:
          type: string
      - name: account_id
        in: path
        description: The unique identifier of the addon account.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Addon Account
                required:
                - attributes
                - id
                - links
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the addon account entity.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the addon account entity (`external_accounts`).
                    readOnly: true
                  attributes:
                    title: Attributes
                    required:
                    - display_name
                    - provider
                    type: object
                    properties:
                      display_name:
                        type: string
                        description: The user's display name on the third-party service
                        readOnly: true
                      provider:
                        type: string
                        description: The short name of the third-party service
                        readOnly: true
                      profile_url:
                        type: string
                        description: The link to user's profile on third-party service
                        readOnly: true
                    description: The properties of the addon account entity.
                    readOnly: true
                  links:
                    title: Links
                    type: object
                    properties:
                      self:
                        type: string
                        description: The canonical api endpoint of this addon account
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the addon
                      account entity.
                    readOnly: true
            application/json:
              example:
                data:
                  data:
                    links:
                      self: https://api.osf.io/v2/users/me/addons/dropbox/accounts/58d16ece9ad5a10201027eb4/
                    attributes:
                      display_name: Fabrice Mizero
                      profile_url: null
                      provider: dropbox
                    type: external_accounts
                    id: 58d16ece9ad5a10201027eb4
      x-response-schema: Addon Account
  /view_only_links/{link_id}/:
    get:
      tags:
      - View Only Links
      summary: Retrieve a view only link
      description: |-
        Retrieves details about a specific view only link.
        #### Permissions
        Only project administrators may retrieve the details of a view only link. Attempting to retrieve a view only link without appropriate permissions will result in a 403 Forbidden response.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested view only link, if the request is successful.
        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: view_only_links_read
      parameters:
      - name: link_id
        in: path
        description: The unique identifier of the view only link.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: view-only-links
                required:
                - attributes
                - id
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The unique identifier of the view only link.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the view only link ('view-only-links').
                    readOnly: true
                  attributes:
                    title: Attributes
                    type: object
                    properties:
                      date_created:
                        type: string
                        description: "The time at which the view only link was created,\
                          \ as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      anonymous:
                        type: boolean
                        description: Whether or not the view only link has anonymized
                          contributors
                        default: true
                      name:
                        type: string
                        description: The name of the view only link
                        default: Shared project link
                      key:
                        type: string
                        description: The view only key
                        readOnly: true
                    description: The properties of the view only link entity.
                    readOnly: true
                  relationships:
                    title: Relationships
                    required:
                    - creator
                    - nodes
                    type: object
                    properties:
                      nodes:
                        type: string
                        description: A relationship to the nodes which this view only
                          link gives read-only access to.
                        format: URL
                      creator:
                        type: string
                        description: A relationship to the user who created this view
                          only link.
                        readOnly: true
                    description: URLs to other entities or entity collections that
                      have a relationship to the view only link entity.
                    readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    nodes:
                      links:
                        self:
                          href: http://api.osf.io/v2/view_only_links/<link_id>/relationships/nodes/
                          meta: {}
                        related:
                          href: http://api.osf.io/v2/view_only_links/<link_id>/nodes/
                          meta: {}
                    creator:
                      links:
                        related:
                          href: http://api.osf.io/v2/users/<user_id>/
                          meta: {}
                  attributes:
                    date_created: 2017-03-20T20:11:01.603851
                    anonymous: false
                    key: <view_only_link_key>
                    name: Test View Only Link
                  type: view-only-links
                  id: <link_id>
      x-response-schema: View Only Link
  /view_only_links/{link_id}/nodes/:
    get:
      tags:
      - View Only Links
      summary: List all nodes
      description: |2-

        The list of nodes which this view only link gives read-only access to.
        #### Permissions
        Only project administrators may retrieve the nodes of a view only link. Attempting to retrieve a view only link without appropriate permissions will result in a 403 Forbidden response.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object and contains the full representation of the node, meaning additional requests to a node's detail view are not necessary.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: view_only_links_node_list
      parameters:
      - name: link_id
        in: path
        description: The unique identifier of the view only link.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Node
                  required:
                  - attributes
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the node entity.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the node entity (`nodes`).
                    attributes:
                      title: Attributes
                      required:
                      - category
                      - title
                      type: object
                      properties:
                        category:
                          type: string
                          description: "The category of the node, as selected by project\
                            \ contributors."
                          enum:
                          - analysis
                          - communication
                          - data
                          - hypothesis
                          - instrumentation
                          - methods and measures
                          - procedure
                          - project
                          - software
                          - other
                        title:
                          type: string
                          description: The title of the node.
                        collection:
                          type: boolean
                          description: Whether or not this node represents a collection.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        current_user_can_comment:
                          type: boolean
                          description: Whether or not the current user has permission
                            to post comments on this node. Comments on nodes can be
                            set to allow all users to comment (if public) or restricted
                            to only allow comments from contributors.
                          readOnly: true
                        current_user_permissions:
                          type: array
                          description: "A list of strings representing the permissions\
                            \ for the current user on this node. Valid permissions\
                            \ are \"admin\", \"read\", and \"write\"."
                          readOnly: true
                          items:
                            type: string
                        date_created:
                          type: string
                          description: "The time at which the node was created, as\
                            \ an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the node was last modified,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        description:
                          type: string
                          description: The description of the node.
                        fork:
                          type: boolean
                          description: Whether or not this node represents a fork
                            of another node.
                          readOnly: true
                        forked_date:
                          type: string
                          description: "If this node is a fork of another node, the\
                            \ time at which the node was created, as an iso8601 formatted\
                            \ timestamp."
                          format: date-time
                          readOnly: true
                        node_license:
                          type: string
                          description: A dictionary containing the metadata (copyright
                            year and holder) associated with the node license (required
                            for certain license types).
                        preprint:
                          type: boolean
                          description: "Whether or not a preprint has been created\
                            \ from this node, or if this node was created for a preprint."
                          readOnly: true
                        public:
                          type: boolean
                          description: Whether or not the node is publicly visible.
                            This field is only editable by project administrators.
                        registration:
                          type: boolean
                          description: Whether or not the node represents a registration.
                            This value should always be `false`. This field may be
                            deprecated in future versions.
                          readOnly: true
                        tags:
                          type: array
                          description: "A list of strings that describe this node,\
                            \ as entered by project contributors."
                          items:
                            type: string
                        template_from:
                          type: string
                          description: "The unique ID of the node from which this\
                            \ node was templated, if this node was created from a\
                            \ template."
                      description: The properties of the node entity.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        affiliated_institutions:
                          type: string
                          description: A link to the list of institutions this node
                            is affiliated with.
                          readOnly: true
                        children:
                          type: string
                          description: A link to the list of this node's children
                            (components).
                          readOnly: true
                        citation:
                          type: string
                          description: A link to the citation details of this node.
                          readOnly: true
                        comments:
                          type: string
                          description: A link to the list of comments on this node.
                          readOnly: true
                        contributors:
                          type: string
                          description: A link to the list of contributors on this
                            node.
                          readOnly: true
                        draft_registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been initiated from this node and are still in a draft
                            state.
                          readOnly: true
                        files:
                          type: string
                          description: A link to the list of storage providers that
                            have been enabled on this node.
                          readOnly: true
                        forked_from:
                          type: string
                          description: "A link to the node which this node was forked\
                            \ from, if this node is a fork."
                          readOnly: true
                        forks:
                          type: string
                          description: A link to the list of nodes that are forks
                            of this node.
                          readOnly: true
                        identifiers:
                          type: string
                          description: A link to the list of identifiers for this
                            node (i.e. ARK and DOI identifiers).
                          readOnly: true
                        license:
                          type: string
                          description: A link to the license that has been applied
                            to this node.
                          readOnly: true
                        logs:
                          type: string
                          description: A link to the list of log actions pertaining
                            to this node.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current node. This field is deprecated as of verson
                            2.1; use the linked_nodes link instead.
                          readOnly: true
                        parent:
                          type: string
                          description: "A link to the node that is the direct parent\
                            \ of the current node, if the current node is a child\
                            \ node."
                          readOnly: true
                        preprints:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        registrations:
                          type: string
                          description: A link to the list of registrations that have
                            been created from this node.
                          readOnly: true
                        root:
                          type: string
                          description: "A link to the node that is the top-level parent\
                            \ of the current node. If the current node is the top-level\
                            \ node, the root is the current node."
                          readOnly: true
                        template_node:
                          type: string
                          description: "A link to the node that the current node was\
                            \ templated from, if the current node was created from\
                            \ a template."
                          readOnly: true
                        view_only_links:
                          type: string
                          description: A link to the list of view only links that
                            have been created for this node.
                          readOnly: true
                        wikis:
                          type: string
                          description: A link to the list of wiki pages for this node.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        html:
                          type: string
                          description: A link to the node's page on the OSF.
                          format: URL
                          readOnly: true
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            node.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the node
                        entity.
                      readOnly: true
                  example:
                    data:
                      type: nodes
                      attributes:
                        title: An Excellent Project Title
                        category: software
            application/json:
              example:
                data:
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/comments/?filter%5Btarget%5D=bifc7
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/bifc7/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/bifc7/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/bifc7/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/bifc7/
                    html: https://osf.io/bifc7/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: "This is an independent replication as part of the\
                      \ Reproducibility Project: Psychology."
                    current_user_permissions:
                    - read
                    date_modified: 2017-03-03T05:00:31.512000
                    title: "Replication of WA Cunningham, JJ Van Bavel, IR Johnsen\
                      \ (2008, PS 19(2))"
                    collection: false
                    registration: false
                    date_created: 2014-07-28T13:53:04.508000
                    current_user_can_comment: false
                    node_license: null
                    public: true
                    tags: []
                  type: nodes
                  id: bifc7
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/citation/
                          meta: {}
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/forks/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/identifiers/
                          meta: {}
                    forked_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/kxhz5/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/comments/?filter%5Btarget%5D=73pnd
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/registrations/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/logs/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/73pnd/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/73pnd/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/preprints/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/73pnd/draft_registrations/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/73pnd/
                    html: https://osf.io/73pnd/
                  attributes:
                    category: project
                    fork: true
                    preprint: false
                    description: null
                    current_user_permissions:
                    - read
                    date_modified: 2016-10-02T19:50:23.605000
                    title: "Replication of Hajcak &amp; Foti (2008, PS, Study 1)"
                    collection: false
                    registration: false
                    date_created: 2012-10-31T18:50:46.111000
                    current_user_can_comment: false
                    node_license:
                      copyright_holders:
                      - ""
                      year: "2016"
                    public: true
                    tags:
                    - anxiety
                    - EMG
                    - EEG
                    - motivation
                    - ERN
                  type: nodes
                  id: 73pnd
                - relationships:
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/files/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/citation/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/draft_registrations/
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/contributors/
                          meta: {}
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/forks/
                          meta: {}
                    template_node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/3mqkb/
                          meta: {}
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/
                          meta: {}
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/identifiers/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/comments/?filter%5Btarget%5D=mjasz
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/registrations/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/mjasz/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/linked_nodes/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/wikis/
                          meta: {}
                    affiliated_institutions:
                      links:
                        self:
                          href: https://api.osf.io/v2/nodes/mjasz/relationships/institutions/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/institutions/
                          meta: {}
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/children/
                          meta: {}
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/preprints/
                          meta: {}
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/mjasz/logs/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/nodes/mjasz/
                    html: https://osf.io/mjasz/
                  attributes:
                    category: project
                    fork: false
                    preprint: false
                    description: null
                    current_user_permissions:
                    - read
                    date_modified: 2016-08-31T18:16:25.056000
                    title: "Replication of Winawer, Huk, & Boroditsky (Psychological\
                      \ Science, 2008)"
                    collection: false
                    registration: false
                    date_created: 2014-09-23T18:58:54.915000
                    current_user_can_comment: false
                    node_license: null
                    public: true
                    tags: []
                  type: nodes
                  id: mjasz
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta: null
                  total: 3
                  per_page: 10
      x-response-schema: Node
  /wikis/{wiki_id}/:
    get:
      tags:
      - Wikis
      summary: Retrieve a Wiki
      description: |-
        Retrieves the details about a specific wiki.
        A wiki is a collection of markdown text pages that can be used to describe the project or dataset of contained in the attached node.
        #### Returns
        Returns a JSON object with a `data` key containing the representation of the requested wiki, if the request was successful.

        If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
      operationId: wiki_read
      parameters:
      - name: wiki_id
        in: path
        description: The unique identifier of the wiki.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                title: Wiki
                required:
                - relationships
                - type
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier of the wiki.
                    readOnly: true
                  type:
                    type: string
                    description: The type identifier of the wiki (`wikis`).
                  attributes:
                    title: Attributes
                    required:
                    - content_type
                    - current_user_can_comment
                    - date_modified
                    - extra
                    - kind
                    - materialized_path
                    - name
                    - path
                    - size
                    type: object
                    properties:
                      date_modified:
                        type: string
                        description: "The date and time at which the wiki was last\
                          \ modified, as an iso8601 formatted timestamp."
                        format: date-time
                        readOnly: true
                      kind:
                        type: string
                        description: The type of object.
                        readOnly: true
                      name:
                        type: string
                        description: The name/title of the wiki page.
                        readOnly: true
                      extra:
                        type: string
                        description: "A dictionary containing additional metadata\
                          \ about this wiki, including version information."
                        readOnly: true
                      content_type:
                        type: string
                        description: Content type of the wiki (`text/markdown`).
                        readOnly: true
                      path:
                        type: string
                        description: Path to the wiki object.
                        readOnly: true
                      current_user_can_comment:
                        type: string
                        description: Whether the current user is allowed to post comments
                          on this wiki.
                        readOnly: true
                      materialized_path:
                        type: string
                        description: Materialized path to the wiki object.
                        readOnly: true
                      size:
                        type: string
                        description: Size of the wiki.
                        readOnly: true
                    description: The properties of the wiki.
                  relationships:
                    title: Relationships
                    required:
                    - comments
                    - node
                    - user
                    type: object
                    properties:
                      node:
                        type: string
                        description: A relationship to the associated node.
                      user:
                        type: string
                        description: A relationship to the user associated with this
                          wiki.
                      comments:
                        type: string
                        description: A relationship to the comments related to this
                          wiki.
                    description: URLs to other entities or entity collections that
                      have a relationship to the wiki.
                  links:
                    title: Links
                    type: object
                    properties:
                      download:
                        type: string
                        description: The URL to download the content of the wiki.
                        format: URL
                        readOnly: true
                      info:
                        type: string
                        description: A link to the detail page for the wiki.
                        format: URL
                        readOnly: true
                      self:
                        type: string
                        description: A link to the detail page for the wiki.
                        format: URL
                        readOnly: true
                    description: URLs to alternative representations of the wiki.
                    readOnly: true
            application/json:
              example:
                data:
                  relationships:
                    node:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/tvyxz/
                          meta: {}
                    user:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/5k3hq/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/tvyxz/comments/?filter%5Btarget%5D=zveyb
                          meta: {}
                  links:
                    info: https://api.osf.io/v2/wikis/zveyb/
                    download: https://api.osf.io/v2/wikis/zveyb/content/
                    self: https://api.osf.io/v2/wikis/zveyb/
                  attributes:
                    kind: file
                    name: home
                    date_modified: 2017-02-16T15:45:57.671957
                    extra:
                      version: 47
                    content_type: text/markdown
                    path: /zveyb
                    current_user_can_comment: true
                    materialized_path: /zveyb
                    size: 552
                  type: wikis
                  id: xu77p
      x-response-schema: Wiki
  /wikis/{wiki_id}/content/:
    get:
      tags:
      - Wikis
      summary: Retrieve the Content of a Wiki
      description: |-
        Retrieves the plaintext content of a wiki in markdown format.
        #### Returns
        Returns `text/markdown` of the wiki content itself.
        If the request is unsuccessful, plaintext with the error message will be displayed.
      operationId: wiki_content
      parameters:
      - name: wiki_id
        in: path
        description: The unique identifier of the wiki.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
      x-response-schema: Wiki
  /collections/:
    get:
      tags:
      - Collections
      summary: List all Collections
      description: |-
        Retrieves a list collections, either public or related to the user
        #### Permissions
        Anonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.

        Comments on private nodes are only visible to contributors and administrators on the parent node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_list
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Collection
                  required:
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the collection.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the entity (`collections`).
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        title:
                          type: string
                          description: The title of the collection.
                        date_created:
                          type: string
                          description: "The time at which the collection was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the collection was last\
                            \ modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        bookmarks:
                          type: boolean
                          description: This attribute indicates if a collection is
                            being used as part of the bookmarking feature that allows
                            each user to create a personal collection.
                          readOnly: true
                        is_promoted:
                          type: boolean
                          description: ???
                          readOnly: true
                        is_public:
                          type: boolean
                          description: This attribute indicates if a collection is
                            viewable to a user with no special permissions.
                          readOnly: true
                        status_choices:
                          type: array
                          description: A list of the acceptable entity `status` metadata
                            options acceptable for entities in the a collection. This
                            indicates the status of a entity within a collection.
                          readOnly: true
                          items:
                            type: string
                        collected_type_choices:
                          type: array
                          description: A list of the acceptable entity `collected_type`
                            metadata options acceptable for entities in the a collection.
                            This indicates the collected types of entities within
                            a collection.
                          readOnly: true
                          items:
                            type: string
                        volume_choices:
                          type: array
                          description: A list of the acceptable entity `volume` metadata
                            options acceptable for entities in the a collection.  This
                            indicates what volumes exist of a multi-volume collection.
                          readOnly: true
                          items:
                            type: string
                        issue_choices:
                          type: array
                          description: A list of the acceptable entity `issue` metadata
                            options acceptable for entities in the a collection.  This
                            indicates what issues exist of a multi-issue collection.
                          readOnly: true
                          items:
                            type: string
                        program_area_choices:
                          type: array
                          description: A list of the acceptable entity `program_area`
                            metadata options acceptable for entities in the a collection.  This
                            indicates what program areas a collection is composed
                            of .
                          readOnly: true
                          items:
                            type: string
                      description: The properties of the collection.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        provider:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current collection.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current collection.
                          readOnly: true
                        linked_registrations:
                          type: string
                          description: A link to the list of registrations that are
                            linked to the current collection.
                          readOnly: true
                        linked_preprints:
                          type: string
                          description: A link to the list of preprints that are linked
                            to the current collection.
                          readOnly: true
                        collected_metadata:
                          type: string
                          description: A link to the list of metadata entries that
                            are linked to the current collections.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            collection.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the entity.
                      readOnly: true
            application/json:
              example:
                data:
                - attributes:
                    title: Metascience's Collection
                    date_created: 2019-09-18T19:24:28.751486Z
                    date_modified: 2019-09-18T19:24:28.886438Z
                    bookmarks": false
                    is_promoted": true
                    is_public: true
                    status_choices:
                    - Proposed
                    - Active
                    - Completed
                    - Archived
                    collected_type_choices:
                    - Research
                    - Teaching
                    - Community Activity
                    - Meeting
                    - Other
                    volume_choices: []
                    issue_choices": []
                    program_area_choices: []
                  relationships:
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/collections/metascience/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/linked_nodes/
                          meta: {}
                    linked_registrations:
                      links:
                        self:
                          href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_registrations/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/linked_registrations/
                          meta: {}
                    linked_preprints:
                      links:
                        self:
                          href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_preprints/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/linked_preprints/
                          meta: {}
                    collected_metadata:
                      links:
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/collected_metadata/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/collections/
                links:
                  self: https://api.osf.io/v2/collections/
                  first: null
                  last: https://api.osf.io/v2/collections/?page=2
                  next: https://api.osf.io/v2/collections/?page=2
                  prev: null
                meta:
                  total: 11
                  per_page: 10
                  version: 2.2
      x-response-schema: Collection
    post:
      tags:
      - Collections
      summary: Create a Collection
      description: |-
        Retrieves a list collections, either public or related to the user
        #### Permissions
        Anonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.

        Comments on private nodes are only visible to contributors and administrators on the parent node.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: collections
                  attributes:
                    title: An Excellent Collection Title
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              example: null
      x-response-schema: Collection
      x-codegen-request-body-name: body
  /collections/{collection_id}/:
    get:
      tags:
      - Collections
      summary: Retrieve a Collection
      description: |-
        Retrieves a collection, if the user has appropriate permissions.

        #### Permissions
        Anonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  title: Collection
                  required:
                  - type
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the collection.
                      readOnly: true
                    type:
                      type: string
                      description: The type identifier of the entity (`collections`).
                    attributes:
                      title: Attributes
                      type: object
                      properties:
                        title:
                          type: string
                          description: The title of the collection.
                        date_created:
                          type: string
                          description: "The time at which the collection was created,\
                            \ as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        date_modified:
                          type: string
                          description: "The time at which the collection was last\
                            \ modified, as an iso8601 formatted timestamp."
                          format: date-time
                          readOnly: true
                        bookmarks:
                          type: boolean
                          description: This attribute indicates if a collection is
                            being used as part of the bookmarking feature that allows
                            each user to create a personal collection.
                          readOnly: true
                        is_promoted:
                          type: boolean
                          description: ???
                          readOnly: true
                        is_public:
                          type: boolean
                          description: This attribute indicates if a collection is
                            viewable to a user with no special permissions.
                          readOnly: true
                        status_choices:
                          type: array
                          description: A list of the acceptable entity `status` metadata
                            options acceptable for entities in the a collection. This
                            indicates the status of a entity within a collection.
                          readOnly: true
                          items:
                            type: string
                        collected_type_choices:
                          type: array
                          description: A list of the acceptable entity `collected_type`
                            metadata options acceptable for entities in the a collection.
                            This indicates the collected types of entities within
                            a collection.
                          readOnly: true
                          items:
                            type: string
                        volume_choices:
                          type: array
                          description: A list of the acceptable entity `volume` metadata
                            options acceptable for entities in the a collection.  This
                            indicates what volumes exist of a multi-volume collection.
                          readOnly: true
                          items:
                            type: string
                        issue_choices:
                          type: array
                          description: A list of the acceptable entity `issue` metadata
                            options acceptable for entities in the a collection.  This
                            indicates what issues exist of a multi-issue collection.
                          readOnly: true
                          items:
                            type: string
                        program_area_choices:
                          type: array
                          description: A list of the acceptable entity `program_area`
                            metadata options acceptable for entities in the a collection.  This
                            indicates what program areas a collection is composed
                            of .
                          readOnly: true
                          items:
                            type: string
                      description: The properties of the collection.
                    relationships:
                      title: Relationships
                      type: object
                      properties:
                        provider:
                          type: string
                          description: A link to the list of preprints that this node
                            relates to.
                          readOnly: true
                        node_links:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current collection.
                          readOnly: true
                        linked_nodes:
                          type: string
                          description: A link to the list of nodes that are linked
                            to the current collection.
                          readOnly: true
                        linked_registrations:
                          type: string
                          description: A link to the list of registrations that are
                            linked to the current collection.
                          readOnly: true
                        linked_preprints:
                          type: string
                          description: A link to the list of preprints that are linked
                            to the current collection.
                          readOnly: true
                        collected_metadata:
                          type: string
                          description: A link to the list of metadata entries that
                            are linked to the current collections.
                          readOnly: true
                      description: URLs to other entities or entity collections that
                        have a relationship to the node entity.
                    links:
                      title: Links
                      type: object
                      properties:
                        self:
                          type: string
                          description: A link to the canonical API endpoint of this
                            collection.
                          format: URL
                          readOnly: true
                      description: URLs to alternative representations of the entity.
                      readOnly: true
            application/json:
              example:
                type: collections
                data:
                  attributes:
                    title: Metascience's Collection
                    date_created: 2019-09-18T19:24:28.751486Z
                    date_modified: 2019-09-18T19:24:28.886438Z
                    bookmarks": false
                    is_promoted": true
                    is_public: true
                    status_choices:
                    - Proposed
                    - Active
                    - Completed
                    - Archived
                    collected_type_choices:
                    - Research
                    - Teaching
                    - Community Activity
                    - Meeting
                    - Other
                    volume_choices: []
                    issue_choices": []
                    program_area_choices: []
                  relationships:
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/collections/metascience/
                          meta: {}
                    node_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/node_links/
                          meta: {}
                    linked_nodes:
                      links:
                        self:
                          href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_nodes/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/linked_nodes/
                          meta: {}
                    linked_registrations:
                      links:
                        self:
                          href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_registrations/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/linked_registrations/
                          meta: {}
                    linked_preprints:
                      links:
                        self:
                          href: https://api.osf.io/v2/collections/ezcuj/relationships/linked_preprints/
                          meta: {}
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/linked_preprints/
                          meta: {}
                    collected_metadata:
                      links:
                        related:
                          href: https://api.osf.io/v2/collections/ezcuj/collected_metadata/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/collections/
                meta:
                  version: 2.2
      x-response-schema: Collection
    delete:
      tags:
      - Collections
      summary: Delete a Collection
      description: |-
        Deletes a collection, if the user has appropriate permissions.
        #### Permissions
        Users must have write permissions on a collection in order to delete it
        #### Returns
        Nothing is returned in the body
      operationId: collections_delete
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
      x-response-schema: Collection
  /collections/{collection_id}/linked_nodes:
    get:
      tags:
      - Collections
      summary: List All Linked Nodes for a Collection
      description: |-
        List of all nodes linked to the given collection.
        #### Permissions
        This returns all public nodes associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_nodes_list
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 2vewn
                  type: nodes
                  attributes:
                    title: A Good Node Title
                    description: A good Node description.
                    category: project
                    custom_citation: null
                    date_created: 2020-05-11T17:57:58.725950Z
                    date_modified: 2020-11-20T14:31:59.946554Z
                    registration: false
                    preprint: false
                    fork: false
                    collection: false
                    tags: []
                    node_license:
                      copyright_holders:
                      - Test User
                      year: "2020"
                    analytics_key: c438e67a7680113ee310cad8121e520bab632f3df95d443a4fadb0cbf3af890acc0d91ab6499297ec622bb827979c6005f13a80b3eddcf87a081667e6b2ac3da6eff414dc659b19e3a473f8bf7ef295bff3c036c955c8313fa6ce1da1253e74592e0b399940ca9f099b36923df8c11622d0a1768ae53f79a6061da76007061207f299a0e507f1ff47baeb902f2c403f0
                    current_user_can_comment: false
                    current_user_permissions: []
                    current_user_is_contributor: false
                    current_user_is_contributor_or_group_member: false
                    wiki_enabled: true
                    public: true
                  relationships:
                    license:
                      links:
                        related:
                          href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e965/
                          meta: {}
                      data:
                        id: 563c1cf88c5e4a3877f9e965
                        type: licenses
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/children/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/comments/?filter%5Btarget%5D=2vewn
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/contributors/
                          meta: {}
                    bibliographic_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/bibliographic_contributors/
                          meta: {}
                    implicit_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/implicit_contributors/
                          meta: {}
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/files/
                          meta: {}
                    settings:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/settings/
                          meta: {}
                      data:
                        id: 2vewn
                        type: nodes
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/wikis/
                          meta: {}
                    forked_from:
                      data: null
                    template_node:
                      data: null
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/forks/
                          meta: {}
                    groups:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/groups/
                          meta: {}
                    linked_by_nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/linked_by_nodes/
                          meta: {}
                    linked_by_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/linked_by_registrations/
                          meta: {}
                    parent:
                      data: null
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/identifiers/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/nodes/2vewn/relationships/institutions/
                          meta: {}
                    draft_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/draft_registrations/
                          meta: {}
                    registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/registrations/
                          meta: {}
                    region:
                      links:
                        related:
                          href: https://api.osf.io/v2/regions/us/
                          meta: {}
                      data:
                        id: us
                        type: regions
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/
                          meta: {}
                      data:
                        id: 2vewn
                        type: nodes
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/logs/
                          meta: {}
                    linked_nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/linked_nodes/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_nodes/
                          meta: {}
                    linked_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/linked_registrations/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_registrations/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/citation/
                          meta: {}
                      data:
                        id: 2vewn
                        type: nodes
                    preprints:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/preprints/
                          meta: {}
                    storage:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/storage/
                          meta: {}
                      data:
                        id: 2vewn
                        type: nodes
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/2vewn/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/nodes/2vewn/relationships/subjects/
                          meta: {}
                  links:
                    html: https://osf.io/2vewn/
                    self: https://api.osf.io/v2/nodes/2vewn/
                meta:
                  total: 1
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/collections/ux3nq/linked_nodes/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Collection
  /collections/{collection_id}/linked_nodes/relationships/:
    get:
      tags:
      - Collections
      summary: Give a Sparse List of Node Ids
      description: |-
        List of all the node ids linked to the given collection.
        #### Permissions
        This returns all public nodes associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_nodes_relationships_create
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - type: nodes
                  id: guid0
                - type: nodes
                  id: newid
                - type: nodes
                  id: test2
                - type: nodes
                  id: guid4
                links:
                  self: https://api.osf.io/v2/collections/dse23/relationships/linked_nodes/
                  html: https://api.osf.io/v2/collections/dse23/linked_nodes/
                meta:
                  version: "2.20"
      x-response-schema: Collection
    post:
      tags:
      - Collections
      summary: Link Nodes to Collection
      description: |-
        This endpoint allow users to a add a node to a collection by issuing a POST request.
        #### Permissions
        This returns all public nodes associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_nodes_relationships
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                - type: linked_nodes
                  id: guid0
                - type: linked_nodes
                  id: newid
                - type: linked_nodes
                  id: test2
                - type: linked_nodes
                  id: guid4
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              example: null
      x-response-schema: Collection
      x-codegen-request-body-name: body
    delete:
      tags:
      - Collections
      summary: Remove Nodes From Collection
      description: |2-

        This removes associated nodes from a collection
        #### Permissions
        Any user with write permissions on this collection should be to remove nodes from this collection.
        #### Returns
        Nothing in the response body.
      operationId: collections_linked_nodes_relationships_delete
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                - type: linked_nodes
                  id: guid0
                - type: linked_nodes
                  id: newid
                - type: linked_nodes
                  id: test2
                - type: linked_nodes
                  id: guid4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: null
      x-response-schema: Collection
      x-codegen-request-body-name: body
  /collections/{collection_id}/linked_registrations/:
    get:
      tags:
      - Collections
      summary: List All Linked Registrations for a Collection
      description: |-
        List of all registrations linked to the given collection.
        #### Permissions
        This returns all public registrations associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_registrations_list
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: qrwhu
                  type: registrations
                  attributes:
                    title: A Good Registration Title
                    description: Half believe though on significant.
                    category: project
                    custom_citation: ""
                    date_created: 2020-12-10T14:36:42.195364Z
                    date_modified: 2020-12-10T14:36:39.925278Z
                    registration: true
                    preprint: false
                    fork: false
                    collection: false
                    tags: []
                    access_requests_enabled: false
                    node_license: null
                    analytics_key: null
                    current_user_can_comment: true
                    current_user_permissions: []
                    current_user_is_contributor: false
                    current_user_is_contributor_or_group_member: false
                    wiki_enabled: true
                    public: true
                    reviews_state: initial
                    article_doi: null
                    pending_embargo_approval: false
                    pending_embargo_termination_approval: false
                    embargoed: false
                    pending_registration_approval: false
                    archiving: false
                    pending_withdrawal: false
                    withdrawn: false
                    date_registered: 2020-12-10T14:36:42.166193Z
                    date_withdrawn: null
                    embargo_end_date: null
                    withdrawal_justification: null
                    registration_supplement: Open-Ended Registration
                    registered_meta: {}
                    registration_responses:
                      summary: ""
                  relationships:
                    license:
                      data: null
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/children/
                          meta: {}
                    comments:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/comments/?filter%5Btarget%5D=qrwhu
                          meta: {}
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/contributors/
                          meta: {}
                    bibliographic_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/bibliographic_contributors/
                          meta: {}
                    implicit_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/implicit_contributors/
                          meta: {}
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/files/
                          meta: {}
                    wikis:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/wikis/
                          meta: {}
                    forked_from:
                      data: null
                    template_node:
                      data: null
                    forks:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/forks/
                          meta: {}
                    linked_by_nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/linked_by_nodes/
                          meta: {}
                    linked_by_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/linked_by_registrations/
                          meta: {}
                    parent:
                      data: null
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/identifiers/
                          meta: {}
                    affiliated_institutions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/institutions/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/registrations/qrwhu/relationships/institutions/
                          meta: {}
                    region:
                      links:
                        related:
                          href: https://api.osf.io/v2/regions/us/
                          meta: {}
                      data:
                        id: us
                        type: regions
                    root:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/
                          meta: {}
                      data:
                        id: qrwhu
                        type: registrations
                    logs:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/logs/
                          meta: {}
                    linked_nodes:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/linked_nodes/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/registrations/qrwhu/relationships/linked_nodes/
                          meta: {}
                    linked_registrations:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/linked_registrations/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/registrations/qrwhu/relationships/linked_registrations/
                          meta: {}
                    view_only_links:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/view_only_links/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/citation/
                          meta: {}
                      data:
                        id: qrwhu
                        type: registrations
                    storage:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/qrwhu/storage/
                          meta: {}
                      data:
                        id: qrwhu
                        type: nodes
                    registered_by:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/9hr6c/
                          meta: {}
                      data:
                        id: 9hr6c
                        type: users
                    registered_from:
                      links:
                        related:
                          href: https://api.osf.io/v2/nodes/4gnbx/
                          meta: {}
                      data:
                        id: 4gnbx
                        type: nodes
                    registration_schema:
                      links:
                        related:
                          href: https://api.osf.io/v2/schemas/registrations/5fa1bb678ccd39001e96c32b/
                          meta: {}
                      data:
                        id: 5fa1bb678ccd39001e96c32b
                        type: registration-schemas
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/registrations/osf/
                          meta: {}
                      data:
                        id: osf
                        type: registration-providers
                    review_actions:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/actions/
                          meta: {}
                    requests:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/requests/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/registrations/qrwhu/subjects/
                          meta: {}
                        self:
                          href: https://api.osf.io/v2/registrations/qrwhu/relationships/subjects/
                          meta: {}
                  links:
                    html: https://osf.io/qrwhu/
                    self: https://api.osf.io/v2/registrations/qrwhu/
            meta:
              example:
                total: 1
                per_page: 10
                version: "2.20"
            links:
              example:
                self: https://api.osf.io/v2/collections/nywr6/linked_registrations/
                first: null
                last: null
                prev: null
                next: null
      x-response-schema: Collection
  /collections/{collection_id}/linked_registrations/relationships/:
    get:
      tags:
      - Collections
      summary: Give a Sparse List of Registrations Ids
      description: |-
        List of all the registration ids linked to the given collection.
        #### Permissions
        This returns all public registrations associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_registrations_relationships_create
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - type: registrations
                  id: guid0
                - type: registrations
                  id: newid
                - type: registrations
                  id: test2
                - type: registrations
                  id: guid4
                links:
                  self: https://api.osf.io/v2/collections/dse23/relationships/linked_registrations/
                  html: https://api.osf.io/v2/collections/dse23/linked_registrations/
                meta:
                  version: "2.20"
      x-response-schema: Collection
    post:
      tags:
      - Collections
      summary: Link Registrations to Collection
      description: |-
        This endpoint allow users to a add a registration to a collection by issuing a POST request.
        #### Permissions
        This returns all public registrations associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of comment objects. Each resource in the array is a separate comment object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_registrations_relationships
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                - type: linked_registrations
                  id: guid0
                - type: linked_registrations
                  id: newid
                - type: linked_registrations
                  id: test2
                - type: linked_registrations
                  id: guid4
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              example: null
      x-response-schema: Collection
      x-codegen-request-body-name: body
    delete:
      tags:
      - Collections
      summary: Remove Registrations From Collection
      description: |2-

        This removes associated registrations from a collection
        #### Permissions
        Any user with write permissions on this collection should be to remove registrations from this collection.
        #### Returns
        Nothing in the response body.
      operationId: collections_linked_registrations_relationships_delete
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                - type: linked_registrations
                  id: guid0
                - type: linked_registrations
                  id: newid
                - type: linked_registrations
                  id: test2
                - type: linked_registrations
                  id: guid4
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: null
      x-response-schema: Collection
      x-codegen-request-body-name: body
  /collections/{collection_id}/linked_preprints/:
    get:
      tags:
      - Collections
      summary: List All Linked Preprints for a Collection
      description: |-
        List of all preprints linked to the given collection.
        #### Permissions
        This returns all public preprints associated with this collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of up to 10 nodes. Each resource in the array is a separate node object.

        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_linked_preprints_list
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: zjxhs
                  type: preprints
                  attributes:
                    date_created: 2020-12-10T13:55:03.994648Z
                    date_modified: 2020-12-10T13:55:05.252565Z
                    date_published: 2020-12-10T13:55:05.046084Z
                    original_publication_date: null
                    doi: 10.123/0
                    title: A Good Preprint Title
                    description: Research physical language morning consumer front
                      population.
                    is_published: true
                    is_preprint_orphan: false
                    license_record: null
                    tags: []
                    preprint_doi_created: 2020-12-10T13:55:05.230155Z
                    date_withdrawn: null
                    current_user_permissions: []
                    public: true
                    reviews_state: accepted
                    date_last_transitioned: 2020-12-10T13:55:05.046084Z
                  relationships:
                    contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/contributors/
                          meta: {}
                    bibliographic_contributors:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/bibliographic_contributors/
                          meta: {}
                    citation:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/citation/
                          meta: {}
                      data:
                        id: zjxhs
                        type: preprints
                    identifiers:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/identifiers/
                          meta: {}
                    node:
                      links:
                        self:
                          href: https://api.osf.io/v2/preprints/zjxhs/relationships/node/
                          meta: {}
                    license:
                      data: null
                    provider:
                      links:
                        related:
                          href: https://api.osf.io/v2/providers/preprints/slug1/
                          meta: {}
                      data:
                        id: slug1
                        type: preprint-providers
                    files:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/files/
                          meta: {}
                    primary_file:
                      links:
                        related:
                          href: https://api.osf.io/v2/files/5fd228b8e64e1300aa99ee17/
                          meta: {}
                      data:
                        id: 5fd228b8e64e1300aa99ee17
                        type: files
                    review_actions:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/review_actions/
                          meta: {}
                    requests:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/requests/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.osf.io/v2/preprints/zjxhs/subjects/
                          meta: {}
                  links:
                    self: https://api.osf.io/v2/preprints/zjxhs/
                    html: https://osf.io/preprints/slug1/zjxhs/
                    doi: https://doi.org/10.123/0
                    preprint_doi: https://doi.org/None/FK2osf.io/zjxhs
            meta:
              example:
                total: 1
                per_page: 10
                version: "2.20"
            links:
              example:
                self: https://api.osf.io/v2/collections/nywr6/linked_preprints/
                first: null
                last: null
                prev: null
                next: null
      x-response-schema: Collection
  /collections/{collection_id}/collected_metadata/:
    get:
      tags:
      - Collections
      summary: Retrieve a list of collected metadata for a collection
      description: |-
        List of user created metadata for entities within a collection.
        #### Permissions
        In order to view this metadata it must be public or a user must have read permissions for collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Errors
        This request should never return an error.
      operationId: collections_metadata_registrations_list
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 2vewn
                  type: collected-metadata
                  attributes:
                    collected_type: Document Analysis
                    status: ""
                    volume: ""
                    issue: ""
                    program_area: N/A
                    subjects: []
                  relationships:
                    creator:
                      links:
                        related:
                          href: https://api.osf.io/v2/users/794j8/?format=json
                          meta: {}
                      data:
                        id: 794j8
                        type: users
                    collection:
                      links:
                        related:
                          href: https://api.osf.io/v2/collections/ux3nq/?format=json
                          meta: {}
                      data:
                        id: ux3nq
                        type: collections
                    guid:
                      links:
                        related:
                          href: https://api.osf.io/v2/guids/2vewn/?format=json
                          meta: {}
                  embeds:
                    guid:
                      data:
                        id: 2vewn
                        type: nodes
                        attributes:
                          title: A Good Node Title
                          description: A Good Node Description
                          category: project
                          custom_citation: null
                          date_created: 2020-05-11T17:57:58.725950
                          date_modified: 2020-11-20T14:31:59.946554
                          registration: false
                          preprint: false
                          fork: false
                          collection: false
                          tags: []
                          access_requests_enabled: true
                          node_license:
                            copyright_holders:
                            - Test User
                            year: "2020"
                          analytics_key: c438e67a7680113ee310cad8121e520bab632f3df95d443a4fadb0cbf3af890acc0d91ab6499297ec622bb827979c6005f13a80b3eddcf87a081667e6b2ac3da6eff414dc659b19e3a473f8bf7ef295bff3c036c955c8313fa6ce1da1253e74592e0b399940ca9f099b36923df8c11622d0a1768ae53f79a6061da76007061207f299a0e507f1ff47baeb902f2c403f0
                          current_user_can_comment: false
                          current_user_permissions:
                          - read
                          current_user_is_contributor: false
                          current_user_is_contributor_or_group_member: false
                          wiki_enabled: true
                          public: true
                          subjects: []
                        relationships:
                          license:
                            links:
                              related:
                                href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e965/?format=json
                                meta: {}
                            data:
                              id: 563c1cf88c5e4a3877f9e965
                              type: licenses
                          children:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/children/?format=json
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/comments/?format=json&filter%5Btarget%5D=2vewn
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/contributors/?format=json
                                meta: {}
                          bibliographic_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/bibliographic_contributors/?format=json
                                meta: {}
                          implicit_contributors:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/implicit_contributors/?format=json
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/files/?format=json
                                meta: {}
                          settings:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/settings/?format=json
                                meta: {}
                            data:
                              id: 2vewn
                              type: nodes
                          wikis:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/wikis/?format=json
                                meta: {}
                          forks:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/forks/?format=json
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/groups/?format=json
                                meta: {}
                          node_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/node_links/?format=json
                                meta: {}
                          linked_by_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_by_nodes/?format=json
                                meta: {}
                          linked_by_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_by_registrations/?format=json
                                meta: {}
                          identifiers:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/identifiers/?format=json
                                meta: {}
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/institutions/?format=json
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/institutions/?format=json
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/draft_registrations/?format=json
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/registrations/?format=json
                                meta: {}
                          region:
                            links:
                              related:
                                href: https://api.osf.io/v2/regions/us/?format=json
                                meta: {}
                            data:
                              id: us
                              type: regions
                          root:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/?format=json
                                meta: {}
                            data:
                              id: 2vewn
                              type: nodes
                          logs:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/logs/?format=json
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_nodes/?format=json
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_nodes/?format=json
                                meta: {}
                          linked_registrations:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/linked_registrations/?format=json
                                meta: {}
                              self:
                                href: https://api.osf.io/v2/nodes/2vewn/relationships/linked_registrations/?format=json
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/view_only_links/?format=json
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/citation/?format=json
                                meta: {}
                            data:
                              id: 2vewn
                              type: nodes
                          preprints:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/preprints/?format=json
                                meta: {}
                          storage:
                            links:
                              related:
                                href: https://api.osf.io/v2/nodes/2vewn/storage/?format=json
                                meta: {}
                            data:
                              id: 2vewn
                              type: nodes
                        links:
                          html: https://osf.io/2vewn/
                          self: https://api.osf.io/v2/nodes/2vewn/
                  links: {}
                links:
                  first: null
                  last: null
                  prev: null
                  next: null
                  meta:
                    total: 1
                    per_page: 10
      x-response-schema: Collection
    post:
      tags:
      - Collections
      summary: Add Metadata or Subjects to a Entity in a Collection
      description: |-
        List of user created metadata for entities within a collection.
        #### Permissions
        To edit this collection a user must have collections write permissions
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_add_metadata
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                application/json:
                  data:
                    type: collected-metadata
                    attributes:
                      volume: test
                      guid: test0
                      subjects: 5fd228b7e64e1300aa99ee15
        required: true
      responses:
        "201":
          description: OK
          content: {}
      x-response-schema: Collection
      x-codegen-request-body-name: body
  /collections/{collection_id}/collected_metadata/{cgm_id}:
    get:
      tags:
      - Collections
      summary: Retrieve Specific Metadata for a Collection
      description: |2-

        #### Permissions
        In order to view this metadata it must be public or a user must have read permissions for collection.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Errors
        This request should never return an error.
      operationId: collections_metadata_registrations_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: cgm_id
        in: path
        description: A short id for that piece of metadata
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            data:
              example:
                id: zw4sh
                type: collected-metadata
                attributes:
                  collected_type: Action Research
                  status: ""
                  volume: ""
                  issue: ""
                  program_area: Child Welfare
                relationships:
                  creator:
                    links:
                      related:
                        href: https://api.osf.io/v2/users/nsx26/
                        meta: {}
                    data:
                      id: nsx26
                      type: users
                  collection:
                    links:
                      related:
                        href: https://api.osf.io/v2/collections/ux3nq/
                        meta: {}
                    data:
                      id: ux3nq
                      type: collections
                  guid:
                    links:
                      related:
                        href: https://api.osf.io/v2/guids/zw4sh/
                        meta: {}
                  subjects:
                    links:
                      related:
                        href: https://api.osf.io/v2/collections/ux3nq/collected_metadata/zw4sh/subjects/
                        meta: {}
                      self:
                        href: https://api.osf.io/v2/collections/ux3nq/collected_metadata/zw4sh/relationships/subjects/
                        meta: {}
                embeds:
                  guid:
                    data:
                      id: zw4sh
                      type: nodes
                      attributes:
                        title: test
                        description: flaksdjfasdlkfj lkjdf aslkdfj sdlfkj
                        category: project
                        custom_citation: null
                        date_created: 2020-06-05T18:02:28.254638Z
                        date_modified: 2020-10-21T15:47:17.646448Z
                        registration: false
                        preprint: false
                        fork: false
                        collection: false
                        tags: []
                        node_license:
                          copyright_holders: []
                          year: null
                        analytics_key: ""
                        current_user_can_comment: false
                        current_user_permissions: []
                        current_user_is_contributor: false
                        current_user_is_contributor_or_group_member: false
                        wiki_enabled: true
                        public: false
                      relationships:
                        license:
                          links:
                            related:
                              href: https://api.osf.io/v2/licenses/563c1cf88c5e4a3877f9e96a/
                              meta: {}
                          data:
                            id: 563c1cf88c5e4a3877f9e96a
                            type: licenses
                        children:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/children/
                              meta: {}
                        comments:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/comments/?filter%5Btarget%5D=zw4sh
                              meta: {}
                        contributors:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/contributors/
                              meta: {}
                        bibliographic_contributors:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/bibliographic_contributors/
                              meta: {}
                        implicit_contributors:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/implicit_contributors/
                              meta: {}
                        files:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/files/
                              meta: {}
                        settings:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/settings/
                              meta: {}
                          data:
                            id: zw4sh
                            type: nodes
                        wikis:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/wikis/
                              meta: {}
                        forked_from:
                          data: null
                        template_node:
                          data: null
                        forks:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/forks/
                              meta: {}
                        groups:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/groups/
                              meta: {}
                        linked_by_nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/linked_by_nodes/
                              meta: {}
                        linked_by_registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/linked_by_registrations/
                              meta: {}
                        parent:
                          data: null
                        identifiers:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/identifiers/
                              meta: {}
                        affiliated_institutions:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/institutions/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/nodes/zw4sh/relationships/institutions/
                              meta: {}
                        draft_registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/draft_registrations/
                              meta: {}
                        registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/registrations/
                              meta: {}
                        region:
                          links:
                            related:
                              href: https://api.osf.io/v2/regions/us/
                              meta: {}
                          data:
                            id: us
                            type: regions
                        root:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/
                              meta: {}
                          data:
                            id: zw4sh
                            type: nodes
                        logs:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/logs/
                              meta: {}
                        linked_nodes:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/linked_nodes/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/nodes/zw4sh/relationships/linked_nodes/
                              meta: {}
                        linked_registrations:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/linked_registrations/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/nodes/zw4sh/relationships/linked_registrations/
                              meta: {}
                        view_only_links:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/view_only_links/
                              meta: {}
                        citation:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/citation/
                              meta: {}
                          data:
                            id: zw4sh
                            type: nodes
                        preprints:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/preprints/
                              meta: {}
                        storage:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/storage/
                              meta: {}
                          data:
                            id: zw4sh
                            type: nodes
                        subjects:
                          links:
                            related:
                              href: https://api.osf.io/v2/nodes/zw4sh/subjects/
                              meta: {}
                            self:
                              href: https://api.osf.io/v2/nodes/zw4sh/relationships/subjects/
                              meta: {}
                      links:
                        html: https://osf.io/zw4sh/
                        self: https://api.osf.io/v2/nodes/zw4sh/
                links: {}
            meta:
              example:
                version: "2.20"
      x-response-schema: Collection
    post:
      tags:
      - Collections
      summary: Add Metadata or Subjects to an Entity in a Collection
      description: |-
        List of user created metadata for entities within a collection.
        #### Permissions
        To edit this collection a user must have collections write permissions
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: cgm_id
        in: path
        description: A short id for that piece of metadata
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                application/json:
                  data:
                    type: collected-metadata
                    attributes:
                      volume: test
                      guid: test0
                      subjects: 5fd228b7e64e1300aa99ee15
        required: true
      responses:
        "201":
          description: OK
          content: {}
      x-response-schema: Collection
      x-codegen-request-body-name: body
    delete:
      tags:
      - Collections
      summary: Delete Collection Metadata from entitiy
      description: |2-

        #### Permissions
        Only a user with collection admin permissions can delete collected metadata
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_delete
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: cgm_id
        in: path
        description: A short id for that piece of metadata
        required: true
        schema:
          type: string
      responses:
        "204":
          description: NO CONTENT
          content: {}
      x-response-schema: Collection
  /collections/{collection_id}/collected_metadata/{cgm_id}/subjects/:
    get:
      tags:
      - Collections
      summary: Retrieve subject data for a specific piece of metadata info for a collection
      description: |2-

        #### Permissions
        In order to view these subject it must be a public collection or a user must have read permissions for collection.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
        #### Errors
        This request should never return an error, other then permissions errors.
      operationId: collections_collected_metadata
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: cgm_id
        in: path
        description: A short id for that piece of metadata
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 5fd228b7e64e1300aa99ee15
                  type: subjects
                  attributes:
                    text: "Example Subject #0"
                    taxonomy_name: ""
                  relationships:
                    parent:
                      data: null
                    children:
                      links:
                        related:
                          href: https://api.osf.io/v2/subjects/5fd228b7e64e1300aa99ee15/children/
                          meta: {}
                  embeds:
                    parent:
                      errors:
                      - detail: Not found.
                  links:
                    self: https://api.osf.io/v2/subjects/5fd228b7e64e1300aa99ee15/
                meta:
                  total: 1
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.osf.io/v2/collections/nywr6/collected_metadata/zjxhs/subjects/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Collection
  /collections/{collection_id}/collected_metadata/{cgm_id}/relationships/subjects/:
    get:
      tags:
      - Collections
      summary: Retrieve subject metadata for a specific piece of metadata in a collection
      description: |2-

        #### Permissions
        This is public for a logged out user when an entity is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_subjects_relationships
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: cgm_id
        in: path
        description: A short id for that piece of metadata
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - type: subjects
                  id: 5fd228b7e64e1300aa99ee15
                links:
                  self: https://api.osf.io/v2/collections/nywr6/collected_metadata/zjxhs/relationships/subjects/
                  html: https://api.osf.io/v2/collections/nywr6/collected_metadata/zjxhs/subjects/
                meta:
                  version: "2.20"
      x-response-schema: Collection
    post:
      tags:
      - Collections
      summary: Update subjects for a specific piece of metadata in a collection
      description: |2-

        #### Permissions
        This is editable for a user with a write permission for this collection.

        #### Returns
        Returns a JSON object containing `data` and `links` keys.

        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collections_metadata_subjects_relationships_update
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: cgm_id
        in: path
        description: A short id for that piece of metadata
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                application/json:
                  data:
                    type: subjects
                    id: 5fd228b7e64e1300aa99ee15
        required: true
      responses:
        "201":
          description: OK
          content: {}
      x-response-schema: Collection
      x-codegen-request-body-name: body
  /collection_submissions/{collection_submission_id}/actions/:
    get:
      tags:
      - Collection Submissions
      summary: Get a list of Collection Submission Actions for a Collection Submission
      description: |2-

        This returns a list of the actions that have changed the Collection Submission moderation state.
        #### Permissions
        This information is only available to an admin or moderator of a Collection when it is private, however if the Collection is public the data is available to all.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of nodes ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_submission_list
      parameters:
      - name: collection_submission_id
        in: path
        description: A short id for that collection submission
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 63bc18c66f4506000abae96f
                  type: collection-submission-actions
                  attributes:
                    trigger: remove
                    from_state: accepted
                    to_state: removed
                    comment: test remove!
                    date_created: 2023-01-09T13:38:14.598839Z
                    date_modified: 2023-01-09T13:38:14.598867Z
                  relationships:
                    collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/
                          meta: {}
                      data:
                        id: 3vpkf
                        type: collections
                    creator:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/zpw9n/
                          meta: {}
                      data:
                        id: zpw9n
                        type: users
                    target:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/collection_submissions/xhwz7/
                          meta: {}
                      data:
                        id: xhwz7-3vpkf
                        type: collection-submission
                  links:
                    self: https://api.staging.osf.io/v2/actions/63bc18c66f4506000abae96f/
      x-response-schema: Collection Submissions
  /collection_submission_actions/{collection_submission_id}/:
    get:
      tags:
      - Collection Submission Actions
      summary: Retrieve a Collection Submission Action
      description: "\n#### Permissions\nThis information is only available to an admin\
        \ on the Collection Submission in question.\n#### Returns\nReturns a JSON\
        \ object containing `data` and `links` keys.\n\nReturns a JSON object with\
        \ a `data` key containing the representation of the requested collection submission\
        \ action object, if the request is successful. "
      operationId: collection_submission_actions
      parameters:
      - name: collection_submission_id
        in: path
        description: A short id for that collection submission
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  id: 63bc18c66f4506000abae96f
                  type: collection-submission-actions
                  attributes:
                    trigger: remove
                    from_state: accepted
                    to_state: removed
                    comment: test remove!
                    date_created: 2023-01-09T13:38:14.598839Z
                    date_modified: 2023-01-09T13:38:14.598867Z
                  relationships:
                    collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/
                          meta: {}
                      data:
                        id: 3vpkf
                        type: collections
                    creator:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/zpw9n/
                          meta: {}
                      data:
                        id: zpw9n
                        type: users
                    target:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/collection_submissions/xhwz7/
                          meta: {}
                      data:
                        id: xhwz7-3vpkf
                        type: collection-submission
                  links:
                    self: https://api.staging.osf.io/v2/actions/63bc18c66f4506000abae96f/
      x-response-schema: Collection Submission Action
  /collection_submission_actions/:
    post:
      tags:
      - Collection Submission Actions
      summary: Creates a Collection Submission Action
      description: |2-

        This adds a Collection Submission Action to the Collection, causing the Collection state machine to perform a transition.
        #### Permissions
        This action is only available to an admin on the Collection Submission, or a moderator for the Collection Provider in question.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        Returns a JSON object with a `data` key containing the representation of the requested collection submission action object, if the request is successful.
      operationId: collection_submission_actions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                data:
                  type: collection-submission-actions
                  attributes:
                    comment: some comment
                    trigger: remove
                  relationships:
                    target:
                      data:
                        id: "{node_id}-{collection_id}"
                        type: collection-submission
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  id: 63bc18c66f4506000abae96f
                  type: collection-submission-actions
                  attributes:
                    trigger: remove
                    from_state: accepted
                    to_state: removed
                    comment: test remove!
                    date_created: 2023-01-09T13:38:14.598839Z
                    date_modified: 2023-01-09T13:38:14.598867Z
                  relationships:
                    collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/
                          meta: {}
                      data:
                        id: 3vpkf
                        type: collections
                    creator:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/zpw9n/
                          meta: {}
                      data:
                        id: zpw9n
                        type: users
                    target:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/collection_submissions/xhwz7/
                          meta: {}
                      data:
                        id: xhwz7-3vpkf
                        type: collection-submission
                  links:
                    self: https://api.staging.osf.io/v2/actions/63bc18c66f4506000abae96f/
      x-response-schema: Collection Submission Action
      x-codegen-request-body-name: body
  /provider/collections/:
    get:
      tags:
      - Collection Providers
      summary: List Collections Providers
      description: |2-

        This returns a list of the Collections Providers.
        #### Permissions
        This information is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of collection provider ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_provider_list
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: testlab
                  type: collection-providers
                  attributes:
                    name: Test Lab (Stage1)
                    description: |-
                      <p><span>&lt;p style="background-color:;color:</span><span>070539</span><span>;"&gt;</span><span><span>Character Lab was founded in 2013 by a scientist and two educators: Angela Duckworth, author of </span></span><em>Grit: The Power of Passion and Perseverance</em><span><span> and Rosa Lee and Egbert Chang Professor at the University of Pennsylvania; Dave Levin, co-founder of KIPP public charter schools; and Dominic Randolph, Head of School at Riverdale Country School. </span><span>&lt;/p&gt;</span></span></p>
                      <span> </span>
                      <p>Dave and Dominic met Angela on a field trip. The two educators were visiting leading researchers around the world, eager to find scientific insights that might help young people lead lives that were good for others as well as themselves. These conversations revealed a problem: because research involving kids and educators was so much more time-consuming and expensive than research with adults, the pace of scientific discovery was frustratingly slow. What’s more, insights that had been uncovered by scientists remained hidden from educators and parents, buried in academic articles filled with technical jargon. </p>
                    advisory_board: ""
                    example: null
                    domain: ""
                    domain_redirect_enabled: false
                    footer_links: ""
                    email_support: null
                    facebook_app_id: null
                    allow_submissions: true
                    allow_commenting: false
                    assets:
                      square_color_no_transparent: https://test.storage.googleapis.com/cos-osf-stage-cdn-us/assets/characterlabmain_l39QL66.png
                      style: https://test.storage.googleapis.com/cos-osf-stage-cdn-us/assets/characterlab_YwvMKWW.css
                    share_source: ""
                    share_publish_type: Thesis
                    permissions: []
                    reviews_workflow: pre-moderation
                  relationships:
                    subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/subjects/
                          meta: {}
                    highlighted_subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/subjects/highlighted/
                          meta:
                            has_highlighted_subjects: false
                    licenses_acceptable:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/licenses/
                          meta: {}
                    schemas:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/registrations/characterlab/schemas/
                          meta: {}
                    primary_collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/9g8hx/
                          meta: {}
                      data:
                        id: 9g8hx
                        type: collections
                    moderators:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/moderators/
                          meta: {}
                    subscriptions:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/subscriptions/
                          meta: {}
                  links:
                    self: https://api.staging.osf.io/v2/providers/collections/characterlab/
                - id: colmod
                  type: collection-providers
                  attributes:
                    name: Collections Moderation Project
                    description: A Collection created specifically for use by the
                      Collections Moderation Project. For testing or experimentation
                      or whatever.
                    advisory_board: ""
                    example: null
                    domain: ""
                    domain_redirect_enabled: false
                    footer_links: ""
                    email_support: null
                    facebook_app_id: null
                    allow_submissions: true
                    allow_commenting: false
                    assets:
                      square_color_no_transparent: https://storage.googleapis.com/cos-osf-stage-cdn-us/assets/moderation_icon_owfYLnO.png
                      favicon: https://storage.googleapis.com/cos-osf-stage-cdn-us/assets/moderation_icon_lPhz315.png
                    share_source: ""
                    share_publish_type: Thesis
                    permissions: []
                    reviews_workflow: pre-moderation
                  relationships:
                    subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/subjects/
                          meta: {}
                    highlighted_subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/subjects/highlighted/
                          meta:
                            has_highlighted_subjects: false
                    licenses_acceptable:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/licenses/
                          meta: {}
                    schemas:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/registrations/colmod/schemas/
                          meta: {}
                    primary_collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/3vpkf/
                          meta: {}
                      data:
                        id: 3vpkf
                        type: collections
                    moderators:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/
                          meta: {}
                    subscriptions:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/subscriptions/
                          meta: {}
                  links:
                    self: https://api.staging.osf.io/v2/providers/collections/colmod/
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Detail
      description: |2-

        This returns a single Collections Provider entity.
        #### Permissions
        This information is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        Returns a JSON object with a `data` key containing the representation of the requested collection provider object, if the request is successful.
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  id: testlab
                  type: collection-providers
                  attributes:
                    name: Test Lab (Stage1)
                    description: <p>Test Description Data</p>
                    advisory_board: ""
                    example: null
                    domain: ""
                    domain_redirect_enabled: false
                    footer_links: ""
                    email_support: null
                    facebook_app_id: null
                    allow_submissions: true
                    allow_commenting: false
                    assets:
                      square_color_no_transparent: https://test.storage.googleapis.com/cos-osf-stage-cdn-us/assets/characterlabmain_l39QL66.png
                      style: https://test.storage.googleapis.com/cos-osf-stage-cdn-us/assets/characterlab_YwvMKWW.css
                    share_source: ""
                    share_publish_type: Thesis
                    permissions: []
                    reviews_workflow: pre-moderation
                  relationships:
                    subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/subjects/
                          meta: {}
                    highlighted_subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/subjects/highlighted/
                          meta:
                            has_highlighted_subjects: false
                    licenses_acceptable:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/licenses/
                          meta: {}
                    schemas:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/registrations/characterlab/schemas/
                          meta: {}
                    primary_collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/9g8hx/
                          meta: {}
                      data:
                        id: 9g8hx
                        type: collections
                    moderators:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/moderators/
                          meta: {}
                    subscriptions:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/characterlab/subscriptions/
                          meta: {}
                  links:
                    self: https://api.staging.osf.io/v2/providers/collections/characterlab/
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/licenses/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Licenses List
      description: |2-

        This returns the lists of possible licenses for a Collection.
        #### Permissions
        This information is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of license ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 5c252c8e0989e100220edb73
                  type: licenses
                  attributes:
                    name: CC-By Attribution 4.0 International
                    text: |
                      Creative Commons Attribution 4.0 International Public License

                      By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License ("Public License"). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.

                      Section 1 – Definitions.

                      Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.
                      Adapter's License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.
                      Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.
                      Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.
                      Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.
                      Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.
                      Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.
                      Licensor means the individual(s) or entity(ies) granting rights under this Public License.
                      Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.
                      Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.
                      You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.
                      Section 2 – Scope.

                      License grant.
                      Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:
                      reproduce and Share the Licensed Material, in whole or in part; and
                      produce, reproduce, and Share Adapted Material.
                      Exceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.
                      Term. The term of this Public License is specified in Section 6(a).
                      Media and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material.
                      Downstream recipients.
                      Offer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.
                      No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.
                      No endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).
                      Other rights.

                      Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.
                      Patent and trademark rights are not licensed under this Public License.
                      To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.
                      Section 3 – License Conditions.

                      Your exercise of the Licensed Rights is expressly made subject to the following conditions.

                      Attribution.

                      If You Share the Licensed Material (including in modified form), You must:

                      retain the following if it is supplied by the Licensor with the Licensed Material:
                      identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);
                      a copyright notice;
                      a notice that refers to this Public License;
                      a notice that refers to the disclaimer of warranties;
                      a URI or hyperlink to the Licensed Material to the extent reasonably practicable;
                      indicate if You modified the Licensed Material and retain an indication of any previous modifications; and
                      indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.
                      You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.
                      If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.
                      If You Share Adapted Material You produce, the Adapter's License You apply must not prevent recipients of the Adapted Material from complying with this Public License.
                      Section 4 – Sui Generis Database Rights.

                      Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:

                      for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;
                      if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and
                      You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.
                      For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.
                      Section 5 – Disclaimer of Warranties and Limitation of Liability.

                      Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You.
                      To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You.
                      The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.
                      Section 6 – Term and Termination.

                      This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.
                      Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:

                      automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or
                      upon express reinstatement by the Licensor.
                      For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.
                      For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.
                      Sections 1, 5, 6, 7, and 8 survive termination of this Public License.
                      Section 7 – Other Terms and Conditions.

                      The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.
                      Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.
                      Section 8 – Interpretation.

                      For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.
                      To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.
                      No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.
                      Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.
                    url: https://creativecommons.org/licenses/by/4.0/legalcode
                    required_fields: []
                  links:
                    self: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb73/
                - id: 5c252c8e0989e100220edb74
                  type: licenses
                  attributes:
                    name: Artistic License 2.0
                    text: "\t\t       The Artistic License 2.0\n\n\t    Copyright\
                      \ (c) 2000-2006, The Perl Foundation.\n\n     Everyone is permitted\
                      \ to copy and distribute verbatim copies\n      of this license\
                      \ document, but changing it is not allowed.\n\nPreamble\n\n\
                      This license establishes the terms under which a given free\
                      \ software\nPackage may be copied, modified, distributed, and/or\
                      \ redistributed.\nThe intent is that the Copyright Holder maintains\
                      \ some artistic\ncontrol over the development of that Package\
                      \ while still keeping the\nPackage available as open source\
                      \ and free software.\n\nYou are always permitted to make arrangements\
                      \ wholly outside of this\nlicense directly with the Copyright\
                      \ Holder of a given Package.  If the\nterms of this license\
                      \ do not permit the full use that you propose to\nmake of the\
                      \ Package, you should contact the Copyright Holder and seek\n\
                      a different licensing arrangement. \n\nDefinitions\n\n    \"\
                      Copyright Holder\" means the individual(s) or organization(s)\n\
                      \    named in the copyright notice for the entire Package.\n\
                      \n    \"Contributor\" means any party that has contributed code\
                      \ or other\n    material to the Package, in accordance with\
                      \ the Copyright Holder's\n    procedures.\n\n    \"You\" and\
                      \ \"your\" means any person who would like to copy,\n    distribute,\
                      \ or modify the Package.\n\n    \"Package\" means the collection\
                      \ of files distributed by the\n    Copyright Holder, and derivatives\
                      \ of that collection and/or of\n    those files. A given Package\
                      \ may consist of either the Standard\n    Version, or a Modified\
                      \ Version.\n\n    \"Distribute\" means providing a copy of the\
                      \ Package or making it\n    accessible to anyone else, or in\
                      \ the case of a company or\n    organization, to others outside\
                      \ of your company or organization.\n\n    \"Distributor Fee\"\
                      \ means any fee that you charge for Distributing\n    this Package\
                      \ or providing support for this Package to another\n    party.\
                      \  It does not mean licensing fees.\n\n    \"Standard Version\"\
                      \ refers to the Package if it has not been\n    modified, or\
                      \ has been modified only in ways explicitly requested\n    by\
                      \ the Copyright Holder.\n\n    \"Modified Version\" means the\
                      \ Package, if it has been changed, and\n    such changes were\
                      \ not explicitly requested by the Copyright\n    Holder. \n\n\
                      \    \"Original License\" means this Artistic License as Distributed\
                      \ with\n    the Standard Version of the Package, in its current\
                      \ version or as\n    it may be modified by The Perl Foundation\
                      \ in the future.\n\n    \"Source\" form means the source code,\
                      \ documentation source, and\n    configuration files for the\
                      \ Package.\n\n    \"Compiled\" form means the compiled bytecode,\
                      \ object code, binary,\n    or any other form resulting from\
                      \ mechanical transformation or\n    translation of the Source\
                      \ form.\n\n\nPermission for Use and Modification Without Distribution\n\
                      \n(1)  You are permitted to use the Standard Version and create\
                      \ and use\nModified Versions for any purpose without restriction,\
                      \ provided that\nyou do not Distribute the Modified Version.\n\
                      \n\nPermissions for Redistribution of the Standard Version\n\
                      \n(2)  You may Distribute verbatim copies of the Source form\
                      \ of the\nStandard Version of this Package in any medium without\
                      \ restriction,\neither gratis or for a Distributor Fee, provided\
                      \ that you duplicate\nall of the original copyright notices\
                      \ and associated disclaimers.  At\nyour discretion, such verbatim\
                      \ copies may or may not include a\nCompiled form of the Package.\n\
                      \n(3)  You may apply any bug fixes, portability changes, and\
                      \ other\nmodifications made available from the Copyright Holder.\
                      \  The resulting\nPackage will still be considered the Standard\
                      \ Version, and as such\nwill be subject to the Original License.\n\
                      \n\nDistribution of Modified Versions of the Package as Source\
                      \ \n\n(4)  You may Distribute your Modified Version as Source\
                      \ (either gratis\nor for a Distributor Fee, and with or without\
                      \ a Compiled form of the\nModified Version) provided that you\
                      \ clearly document how it differs\nfrom the Standard Version,\
                      \ including, but not limited to, documenting\nany non-standard\
                      \ features, executables, or modules, and provided that\nyou\
                      \ do at least ONE of the following:\n\n    (a)  make the Modified\
                      \ Version available to the Copyright Holder\n    of the Standard\
                      \ Version, under the Original License, so that the\n    Copyright\
                      \ Holder may include your modifications in the Standard\n  \
                      \  Version.\n\n    (b)  ensure that installation of your Modified\
                      \ Version does not\n    prevent the user installing or running\
                      \ the Standard Version. In\n    addition, the Modified Version\
                      \ must bear a name that is different\n    from the name of the\
                      \ Standard Version.\n\n    (c)  allow anyone who receives a\
                      \ copy of the Modified Version to\n    make the Source form\
                      \ of the Modified Version available to others\n    under\n\t\
                      \t\n\t(i)  the Original License or\n\n\t(ii)  a license that\
                      \ permits the licensee to freely copy,\n\tmodify and redistribute\
                      \ the Modified Version using the same\n\tlicensing terms that\
                      \ apply to the copy that the licensee\n\treceived, and requires\
                      \ that the Source form of the Modified\n\tVersion, and of any\
                      \ works derived from it, be made freely\n\tavailable in that\
                      \ license fees are prohibited but Distributor\n\tFees are allowed.\n\
                      \n\nDistribution of Compiled Forms of the Standard Version \n\
                      or Modified Versions without the Source\n\n(5)  You may Distribute\
                      \ Compiled forms of the Standard Version without\nthe Source,\
                      \ provided that you include complete instructions on how to\n\
                      get the Source of the Standard Version.  Such instructions must\
                      \ be\nvalid at the time of your distribution.  If these instructions,\
                      \ at any\ntime while you are carrying out such distribution,\
                      \ become invalid, you\nmust provide new instructions on demand\
                      \ or cease further distribution.\nIf you provide valid instructions\
                      \ or cease distribution within thirty\ndays after you become\
                      \ aware that the instructions are invalid, then\nyou do not\
                      \ forfeit any of your rights under this license.\n\n(6)  You\
                      \ may Distribute a Modified Version in Compiled form without\n\
                      the Source, provided that you comply with Section 4 with respect\
                      \ to\nthe Source of the Modified Version.\n\n\nAggregating or\
                      \ Linking the Package \n\n(7)  You may aggregate the Package\
                      \ (either the Standard Version or\nModified Version) with other\
                      \ packages and Distribute the resulting\naggregation provided\
                      \ that you do not charge a licensing fee for the\nPackage. \
                      \ Distributor Fees are permitted, and licensing fees for other\n\
                      components in the aggregation are permitted. The terms of this\
                      \ license\napply to the use and Distribution of the Standard\
                      \ or Modified Versions\nas included in the aggregation.\n\n\
                      (8) You are permitted to link Modified and Standard Versions\
                      \ with\nother works, to embed the Package in a larger work of\
                      \ your own, or to\nbuild stand-alone binary or bytecode versions\
                      \ of applications that\ninclude the Package, and Distribute\
                      \ the result without restriction,\nprovided the result does\
                      \ not expose a direct interface to the Package.\n\n\nItems That\
                      \ are Not Considered Part of a Modified Version \n\n(9) Works\
                      \ (including, but not limited to, modules and scripts) that\n\
                      merely extend or make use of the Package, do not, by themselves,\
                      \ cause\nthe Package to be a Modified Version.  In addition,\
                      \ such works are not\nconsidered parts of the Package itself,\
                      \ and are not subject to the\nterms of this license.\n\n\nGeneral\
                      \ Provisions\n\n(10)  Any use, modification, and distribution\
                      \ of the Standard or\nModified Versions is governed by this\
                      \ Artistic License. By using,\nmodifying or distributing the\
                      \ Package, you accept this license. Do not\nuse, modify, or\
                      \ distribute the Package, if you do not accept this\nlicense.\n\
                      \n(11)  If your Modified Version has been derived from a Modified\n\
                      Version made by someone other than you, you are nevertheless\
                      \ required\nto ensure that your Modified Version complies with\
                      \ the requirements of\nthis license.\n\n(12)  This license does\
                      \ not grant you the right to use any trademark,\nservice mark,\
                      \ tradename, or logo of the Copyright Holder.\n\n(13)  This\
                      \ license includes the non-exclusive, worldwide,\nfree-of-charge\
                      \ patent license to make, have made, use, offer to sell,\nsell,\
                      \ import and otherwise transfer the Package with respect to\
                      \ any\npatent claims licensable by the Copyright Holder that\
                      \ are necessarily\ninfringed by the Package. If you institute\
                      \ patent litigation\n(including a cross-claim or counterclaim)\
                      \ against any party alleging\nthat the Package constitutes direct\
                      \ or contributory patent\ninfringement, then this Artistic License\
                      \ to you shall terminate on the\ndate that such litigation is\
                      \ filed.\n\n(14)  Disclaimer of Warranty:\nTHE PACKAGE IS PROVIDED\
                      \ BY THE COPYRIGHT HOLDER AND CONTRIBUTORS \"AS\nIS' AND WITHOUT\
                      \ ANY EXPRESS OR IMPLIED WARRANTIES. THE IMPLIED\nWARRANTIES\
                      \ OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR\n\
                      NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY YOUR\
                      \ LOCAL\nLAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR\
                      \ CONTRIBUTOR WILL\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\
                      \ OR CONSEQUENTIAL\nDAMAGES ARISING IN ANY WAY OUT OF THE USE\
                      \ OF THE PACKAGE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH\
                      \ DAMAGE.\n"
                    url: http://www.perlfoundation.org/attachment/legal/artistic-2_0.txt
                    required_fields: []
                  links:
                    self: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb74/
                - id: 5c252c8e0989e100220edb75
                  type: licenses
                  attributes:
                    name: CC0 1.0 Universal
                    text: |
                      Statement of Purpose

                      The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an "owner") of an original work of authorship and/or a database (each, a "Work").

                      Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works ("Commons") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.

                      For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the "Affirmer"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.

                      1. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights ("Copyright and Related Rights"). Copyright and Related Rights include, but are not limited to, the following:

                      the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;
                      moral rights retained by the original author(s) and/or performer(s);
                      publicity and privacy rights pertaining to a person's image or likeness depicted in a Work;
                      rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below;
                      rights protecting the extraction, dissemination, use and reuse of data in a Work;
                      database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and
                      other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.
                      2. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the "Waiver"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose.

                      3. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the "License"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose.

                      4. Limitations and Disclaimers.

                      No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.
                      Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.
                      Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person's Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.
                      Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.
                    url: https://creativecommons.org/publicdomain/zero/1.0/legalcode
                    required_fields: []
                  links:
                    self: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb75/
                - id: 5c252c8e0989e100220edb7b
                  type: licenses
                  attributes:
                    name: Eclipse Public License 1.0
                    text: |
                      Eclipse Public License - v 1.0

                      THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.

                      1. DEFINITIONS

                      "Contribution" means:

                      a) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and
                      b) in the case of each subsequent Contributor:
                      i) changes to the Program, and
                      ii) additions to the Program;
                      where such changes and/or additions to the Program originate from and are distributed by that particular Contributor. A Contribution 'originates' from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include additions to the Program which: (i) are separate modules of software distributed in conjunction with the Program under their own license agreement, and (ii) are not derivative works of the Program.
                      "Contributor" means any person or entity that distributes the Program.

                      "Licensed Patents" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.

                      "Program" means the Contributions distributed in accordance with this Agreement.

                      "Recipient" means anyone who receives the Program under this Agreement, including all Contributors.

                      2. GRANT OF RIGHTS

                      a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source code and object code form.
                      b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.
                      c) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.
                      d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement.
                      3. REQUIREMENTS

                      A Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:

                      a) it complies with the terms and conditions of this Agreement; and
                      b) its license agreement:
                      i) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;
                      ii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;
                      iii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any other party; and
                      iv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it in a reasonable manner on or through a medium customarily used for software exchange.
                      When the Program is made available in source code form:

                      a) it must be made available under this Agreement; and
                      b) a copy of this Agreement must be included with each copy of the Program.
                      Contributors may not remove or alter any copyright notices contained within the Program.

                      Each Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows subsequent Recipients to identify the originator of the Contribution.

                      4. COMMERCIAL DISTRIBUTION

                      Commercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor ("Commercial Contributor") hereby agrees to defend and indemnify every other Contributor ("Indemnified Contributor") against any losses, damages and costs (collectively "Losses") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.

                      For example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.

                      5. NO WARRANTY

                      EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement , including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.

                      6. DISCLAIMER OF LIABILITY

                      EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      7. GENERAL

                      If any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.

                      If Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.

                      All Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.

                      Everyone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.

                      This Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation.
                    url: http://www.eclipse.org/legal/epl-v10.html
                    required_fields: []
                  links:
                    self: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb7b/
                - id: 5c252c8e0989e100220edb7c
                  type: licenses
                  attributes:
                    name: Mozilla Public License 2.0
                    text: |
                      Mozilla Public License
                      Version 2.0

                      1. Definitions

                      1.1. “Contributor”
                      means each individual or legal entity that creates, contributes to the creation of, or owns Covered Software.

                      1.2. “Contributor Version”
                      means the combination of the Contributions of others (if any) used by a Contributor and that particular Contributor’s Contribution.

                      1.3. “Contribution”
                      means Covered Software of a particular Contributor.

                      1.4. “Covered Software”
                      means Source Code Form to which the initial Contributor has attached the notice in Exhibit A, the Executable Form of such Source Code Form, and Modifications of such Source Code Form, in each case including portions thereof.

                      1.5. “Incompatible With Secondary Licenses”
                      means

                      that the initial Contributor has attached the notice described in Exhibit B to the Covered Software; or

                      that the Covered Software was made available under the terms of version 1.1 or earlier of the License, but not also under the terms of a Secondary License.

                      1.6. “Executable Form”
                      means any form of the work other than Source Code Form.

                      1.7. “Larger Work”
                      means a work that combines Covered Software with other material, in a separate file or files, that is not Covered Software.

                      1.8. “License”
                      means this document.

                      1.9. “Licensable”
                      means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently, any and all of the rights conveyed by this License.

                      1.10. “Modifications”
                      means any of the following:

                      any file in Source Code Form that results from an addition to, deletion from, or modification of the contents of Covered Software; or

                      any new file in Source Code Form that contains any Covered Software.

                      1.11. “Patent Claims” of a Contributor
                      means any patent claim(s), including without limitation, method, process, and apparatus claims, in any patent Licensable by such Contributor that would be infringed, but for the grant of the License, by the making, using, selling, offering for sale, having made, import, or transfer of either its Contributions or its Contributor Version.

                      1.12. “Secondary License”
                      means either the GNU General Public License, Version 2.0, the GNU Lesser General Public License, Version 2.1, the GNU Affero General Public License, Version 3.0, or any later versions of those licenses.

                      1.13. “Source Code Form”
                      means the form of the work preferred for making modifications.

                      1.14. “You” (or “Your”)
                      means an individual or a legal entity exercising rights under this License. For legal entities, “You” includes any entity that controls, is controlled by, or is under common control with You. For purposes of this definition, “control” means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.

                      2. License Grants and Conditions

                      2.1. Grants

                      Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:

                      under intellectual property rights (other than patent or trademark) Licensable by such Contributor to use, reproduce, make available, modify, display, perform, distribute, and otherwise exploit its Contributions, either on an unmodified basis, with Modifications, or as part of a Larger Work; and

                      under Patent Claims of such Contributor to make, use, sell, offer for sale, have made, import, and otherwise transfer either its Contributions or its Contributor Version.

                      2.2. Effective Date

                      The licenses granted in Section 2.1 with respect to any Contribution become effective for each Contribution on the date the Contributor first distributes such Contribution.

                      2.3. Limitations on Grant Scope

                      The licenses granted in this Section 2 are the only rights granted under this License. No additional rights or licenses will be implied from the distribution or licensing of Covered Software under this License. Notwithstanding Section 2.1(b) above, no patent license is granted by a Contributor:

                      for any code that a Contributor has removed from Covered Software; or

                      for infringements caused by: (i) Your and any other third party’s modifications of Covered Software, or (ii) the combination of its Contributions with other software (except as part of its Contributor Version); or

                      under Patent Claims infringed by Covered Software in the absence of its Contributions.

                      This License does not grant any rights in the trademarks, service marks, or logos of any Contributor (except as may be necessary to comply with the notice requirements in Section 3.4).

                      2.4. Subsequent Licenses

                      No Contributor makes additional grants as a result of Your choice to distribute the Covered Software under a subsequent version of this License (see Section 10.2) or under the terms of a Secondary License (if permitted under the terms of Section 3.3).

                      2.5. Representation

                      Each Contributor represents that the Contributor believes its Contributions are its original creation(s) or it has sufficient rights to grant the rights to its Contributions conveyed by this License.

                      2.6. Fair Use

                      This License is not intended to limit any rights You have under applicable copyright doctrines of fair use, fair dealing, or other equivalents.

                      2.7. Conditions

                      Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in Section 2.1.

                      3. Responsibilities

                      3.1. Distribution of Source Form

                      All distribution of Covered Software in Source Code Form, including any Modifications that You create or to which You contribute, must be under the terms of this License. You must inform recipients that the Source Code Form of the Covered Software is governed by the terms of this License, and how they can obtain a copy of this License. You may not attempt to alter or restrict the recipients’ rights in the Source Code Form.

                      3.2. Distribution of Executable Form

                      If You distribute Covered Software in Executable Form then:

                      such Covered Software must also be made available in Source Code Form, as described in Section 3.1, and You must inform recipients of the Executable Form how they can obtain a copy of such Source Code Form by reasonable means in a timely manner, at a charge no more than the cost of distribution to the recipient; and

                      You may distribute such Executable Form under the terms of this License, or sublicense it under different terms, provided that the license for the Executable Form does not attempt to limit or alter the recipients’ rights in the Source Code Form under this License.

                      3.3. Distribution of a Larger Work

                      You may create and distribute a Larger Work under terms of Your choice, provided that You also comply with the requirements of this License for the Covered Software. If the Larger Work is a combination of Covered Software with a work governed by one or more Secondary Licenses, and the Covered Software is not Incompatible With Secondary Licenses, this License permits You to additionally distribute such Covered Software under the terms of such Secondary License(s), so that the recipient of the Larger Work may, at their option, further distribute the Covered Software under the terms of either this License or such Secondary License(s).

                      3.4. Notices

                      You may not remove or alter the substance of any license notices (including copyright notices, patent notices, disclaimers of warranty, or limitations of liability) contained within the Source Code Form of the Covered Software, except that You may alter any license notices to the extent required to remedy known factual inaccuracies.

                      3.5. Application of Additional Terms

                      You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, You may do so only on Your own behalf, and not on behalf of any Contributor. You must make it absolutely clear that any such warranty, support, indemnity, or liability obligation is offered by You alone, and You hereby agree to indemnify every Contributor for any liability incurred by such Contributor as a result of warranty, support, indemnity or liability terms You offer. You may include additional disclaimers of warranty and limitations of liability specific to any jurisdiction.

                      4. Inability to Comply Due to Statute or Regulation

                      If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Covered Software due to statute, judicial order, or regulation then You must: (a) comply with the terms of this License to the maximum extent possible; and (b) describe the limitations and the code they affect. Such description must be placed in a text file included with all distributions of the Covered Software under this License. Except to the extent prohibited by statute or regulation, such description must be sufficiently detailed for a recipient of ordinary skill to be able to understand it.

                      5. Termination

                      5.1. The rights granted under this License will terminate automatically if You fail to comply with any of its terms. However, if You become compliant, then the rights granted under this License from a particular Contributor are reinstated (a) provisionally, unless and until such Contributor explicitly and finally terminates Your grants, and (b) on an ongoing basis, if such Contributor fails to notify You of the non-compliance by some reasonable means prior to 60 days after You have come back into compliance. Moreover, Your grants from a particular Contributor are reinstated on an ongoing basis if such Contributor notifies You of the non-compliance by some reasonable means, this is the first time You have received notice of non-compliance with this License from such Contributor, and You become compliant prior to 30 days after Your receipt of the notice.

                      5.2. If You initiate litigation against any entity by asserting a patent infringement claim (excluding declaratory judgment actions, counter-claims, and cross-claims) alleging that a Contributor Version directly or indirectly infringes any patent, then the rights granted to You by any and all Contributors for the Covered Software under Section 2.1 of this License shall terminate.

                      5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user license agreements (excluding distributors and resellers) which have been validly granted by You or Your distributors under this License prior to termination shall survive termination.

                      6. Disclaimer of Warranty

                      Covered Software is provided under this License on an “as is” basis, without warranty of any kind, either expressed, implied, or statutory, including, without limitation, warranties that the Covered Software is free of defects, merchantable, fit for a particular purpose or non-infringing. The entire risk as to the quality and performance of the Covered Software is with You. Should any Covered Software prove defective in any respect, You (not any Contributor) assume the cost of any necessary servicing, repair, or correction. This disclaimer of warranty constitutes an essential part of this License. No use of any Covered Software is authorized under this License except under this disclaimer.

                      7. Limitation of Liability

                      Under no circumstances and under no legal theory, whether tort (including negligence), contract, or otherwise, shall any Contributor, or anyone who distributes Covered Software as permitted above, be liable to You for any direct, indirect, special, incidental, or consequential damages of any character including, without limitation, damages for lost profits, loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses, even if such party shall have been informed of the possibility of such damages. This limitation of liability shall not apply to liability for death or personal injury resulting from such party’s negligence to the extent applicable law prohibits such limitation. Some jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so this exclusion and limitation may not apply to You.

                      8. Litigation

                      Any litigation relating to this License may be brought only in the courts of a jurisdiction where the defendant maintains its principal place of business and such litigation shall be governed by laws of that jurisdiction, without reference to its conflict-of-law provisions. Nothing in this Section shall prevent a party’s ability to bring cross-claims or counter-claims.

                      9. Miscellaneous

                      This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not be used to construe this License against a Contributor.

                      10. Versions of the License

                      10.1. New Versions

                      Mozilla Foundation is the license steward. Except as provided in Section 10.3, no one other than the license steward has the right to modify or publish new versions of this License. Each version will be given a distinguishing version number.

                      10.2. Effect of New Versions

                      You may distribute the Covered Software under the terms of the version of the License under which You originally received the Covered Software, or under the terms of any subsequent version published by the license steward.

                      10.3. Modified Versions

                      If you create software not governed by this License, and you want to create a new license for such software, you may create and use a modified version of this License if you rename the license and remove any references to the name of the license steward (except to note that such modified license differs from this License).

                      10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses

                      If You choose to distribute Source Code Form that is Incompatible With Secondary Licenses under the terms of this version of the License, the notice described in Exhibit B of this License must be attached.

                      Exhibit A - Source Code Form License Notice

                      This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.

                      If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.

                      You may add additional accurate notices of copyright ownership.

                      Exhibit B - “Incompatible With Secondary Licenses” Notice

                      This Source Code Form is “Incompatible With Secondary Licenses”, as defined by the Mozilla Public License, v. 2.0.
                    url: https://www.mozilla.org/MPL/2.0/
                    required_fields: []
                  links:
                    self: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb7c/
                meta:
                  total: 5
                  per_page: 10
                  version: "2.20"
                links:
                  self: https://api.staging.osf.io/v2/providers/collections/temp/licenses/
                  first: null
                  last: null
                  prev: null
                  next: null
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/submissions/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Submissions List
      description: |2-

        This returns a list of all submissions to a Collections Provider entity.
        #### Permissions
        This information is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of node and preprint ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: uwnqs
                  type: collected-metadata
                  attributes:
                    reviews_state: accepted
                    date_created: 2022-01-03T20:12:25.315870Z
                    date_modified: 2022-01-03T20:12:25.329533Z
                    collected_type: automation
                    status: ""
                    volume: ""
                    issue: ""
                    program_area: ""
                    school_type: ""
                    study_design: ""
                  relationships:
                    creator:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/rmq6z/
                          meta: {}
                      data:
                        id: rmq6z
                        type: users
                    collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/rju4d/
                          meta: {}
                      data:
                        id: rju4d
                        type: collections
                    guid:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/guids/uwnqs/
                          meta: {}
                    collection_submission_actions:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collection_submissions/uwnqs-rju4d/actions/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/rju4d/collected_metadata/uwnqs/subjects/
                          meta: {}
                        self:
                          href: https://api.staging.osf.io/v2/collections/rju4d/collected_metadata/uwnqs/relationships/subjects/
                          meta: {}
                  embeds:
                    guid:
                      data:
                        id: uwnqs
                        type: nodes
                        attributes:
                          title: OSF Test Project
                          description: QA Selenium Testing
                          category: project
                          custom_citation: null
                          date_created: 2022-01-03T20:12:02.942101Z
                          date_modified: 2022-01-03T20:12:29.977480Z
                          registration: false
                          preprint: false
                          fork: false
                          collection: false
                          tags:
                          - qatest
                          - selenium
                          - tests/test_collections.py::TestCollectionSubmission::()::test_add_to_collection
                            (setup)
                          node_license:
                            copyright_holders: []
                            year: null
                          analytics_key: ""
                          current_user_can_comment: false
                          current_user_permissions: []
                          current_user_is_contributor: false
                          current_user_is_contributor_or_group_member: false
                          wiki_enabled: true
                          public: false
                        relationships:
                          license:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb75/
                                meta: {}
                            data:
                              id: 5c252c8e0989e100220edb75
                              type: licenses
                          children:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/children/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/comments/?filter%5Btarget%5D=uwnqs
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/contributors/
                                meta: {}
                          bibliographic_contributors:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/bibliographic_contributors/
                                meta: {}
                          implicit_contributors:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/implicit_contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/files/
                                meta: {}
                          settings:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/settings/
                                meta: {}
                            data:
                              id: uwnqs
                              type: node-setting
                          wikis:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/wikis/
                                meta: {}
                          forked_from:
                            data: null
                          template_node:
                            data: null
                          forks:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/forks/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/groups/
                                meta: {}
                          linked_by_nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/linked_by_nodes/
                                meta: {}
                          linked_by_registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/linked_by_registrations/
                                meta: {}
                          parent:
                            data: null
                          identifiers:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/identifiers/
                                meta: {}
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/institutions/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/relationships/institutions/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/draft_registrations/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/registrations/
                                meta: {}
                          region:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/regions/us/
                                meta: {}
                            data:
                              id: us
                              type: regions
                          root:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/
                                meta: {}
                            data:
                              id: uwnqs
                              type: nodes
                          logs:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/logs/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/relationships/linked_nodes/
                                meta: {}
                          linked_registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/linked_registrations/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/relationships/linked_registrations/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/view_only_links/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/citation/
                                meta: {}
                            data:
                              id: uwnqs
                              type: citation
                          preprints:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/preprints/
                                meta: {}
                          storage:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/storage/
                                meta: {}
                            data:
                              id: uwnqs
                              type: node-storage
                          subjects:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/subjects/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/uwnqs/relationships/subjects/
                                meta: {}
                        links:
                          html: https://staging.osf.io/uwnqs/
                          self: https://api.staging.osf.io/v2/nodes/uwnqs/
                  links: {}
                - id: a3prf
                  type: collected-metadata
                  attributes:
                    reviews_state: accepted
                    date_created: 2022-01-03T20:20:13.539361Z
                    date_modified: 2022-01-03T20:20:13.547825Z
                    collected_type: automation
                    status: ""
                    volume: ""
                    issue: ""
                    program_area: ""
                    school_type: ""
                    study_design: ""
                  relationships:
                    creator:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/rmq6z/
                          meta: {}
                      data:
                        id: rmq6z
                        type: users
                    collection:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/rju4d/
                          meta: {}
                      data:
                        id: rju4d
                        type: collections
                    guid:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/guids/a3prf/
                          meta: {}
                    collection_submission_actions:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collection_submissions/a3prf-rju4d/actions/
                          meta: {}
                    subjects:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/collections/rju4d/collected_metadata/a3prf/subjects/
                          meta: {}
                        self:
                          href: https://api.staging.osf.io/v2/collections/rju4d/collected_metadata/a3prf/relationships/subjects/
                          meta: {}
                  embeds:
                    guid:
                      data:
                        id: a3prf
                        type: nodes
                        attributes:
                          title: OSF Test Project
                          description: QA Selenium Testing
                          category: project
                          custom_citation: null
                          date_created: 2022-01-03T20:18:24.925774Z
                          date_modified: 2022-01-03T20:20:26.832995Z
                          registration: false
                          preprint: false
                          fork: false
                          collection: false
                          tags:
                          - qatest
                          - selenium
                          - tests/test_collections.py::TestCollectionSubmission::()::test_add_to_collection
                            (setup)
                          node_license:
                            copyright_holders: []
                            year: null
                          analytics_key: ""
                          current_user_can_comment: false
                          current_user_permissions: []
                          current_user_is_contributor: false
                          current_user_is_contributor_or_group_member: false
                          wiki_enabled: true
                          public: false
                        relationships:
                          license:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/licenses/5c252c8e0989e100220edb75/
                                meta: {}
                            data:
                              id: 5c252c8e0989e100220edb75
                              type: licenses
                          children:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/children/
                                meta: {}
                          comments:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/comments/?filter%5Btarget%5D=a3prf
                                meta: {}
                          contributors:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/contributors/
                                meta: {}
                          bibliographic_contributors:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/bibliographic_contributors/
                                meta: {}
                          implicit_contributors:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/implicit_contributors/
                                meta: {}
                          files:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/files/
                                meta: {}
                          settings:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/settings/
                                meta: {}
                            data:
                              id: a3prf
                              type: node-setting
                          wikis:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/wikis/
                                meta: {}
                          forked_from:
                            data: null
                          template_node:
                            data: null
                          forks:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/forks/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/groups/
                                meta: {}
                          linked_by_nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/linked_by_nodes/
                                meta: {}
                          linked_by_registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/linked_by_registrations/
                                meta: {}
                          parent:
                            data: null
                          identifiers:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/identifiers/
                                meta: {}
                          affiliated_institutions:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/institutions/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/relationships/institutions/
                                meta: {}
                          draft_registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/draft_registrations/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/registrations/
                                meta: {}
                          region:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/regions/us/
                                meta: {}
                            data:
                              id: us
                              type: regions
                          root:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/
                                meta: {}
                            data:
                              id: a3prf
                              type: nodes
                          logs:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/logs/
                                meta: {}
                          linked_nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/linked_nodes/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/relationships/linked_nodes/
                                meta: {}
                          linked_registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/linked_registrations/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/relationships/linked_registrations/
                                meta: {}
                          view_only_links:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/view_only_links/
                                meta: {}
                          citation:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/citation/
                                meta: {}
                            data:
                              id: a3prf
                              type: citation
                          preprints:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/preprints/
                                meta: {}
                          storage:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/storage/
                                meta: {}
                            data:
                              id: a3prf
                              type: node-storage
                          subjects:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/subjects/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/nodes/a3prf/relationships/subjects/
                                meta: {}
                        links:
                          html: https://staging.osf.io/a3prf/
                          self: https://api.staging.osf.io/v2/nodes/a3prf/
                  links: {}
                meta:
                  total: 53
                  per_page: 2
                  version: "2.20"
                links:
                  self: https://api.staging.osf.io/v2/providers/collections/temp/submissions/?page%5Bsize%5D=2
                  first: null
                  last: https://api.staging.osf.io/v2/providers/collections/temp/submissions/?page=27&page%5Bsize%5D=2
                  prev: null
                  next: https://api.staging.osf.io/v2/providers/collections/temp/submissions/?page=2&page%5Bsize%5D=2
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/subjects/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Subject List
      description: |2-

        This returns a list of acceptable subjects for a Collections Provider.
        #### Permissions
        This information is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of subject ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 5c3e311a0989e101eede6afa
                  type: subjects
                  attributes:
                    text: Puppy Studies
                    taxonomy_name: bepress
                  relationships:
                    parent:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc16/
                          meta: {}
                      data:
                        id: 5c252d510989e100220edc16
                        type: subjects
                    children:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/subjects/5c3e311a0989e101eede6afa/children/
                          meta: {}
                  embeds:
                    parent:
                      data:
                        id: 5c252d510989e100220edc16
                        type: subjects
                        attributes:
                          text: "Public Affairs, Public Policy and Public Administration"
                          taxonomy_name: bepress
                        relationships:
                          parent:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc1e/
                                meta: {}
                            data:
                              id: 5c252d510989e100220edc1e
                              type: subjects
                          children:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc16/children/
                                meta: {}
                        embeds:
                          parent:
                            data:
                              id: 5c252d510989e100220edc1e
                              type: subjects
                              attributes:
                                text: Social and Behavioral Sciences
                                taxonomy_name: bepress
                              relationships:
                                parent:
                                  data: null
                                children:
                                  links:
                                    related:
                                      href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc1e/children/
                                      meta: {}
                              embeds:
                                parent:
                                  errors:
                                  - detail: Not found.
                              links:
                                self: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc1e/
                        links:
                          self: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc16/
                  links:
                    self: https://api.staging.osf.io/v2/subjects/5c3e311a0989e101eede6afa/
                - id: 5c3e311a0989e101eede6af9
                  type: subjects
                  attributes:
                    text: Transpersonal Psychology
                    taxonomy_name: bepress
                  relationships:
                    parent:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edbad/
                          meta: {}
                      data:
                        id: 5c252d510989e100220edbad
                        type: subjects
                    children:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/subjects/5c3e311a0989e101eede6af9/children/
                          meta: {}
                  embeds:
                    parent:
                      data:
                        id: 5c252d510989e100220edbad
                        type: subjects
                        attributes:
                          text: Psychology
                          taxonomy_name: bepress
                        relationships:
                          parent:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc1e/
                                meta: {}
                            data:
                              id: 5c252d510989e100220edc1e
                              type: subjects
                          children:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edbad/children/
                                meta: {}
                        embeds:
                          parent:
                            data:
                              id: 5c252d510989e100220edc1e
                              type: subjects
                              attributes:
                                text: Social and Behavioral Sciences
                                taxonomy_name: bepress
                              relationships:
                                parent:
                                  data: null
                                children:
                                  links:
                                    related:
                                      href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc1e/children/
                                      meta: {}
                              embeds:
                                parent:
                                  errors:
                                  - detail: Not found.
                              links:
                                self: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edc1e/
                        links:
                          self: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edbad/
                  links:
                    self: https://api.staging.osf.io/v2/subjects/5c3e311a0989e101eede6af9/
                meta:
                  total: 1239
                  per_page: 2
                  version: "2.20"
                links:
                  self: https://api.staging.osf.io/v2/providers/collections/temp/subjects/?page%5Bsize%5D=2
                  first: null
                  last: https://api.staging.osf.io/v2/providers/collections/temp/subjects/?page=620&page%5Bsize%5D=2
                  prev: null
                  next: https://api.staging.osf.io/v2/providers/collections/temp/subjects/?page=2&page%5Bsize%5D=2
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/subjects/highlighted/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Highlighted Subject List
      description: |2-

        This returns a list of highlighted subjects for a Collections Provider.
        #### Permissions
        This information is public.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of subject ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: 5c252d520989e100220edc4f
                  type: subjects
                  attributes:
                    text: Architecture
                    taxonomy_name: bepress
                  relationships:
                    parent:
                      data: null
                    children:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/subjects/5c252d520989e100220edc4f/children/
                          meta: {}
                  embeds:
                    parent:
                      errors:
                      - detail: Not found.
                  links:
                    self: https://api.staging.osf.io/v2/subjects/5c252d520989e100220edc4f/
                - id: 5c252d510989e100220edba7
                  type: subjects
                  attributes:
                    text: Arts and Humanities
                    taxonomy_name: bepress
                  relationships:
                    parent:
                      data: null
                    children:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edba7/children/
                          meta: {}
                  embeds:
                    parent:
                      errors:
                      - detail: Not found.
                  links:
                    self: https://api.staging.osf.io/v2/subjects/5c252d510989e100220edba7/
                meta:
                  total: 10
                  per_page: 2
                  version: "2.20"
                links:
                  self: https://api.staging.osf.io/v2/providers/collections/temp/subjects/highlighted/?page%5Bsize%5D=2
                  first: null
                  last: https://api.staging.osf.io/v2/providers/collections/temp/subjects/highlighted/?page=5&page%5Bsize%5D=2
                  prev: null
                  next: https://api.staging.osf.io/v2/providers/collections/temp/subjects/highlighted/?page=2&page%5Bsize%5D=2
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/moderators/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Moderators List
      description: |2-

        This returns a list of moderators for a Collections Provider.
        #### Permissions
        This information is only available to Collection Provider moderators or admins.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        The `data` key contains an array of moderator ids.
        The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                - id: nmwt5
                  type: moderators
                  attributes:
                    full_name: Blaine Butler
                    permission_group: admin
                  relationships:
                    user:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/nmwt5/
                          meta: {}
                      data:
                        id: nmwt5
                        type: users
                    provider:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/
                          meta: {}
                      data:
                        id: colmod
                        type: collection-providers
                  embeds:
                    user:
                      data:
                        id: nmwt5
                        type: users
                        attributes:
                          full_name: Blaine Butler
                          given_name: Blaine
                          middle_names: ""
                          family_name: Butler
                          suffix: ""
                          date_registered: 2022-11-03T19:23:28.110924Z
                          active: false
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/nmwt5/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/nmwt5/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/nmwt5/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/nmwt5/institutions/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/users/nmwt5/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/nmwt5/preprints/
                                meta: {}
                        links:
                          html: https://staging.osf.io/nmwt5/
                          profile_image: https://secure.gravatar.com/avatar/4a1f62c6580a151e5c1c0aec72b7fc2a?d=identicon
                          self: https://api.staging.osf.io/v2/users/nmwt5/
                  links:
                    self: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/nmwt5/
                - id: m8ku3
                  type: moderators
                  attributes:
                    full_name: DC Test - AMC
                    permission_group: admin
                  relationships:
                    user:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/m8ku3/
                          meta: {}
                      data:
                        id: m8ku3
                        type: users
                    provider:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/
                          meta: {}
                      data:
                        id: colmod
                        type: collection-providers
                  embeds:
                    user:
                      data:
                        id: m8ku3
                        type: users
                        attributes:
                          full_name: DC Test - AMC
                          given_name: DC
                          middle_names: Test -
                          family_name: AMC
                          suffix: ""
                          date_registered: 2022-09-14T11:28:08.681787Z
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/institutions/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/users/m8ku3/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/preprints/
                                meta: {}
                        links:
                          html: https://staging.osf.io/m8ku3/
                          profile_image: https://secure.gravatar.com/avatar/ce38ca4e4a1361446468960716f57b5e?d=identicon
                          self: https://api.staging.osf.io/v2/users/m8ku3/
                  links:
                    self: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/m8ku3/
                meta:
                  total: 8
                  per_page: 2
                  version: "2.20"
                links:
                  self: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/?page%5Bsize%5D=2
                  first: null
                  last: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/?page=4&page%5Bsize%5D=2
                  prev: null
                  next: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/?page=2&page%5Bsize%5D=2
      x-response-schema: Collection Provider
  /provider/collections/{collection_id}/moderators/{moderator_id}/:
    get:
      tags:
      - Collection Providers
      summary: Collections Providers Moderators Detail
      description: |2-

        This returns details for a moderator of a Collections Provider.
        #### Permissions
        This information is only available to Collection Provider moderators or admins.
        #### Returns
        Returns a JSON object containing `data` and `links` keys.
        Returns a JSON object with a `data` key containing the representation of the requested collection provider moderator object, if the request is successful.
      operationId: collection_provider_detail
      parameters:
      - name: collection_id
        in: path
        description: A short id for that collection
        required: true
        schema:
          type: string
      - name: moderator_id
        in: path
        description: A short id for that moderator
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  id: m8ku3
                  type: moderators
                  attributes:
                    full_name: DC Test - AMC
                    permission_group: admin
                  relationships:
                    user:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/users/m8ku3/
                          meta: {}
                      data:
                        id: m8ku3
                        type: users
                    provider:
                      links:
                        related:
                          href: https://api.staging.osf.io/v2/providers/collections/colmod/
                          meta: {}
                      data:
                        id: colmod
                        type: collection-providers
                  embeds:
                    user:
                      data:
                        id: m8ku3
                        type: users
                        attributes:
                          full_name: DC Test - AMC
                          given_name: DC
                          middle_names: Test -
                          family_name: AMC
                          suffix: ""
                          date_registered: 2022-09-14T11:28:08.681787Z
                          active: true
                          timezone: Etc/UTC
                          locale: en_US
                          social: {}
                          employment: []
                          education: []
                        relationships:
                          nodes:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/nodes/
                                meta: {}
                          groups:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/groups/
                                meta: {}
                          registrations:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/registrations/
                                meta: {}
                          institutions:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/institutions/
                                meta: {}
                              self:
                                href: https://api.staging.osf.io/v2/users/m8ku3/relationships/institutions/
                                meta: {}
                          preprints:
                            links:
                              related:
                                href: https://api.staging.osf.io/v2/users/m8ku3/preprints/
                                meta: {}
                        links:
                          html: https://staging.osf.io/m8ku3/
                          profile_image: https://secure.gravatar.com/avatar/ce38ca4e4a1361446468960716f57b5e?d=identicon
                          self: https://api.staging.osf.io/v2/users/m8ku3/
                  links:
                    self: https://api.staging.osf.io/v2/providers/collections/colmod/moderators/m8ku3/
                meta:
                  version: "2.20"
      x-response-schema: Collection Provider
components: {}
x-tagGroups:
- name: Welcome
  tags:
  - Introduction
  - General Usage
  - Authentication
  - Pagination
  - Versioning
  - Filtering
  - Sparse Fieldsets
  - Embedding
  - Request Formatting
  - Errors & Error Codes
  - Entities & Entity Collections
- name: API Reference
  tags:
  - Addons
  - Base
  - Citations
  - Comments
  - Collections
  - Collection Submissions
  - Collection Submissions Actions
  - Collection Providers
  - Files
  - Licenses
  - Logs
  - Institutions
  - Registration Schemas
  - Registration Schema Blocks
  - Schema Responses
  - Schema Response Actions
  - Nodes
  - Preprints
  - Preprint Providers
  - Draft Registrations
  - Registrations
  - Taxonomies
  - Users
  - View Only Links
x-original-swagger-version: "2.0"
