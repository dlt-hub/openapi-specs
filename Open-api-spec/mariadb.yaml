---
swagger: '2.0'
info:
  description: "The below documentation describes the API for MariaDB SkySQL, which
    can be used directly with any HTTP client (e.g. curl, Postman, language specific
    clients, etc.).\n\n# Authentication\nTo authenticate with the API, do the following:\n1.
    Go to MariaDB ID: https://id.mariadb.com/account/api/ and generate an API key\n2.
    Add the value from the token field to an environment variable $JWT_TOKEN\n3. Use
    it on subsequent request, e.g:\n\n   ```\n    curl --request GET 'https://api.mariadb.com/provisioning/v1/services'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\"\n   ```\n\n# Get Started\nTo
    create a new service, you need to make following API calls:\n\n1. Get a list of
    available topologies:\n   ```\n    curl --request GET 'https://api.mariadb.com/provisioning/v1/topologies?service_type=transactional'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\"\n   ```\n    Example response:\n
    \   ```\n    [\n        {\n            \"id\": \"b34aa182-4c05-462f-8d4e-33a98de60803\",\n
    \           \"name\": \"standalone\",\n            \"display_name\": \"Single
    Node Transactions\",\n            \"service_type\": \"transactional\",\n            \"storage_engine\":
    \"innodb\",\n            \"order\": 100\n        }\n    ]\n    ```\n2. Get a list
    of available providers:\n   ```\n   curl --request GET 'https://api.mariadb.com/provisioning/v1/providers'
    \\\\\n   --header \"Authorization:Bearer $JWT_TOKEN\"\n   ```\n   Example response:\n
    \  ```\n   [\n       {\n           \"id\": \"5a9c1675-ca54-4b3b-9da9-2ea617e45969\",\n
    \          \"name\": \"aws\",\n           \"display_name\": \"Amazon AWS\",\n
    \          \"volume_size_min_gb\": 8,\n           \"volume_size_max_gb\": 2000,\n
    \          \"iops_per_gb\": 1,\n           \"iops_min\": 100\n       }\n   ]\n
    \  ```\n3. Get a list of available regions:\n    ```\n    curl --request GET 'https://api.mariadb.com/provisioning/v1/regions?provider=aws'
    \\\\\n    --header \"Authorization : Bearer $JWT_TOKEN\"\n    ```\n    Example
    response:\n    ```\n    [\n        {\n            \"id\": \"eb5b9a88-cc6c-4c12-9306-44486b335357\",\n
    \           \"name\": \"eu-north-1\",\n            \"region\": \"EMEA\",\n            \"default\":
    false,\n            \"provider\": \"aws\",\n            \"foundation_tier_maintenance_window\":
    \"1st and 3rd Sat 8:00 PM UTC\"\n        }\n    ]\n    ```\n4. Get a list of available
    instance sizes:\n    ```\n    curl --request GET 'https://api.mariadb.com/provisioning/v1/sizes?topology=standalone&provider=aws&architecture=amd64'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\"\n    ```\n    Example
    response:\n    ```\n    [\n        {\n            \"id\": \"c0666e11-4a3b-11ed-8853-b278760e6ab5\",\n
    \           \"name\": \"sky-2x4\",\n            \"display_name\": \"Sky-2x4\",\n
    \           \"service_type\": \"transactional\",\n            \"provider\": \"aws\",\n
    \           \"tier\": \"foundation\",\n            \"architecture\": \"amd64\",\n
    \           \"cpu\": \"2 vCPU\",\n            \"ram\": \"4 GB\",\n            \"updated_on\":
    \"2022-10-12T14:40:00Z\",\n            \"created_on\": \"2022-10-12T14:40:00Z\",\n
    \           \"is_active\": true,\n            \"topology\": \"standalone\"\n        }\n
    \   ]\n    ```\n5. Get a list of available versions:\n    ```\n    curl --request
    GET 'https://api.mariadb.com/provisioning/v1/versions?topology=standalone' \\\\\n
    \   --header \"Authorization: Bearer $JWT_TOKEN\"\n    ```\n    Example response:\n
    \   ```\n    [\n        {\n            \"id\": \"d4dd2755-5716-4be5-8e9c-b1437f0d109a\",\n
    \           \"name\": \"10.6.11-6-1\",\n            \"version\": \"10.6.11-6\",\n
    \           \"topology\": \"standalone\",\n            \"product\": \"server\",\n
    \           \"display_name\": \"Enterprise Server 10.6.11-6\",\n            \"is_major\":
    true,\n            \"release_date\": \"0001-01-01T00:00:00Z\",\n            \"release_notes_url\":
    \"https://mariadb.com/docs/release-notes/mariadb-enterprise-server-10-6/10-6-11-6/\"\n
    \       }\n    ]\n    ```\n    *Important:* Use `name` field from the response
    to create a service. `version` and `display_name` fields are for display purposes
    only.\n6. Create a new service:\n    ```\n    curl --request POST 'https://api.mariadb.com/provisioning/v1/services'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\" \\\\\n    --header \"Content-Type:
    application/json\" \\\\\n    --data-raw '{\n        \"service_type\": \"transactional\",\n
    \       \"topology\": \"standalone\",\n        \"provider\": \"aws\",\n        \"region\":
    \"us-east-2\",\n        \"name\": \"my-first-service\",\n        \"architecture\":
    \"amd64\",\n        \"nodes\": 1,\n        \"size\": \"sky-2x8\",\n        \"storage\":
    100,\n        \"ssl_enabled\": true,\n        \"version\": \"10.6.11-6-1\",\n
    \       \"volume_type\": \"gp2\"\n    }'\n    ```\n    The operation is asynchronous.
    You need to poll the service status until it has status `ready` or `failed`.\n
    \   If you need to create a new service with access through a private link you
    need to pass the following parameters:\n    ```\n        \"endpoint_mechanism\":
    \"privateconnect\",\n        \"endpoint_allowed_accounts\": [\n        \"[AWS
    account ID or GCP project ID]\"\n        ]\n    ```\n7. Get a service by ID to
    check status:\n    ```\n    curl --request GET 'https://api.mariadb.com/provisioning/v1/services/dbdwf40820593'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\"\n    ```\n    Example
    response:\n    ```\n    {\n        \"id\": \"dbdwf40820593\",\n        \"name\":
    \"my-first-service\",\n        \"status\": \"ready\",\n    }\n    ```\n8. Get
    service default credentials:\n    ```\n    curl --request GET 'https://api.mariadb.com/provisioning/v1/services/dbdwf40820593/security/credentials'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\"\n    ```\n\n9. Add your
    IP address to the IP allowlist for the service\n\n   If you are not sure of your
    public IP address, you can use a lookup service, such as checkip.amazonaws.com\n\n
    \  The allowlist accepts IPv4 addresses and IPv4 netblocks.\n\n   We will place
    our IP address in the SKYSQL_CLIENT_IP environment variable:\n\n    ```\n    export
    SKYSQL_CLIENT_IP=`curl -sS checkip.amazonaws.com`\n    ```\n\n    add our IP address
    to the allowlist:\n    \n    ```\n    curl -sS --location --request POST \\\\\n
    \   --header \"Authorization: Bearer ${SKYSQL_TOKEN}\" \\\\\n    --header \"Accept:
    application/json\" \\\\\n    --header \"Content-type: application/json\" \\\\\n
    \   --data \"{ \\\"ip_address\\\": \\\"${SKYSQL_CLIENT_IP}/32\\\" }\" \\\\\n    https://api.mariadb.com/provisioning/v1/services/${SKYSQL_SERVICE}/security/allowlist
    \\\\\n    | jq .\n    ```\n\n10. Stop a service:\n    ```\n    curl --request
    POST 'https://api.mariadb.com/provisioning/v1/services/dbdwf40820593/power' \\\\\n
    \   --header \"Authorization: Bearer $JWT_TOKEN\" \\\\\n    --header \"Content-Type:
    application/json\" \\\\\n    --data-raw '{\n        \"is_active\": false\n    }'\n
    \   ```\n11. Start a service:\n    ```\n    curl --request POST 'https://api.mariadb.com/provisioning/v1/services/dbdwf40820593/power'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\" \\\\\n    --header \"Content-Type:
    application/json\" \\\\\n    --data-raw '{\n        \"is_active\": true\n    }'\n
    \   ```\n12. Change storage size:\n    ```\n    curl --request PATCH 'https://api.mariadb.com/provisioning/v1/services/dbdwf40820593/storage/size'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\" \\\\\n    --header \"Content-Type:
    application/json\" \\\\\n    --data-raw '{\n        \"size\": 200\n    }'\n    ```\n13.
    Delete service\n    ```\n    curl --request DELETE 'https://api.mariadb.com/provisioning/v1/services/dbdwf40820593'
    \\\\\n    --header \"Authorization: Bearer $JWT_TOKEN\"\n    ```\n"
  title: SkySQL DBaaS API
  contact: {}
  version: '1.0'
host: api.mariadb.com
basePath: "/"
paths:
  "/provisioning/v1/architectures":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available hardware architectures for the specified
        cloud provider and specified topology.
      produces:
      - application/json
      tags:
      - CPU-Architectures
      summary: Read Architectures
      deprecated: true
      parameters:
      - enum:
        - aws
        - gcp
        type: string
        description: The cloud provider whose hardware architectures will be retrieved.
        name: provider
        in: query
      - enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        type: string
        description: The topology whose hardware architectures will be retrieved.
        name: topology
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available hardware architectures
            type: array
            items:
              "$ref": "#/definitions/v1.Architecture"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/configs":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of custom configurations (Configuration Manager)
        available to the user/team.
      produces:
      - application/json
      tags:
      - Config
      summary: List Custom Configs
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: The maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: The sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      - type: boolean
        description: include_default
        name: include_default
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.Config"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    post:
      security:
      - BearerAuth: []
      description: Create a custom configuration (Configuration Manager) available
        to the user/team.
      produces:
      - application/json
      tags:
      - Config
      summary: Create Custom Config
      parameters:
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.CreateConfigRequest"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.Config"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/configs/{config_id}":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a custom configuration (Configuration Manager) and its
        values.
      produces:
      - application/json
      tags:
      - Config
      summary: Read Custom Config
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/v1.Config"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    delete:
      security:
      - BearerAuth: []
      description: Delete the specified custom configuration (Configuration Manager)
        and its associated data.
      produces:
      - application/json
      tags:
      - Config
      summary: Delete Custom Config
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    patch:
      security:
      - BearerAuth: []
      description: Update the name of a custom configuration
      produces:
      - application/json
      tags:
      - Config
      summary: Update a config
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.UpdateConfigRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/configs/{config_id}/values":
    get:
      security:
      - BearerAuth: []
      description: Retrieve the selected values for the given configuration ID.
      produces:
      - application/json
      tags:
      - Config
      summary: Get Config Values
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      responses:
        '202':
          description: Accepted
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.ConfigValue"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    put:
      security:
      - BearerAuth: []
      description: Set the selected values for a configuration.
      produces:
      - application/json
      tags:
      - Config
      summary: Batch Update Config Values
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          type: array
          items:
            "$ref": "#/definitions/v1.ConfigValue"
      responses:
        '202':
          description: Accepted
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.ConfigValue"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/configs/{config_id}/values/{variable_name}":
    post:
      security:
      - BearerAuth: []
      description: Set a configuration variables value by variable name.
      produces:
      - application/json
      tags:
      - Config
      summary: Set Config Value
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      - type: string
        description: Variable name
        name: variable_name
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.ConfigValueRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    delete:
      security:
      - BearerAuth: []
      description: Unset a configuration variables value by variable name.
      produces:
      - application/json
      tags:
      - Config
      summary: Unset Config Value
      parameters:
      - type: string
        description: Config ID
        name: config_id
        in: path
        required: true
      - type: string
        description: Variable name
        name: variable_name
        in: path
        required: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/cpu-architectures":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available hardware architectures for the specified
        cloud provider and specified topology.
      produces:
      - application/json
      tags:
      - CPU-Architectures
      summary: Read Architectures
      parameters:
      - enum:
        - aws
        - gcp
        type: string
        description: Provider name
        name: provider
        in: query
      - enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        type: string
        description: Topology name
        name: topology
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available hardware architectures
            type: array
            items:
              "$ref": "#/definitions/v1.Architecture"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/entitlements":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of entitlements for the current organization.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Entitlements
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.Entitlement"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/maintenance-windows":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available maintenance windows
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Maintenance Windows
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.MaintenanceWindow"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/products":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of products available in the specified topology.
      produces:
      - application/json
      tags:
      - Products
      summary: List Products
      parameters:
      - type: string
        description: Topology ID.
        name: topology_id
        in: query
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: ProductResponse
            type: array
            items:
              "$ref": "#/definitions/v1.Product"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/providers":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available cloud providers.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Cloud Providers
      parameters:
      - enum:
        - aws
        - gcp
        type: string
        description: Filter the list of cloud providers to the specified cloud provider.
        name: name
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Cloud provider, e.g. AWS or GCP
            type: array
            items:
              "$ref": "#/definitions/v1.Provider"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/providers/{provider_name}/iops":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available IOPS settings for the specified cloud
        provider.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Provider IOPS
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      - enum:
        - aws
        - gcp
        type: string
        description: The cloud provider whose available IOPS settings will be retrieved.
        name: provider_name
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            description: Available IOPS settings for specified cloud provider
            type: array
            items:
              "$ref": "#/definitions/v1.ProviderIOPSResponse"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/providers/{provider_name}/volume-types":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available storage volume types for the specified
        cloud provider.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Storage Volume Types
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      - enum:
        - aws
        - gcp
        type: string
        description: The cloud provider whose storage volume types will be retrieved.
        name: provider_name
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            description: list of cloud storage volume types
            type: array
            items:
              "$ref": "#/definitions/v1.VolumeTypeResponse"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/providers/{provider_name}/zones":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of availability zones for a specific provider.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Availability Zones for a specific provider
      parameters:
      - enum:
        - aws
        - gcp
        type: string
        description: The cloud provider whose availability zones will be retrieved.
        name: provider_name
        in: path
        required: true
      - type: string
        description: Filter the list of zones by the specified region.
        name: region
        in: query
      - enum:
        - aws
        - gcp
        type: string
        description: Filter the list of zones by the specified cloud provider.
        name: provider
        in: query
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available zones for region
            type: array
            items:
              "$ref": "#/definitions/v1.Zone"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/regions":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available geographic regions for a cloud provider.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Regions
      parameters:
      - enum:
        - aws
        - gcp
        type: string
        description: Filter the list of regions to the specified cloud provider.
        name: provider
        in: query
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available regions
            type: array
            items:
              "$ref": "#/definitions/v1.Region"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/regions/{region_name}/zones":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of zones for specific region
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Zones
      parameters:
      - type: string
        description: The name of the region
        name: region_name
        in: path
        required: true
      - enum:
        - aws
        - gcp
        type: string
        description: Filter the list of zones by the specified cloud provider.
        name: provider
        in: query
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available zones for region
            type: array
            items:
              "$ref": "#/definitions/v1.Zone"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/service-types":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available service types.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Service Types
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available service types
            type: array
            items:
              "$ref": "#/definitions/v1.ServiceType"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of services managed by the user/team.
      produces:
      - application/json
      tags:
      - Services
      summary: List Services
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Services of user or team
            type: array
            items:
              "$ref": "#/definitions/v1.ServiceResponse"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    post:
      security:
      - BearerAuth: []
      description: Create (launch) a new service.
      produces:
      - application/json
      tags:
      - Services
      summary: Create a Service
      parameters:
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.CreateServiceRequest"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.ServiceResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '402':
          description: Payment Required
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}":
    get:
      security:
      - BearerAuth: []
      description: Retrieve the information and status of the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Retrieve Service Info
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/v1.ServiceResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    delete:
      security:
      - BearerAuth: []
      description: Delete the specified service and its associated data.
      produces:
      - application/json
      tags:
      - Services
      summary: Delete Service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/config":
    post:
      security:
      - BearerAuth: []
      description: Update the configuration of the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Update Service Config
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.ServiceConfigState"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.ServiceConfigState"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    delete:
      security:
      - BearerAuth: []
      description: Remove a custom configuration (Configuration Manager) from the
        specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Remove a Custom Config from a Service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.ServiceConfigState"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/endpoints":
    post:
      security:
      - BearerAuth: []
      description: Creates Service Endpoints
      produces:
      - application/json
      tags:
      - Services
      summary: Creates Service Endpoints
      parameters:
      - type: string
        description: Identifier for a services
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.CreateServiceEndpointRequest"
      responses:
        '202':
          description: Accepted
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.ServiceEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    patch:
      security:
      - BearerAuth: []
      description: |-
        Modifies Service Endpoints
        This operation modifies the primary endpoint for a specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Modifies Service Endpoints
      parameters:
      - type: string
        description: Identifier for a services
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          type: array
          items:
            "$ref": "#/definitions/v1.ModifyServiceEndpoint"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.ServiceEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/endpoints/{name}":
    delete:
      security:
      - BearerAuth: []
      description: Deletes Service Endpoints
      produces:
      - application/json
      tags:
      - Services
      summary: Deletes Service Endpoints
      parameters:
      - type: string
        description: Identifier for a services
        name: service_id
        in: path
        required: true
      - type: string
        description: Endpoint name
        name: name
        in: path
        required: true
      responses:
        '202':
          description: Accepted
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.ServiceEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/maintenance-window":
    post:
      security:
      - BearerAuth: []
      description: Set the maintenance window the service.
      produces:
      - application/json
      tags:
      - Services
      summary: Set Service Maintenance Window
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.SetMaintenanceWindowRequest"
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/nodes":
    post:
      security:
      - BearerAuth: []
      description: Update the number of nodes for the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Update Service Nodes
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.ServiceNodesState"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/v1.ServiceNodesState"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/power":
    post:
      security:
      - BearerAuth: []
      description: Set the power state of the service. This starts or stops the service.
      produces:
      - application/json
      tags:
      - Services
      summary: Set Service Power State
      deprecated: true
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.PowerState"
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/replicas":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of services that are replicas for the specified
        service.
      produces:
      - application/json
      tags:
      - Services
      summary: List Replicas for a Service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            description: Services of user or team
            type: array
            items:
              "$ref": "#/definitions/v1.ServiceResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/replication":
    post:
      security:
      - BearerAuth: []
      description: Sets up a service to serve as a replica for another service.
      produces:
      - application/json
      tags:
      - Services
      summary: Update Replication on a Service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.ServiceReplication"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.ServiceReplication"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    delete:
      security:
      - BearerAuth: []
      description: Disables replication for a specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Delete Replication on a Service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/security/allowlist":
    get:
      security:
      - BearerAuth: []
      description: Retrieve the list of IPv4 addresses and netblocks in the allowlist
        for the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Read Allowed Addresses
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.AllowListEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    put:
      security:
      - BearerAuth: []
      description: Update the allowlist for the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Update Allowed Address
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          type: array
          items:
            "$ref": "#/definitions/v1.AllowListItem"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.AllowListEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    post:
      security:
      - BearerAuth: []
      description: Add an IPv4 address or netblock to the allowlist of the specified
        service.
      produces:
      - application/json
      tags:
      - Services
      summary: Add Allowed Address
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.AddAllowListIPAddressRequest"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.AllowListEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
    delete:
      security:
      - BearerAuth: []
      description: Remove an IPv4 address or netblock from the allowlist of the specified
        service.
      produces:
      - application/json
      tags:
      - Services
      summary: Remove Allowed Address
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.DeleteAllowedAddressRequest"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.AllowListEndpoint"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/security/credentials":
    get:
      security:
      - BearerAuth: []
      description: |-
        Retrieve the default credentials for the service. These credentials are not intended for long-term
        use, but should be replaced with credentials of your own choosing using a MariaDB client.
      produces:
      - application/json
      tags:
      - Services · Security
      summary: Retrieve Default Credentials
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/v1.CredentialsResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/security/is-ip-allowed":
    post:
      security:
      - BearerAuth: []
      description: Check if the specified IP address is allowed to access the specified
        service.
      produces:
      - application/json
      tags:
      - Services
      summary: Check an IP's Access
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.IsIpAllowedRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/v1.IsIpAllowedResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/size":
    post:
      security:
      - BearerAuth: []
      description: Update the node size of the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Update Service Size
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.ServiceSizeState"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.ServiceSizeState"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/start":
    post:
      security:
      - BearerAuth: []
      description: Starts a stopped service
      produces:
      - application/json
      tags:
      - Services
      summary: Starts a stopped service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/stop":
    post:
      security:
      - BearerAuth: []
      description: Stops a running service
      produces:
      - application/json
      tags:
      - Services
      summary: Stops a running service
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/storage":
    patch:
      security:
      - BearerAuth: []
      description: Sets the service's size or IOPS (AWS only)
      produces:
      - application/json
      tags:
      - Services
      summary: Set Service Storage
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.SetStorageRequest"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.SetStorageRequest"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '425':
          description: Too Early
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/storage/iops":
    patch:
      security:
      - BearerAuth: []
      description: Sets the storage IOPS and storage type of the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Set Service Storage
      deprecated: true
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.SetStorageRequest"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.SetStorageRequest"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '425':
          description: Too Early
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/services/{service_id}/storage/size":
    patch:
      security:
      - BearerAuth: []
      description: Sets the storage size of the specified service.
      produces:
      - application/json
      tags:
      - Services
      summary: Set Service Storage
      deprecated: true
      parameters:
      - type: string
        description: The ID for the service.
        name: service_id
        in: path
        required: true
      - description: The request body.
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/v1.SetStorageRequest"
      responses:
        '202':
          description: Accepted
          schema:
            "$ref": "#/definitions/v1.SetStorageRequest"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/sizes":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available node sizes.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Node Sizes
      parameters:
      - enum:
        - amd64
        - arm64
        type: string
        description: Filter the list of node sizes to the specified hardware architecture.
        name: architecture
        in: query
      - type: string
        description: Filter the list of node sizes to the specified service type.
        name: service_type
        in: query
      - type: string
        description: Filter the list of node sizes to the specified cloud provider.
        name: provider
        in: query
      - type: string
        description: Filter the list of node sizes to the specified topology.
        name: topology
        in: query
      - type: string
        description: Filter the list of node sizes to the specified type. Either server
          or proxy.
        name: type
        in: query
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available node sizes
            type: array
            items:
              "$ref": "#/definitions/v1.Size"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/tiers":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available tiers and the topologies they support.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Tiers
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available tiers
            type: array
            items:
              "$ref": "#/definitions/v1.Tier"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/topologies":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available topologies for the specified service
        type.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Topologies
      parameters:
      - type: string
        description: The service type whose topologies will be retrieved.
        name: service_type
        in: query
      - type: boolean
        description: Whether to returns legacy topologies only.
        name: only_legacy
        in: query
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Cluster topology valid for a particular product, e.g. Standalone
              or MaxScale
            type: array
            items:
              "$ref": "#/definitions/v1.Topology"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/topologies/{topology_name}/configs":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available configuration parameters and values
        (Configuration Manager) for the specified topology.
      produces:
      - application/json
      tags:
      - Config
      summary: Read Topology Configuration Manager Parameters
      parameters:
      - type: string
        description: The topology whose configuration parameters and values will be
          retrieved.
        name: topology_name
        in: path
        required: true
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: List of available configuration parameters
            type: array
            items:
              "$ref": "#/definitions/v1.ConfigKey"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/topologies/{topology_name}/nodes":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available node options for the specified topology.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Topology Node Options
      parameters:
      - enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        type: string
        description: The topology whose node options will be retrieved.
        name: topology_name
        in: path
        required: true
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.TopologyNodeOptionsResponse"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/topologies/{topology_name}/options":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available options (features) for the specified
        topology.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Topology Options
      parameters:
      - enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        type: string
        description: The topology whose options will be retrieved.
        name: topology_name
        in: path
        required: true
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/v1.ReadTopologyOptionsResponse"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/topologies/{topology_name}/storage-sizes":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available storage sizes for the specified topology.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Topology Storage Sizes
      parameters:
      - enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        type: string
        description: The topology whose storage sizes will be retrieved.
        name: topology_name
        in: path
        required: true
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/v1.TopologyStorageSizeResponse"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/provisioning/v1/versions":
    get:
      security:
      - BearerAuth: []
      description: Retrieve a list of available software versions.
      produces:
      - application/json
      tags:
      - Offering
      summary: Read Software Versions
      parameters:
      - maximum: 100
        minimum: 1
        type: integer
        default: 10
        description: Set the maximum number (limit) of results to fetch per page.
        name: page_size
        in: query
      - enum:
        - asc
        - desc
        type: string
        description: Set the sort order (ascending or descending) for results.
        name: page_order
        in: query
      - type: string
        description: When iterating through results, retrieve the page with the specified
          token.
        name: page_token
        in: query
      - type: string
        description: Filter the list of versions to the specified topology.
        name: topology
        in: query
      responses:
        '200':
          description: OK
          schema:
            description: Available software versions
            type: array
            items:
              "$ref": "#/definitions/v1.Version"
          headers:
            X-SkySQL-Page-Token-Next:
              type: string
              description: Page iterator token to move to the next page of results.
            X-SkySQL-Page-Token-Previous:
              type: string
              description: Page iterator token to move to the previous page of results.
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/organization/v1/invites/check":
    post:
      security:
      - BearerAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Invites
      - 'allowed_roles: ADMIN;MEMBER'
      summary: validate invitation
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.Invite"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
        '404':
          description: Not Found
          schema:
            "$ref": "#/definitions/errr.ErrorResponse"
  "/public/services/ous/public-key/{key_version}":
    get:
      security:
      - BearerAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - Invites
      summary: get public key
      parameters:
      - type: string
        description: Key version
        name: key_version
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.PubKey"
  "/billing/v1/account":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - account
      summary: Returns account record based on X-SkySQL-Org-Id header value
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.AccountResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/account/verify/phone/{phone_number}/sms":
    post:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - account
      summary: Get a phone verification code via SMS
      parameters:
      - type: string
        description: Phone number
        name: phone_number
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.PhoneVerifyCodeResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/account/verify/phone/{phone_number}/voice":
    post:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - account
      summary: Get a phone verification code via Voice
      parameters:
      - type: string
        description: Phone number
        name: phone_number
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.PhoneVerifyCodeResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/account/verify/phone/{phone_number}/{code}":
    post:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - account
      summary: Verify phone number with verification code
      parameters:
      - type: string
        description: Phone number
        name: phone_number
        in: path
        required: true
      - type: string
        description: Verification code
        name: code
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.PhoneVerifyResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/entitlements":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - entitlements
      summary: Get MariaDB Entitlements
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.EntitlementsResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/invoices":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - invoices
      summary: Returns list of invoices
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.ListInvoicesResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/invoices/{invoice_uid}":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - invoices
      summary: Returns invoice for specified Chargify invoice uid
      parameters:
      - type: string
        description: invoice UID
        name: invoice_uid
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.ReadInvoiceResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/locale/country":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - locale
      summary: Returns active countries
      parameters:
      - type: boolean
        description: true or false
        name: active
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.GetCountryRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/locale/state-province":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - locale
      summary: Returns active states/provinces
      parameters:
      - type: boolean
        description: true or false
        name: active
        in: query
      - type: string
        description: iso3166-2 country code
        name: country
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.GetStateProvinceRecord"
  "/billing/v1/payment/profile":
    get:
      produces:
      - application/json
      tags:
      - payment
      summary: Returns Chargify Payment Profile for request context OrgID
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.GetPaymentProfileResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
    post:
      security:
      - BearerAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      tags:
      - payment
      summary: Creates Chargify subscription using ChargifyJS token
      parameters:
      - description: Request Body
        name: request
        in: body
        required: true
        schema:
          "$ref": "#/definitions/dto.CreatePaymentProfileRequest"
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.CreatePaymentProfileResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/prices":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - prices
      summary: Returns prices
      parameters:
      - type: string
        description: CPU architecture
        name: arch
        in: query
      - type: string
        description: provider name
        name: provider
        in: query
      - type: string
        description: product name
        name: product
        in: query
      - type: string
        description: instance size name
        name: size
        in: query
      - type: string
        description: topology name
        name: topology
        in: query
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.PricesResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/prices/endpoint":
    get:
      produces:
      - application/json
      tags:
      - prices
      summary: Returns Endpoint prices
      parameters:
      - type: string
        description: provider name
        name: provider
        in: query
      - type: string
        description: product name
        name: product
        in: query
      - type: string
        description: topology name
        name: topology
        in: query
      - type: string
        description: tier name
        name: tier
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.IopsPricesRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/prices/instance":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - prices
      summary: Returns instance size prices
      parameters:
      - type: string
        description: CPU architecture
        name: arch
        in: query
      - type: string
        description: provider name
        name: provider
        in: query
      - type: string
        description: product name
        name: product
        in: query
      - type: string
        description: instance size name
        name: size
        in: query
      - type: string
        description: topology name
        name: topology
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.InstancePricesRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/prices/iops":
    get:
      produces:
      - application/json
      tags:
      - prices
      summary: Returns IOPs prices
      parameters:
      - type: string
        description: provider name
        name: provider
        in: query
      - type: string
        description: product name
        name: product
        in: query
      - type: string
        description: topology name
        name: topology
        in: query
      - type: string
        description: tier name
        name: tier
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.IopsPricesRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/prices/storage":
    get:
      produces:
      - application/json
      tags:
      - prices
      summary: Returns storage prices
      parameters:
      - type: string
        description: provider name
        name: provider
        in: query
      - type: string
        description: product name
        name: product
        in: query
      - type: string
        description: topology name
        name: topology
        in: query
      - type: string
        description: tier name
        name: tier
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.StoragePricesRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/prices/throughput":
    get:
      produces:
      - application/json
      tags:
      - prices
      summary: Returns Throughput prices
      parameters:
      - type: string
        description: provider name
        name: provider
        in: query
      - type: string
        description: product name
        name: product
        in: query
      - type: string
        description: topology name
        name: topology
        in: query
      - type: string
        description: tier name
        name: tier
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.ThroughputPricesRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/usage/allocation/{topology}/{service_id}":
    post:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - usage
      summary: Creates usage allocations for specified topology
      parameters:
      - type: string
        description: topology
        name: topology
        in: path
        required: true
      - type: string
        description: service ID
        name: service_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.CreateUsageResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/usage/preview":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - usage
      summary: Returns usage allocation summary
      parameters:
      - type: string
        description: start date
        name: start_date
        in: query
      - type: string
        description: end date
        name: end_date
        in: query
      responses:
        '200':
          description: OK
          schema:
            "$ref": "#/definitions/dto.UsagePreviewResponse"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/usage/service":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - usage
      summary: Returns usage allocation summary
      parameters:
      - type: string
        description: start date
        name: start_date
        in: query
      - type: string
        description: end date
        name: end_date
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.UsageServiceRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
  "/billing/v1/usage/service/{service_id}":
    get:
      security:
      - BearerAuth: []
      produces:
      - application/json
      tags:
      - usage
      summary: Returns usage allocation summary for specified service ID
      parameters:
      - type: string
        description: service ID
        name: service_id
        in: path
        required: true
      - type: string
        description: start date
        name: start_date
        in: query
      - type: string
        description: end date
        name: end_date
        in: query
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              "$ref": "#/definitions/dto.UsageServiceRecord"
        '400':
          description: Bad Request
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '401':
          description: Unauthorized
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
        '500':
          description: Internal Server Error
          schema:
            "$ref": "#/definitions/repository.SnowAPIError"
definitions:
  errr.ErrorDetails:
    type: object
    properties:
      error:
        type: string
      location:
        type: string
      message:
        type: string
      metadata:
        type: object
        additionalProperties: true
      solution:
        type: string
      type:
        type: string
  errr.ErrorResponse:
    type: object
    properties:
      code:
        type: integer
      errors:
        type: array
        items:
          "$ref": "#/definitions/errr.ErrorDetails"
      exception:
        type: string
      path:
        type: string
      timestamp:
        type: integer
      trace_id:
        type: string
  errr.Type:
    type: string
    enum:
    - fatal
    - error
    - warning
    x-enum-varnames:
    - Fatal
    - Error
    - Warning
  v1.AccountResponse:
    type: object
    properties:
      account_id:
        type: string
      domains:
        "$ref": "#/definitions/v1.Domains"
      legacy_dns:
        type: boolean
      org_id:
        type: string
      provider:
        type: string
      status:
        type: string
      tier:
        type: string
  v1.AddAllowListIPAddressRequest:
    type: object
    properties:
      ip_address:
        type: string
        example: 142.251.46.142/32
  v1.AllowListEndpoint:
    description: IP Address that has been added to the services network allowlist.
    type: object
    properties:
      allowList:
        description: 'Deprecated: This should be removed in future release. Use allow_list
          instead.'
        type: array
        items:
          type: string
        example:
        - 142.251.46.142
      allow_list:
        type: array
        items:
          "$ref": "#/definitions/v1.AllowListItem"
      name:
        type: string
        example: primary
  v1.AllowListItem:
    type: object
    properties:
      comment:
        type: string
      ip:
        type: string
  v1.Architecture:
    description: Architecture, supported by cloud provider, such as amd64 or arm64
    type: object
    properties:
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
  v1.Certificate:
    type: object
    properties:
      certificate:
        type: string
      expires:
        type: string
      serial:
        type: string
  v1.CleanEmptyFoundationTierResponse:
    type: object
    properties:
      clusters:
        type: array
        items:
          "$ref": "#/definitions/v1.ClusterResponse"
      dry_run:
        type: boolean
  v1.ClusterApplication:
    type: object
    properties:
      name:
        type: string
      version:
        type: string
  v1.ClusterHistory:
    type: object
    properties:
      cluster_state: {}
      created_on:
        type: string
      id:
        type: string
  v1.ClusterResponse:
    type: object
    properties:
      applications:
        type: array
        items:
          "$ref": "#/definitions/v1.ClusterApplication"
      availability_zones:
        type: array
        items:
          type: string
      ca_cert:
        type: string
      cloud_account:
        type: string
      endpoint:
        type: string
      history:
        type: array
        items:
          "$ref": "#/definitions/v1.ClusterHistory"
      id:
        type: string
      kubernetes_version:
        type: string
      monitoring_fqdn:
        type: string
      nat_ips:
        type: array
        items:
          type: string
      org_id:
        type: string
      provider:
        type: string
      region:
        type: string
      sa_enabled:
        type: boolean
      status:
        type: string
      tier:
        type: string
  v1.Config:
    type: object
    properties:
      created_by:
        type: string
      created_date:
        type: integer
      id:
        type: string
      name:
        type: string
      public:
        type: boolean
      services:
        type: array
        items:
          type: string
      topology_id:
        type: string
      updated_by:
        type: string
      updated_date:
        type: integer
      version_id:
        type: string
  v1.ConfigKey:
    description: A single configurable parameter
    type: object
    properties:
      allowed_values:
        type: array
        items:
          type: string
      component:
        "$ref": "#/definitions/v1.ConfigKeyComponent"
      config_section:
        type: string
      default_value:
        type: array
        items:
          type: string
      documentation_url:
        type: string
      flags:
        type: integer
      id:
        type: string
      maximum_value:
        type: string
      minimum_value:
        type: string
      multiselect:
        type: boolean
      name:
        type: string
      readonly:
        type: boolean
      requires_restart:
        type: boolean
      tags:
        type: array
        items:
          type: string
  v1.ConfigKeyComponent:
    type: string
    enum:
    - server
    - maxscale
    x-enum-varnames:
    - ComponentServer
    - ComponentMaxScale
  v1.ConfigValue:
    type: object
    properties:
      config_key_id:
        type: string
      selected_values:
        type: array
        items:
          type: string
  v1.ConfigValueRequest:
    type: object
    properties:
      value:
        type: string
  v1.CreateAccountRequest:
    type: object
    properties:
      account_id:
        type: string
      domains:
        "$ref": "#/definitions/v1.Domains"
      legacy_dns:
        type: boolean
      org_id:
        type: string
      provider:
        type: string
      status:
        type: string
      tier:
        type: string
  v1.CreateClusterRequest:
    type: object
    properties:
      applications:
        type: array
        items:
          "$ref": "#/definitions/v1.ClusterApplication"
      availability_zones:
        type: array
        items:
          type: string
      ca_cert:
        type: string
      endpoint:
        type: string
      id:
        type: string
      kubernetes_version:
        type: string
      monitoring_fqdn:
        type: string
      nat_ips:
        type: array
        items:
          type: string
      org_id:
        type: string
      provider:
        type: string
      region:
        type: string
      sa_enabled:
        type: boolean
      status:
        type: string
      tier:
        type: string
  v1.CreateConfigRequest:
    type: object
    properties:
      name:
        type: string
      topology_id:
        type: string
      version_id:
        type: string
  v1.CreateReleaseRequest:
    description: Create release payload
    type: object
    properties:
      date:
        type: string
        example: '2022-06-24 00:00:00.0'
      is_active:
        type: boolean
        example: true
      is_major:
        type: boolean
        example: true
      name:
        type: string
        example: 10.6.7-3-1
      notes_url:
        type: string
        example: https://mariadb.com/docs/release-notes/mariadb-enterprise-server-10-6-7-3-release-notes/
      product_name:
        type: string
        example: server
      release:
        type: string
        example: legacy-2.0.1675-10.6
      topology_name:
        type: string
        example: masterslave
      version:
        type: string
        example: 10.6.7-3
  v1.CreateServiceEndpointRequest:
    type: object
    required:
    - name
    properties:
      name:
        type: string
      ports:
        description: Service endpoint ports. Not applicable for the Serverless Analytics
          topology.
        type: array
        items:
          "$ref": "#/definitions/v1.NamedPort"
  v1.CreateServiceInternalRequest:
    type: object
    properties:
      allow_list:
        description: The list of IPv4 addresses and netblocks that are allowed to
          connect to the service.
        type: array
        items:
          "$ref": "#/definitions/v1.AllowListItem"
      architecture:
        description: The hardware architecture of the service.
        type: string
        enum:
        - amd64
        - arm64
        example: amd64
      availability_zone:
        description: The zone where the service will be created if single zone selected.
          The zone value should match with the zone names used by the cloud provider.
        type: string
        example: us-east-1a
      created_by:
        type: string
      custom_image_versions:
        description: CustomImageVersions is a key-value map of custom images for this
          service
        type: object
        additionalProperties:
          type: string
      dry_run:
        type: boolean
      endpoint_allowed_accounts:
        description: |-
          The list of cloud accounts (AWS account IDs or GCP projects) that are allowed to access the service.
          The "endpoint_allowed_accounts" attributes is required when the "endpoint_mechanism" is set to "privateconnect".
        type: array
        items:
          type: string
      endpoint_mechanism:
        description: The endpoint mechanism to use.
        type: string
        enum:
        - nlb
        - privateconnect
        - privatelink
      endpoints:
        type: array
        items:
          "$ref": "#/definitions/v1.CreateServiceEndpointRequest"
      maintenance_window:
        description: The maintenance window. Applicable for the power tier customers
          only.
        type: string
      maxscale_nodes:
        description: Number of maxscale nodes.
        type: integer
        example: 2
      maxscale_size:
        description: 'The instance size. Valid values are: sky-2x4, sky-2x8 etc. Not
          applicable for the Serverless Analytics topology. Only aplicable if maxscale_nodes
          > 0'
        type: string
        example: sky-2x8
      migration_source_database_id:
        type: string
      name:
        description: Name of the service.
        type: string
        example: my-first-service
      nodes:
        description: The number of nodes in the service. Not applicable for Enterprise
          Server Single Node and Serverless Analytics topologies.
        type: integer
        example: 1
      nosql_enabled:
        description: Whether to enable the NoSQL Protocol Module.
        type: boolean
        example: true
      org_id:
        type: string
      ports:
        description: Service endpoint ports. Not applicable for the Serverless Analytics
          topology.
        type: array
        items:
          "$ref": "#/definitions/v1.NamedPort"
      private_link:
        description: PrivateLink is the AWS PrivateLink configuration
        allOf:
        - "$ref": "#/definitions/v1.PrivateLink"
      private_service_connect:
        description: PrivateServiceConnect is the GCP Private Service Connect configuration
        allOf:
        - "$ref": "#/definitions/v1.PrivateServiceConnect"
      project_id:
        description: The ID of the project to create the service in.
        type: string
        example: b4ffd36d-20b2-4813-9939-635f66a21c5e
      provider:
        description: The cloud provider for the service.
        type: string
        enum:
        - aws
        - gcp
        example: aws
      region:
        description: The region where the service will be created. The region value
          should match with the region names used by the cloud provider.
        type: string
        example: us-east-1
      service_type:
        description: The type of service to create.
        type: string
        enum:
        - analytical
        - transactional
        example: transactional
      size:
        description: 'The instance size. Valid values are: sky-2x4, sky-2x8 etc. Not
          applicable for the Serverless Analytics topology.'
        type: string
        example: sky-2x8
      ssl_enabled:
        description: 'Whether to enable SSL. Valid values are: true or false'
        type: boolean
        example: true
      storage:
        description: 'The storage size in GB. Not applicable for Serverless Analytics
          topology. Valid values are: 100, 200, 300, 400, 500, 600, 700, 800, 900,
          1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000'
        type: integer
        example: 100
      tier:
        type: string
      tls_san_hosts:
        type: array
        items:
          type: string
      topology:
        description: 'The topology of the service. Valid values are: sa, csdw, es-replica,
          es-single and xpand.'
        type: string
        enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        example: standalone
      version:
        description: The service software versions. Not applicable for the Serverless
          Analytics topology.
        type: string
        example: 10.6.7-3-1
      volume_iops:
        description: The service storage IOPS. This is only applicable for AWS
        type: integer
        example: 100
      volume_throughput:
        description: The service storage throughput. This is only applicable for GP3(AWS)
          volume type.
        type: integer
      volume_type:
        description: 'The volume type. Valid values are: gp2 and io1. This is only
          applicable for AWS.'
        type: string
        enum:
        - gp2
        - io1
        example: gp2
  v1.CreateServiceRequest:
    type: object
    properties:
      allow_list:
        description: The list of IPv4 addresses and netblocks that are allowed to
          connect to the service.
        type: array
        items:
          "$ref": "#/definitions/v1.AllowListItem"
      architecture:
        description: The hardware architecture of the service.
        type: string
        enum:
        - amd64
        - arm64
        example: amd64
      availability_zone:
        description: The zone where the service will be created if single zone selected.
          The zone value should match with the zone names used by the cloud provider.
        type: string
        example: us-east-1a
      custom_image_versions:
        description: CustomImageVersions is a key-value map of custom images for this
          service
        type: object
        additionalProperties:
          type: string
      endpoint_allowed_accounts:
        description: |-
          The list of cloud accounts (AWS account IDs or GCP projects) that are allowed to access the service.
          The "endpoint_allowed_accounts" attributes is required when the "endpoint_mechanism" is set to "privateconnect".
        type: array
        items:
          type: string
      endpoint_mechanism:
        description: The endpoint mechanism to use.
        type: string
        enum:
        - nlb
        - privateconnect
        - privatelink
      endpoints:
        type: array
        items:
          "$ref": "#/definitions/v1.CreateServiceEndpointRequest"
      maintenance_window:
        description: The maintenance window. Applicable for the power tier customers
          only.
        type: string
      maxscale_nodes:
        description: Number of maxscale nodes.
        type: integer
        example: 2
      maxscale_size:
        description: 'The instance size. Valid values are: sky-2x4, sky-2x8 etc. Not
          applicable for the Serverless Analytics topology. Only aplicable if maxscale_nodes
          > 0'
        type: string
        example: sky-2x8
      name:
        description: Name of the service.
        type: string
        example: my-first-service
      nodes:
        description: The number of nodes in the service. Not applicable for Enterprise
          Server Single Node and Serverless Analytics topologies.
        type: integer
        example: 1
      nosql_enabled:
        description: Whether to enable the NoSQL Protocol Module.
        type: boolean
        example: true
      ports:
        description: Service endpoint ports. Not applicable for the Serverless Analytics
          topology.
        type: array
        items:
          "$ref": "#/definitions/v1.NamedPort"
      private_link:
        description: PrivateLink is the AWS PrivateLink configuration
        allOf:
        - "$ref": "#/definitions/v1.PrivateLink"
      private_service_connect:
        description: PrivateServiceConnect is the GCP Private Service Connect configuration
        allOf:
        - "$ref": "#/definitions/v1.PrivateServiceConnect"
      project_id:
        description: The ID of the project to create the service in.
        type: string
        example: b4ffd36d-20b2-4813-9939-635f66a21c5e
      provider:
        description: The cloud provider for the service.
        type: string
        enum:
        - aws
        - gcp
        example: aws
      region:
        description: The region where the service will be created. The region value
          should match with the region names used by the cloud provider.
        type: string
        example: us-east-1
      service_type:
        description: The type of service to create.
        type: string
        enum:
        - analytical
        - transactional
        example: transactional
      size:
        description: 'The instance size. Valid values are: sky-2x4, sky-2x8 etc. Not
          applicable for the Serverless Analytics topology.'
        type: string
        example: sky-2x8
      ssl_enabled:
        description: 'Whether to enable SSL. Valid values are: true or false'
        type: boolean
        example: true
      storage:
        description: 'The storage size in GB. Not applicable for Serverless Analytics
          topology. Valid values are: 100, 200, 300, 400, 500, 600, 700, 800, 900,
          1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000'
        type: integer
        example: 100
      topology:
        description: 'The topology of the service. Valid values are: sa, csdw, es-replica,
          es-single and xpand.'
        type: string
        enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        example: standalone
      version:
        description: The service software versions. Not applicable for the Serverless
          Analytics topology.
        type: string
        example: 10.6.7-3-1
      volume_iops:
        description: The service storage IOPS. This is only applicable for AWS
        type: integer
        example: 100
      volume_throughput:
        description: The service storage throughput. This is only applicable for GP3(AWS)
          volume type.
        type: integer
      volume_type:
        description: 'The volume type. Valid values are: gp2 and io1. This is only
          applicable for AWS.'
        type: string
        enum:
        - gp2
        - io1
        example: gp2
  v1.CredentialsResponse:
    type: object
    properties:
      host:
        type: string
      password:
        type: string
      username:
        type: string
  v1.DNSZone:
    type: object
    properties:
      link:
        type: boolean
      name:
        type: string
  v1.DeleteAllowedAddressRequest:
    type: object
    properties:
      ip_address:
        type: string
        example: 142.251.46.142/32
  v1.Domains:
    type: object
    additionalProperties:
      "$ref": "#/definitions/v1.DNSZone"
  v1.Endpoint:
    type: object
    properties:
      allowed_accounts:
        type: array
        items:
          type: string
      endpoint_service:
        type: string
      fqdn:
        type: string
      ips:
        type: array
        items:
          type: string
      mechanism:
        type: string
      name:
        type: string
      ports:
        type: array
        items:
          "$ref": "#/definitions/v1.PurposePort"
      visibility:
        type: string
      whitelist:
        type: array
        items:
          type: string
  v1.Entitlement:
    type: object
    properties:
      name:
        type: string
      topologies:
        type: array
        items:
          type: string
  v1.InternalConfig:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      public:
        type: boolean
      selected_values:
        type: array
        items:
          "$ref": "#/definitions/v1.InternalSelectedValue"
  v1.InternalSelectedValue:
    type: object
    properties:
      component:
        type: string
      config_section:
        type: string
      name:
        type: string
      requires_restart:
        type: boolean
      value:
        type: string
  v1.IsIpAllowedRequest:
    description: Request to identify if an ip is whitelisted
    type: object
    properties:
      ip_address:
        type: string
  v1.IsIpAllowedResponse:
    description: Response if an ip is whitelisted
    type: object
    properties:
      ip_address:
        type: string
      is_allowed:
        type: boolean
  v1.MaintenanceWindow:
    type: object
    properties:
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
  v1.ModifyServiceEndpoint:
    type: object
    properties:
      allowed_accounts:
        description: AllowedAccounts is the list of cloud accounts (aws account ids
          or gcp projects) that are allowed to access the service
        type: array
        items:
          type: string
      mechanism:
        description: 'Mechanism is the endpoint mechanism to use. Valid values are:
          privateconnect or nlb'
        type: string
      private_link:
        description: PrivateLink is the AWS PrivateLink configuration
        allOf:
        - "$ref": "#/definitions/v1.PrivateLink"
      private_service_connect:
        description: PrivateServiceConnect is the GCP Private Service Connect configuration
        allOf:
        - "$ref": "#/definitions/v1.PrivateServiceConnect"
  v1.NamedPort:
    type: object
    properties:
      name:
        type: string
        enum:
        - readwrite
        - readonly
        - nosql
        - api
        - replication
        - sparksql
        - https
        - http
        example: readwrite
      port:
        type: integer
        example: 5001
  v1.OnPremServiceRegistrationRequest:
    type: object
    properties:
      data_center:
        description: The customer data center name where the service will be created.
        type: string
        example: on-prem
      migration_source_database_id:
        description: Migration source database ID.
        type: string
      name:
        description: Name of the service.
        type: string
        example: my-first-service
      nodes:
        description: The number of nodes in the service.
        type: integer
        example: 1
      org_id:
        description: Organization ID.
        type: string
      region:
        type: string
        example: us-east-1
      service_type:
        description: The type of service to create.
        type: string
        enum:
        - analytical
        - transactional
        example: transactional
      tier:
        description: Service tier.
        type: string
      topology:
        description: 'The topology of the service. Valid values are: sa, csdw, es-replica,
          es-single, xpand or galera.'
        type: string
        enum:
        - sa
        - csdw
        - es-replica
        - es-single
        - xpand
        - galera
        example: standalone
      user_id:
        description: User ID.
        type: string
      version:
        description: The service software versions. Not applicable for the Serverless
          Analytics topology.
        type: string
        example: 10.6.7-3-1
  v1.Organization:
    type: object
    properties:
      created_on:
        type: integer
      org_id:
        type: string
      organization_usage:
        type: array
        items:
          "$ref": "#/definitions/v1.OrganizationUsage"
      quotas:
        type: array
        items:
          "$ref": "#/definitions/v1.OrganizationQuota"
      services:
        type: integer
  v1.OrganizationQuota:
    type: object
    properties:
      created_on:
        type: integer
      description:
        type: string
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
      provider:
        type: string
      region:
        type: string
      updated_on:
        type: integer
      value:
        type: integer
  v1.OrganizationUsage:
    type: object
    properties:
      provider:
        type: string
      region:
        type: string
      services:
        type: integer
      storage_volume_iops:
        type: integer
      storage_volume_size:
        type: integer
  v1.OverrideResponseInternal:
    description: Override object
    type: object
    properties:
      app:
        type: string
      level:
        type: string
      ref_id:
        type: string
      value:
        type: string
  v1.PatchAccountRequest:
    type: object
    properties:
      account_id:
        type: string
      domains:
        "$ref": "#/definitions/v1.Domains"
      legacy_dns:
        type: boolean
      status:
        type: string
      tier:
        type: string
  v1.PatchClusterRequest:
    type: object
    properties:
      applications:
        type: array
        items:
          "$ref": "#/definitions/v1.ClusterApplication"
      availability_zones:
        type: array
        items:
          type: string
      ca_cert:
        type: string
      endpoint:
        type: string
      kubernetes_version:
        type: string
      monitoring_fqdn:
        type: string
      nat_ips:
        type: array
        items:
          type: string
      sa_enabled:
        type: boolean
      status:
        type: string
      tier:
        type: string
  v1.PatchRegion:
    type: object
    properties:
      is_active:
        type: boolean
      name:
        type: string
      region_overrides:
        type: array
        items:
          "$ref": "#/definitions/v1.PatchRegionOverride"
  v1.PatchRegionOverride:
    type: object
    properties:
      is_active:
        type: boolean
      tier:
        type: string
  v1.PatchReleaseRequest:
    description: Update release payload
    type: object
    properties:
      date:
        type: string
        example: '2022-06-24 00:00:00.0'
      is_active:
        type: boolean
        example: true
      notes_url:
        type: string
        example: https://mariadb.com/docs/release-notes/mariadb-enterprise-server-10-6-7-3-release-notes/
      version:
        type: string
        example: 10.6.7-3-1
  v1.PatchServiceRequest:
    description: Update service request
    type: object
    properties:
      applications: {}
      cert:
        "$ref": "#/definitions/v1.Certificate"
      domains:
        type: array
        items:
          type: string
      endpoints:
        type: array
        items:
          "$ref": "#/definitions/v1.Endpoint"
      fqdn:
        type: string
      ips:
        type: array
        items:
          type: string
      migration_status:
        type: string
      override_status:
        type: boolean
      status:
        type: string
  v1.PowerState:
    description: Start/Stop Service
    type: object
    properties:
      is_active:
        type: boolean
  v1.PrivateConnectAccount:
    type: object
    properties:
      alias:
        type: string
      id:
        type: string
  v1.PrivateLink:
    type: object
    properties:
      accounts:
        type: array
        items:
          "$ref": "#/definitions/v1.PrivateConnectAccount"
  v1.PrivateServiceConnect:
    type: object
    properties:
      projects:
        type: array
        items:
          "$ref": "#/definitions/v1.PrivateConnectAccount"
  v1.Product:
    description: Product
    type: object
    properties:
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
  v1.Provider:
    type: object
    properties:
      active:
        type: boolean
      display_name:
        type: string
      id:
        type: string
      iops_min:
        type: integer
      iops_per_gb:
        type: integer
      name:
        type: string
      volume_size_max_gb:
        type: integer
      volume_size_min_gb:
        type: integer
  v1.ProviderIOPSResponse:
    description: cloud provider iops values
    type: object
    properties:
      default_iops_per_gb:
        type: integer
      id:
        type: string
      iops_range_max:
        type: integer
      iops_range_min:
        type: integer
      provider:
        type: string
      storage_range_max:
        type: integer
      storage_range_min:
        type: integer
      throughput_range_max:
        type: integer
      throughput_range_min:
        type: integer
      tier:
        type: string
      total_iops_range_max:
        type: integer
      total_iops_range_min:
        type: integer
      volume_type_name:
        type: string
  v1.ProvisionClusterRequest:
    type: object
    properties:
      id:
        type: string
      org_id:
        type: string
      provider:
        type: string
      region:
        type: string
      tier:
        type: string
  v1.PurposePort:
    type: object
    properties:
      name:
        type: string
        enum:
        - readwrite
        - readonly
        - nosql
        - api
        - replication
        - sparksql
        - https
        - http
        example: readwrite
      port:
        type: integer
        example: 5001
      purpose:
        type: string
  v1.ReadTopologyOptionsResponse:
    description: All options for a topology
    type: object
    properties:
      nosql_available:
        type: boolean
  v1.Region:
    description: Geographic region, as defined by the provider
    type: object
    properties:
      default:
        type: boolean
      foundation_tier_maintenance_window:
        type: string
      has_clusters:
        type: boolean
      id:
        type: string
      name:
        type: string
      provider:
        type: string
      region:
        type: string
  v1.RegionInternal:
    description: Geographic region, as defined by the provider
    type: object
    properties:
      default:
        type: boolean
      foundation_tier_maintenance_window:
        type: string
      has_clusters:
        type: boolean
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      provider:
        type: string
      region_overrides:
        type: array
        items:
          "$ref": "#/definitions/v1.RegionOverride"
  v1.RegionOverride:
    type: object
    properties:
      is_active:
        type: boolean
      tier:
        type: string
  v1.Release:
    type: object
    properties:
      created_by:
        type: string
      created_on:
        type: string
      date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_major:
        type: boolean
      name:
        type: string
      notes_url:
        type: string
      product_name:
        type: string
      release:
        type: string
      topology_name:
        type: string
      updated_by:
        type: string
      updated_on:
        type: string
      version:
        type: string
  v1.ServiceConfigState:
    description: Config for a service
    type: object
    properties:
      config_id:
        type: string
  v1.ServiceEndpoint:
    type: object
    properties:
      allow_list:
        type: array
        items:
          "$ref": "#/definitions/v1.AllowListItem"
      allowed_accounts:
        type: array
        items:
          type: string
      endpoint_service:
        type: string
      fqdn:
        type: string
      ips:
        type: array
        items:
          type: string
      mechanism:
        type: string
      name:
        type: string
      ports:
        type: array
        items:
          "$ref": "#/definitions/v1.PurposePort"
      private_link:
        "$ref": "#/definitions/v1.PrivateLink"
      private_service_connect:
        "$ref": "#/definitions/v1.PrivateServiceConnect"
      visibility:
        type: string
  v1.ServiceNodesState:
    description: Update the number of nodes for a service
    type: object
    properties:
      nodes:
        type: integer
        example: 3
  v1.ServiceReplication:
    description: Enable replication for a service
    type: object
    properties:
      primary_host:
        type: string
        example: db12345678
      replication_type:
        type: string
        enum:
        - uni-directional
        - bi-directional
        example: bi-directional
  v1.ServiceResponse:
    description: ServiceResponse
    type: object
    properties:
      architecture:
        type: string
      availability_zone:
        type: string
      config_id:
        type: string
      created_by:
        type: string
      created_on:
        type: integer
      data_center:
        type: string
      endpoints:
        type: array
        items:
          "$ref": "#/definitions/v1.ServiceEndpoint"
      errors:
        type: array
        items:
          type: string
      fqdn:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      maintenance_window:
        type: string
      maxscale_nodes:
        type: integer
      maxscale_size:
        type: string
      name:
        type: string
      nodes:
        type: integer
      nosql_enabled:
        type: boolean
      outbound_ips:
        type: array
        items:
          type: string
      primary_host:
        type: string
      project_id:
        type: string
      provider:
        type: string
      region:
        type: string
      replication_enabled:
        type: boolean
      service_type:
        type: string
      size:
        type: string
      ssl_enabled:
        type: boolean
      status:
        type: string
        enum:
        - pending_create
        - pending_start
        - pending_stop
        - pending_scale
        - pending_delete
        - pending_modifying
        - ready
        - failed
        - stopped
        - retired
        - unknown
      storage_volume:
        "$ref": "#/definitions/v1.StorageVolume"
      tier:
        type: string
      topology:
        type: string
      updated_by:
        type: string
      updated_on:
        type: integer
      version:
        type: string
      volume_modified_on:
        type: integer
  v1.ServiceResponseInternal:
    description: Service object
    type: object
    properties:
      applications: {}
      architecture:
        type: string
      availability_zone:
        type: string
      cert: {}
      cloud_account:
        type: string
      cluster_id:
        type: string
      created_by:
        type: string
      created_on:
        type: integer
      custom_image_versions: {}
      data_center:
        type: string
      deleted_on:
        type: integer
      domains:
        type: array
        items:
          type: string
      endpoints:
        type: array
        items:
          "$ref": "#/definitions/v1.Endpoint"
      errors:
        type: array
        items:
          type: string
      fqdn:
        type: string
      id:
        type: string
      instance_type:
        type: string
      ips: {}
      is_active:
        type: boolean
      maintenance_window:
        type: string
      maxscale_instance_type:
        type: string
      maxscale_nodes:
        type: integer
      maxscale_size:
        type: string
      migration_source_database_id:
        type: string
      migration_status:
        type: string
      name:
        type: string
      nodes:
        type: integer
      nosql_enabled:
        type: boolean
      org_id:
        type: string
      outbound_ips:
        type: array
        items:
          type: string
      owner_org_id:
        type: string
      pgsql_enabled:
        type: boolean
      primary_host:
        type: string
      project_id:
        type: string
      provider:
        type: string
      proxy_options: {}
      region:
        type: string
      release:
        type: string
      replication_enabled:
        type: boolean
      service_number:
        type: string
      service_type:
        type: string
      size:
        type: string
      ssl_enabled:
        type: boolean
      status:
        type: string
        enum:
        - pending_create
        - pending_start
        - pending_stop
        - pending_scale
        - pending_delete
        - pending_modifying
        - ready
        - failed
        - stopped
        - retired
        - unknown
      storage_volume:
        "$ref": "#/definitions/v1.StorageVolume"
      tasks:
        type: array
        items:
          "$ref": "#/definitions/v1.ServiceTask"
      tier:
        type: string
      tls_san_hosts:
        type: array
        items:
          type: string
      topology:
        type: string
      topology_alias:
        type: string
      updated_by:
        type: string
      updated_on:
        type: integer
      version:
        type: string
  v1.ServiceSizeState:
    description: Nodes size for a service
    type: object
    properties:
      size:
        type: string
        example: sky-2x8
  v1.ServiceTask:
    description: ServiceTask object
    type: object
    properties:
      action:
        type: string
      created_on:
        type: integer
      id:
        type: string
      service_id:
        type: string
      service_state: {}
      status:
        type: string
      updated_on:
        type: integer
  v1.ServiceType:
    description: a database services type, e.g. Distributed Transactions
    type: object
    properties:
      description:
        type: string
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      short_description:
        type: string
  v1.SetMaintenanceWindowRequest:
    type: object
    properties:
      name:
        type: string
  v1.SetQuotaRequest:
    type: object
    properties:
      name:
        type: string
      provider:
        type: string
      region:
        type: string
      value:
        type: integer
  v1.SetStorageRequest:
    description: Storage size and IOPS (AWS only) that is set for the service
    type: object
    properties:
      iops:
        description: |-
          Total Input/output operations of the volume
          Minimum / Maximum IOPs depend on the size of the disk and volume type.
          This property should only be set on AWS databases.
        type: integer
        format: int64
        minimum: 1
        example: 10
      size:
        description: Size in GBs
        type: integer
        format: int64
        minimum: 1
        example: 10
      throughput:
        description: |-
          Throughput in MB/s. This property should only be set on AWS services with gp3 volume type.
          Valid range for gp3 storage is 125 MiB/s to 1,000 MiB/s.
        type: integer
        format: int64
        maximum: 1000
        minimum: 125
        example: 125
  v1.Size:
    type: object
    properties:
      architecture:
        type: string
      cpu:
        type: string
      created_on:
        type: string
      default_maxscale_size_name:
        type: string
      display_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      provider:
        type: string
      ram:
        type: string
      service_type:
        type: string
      tier:
        type: string
      topology:
        type: string
      type:
        type: string
      updated_on:
        type: string
  v1.StorageVolume:
    type: object
    properties:
      iops:
        type: integer
      size:
        type: integer
      throughput:
        type: integer
      volume_type:
        type: string
  v1.Tier:
    type: object
    properties:
      description:
        type: string
      display_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      topologies:
        type: array
        items:
          "$ref": "#/definitions/v1.Topology"
  v1.Topology:
    description: Cluster topology valid for a particular product, e.g. Standalone
      or MaxScale
    type: object
    properties:
      database:
        type: string
      display_name:
        type: string
      id:
        type: string
      name:
        type: string
      order:
        type: integer
      service_type:
        type: string
      storage_engine:
        type: string
  v1.TopologyNodeOptionsResponse:
    type: object
    properties:
      default_maxscale_nodes:
        type: integer
      id:
        type: string
      maxscale_nodes:
        type: array
        items:
          type: integer
      nodes:
        type: array
        items:
          type: integer
      tier:
        type: string
      topology:
        type: string
  v1.TopologyStorageSizeResponse:
    type: object
    properties:
      id:
        type: string
      storage_sizes:
        type: array
        items:
          type: integer
      tier:
        type: string
      topology:
        type: string
  v1.UpdateConfigRequest:
    type: object
    properties:
      name:
        type: string
  v1.UpgradeClusterGroupRequest:
    type: object
    properties:
      org_id:
        type: string
      provider:
        type: string
      region:
        type: string
      tier:
        type: string
  v1.UpgradeClusterGroupResponse:
    type: object
    properties:
      failed:
        type: array
        items:
          type: string
      succeeded:
        type: array
        items:
          type: string
  v1.UpgradeServiceReleaseRequest:
    type: object
    properties:
      release:
        type: string
  v1.Version:
    description: Database version, e.g. 10.4 or 10.5
    type: object
    properties:
      display_name:
        type: string
      id:
        type: string
      is_major:
        type: boolean
      name:
        type: string
      product:
        type: string
      release_date:
        type: string
      release_notes_url:
        type: string
      topology:
        type: string
      version:
        type: string
  v1.VolumeTypeResponse:
    description: cloud storage volume type
    type: object
    properties:
      created_on:
        type: integer
      display_name:
        type: string
      id:
        type: string
      iops:
        type: array
        items:
          "$ref": "#/definitions/v1.ProviderIOPSResponse"
      is_default:
        type: boolean
      name:
        type: string
      provider:
        type: string
      updated_on:
        type: integer
  v1.Zone:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      provider:
        type: string
      region_name:
        type: string
  dto.ChannelEmail:
    type: object
    properties:
      categories:
        type: array
        items:
          type: string
      channel_name:
        type: string
      id:
        type: string
      org_id:
        type: string
      receivers:
        type: array
        items:
          "$ref": "#/definitions/dto.EmailRecipients"
      subscriber_id:
        type: string
  dto.CreateChannelEmail:
    type: object
    properties:
      categories:
        type: array
        items:
          type: string
      channel_name:
        type: string
      receivers:
        type: array
        items:
          "$ref": "#/definitions/dto.EmailRecipients"
  dto.EmailRecipients:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
  dto.Notification:
    type: object
    properties:
      category:
        type: string
      created_by:
        type: string
      created_on:
        type: integer
      display_string:
        type: string
      event_type:
        type: string
      id:
        type: string
      level:
        type: string
      marked_read:
        type: boolean
      org_id:
        type: string
      subscriber_id:
        type: string
  dto.Preference:
    type: object
    properties:
      categories:
        type: object
        additionalProperties:
          type: boolean
      org_id:
        type: string
      subscriber_id:
        type: string
  dto.ProgressStep:
    type: object
    properties:
      name:
        type: string
      state:
        type: string
  dto.SaveLastReadNotification:
    type: object
    properties:
      last_read_on:
        type: integer
  dto.ServiceProgress:
    type: object
    properties:
      service_id:
        type: string
      steps:
        type: array
        items:
          "$ref": "#/definitions/dto.ProgressStep"
  dto.UpdateChannelEmail:
    type: object
    properties:
      categories:
        type: array
        items:
          type: string
      channel_name:
        type: string
      receivers:
        type: array
        items:
          "$ref": "#/definitions/dto.EmailRecipients"
  dto.UpdatePreference:
    type: object
    properties:
      categories:
        type: object
        additionalProperties:
          type: boolean
  dto.ChangeRole:
    type: object
    properties:
      roles:
        type: array
        items:
          type: string
  dto.CreateInviteResponse:
    type: object
    properties:
      failed:
        type: object
        additionalProperties:
          type: string
      invite:
        "$ref": "#/definitions/dto.Invite"
  dto.CreateOrg:
    type: object
    properties:
      created_by:
        type: string
      created_date:
        type: integer
      description:
        type: string
      name:
        type: string
      org_id:
        type: string
      owner:
        "$ref": "#/definitions/dto.Owner"
      updated_by:
        type: string
      updated_date:
        type: integer
  dto.CreateProject:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
  dto.CreateTeam:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      users:
        type: array
        items:
          type: string
  dto.CreateUser:
    type: object
    properties:
      created_by:
        type: string
      created_date:
        type: integer
      email:
        type: string
      first_name:
        type: string
      invite_id:
        type: string
      invitee_id:
        type: string
      last_name:
        type: string
      updated_by:
        type: string
      updated_date:
        type: integer
      user_id:
        type: string
  dto.Invite:
    type: object
    properties:
      created_on:
        type: integer
      expire_on:
        type: integer
      id:
        type: string
      invitees:
        type: array
        items:
          "$ref": "#/definitions/dto.Invitee"
      issuer:
        "$ref": "#/definitions/dto.User"
      org_id:
        type: string
      updated_on:
        type: integer
  dto.Invitee:
    type: object
    properties:
      email:
        type: string
      id:
        type: string
      roles:
        type: array
        items:
          type: string
      status:
        type: string
  dto.Org:
    type: object
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      current_owner:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      name:
        type: string
      tier:
        type: string
      updated_by:
        type: string
      updated_on:
        type: integer
  dto.Owner:
    type: object
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
  dto.Project:
    type: object
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      description:
        type: string
      id:
        type: string
      is_default:
        type: boolean
      name:
        type: string
      updated_by:
        type: string
      updated_on:
        type: integer
  dto.PubKey:
    type: object
    properties:
      algo:
        type: string
      data:
        type: string
      id:
        type: string
      version:
        type: string
  dto.RequestOrgUpgrade:
    type: object
    properties:
      billing_account:
        type: string
      chargify_site:
        type: string
      chargify_subscription_id:
        type: integer
      primary_contact_email:
        type: string
      tier:
        type: string
  dto.Role:
    type: object
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      default:
        type: boolean
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_by:
        type: string
      updated_on:
        type: integer
  dto.Team:
    type: object
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      description:
        type: string
      id:
        type: string
      is_default:
        type: boolean
      name:
        type: string
      updated_by:
        type: string
      updated_on:
        type: integer
      users:
        type: array
        items:
          "$ref": "#/definitions/dto.User"
  dto.UpdateOrg:
    type: object
    properties:
      tier:
        type: string
  dto.UpdateUser:
    type: object
    properties:
      activate:
        type: boolean
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
  dto.User:
    type: object
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      invited:
        type: boolean
      is_active:
        type: boolean
      is_deleted:
        type: boolean
      last_login:
        type: integer
      last_name:
        type: string
      org:
        "$ref": "#/definitions/dto.Org"
      org_id:
        type: string
      roles:
        type: array
        items:
          type: string
      updated_by:
        type: string
      updated_on:
        type: integer
  dto.AccountResponse:
    type: object
    properties:
      active:
        type: boolean
      legal_entity_identifier:
        type: string
      number:
        type: string
      organization_id:
        type: string
      primary_contact_country:
        type: string
      primary_contact_email:
        type: string
      remittance_account:
        type: boolean
      start_date:
        type: string
      status:
        type: string
      subscriptions:
        type: array
        items:
          type: object
          properties:
            payment_collection_method:
              type: string
            product:
              type: string
            status:
              type: string
      tier:
        type: string
      trial_total:
        type: number
      trial_use:
        type: number
      user_type:
        type: string
  dto.CreatePaymentProfileRequest:
    type: object
    properties:
      address:
        type: string
      address2:
        type: string
      chargifyjs_token:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      org_id:
        type: string
      organization:
        type: string
      phone:
        type: string
      state:
        type: string
      vat_number:
        type: string
      zip:
        type: string
  dto.CreatePaymentProfileResponse:
    type: object
    properties:
      result:
        type: object
        properties:
          billing_number:
            type: string
          status:
            type: string
  dto.CreateUsageResponse:
    type: object
    properties:
      allocation:
        type: array
        items:
          type: object
          properties:
            allocation_id:
              type: string
            component:
              type: string
            quantity:
              type: number
      created:
        type: string
      service_id:
        type: string
      usage_id:
        type: string
  dto.Entitlements:
    type: object
    properties:
      server_count:
        type: integer
      support_level:
        type: string
  dto.EntitlementsResponse:
    type: object
    properties:
      entitlements:
        type: array
        items:
          "$ref": "#/definitions/dto.Entitlements"
      name:
        type: string
      server_count_total:
        type: integer
      status:
        type: string
  dto.GetCountryRecord:
    type: object
    properties:
      active:
        type: boolean
      iso3166_2:
        type: string
      iso3166_3:
        type: string
      lei:
        type: string
      name:
        type: string
      vat:
        type: boolean
  dto.GetPaymentProfileResponse:
    type: object
    properties:
      payment_profile:
        type: object
        properties:
          billing_address:
            type: string
          billing_address_2:
            type: string
          billing_city:
            type: string
          billing_country:
            type: string
          billing_state:
            type: string
          billing_zip:
            type: string
          card_type:
            type: string
          customer_id:
            type: integer
          disabled:
            type: boolean
          expiration_month:
            type: integer
          expiration_year:
            type: integer
          first_name:
            type: string
          id:
            type: integer
          last_name:
            type: string
          masked_card_number:
            type: string
          payment_type:
            type: string
  dto.GetStateProvinceRecord:
    type: object
    properties:
      active:
        type: boolean
      country:
        type: string
      iso_short:
        type: string
      name:
        type: string
  dto.InstancePricesRecord:
    type: object
    properties:
      arch:
        type: string
      infra_price_per_hour:
        type: string
      infra_price_per_min:
        type: string
      infra_price_per_month:
        type: string
      name:
        type: string
      node:
        type: string
      price_per_hour:
        type: string
      price_per_min:
        type: string
      price_per_month:
        type: string
      prices:
        type: array
        items:
          "$ref": "#/definitions/dto.Prices"
      product:
        type: string
      provider:
        type: string
      topology:
        type: string
  dto.IopsPricesRecord:
    type: object
    properties:
      name:
        type: string
      price_per_hour:
        type: string
      price_per_min:
        type: string
      price_per_month:
        type: string
      prices:
        type: array
        items:
          "$ref": "#/definitions/dto.Prices"
      product:
        type: string
      provider:
        type: string
      size:
        type: number
      topology:
        type: string
      unit:
        type: string
  dto.ListInvoicesResponse:
    type: object
    properties:
      invoices:
        type: array
        items:
          type: object
          properties:
            billing_address:
              type: object
              properties:
                city: {}
                country: {}
                line2: {}
                state: {}
                street: {}
                zip: {}
            collection_method:
              type: string
            consolidation_level:
              type: string
            created_at:
              type: string
            credit_amount:
              type: string
            credits:
              type: array
              items: {}
            currency:
              type: string
            custom_fields:
              type: array
              items: {}
            customer:
              type: object
              properties:
                chargify_id:
                  type: integer
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                organization: {}
                reference:
                  type: string
                vat_number: {}
            customer_id:
              type: integer
            discount_amount:
              type: string
            discounts:
              type: array
              items: {}
            due_amount:
              type: string
            due_date:
              type: string
            group_primary_subscription_id: {}
            issue_date:
              type: string
            line_items:
              type: array
              items:
                type: object
                properties:
                  component_id: {}
                  custom_item:
                    type: boolean
                  description:
                    type: string
                  discount_amount:
                    type: string
                  period_range_end:
                    type: string
                  period_range_start:
                    type: string
                  price_point_id: {}
                  product_id:
                    type: integer
                  product_price_point_id:
                    type: integer
                  product_version:
                    type: integer
                  quantity:
                    type: string
                  subtotal_amount:
                    type: string
                  tax_amount:
                    type: string
                  tiered_unit_price:
                    type: boolean
                  title:
                    type: string
                  total_amount:
                    type: string
                  uid:
                    type: string
                  unit_price:
                    type: string
            memo:
              type: string
            number:
              type: string
            paid_amount:
              type: string
            paid_date:
              type: string
            parent_invoice_number: {}
            parent_invoice_uid: {}
            payment_instructions:
              type: string
            payments:
              type: array
              items: {}
            previous_balance_data:
              type: object
              properties:
                captured_at:
                  type: string
                invoices:
                  type: array
                  items: {}
            product_family_name:
              type: string
            product_name:
              type: string
            public_url:
              type: string
            refund_amount:
              type: string
            refunds:
              type: array
              items: {}
            role:
              type: string
            seller:
              type: object
              properties:
                address:
                  type: object
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    line2:
                      type: string
                    state:
                      type: string
                    street:
                      type: string
                    zip:
                      type: string
                name:
                  type: string
                phone:
                  type: string
            sequence_number:
              type: integer
            shipping_address:
              type: object
              properties:
                city: {}
                country: {}
                line2: {}
                state: {}
                street: {}
                zip: {}
            site_id:
              type: integer
            status:
              type: string
            subscription_id:
              type: integer
            subtotal_amount:
              type: string
            tax_amount:
              type: string
            taxes:
              type: array
              items: {}
            total_amount:
              type: string
            uid:
              type: string
            updated_at:
              type: string
      meta:
        type: object
        properties:
          current_page:
            type: integer
          status_code:
            type: integer
          total_invoice_count:
            type: integer
  dto.PhoneVerifyCodeResponse:
    type: object
    properties:
      status:
        type: string
  dto.PhoneVerifyResponse:
    type: object
    properties:
      status:
        type: boolean
  dto.Prices:
    type: object
    properties:
      ending_quantity:
        type: integer
      starting_quantity:
        type: integer
      unit_price:
        type: string
  dto.PricesResponse:
    type: object
    properties:
      endpoint:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            prices:
              type: array
              items:
                "$ref": "#/definitions/entity.Prices"
            provider:
              type: string
            unit:
              type: string
      iops:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            prices:
              type: array
              items:
                "$ref": "#/definitions/entity.Prices"
            provider:
              type: string
            unit:
              type: string
      node:
        type: array
        items:
          type: object
          properties:
            arch:
              type: string
            name:
              type: string
            node:
              type: string
            prices:
              type: array
              items:
                "$ref": "#/definitions/entity.Prices"
            provider:
              type: string
      storage:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            prices:
              type: array
              items:
                "$ref": "#/definitions/entity.Prices"
            provider:
              type: string
            size:
              type: number
            unit:
              type: string
      throughput:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            prices:
              type: array
              items:
                "$ref": "#/definitions/entity.Prices"
            provider:
              type: string
            unit:
              type: string
  dto.ReadInvoiceResponse:
    type: object
    properties:
      billing_address:
        type: object
        properties:
          city: {}
          country: {}
          line2: {}
          state: {}
          street: {}
          zip: {}
      collection_method:
        type: string
      consolidation_level:
        type: string
      created_at:
        type: string
      credit_amount:
        type: string
      credits:
        type: array
        items: {}
      currency:
        type: string
      custom_fields:
        type: array
        items: {}
      customer:
        type: object
        properties:
          chargify_id:
            type: integer
          email:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          organization: {}
          reference:
            type: string
          vat_number: {}
      customer_id:
        type: integer
      discount_amount:
        type: string
      discounts:
        type: array
        items: {}
      due_amount:
        type: string
      due_date:
        type: string
      group_primary_subscription_id: {}
      issue_date:
        type: string
      line_items:
        type: array
        items:
          type: object
          properties:
            component_id: {}
            custom_item:
              type: boolean
            description:
              type: string
            discount_amount:
              type: string
            period_range_end:
              type: string
            period_range_start:
              type: string
            price_point_id: {}
            product_id:
              type: integer
            product_price_point_id:
              type: integer
            product_version:
              type: integer
            quantity:
              type: string
            subtotal_amount:
              type: string
            tax_amount:
              type: string
            tiered_unit_price:
              type: boolean
            title:
              type: string
            total_amount:
              type: string
            uid:
              type: string
            unit_price:
              type: string
      memo:
        type: string
      number:
        type: string
      paid_amount:
        type: string
      paid_date:
        type: string
      parent_invoice_number: {}
      parent_invoice_uid: {}
      payment_instructions:
        type: string
      payments:
        type: array
        items: {}
      previous_balance_data:
        type: object
        properties:
          captured_at:
            type: string
          invoices:
            type: array
            items: {}
      product_family_name:
        type: string
      product_name:
        type: string
      public_url:
        type: string
      refund_amount:
        type: string
      refunds:
        type: array
        items: {}
      role:
        type: string
      seller:
        type: object
        properties:
          address:
            type: object
            properties:
              city:
                type: string
              country:
                type: string
              line2:
                type: string
              state:
                type: string
              street:
                type: string
              zip:
                type: string
          name:
            type: string
          phone:
            type: string
      sequence_number:
        type: integer
      shipping_address:
        type: object
        properties:
          city: {}
          country: {}
          line2: {}
          state: {}
          street: {}
          zip: {}
      site_id:
        type: integer
      status:
        type: string
      subscription_id:
        type: integer
      subtotal_amount:
        type: string
      tax_amount:
        type: string
      taxes:
        type: array
        items: {}
      total_amount:
        type: string
      uid:
        type: string
      updated_at:
        type: string
  dto.StoragePricesRecord:
    type: object
    properties:
      name:
        type: string
      price_per_hour:
        type: string
      price_per_min:
        type: string
      price_per_month:
        type: string
      prices:
        type: array
        items:
          "$ref": "#/definitions/dto.Prices"
      product:
        type: string
      provider:
        type: string
      size:
        type: number
      topology:
        type: string
      unit:
        type: string
  dto.ThroughputPricesRecord:
    type: object
    properties:
      name:
        type: string
      price_per_hour:
        type: string
      price_per_min:
        type: string
      price_per_month:
        type: string
      prices:
        type: array
        items:
          "$ref": "#/definitions/dto.Prices"
      product:
        type: string
      provider:
        type: string
      topology:
        type: string
      unit:
        type: string
  dto.UsagePreviewResponse:
    type: object
    properties:
      result:
        type: object
        additionalProperties:
          type: array
          items:
            "$ref": "#/definitions/entity.UsagePreviewRecord"
  dto.UsageServiceRecord:
    type: object
    properties:
      components:
        type: array
        items:
          type: object
          properties:
            category:
              type: string
            component:
              type: string
            configuration_item:
              type: string
            cost:
              type: number
            duration_min:
              type: number
            number:
              type: string
            provider:
              type: string
            quantity:
              type: number
            service_id:
              type: string
            topology:
              type: string
      cost:
        type: number
      service_id:
        type: string
  entity.Prices:
    type: object
    properties:
      ending_quantity:
        type: integer
      starting_quantity:
        type: integer
      unit_price:
        type: string
  entity.UsagePreviewRecord:
    type: object
    properties:
      category:
        type: string
      component:
        type: string
      configuration_item:
        type: string
      cost:
        type: number
      duration_min:
        type: number
      price:
        type: number
      provider:
        type: string
      quantity:
        type: number
      service_id:
        type: string
      source:
        type: string
      topology:
        type: string
  repository.SnowAPIError:
    type: object
    properties:
      error:
        type: object
        properties:
          detail:
            type: string
          message:
            type: string
      status:
        type: string
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
